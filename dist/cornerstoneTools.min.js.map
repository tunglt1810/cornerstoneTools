{"version":3,"sources":["webpack://cornerstoneTools/webpack/universalModuleDefinition","webpack://cornerstoneTools/webpack/bootstrap","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/createClass.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/inherits.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/typeof.js","webpack://cornerstoneTools/./util/debugLib/index.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/defineProperty.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/regenerator/index.js","webpack://cornerstoneTools/./util/debugLib/common.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://cornerstoneTools/../node_modules/process/browser.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://cornerstoneTools/../node_modules/ms/index.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://cornerstoneTools/../node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://cornerstoneTools/../node_modules/regenerator-runtime/runtime-module.js","webpack://cornerstoneTools/../node_modules/regenerator-runtime/runtime.js","webpack://cornerstoneTools/./externalModules.js","webpack://cornerstoneTools/./events.js","webpack://cornerstoneTools/./util/triggerEvent.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getElement.js","webpack://cornerstoneTools/./store/modules/segmentationModule/arrayTypes.js","webpack://cornerstoneTools/./store/modules/segmentationModule/addLabelmap3D.js","webpack://cornerstoneTools/./stateManagement/imageIdSpecificStateManager.js","webpack://cornerstoneTools/./stateManagement/toolState.js","webpack://cornerstoneTools/./util/logger.js","webpack://cornerstoneTools/./store/modules/segmentationModule/state.js","webpack://cornerstoneTools/./store/modules/segmentationModule/metadata.js","webpack://cornerstoneTools/./store/modules/segmentationModule/activeSegmentIndex.js","webpack://cornerstoneTools/./store/modules/segmentationModule/segmentVisibility.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getLabelmaps3D.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getLabelmapBuffers.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getSegmentsOnPixeldata.js","webpack://cornerstoneTools/./util/segmentation/eraseIfSegmentIndex.js","webpack://cornerstoneTools/./util/segmentation/drawBrush.js","webpack://cornerstoneTools/./util/segmentation/eraseOutsideBoundingBox.js","webpack://cornerstoneTools/./util/segmentation/isSameSegment.js","webpack://cornerstoneTools/./util/segmentation/eraseShape.js","webpack://cornerstoneTools/./util/segmentation/fillOutsideBoundingBox.js","webpack://cornerstoneTools/./util/segmentation/fillShape.js","webpack://cornerstoneTools/./util/segmentation/floodFill.js","webpack://cornerstoneTools/./util/getCircleCoords.js","webpack://cornerstoneTools/./util/segmentation/getBoundingBoxAroundCircle.js","webpack://cornerstoneTools/./util/segmentation/getBoundingBoxAroundPolygon.js","webpack://cornerstoneTools/./util/segmentation/getCircle.js","webpack://cornerstoneTools/./util/segmentation/getPixelPathBetweenPixels.js","webpack://cornerstoneTools/./util/segmentation/triggerLabelmapModifiedEvent.js","webpack://cornerstoneTools/./util/segmentation/getDiffBetweenPixelData.js","webpack://cornerstoneTools/./store/modules/segmentationModule/setLabelmap3D.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getLabelmapStats.js","webpack://cornerstoneTools/./store/modules/segmentationModule/addLabelmap2D.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getLabelmap2D.js","webpack://cornerstoneTools/./util/isPointInImage.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getSegmentOfActiveLabelmapAtEvent.js","webpack://cornerstoneTools/./store/modules/segmentationModule/colorLUT.js","webpack://cornerstoneTools/./store/modules/segmentationModule/getBrushColor.js","webpack://cornerstoneTools/./store/modules/segmentationModule/defaultConfiguration.js","webpack://cornerstoneTools/./store/modules/segmentationModule/history.js","webpack://cornerstoneTools/./store/modules/segmentationModule/index.js","webpack://cornerstoneTools/./store/modules/segmentationModule/activeLabelmapIndex.js","webpack://cornerstoneTools/./store/modules/segmentationModule/deleteSegment.js","webpack://cornerstoneTools/./store/modules/segmentationModule/setRadius.js","webpack://cornerstoneTools/./store/modules/cursorModule.js","webpack://cornerstoneTools/./store/modules/globalConfigurationModule.js","webpack://cornerstoneTools/./store/index.js","webpack://cornerstoneTools/./store/getToolForElement.js","webpack://cornerstoneTools/./store/setToolCursor.js","webpack://cornerstoneTools/./store/setToolMode.js","webpack://cornerstoneTools/./mixins/activeOrDisabledBinaryTool.js","webpack://cornerstoneTools/./mixins/enabledOrDisabledBinaryTool.js","webpack://cornerstoneTools/./drawing/draw.js","webpack://cornerstoneTools/./stateManagement/toolStyle.js","webpack://cornerstoneTools/./drawing/path.js","webpack://cornerstoneTools/./drawing/drawLine.js","webpack://cornerstoneTools/./drawing/drawJoinedLines.js","webpack://cornerstoneTools/./drawing/drawArrow.js","webpack://cornerstoneTools/./drawing/drawCircle.js","webpack://cornerstoneTools/./util/convertToVector3.js","webpack://cornerstoneTools/./util/pointProjector.js","webpack://cornerstoneTools/./drawing/drawEllipse.js","webpack://cornerstoneTools/./stateManagement/toolColors.js","webpack://cornerstoneTools/./drawing/drawHandles.js","webpack://cornerstoneTools/./drawing/drawLines.js","webpack://cornerstoneTools/./drawing/drawLink.js","webpack://cornerstoneTools/./stateManagement/textStyle.js","webpack://cornerstoneTools/./drawing/fillTextLines.js","webpack://cornerstoneTools/./drawing/fillBox.js","webpack://cornerstoneTools/./drawing/drawTextBox.js","webpack://cornerstoneTools/./drawing/drawLinkedTextBox.js","webpack://cornerstoneTools/./drawing/drawRect.js","webpack://cornerstoneTools/./drawing/getNewContext.js","webpack://cornerstoneTools/./util/getDefault.js","webpack://cornerstoneTools/./drawing/setShadow.js","webpack://cornerstoneTools/./drawing/transformCanvasContext.js","webpack://cornerstoneTools/./drawing/resetCanvasContextTransform.js","webpack://cornerstoneTools/./util/isEmptyObject.js","webpack://cornerstoneTools/./mixins/segmentation/circleSegmentationMixin.js","webpack://cornerstoneTools/./mixins/segmentation/freehandSegmentationMixin.js","webpack://cornerstoneTools/./mixins/segmentation/polylineSegmentationMixin.js","webpack://cornerstoneTools/./mixins/segmentation/rectangleSegmentationMixin.js","webpack://cornerstoneTools/./mixins/segmentation/renderBrushMixin.js","webpack://cornerstoneTools/./mixins/index.js","webpack://cornerstoneTools/./util/deepmerge.js","webpack://cornerstoneTools/./tools/base/BaseTool.js","webpack://cornerstoneTools/./util/pointInsideBoundingBox.js","webpack://cornerstoneTools/./manipulators/getHandleNearImagePoint.js","webpack://cornerstoneTools/./manipulators/handleActivator.js","webpack://cornerstoneTools/./manipulators/anyHandlesOutsideImage.js","webpack://cornerstoneTools/./util/clip.js","webpack://cornerstoneTools/./store/getActiveToolsForElement.js","webpack://cornerstoneTools/./store/isToolActiveForElement.js","webpack://cornerstoneTools/./tools/base/BaseBrushTool.js","webpack://cornerstoneTools/./store/filterToolsUsableWithMultiPartTools.js","webpack://cornerstoneTools/./util/getActiveTool.js","webpack://cornerstoneTools/./manipulators/moveAllHandles.js","webpack://cornerstoneTools/./manipulators/moveHandle.js","webpack://cornerstoneTools/./manipulators/moveNewHandle.js","webpack://cornerstoneTools/./util/findAndMoveHelpers.js","webpack://cornerstoneTools/./tools/base/BaseAnnotationTool.js","webpack://cornerstoneTools/./util/lineSegDistance.js","webpack://cornerstoneTools/./util/roundToDecimal.js","webpack://cornerstoneTools/./tools/cursors/MouseCursor.js","webpack://cornerstoneTools/./tools/cursors/index.js","webpack://cornerstoneTools/./util/getPixelSpacing.js","webpack://cornerstoneTools/./util/isObject.js","webpack://cornerstoneTools/./util/debounce.js","webpack://cornerstoneTools/./util/throttle.js","webpack://cornerstoneTools/./tools/annotation/AngleTool.js","webpack://cornerstoneTools/./tools/annotation/ArrowAnnotateTool.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/createNewMeasurement.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/pointNearTool.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/utils/getLineVector.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/utils/updatePerpendicularLineHandles.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/renderToolData.js","webpack://cornerstoneTools/./stateManagement/toolCoordinates.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/addNewMeasurement.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/mouseMoveCallback.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/handleSelectedCallback.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/utils/getDistanceWithPixelSpacing.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/getBaseData.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/moveLongLine/moveLongLine.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/moveLongLine/updatePerpendicularLine.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/isPerpendicularEndFixed.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/getDirectionMultiplier.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/updatePerpendicularLine.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/getMovingPoint.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/movePerpendicularLine.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/lineHasLength.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/movePerpendicularLine/getHelperLine.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/setHandlesPosition.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/invertHandles.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/handleSelectedMouseCallback.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/moveHandle.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/moveHandle/touchMoveHandle.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/handleSelectedTouchCallback.js","webpack://cornerstoneTools/./tools/annotation/BidirectionalTool.js","webpack://cornerstoneTools/./tools/annotation/bidirectionalTool/utils/calculateLongestAndShortestDiameters.js","webpack://cornerstoneTools/./util/calculateSUV.js","webpack://cornerstoneTools/./util/ellipse/pointInEllipse.js","webpack://cornerstoneTools/./util/ellipse/calculateEllipseStatistics.js","webpack://cornerstoneTools/./util/ellipse/index.js","webpack://cornerstoneTools/./util/getROITextBoxCoords.js","webpack://cornerstoneTools/./util/numbersWithCommas.js","webpack://cornerstoneTools/./tools/annotation/CircleRoiTool.js","webpack://cornerstoneTools/./tools/annotation/CobbAngleTool.js","webpack://cornerstoneTools/./tools/annotation/EllipticalRoiTool.js","webpack://cornerstoneTools/./util/freehand/pointInFreehand.js","webpack://cornerstoneTools/./util/freehand/calculateFreehandStatistics.js","webpack://cornerstoneTools/./util/freehand/ClickedLineData.js","webpack://cornerstoneTools/./util/freehand/FreehandHandleData.js","webpack://cornerstoneTools/./util/freehand/freehandIntersect.js","webpack://cornerstoneTools/./util/freehand/FreehandLineFinder.js","webpack://cornerstoneTools/./util/freehand/addLine.js","webpack://cornerstoneTools/./util/freehand/insertOrDelete.js","webpack://cornerstoneTools/./util/freehand/index.js","webpack://cornerstoneTools/./util/freehand/freehandArea.js","webpack://cornerstoneTools/./tools/annotation/FreehandRoiTool.js","webpack://cornerstoneTools/./tools/annotation/LengthTool.js","webpack://cornerstoneTools/./util/getRGBPixels.js","webpack://cornerstoneTools/./tools/annotation/ProbeTool.js","webpack://cornerstoneTools/./tools/annotation/RectangleRoiTool.js","webpack://cornerstoneTools/./tools/annotation/TextMarkerTool.js","webpack://cornerstoneTools/./tools/segmentation/BrushTool.js","webpack://cornerstoneTools/./tools/segmentation/SphericalBrushTool.js","webpack://cornerstoneTools/./tools/segmentation/strategies/correction.js","webpack://cornerstoneTools/./util/isPointInPolygon.js","webpack://cornerstoneTools/./tools/segmentation/strategies/eraseFreehand.js","webpack://cornerstoneTools/./tools/segmentation/strategies/eraseRectangle.js","webpack://cornerstoneTools/./tools/segmentation/strategies/fillFreehand.js","webpack://cornerstoneTools/./tools/segmentation/strategies/fillRectangle.js","webpack://cornerstoneTools/./tools/segmentation/strategies/fillCircle.js","webpack://cornerstoneTools/./tools/segmentation/strategies/eraseCircle.js","webpack://cornerstoneTools/./tools/segmentation/FreehandScissorsTool.js","webpack://cornerstoneTools/./tools/segmentation/RectangleScissorsTool.js","webpack://cornerstoneTools/./tools/segmentation/CircleScissorsTool.js","webpack://cornerstoneTools/./tools/segmentation/CorrectionScissorsTool.js","webpack://cornerstoneTools/./stateManagement/loadHandlerManager.js","webpack://cornerstoneTools/./tools/CrosshairsTool.js","webpack://cornerstoneTools/./tools/DoubleTapFitToWindowTool.js","webpack://cornerstoneTools/./tools/DragProbeTool.js","webpack://cornerstoneTools/./tools/EraserTool.js","webpack://cornerstoneTools/./tools/FreehandRoiSculptorTool.js","webpack://cornerstoneTools/./tools/MagnifyTool.js","webpack://cornerstoneTools/./tools/OverlayTool.js","webpack://cornerstoneTools/./orientation/index.js","webpack://cornerstoneTools/./orientation/getOrientationString.js","webpack://cornerstoneTools/./orientation/invertOrientationString.js","webpack://cornerstoneTools/./tools/OrientationMarkersTool.js","webpack://cornerstoneTools/./tools/PanMultiTouchTool.js","webpack://cornerstoneTools/./tools/PanTool.js","webpack://cornerstoneTools/./tools/referenceLines/renderActiveReferenceLine.js","webpack://cornerstoneTools/./tools/referenceLines/calculateReferenceLine.js","webpack://cornerstoneTools/./util/wait.js","webpack://cornerstoneTools/./tools/ReferenceLinesTool.js","webpack://cornerstoneTools/./util/angleBetweenPoints.js","webpack://cornerstoneTools/./tools/RotateTool.js","webpack://cornerstoneTools/./util/getMaxSimultaneousRequests.js","webpack://cornerstoneTools/./tools/RotateTouchTool.js","webpack://cornerstoneTools/./tools/ScaleOverlayTool.js","webpack://cornerstoneTools/./requestPool/requestPoolManager.js","webpack://cornerstoneTools/./util/scrollToIndex.js","webpack://cornerstoneTools/./util/scroll.js","webpack://cornerstoneTools/./tools/StackScrollMouseWheelTool.js","webpack://cornerstoneTools/./toolOptions.js","webpack://cornerstoneTools/./tools/StackScrollMultiTouchTool.js","webpack://cornerstoneTools/./tools/StackScrollTool.js","webpack://cornerstoneTools/./util/getLuminance.js","webpack://cornerstoneTools/./tools/WwwcRegionTool.js","webpack://cornerstoneTools/./tools/WwwcTool.js","webpack://cornerstoneTools/./util/zoom/changeViewportScale.js","webpack://cornerstoneTools/./util/zoom/index.js","webpack://cornerstoneTools/./util/zoom/correctShift.js","webpack://cornerstoneTools/./tools/ZoomMouseWheelTool.js","webpack://cornerstoneTools/./tools/ZoomTool.js","webpack://cornerstoneTools/./tools/ZoomTouchPinchTool.js","webpack://cornerstoneTools/./util/copyPoints.js","webpack://cornerstoneTools/./eventListeners/mouseEventListeners.js","webpack://cornerstoneTools/./eventListeners/internals/normalizeWheel.js","webpack://cornerstoneTools/./eventListeners/wheelEventListener.js","webpack://cornerstoneTools/./eventListeners/preventGhostClick.js","webpack://cornerstoneTools/./eventListeners/touchEventListeners.js","webpack://cornerstoneTools/./eventListeners/internals/renderSegmentationFill.js","webpack://cornerstoneTools/./eventListeners/internals/renderSegmentationOutline.js","webpack://cornerstoneTools/./eventListeners/internals/renderSegmentation.js","webpack://cornerstoneTools/./eventListeners/onImageRenderedBrushEventHandler.js","webpack://cornerstoneTools/./eventDispatchers/imageRenderedEventDispatcher.js","webpack://cornerstoneTools/./eventDispatchers/shared/customCallbackHandler.js","webpack://cornerstoneTools/./store/getToolsWithMoveableHandles.js","webpack://cornerstoneTools/./store/getInteractiveToolsForElement.js","webpack://cornerstoneTools/./store/getToolsWithDataForElement.js","webpack://cornerstoneTools/./eventDispatchers/mouseEventHandlers/mouseDown.js","webpack://cornerstoneTools/./eventDispatchers/mouseEventHandlers/addNewMeasurement.js","webpack://cornerstoneTools/./eventDispatchers/mouseEventHandlers/mouseDownActivate.js","webpack://cornerstoneTools/./eventDispatchers/mouseEventHandlers/mouseDrag.js","webpack://cornerstoneTools/./eventDispatchers/mouseEventHandlers/mouseMove.js","webpack://cornerstoneTools/./eventDispatchers/mouseEventHandlers/index.js","webpack://cornerstoneTools/./eventDispatchers/mouseToolEventDispatcher.js","webpack://cornerstoneTools/./eventDispatchers/newImageEventDispatcher.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/multiTouchDrag.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/addNewMeasurement.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/touchStartActive.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/shared/deactivateAllToolInstances.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/tap.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/touchStart.js","webpack://cornerstoneTools/./eventDispatchers/touchEventHandlers/index.js","webpack://cornerstoneTools/./eventDispatchers/touchToolEventDispatcher.js","webpack://cornerstoneTools/./store/addTool.js","webpack://cornerstoneTools/./store/internals/addEnabledElement.js","webpack://cornerstoneTools/./store/internals/removeEnabledElement.js","webpack://cornerstoneTools/./eventListeners/windowResizeHandler.js","webpack://cornerstoneTools/./init.js","webpack://cornerstoneTools/./stackTools/stackPrefetch.js","webpack://cornerstoneTools/./stackTools/fusionRenderer.js","webpack://cornerstoneTools/./stackTools/stackRenderers.js","webpack://cornerstoneTools/./stackTools/playClip.js","webpack://cornerstoneTools/./store/removeTool.js","webpack://cornerstoneTools/./store/setToolOptions.js","webpack://cornerstoneTools/./stateManagement/stackSpecificStateManager.js","webpack://cornerstoneTools/./stateManagement/frameOfReferenceStateManager.js","webpack://cornerstoneTools/./util/SaveAs.js","webpack://cornerstoneTools/./thirdParty/registerModule.js","webpack://cornerstoneTools/./util/setContextToDisplayFontSize.js","webpack://cornerstoneTools/./lib.js","webpack://cornerstoneTools/./drawing/fillOutsideRect.js","webpack://cornerstoneTools/./util/makeUnselectable.js","webpack://cornerstoneTools/./util/getKeyPressData.js","webpack://cornerstoneTools/./thirdParty/registerMixin.js","webpack://cornerstoneTools/./thirdParty/registerItem.js","webpack://cornerstoneTools/./thirdParty/register.js","webpack://cornerstoneTools/./thirdParty/registerSome.js","webpack://cornerstoneTools/./synchronization/wwwcSynchronizer.js","webpack://cornerstoneTools/./synchronization/updateImageSynchronizer.js","webpack://cornerstoneTools/./synchronization/Synchronizer.js","webpack://cornerstoneTools/./synchronization/stackScrollSynchronizer.js","webpack://cornerstoneTools/./synchronization/stackImagePositionSynchronizer.js","webpack://cornerstoneTools/./synchronization/stackImagePositionOffsetSynchronizer.js","webpack://cornerstoneTools/./synchronization/stackImageIndexSynchronizer.js","webpack://cornerstoneTools/./synchronization/panZoomSynchronizer.js","webpack://cornerstoneTools/./importInternal.js","webpack://cornerstoneTools/./index.js","webpack://cornerstoneTools/./version.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_typeof","assertThisInitialized","self","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","ReferenceError","arrayWithoutHoles","iterableToArray","nonIterableSpread","arr","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_typeof2","obj","iterator","debugLib","formatArgs","args","this","useColors","namespace","setupDebug","humanize","diff","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","getItem","process","env","DEBUG","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","colors","log","debug","setup","formatters","j","v","JSON","stringify","message","selectColor","hash","charCodeAt","createDebug","Math","abs","prevTime","enabled","curr","Number","Date","ms","prev","coerce","unshift","format","formatter","val","apply","destroy","extend","init","instances","push","indexOf","delimiter","newDebug","toNamespace","regexp","toString","substring","default","Error","stack","disable","names","map","skips","join","enable","split","len","substr","test","require","keys","forEach","_setPrototypeOf","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","Array","arguments","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","isArray","arr2","iter","from","h","w","y","plural","msAbs","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","global","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","then","result","reverse","pop","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","rval","dispatchException","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","cornerstone","cornerstoneMath","Hammer","cs","cm","EVENTS","MOUSE_DOWN","MOUSE_UP","MOUSE_DOWN_ACTIVATE","MOUSE_DRAG","MOUSE_MOVE","MOUSE_CLICK","MOUSE_DOUBLE_CLICK","MOUSE_WHEEL","TOUCH_START","TOUCH_START_ACTIVE","TOUCH_END","TOUCH_DRAG","TOUCH_DRAG_END","TOUCH_PINCH","TOUCH_ROTATE","TOUCH_PRESS","TAP","DOUBLE_TAP","MULTI_TOUCH_START","MULTI_TOUCH_START_ACTIVE","MULTI_TOUCH_DRAG","KEY_DOWN","KEY_UP","KEY_PRESS","MEASUREMENT_ADDED","MEASUREMENT_MODIFIED","MEASUREMENT_COMPLETED","MEASUREMENT_REMOVED","TOOL_DEACTIVATED","CLIP_STOPPED","STACK_SCROLL","STACK_PREFETCH_IMAGE_LOADED","STACK_PREFETCH_DONE","LABELMAP_MODIFIED","triggerEvent","el","event","detail","CustomEvent","cancelable","createEvent","initCustomEvent","dispatchEvent","_getElement","elementOrEnabledElementUID","HTMLElement","storeGetters","enabledElementByUID","ARRAY_TYPES","UINT_16_ARRAY","FLOAT_32_ARRAY","addLabelmap3D","brushStackState","labelmapIndex","size","bytesPerVoxel","configuration","getModule","arrayType","labelmaps3D","buffer","ArrayBuffer","labelmaps2D","metadata","activeSegmentIndex","colorLUTIndex","segmentsHidden","undo","redo","newImageIdSpecificToolStateManager","toolState","addImageIdToolState","imageId","toolType","data","imageIdToolState","getImageIdToolState","clearImageIdToolState","element","enabledElement","external","getEnabledElement","image","add","clear","saveImageIdToolState","restoreImageIdToolState","saveToolState","restoreToolState","savedToolState","globalImageIdSpecificToolStateManager","getElementToolStateManager","toolStateManager","addToolState","measurementData","getToolState","removeToolState","toolData","indexOfData","clearToolState","setElementToolStateManager","baseLogger","getLogger","scope","warn","series","colorLutTables","logger","_changeActiveSegmentIndex","increaseOrDecrease","firstImageId","imageIds","activeLabelmapIndex","labelmap3D","segmentsPerLabelmap","getLabelmaps3D","getElement","stackState","stackData","currentImageIdIndex","getLabelmap3D","getLabelmapBuffers","colorLUT","labelmapBuffers","getSegmentsOnPixelData","pixelData","Set","segmentsOnLabelmap","eraseIfSegmentIndex","pixelIndex","segmentIndex","drawBrushPixels","pointerArray","columns","shouldErase","getPixelIndex","x","point","spIndex","eraseOutsideBoundingBox","evt","operationData","topLeft","bottomRight","eventData","width","height","isSameSegment","eraseShape","pointInShape","insideOrOutside","xMin","yMin","xMax","yMax","eraseInsideShape","eraseOutsideShape","fillOutsideBoundingBox","fillShape","fillInsideShape","fillOutsideShape","seed","onFlood","onBoundary","equals","defaultEquals","diagonals","startNode","permutations","prunedPermutations","flooded","visits","bounds","currentArgs","flood","boundaries","job","getArgs","prevArgs","previousArgs","visited","markAsVisited","member","markAsFlooded","pushAdjacent","markAsBoundary","node","safely","perm","nextArgs","f","permute","filter","count","countNonZeroes","perms","permutation","string","pow","lpad","a","b","character","getCircleCoords","startHandle","endHandle","radius","distance","left","floor","min","top","getBoundingBoxAroundCircle","handles","imageWidth","imageHeight","circleCoordinates","start","end","max","getBoundingBoxAroundPolygon","vertices","Infinity","getCircle","rows","xCoord","yCoord","x0","y0","circleArray","oneOverRoot2","sqrt","DIRECTIONS","up","upRight","right","downRight","down","downLeft","upLeft","p1","p2","path","moveUpRight","moveUpLeft","moveDownRight","moveDownLeft","unitVector","unitVectorFromPtoP2","getIndexOfLargestInLengthThreeArray","dotProduct2D","largestIndex","triggerLabelmapModifiedEvent","getters","getDiffBetweenPixelData","previousPixelData","newPixelData","setLabelmap3DByFirstImageId","numberOfFrames","segmentsOnLabelmapArray","slicelengthInBytes","byteLength","Uint16Array","Float32Array","some","segment","_getSliceThickness","images","imagePlanes","frameIndex","numberOfSlices","ipp","imagePositionPatient","distanceBetweenSlices","ippBelow","ippAbove","ipp1","ipp2","addLabelmap2D","imageIdIndex","sliceLength","elementOffset","isPointInImage","cols","setColorLUT","_checkColorLUTLength","_generateNewColorLUT","getColorLUT","labelmap3DOrColorLUTIndex","numberOfColors","rgbArr","getRGBAfromHSLA","getNextHue","getNextL","goldenAngle","hueValue","maxL","minL","incL","hue","alpha","defaultConfiguration","renderOutline","renderFill","shouldRenderInactiveLabelmaps","minRadius","maxRadius","fillAlpha","fillAlphaInactive","outlineAlpha","outlineAlphaInactive","outlineWidth","storeHistory","applyState","operations","replaceIndex","operation","diffI","onRegisterCallback","isSegmentVisible","labelmap2D","labelmap2DByImageIdIndex","labelmapStats","metadataProvider","metaData","sufficientMetadata","imagePlaneModule","_getImagePlanes","imagePromises","loadAndCacheImage","all","stats","voxelsPerFrame","rowPixelSpacing","columnPixelSpacing","includes","voxelInMM3","segmentationPixelData","imagePixelData","getPixelData","_getVoxelsPerFrameForSegment","volumeWeightedMean","volume","sum","volumeWeightedStDev","stdDevSum","mean","stdDev","_calculateLabelmapStats","segmentOfActiveLabelmapAtEvent","currentPoints","brushColor","drawing","activeLabelmapBuffer","colorForSegmentIndexColorLUT","setters","labelmap3DForElement","labelmap3DByFirstImageId","incrementActiveSegmentIndex","decrementActiveSegmentIndex","toggleSegmentVisibility","updateSegmentsOnLabelmap2D","deleteSegment","indexOfSegment","updateImage","colorLUTIndexForLabelmap3D","colorForSegmentIndexOfColorLUT","colorArray","newRadius","pushState","iconSize","viewBox","mousePoint","mousePointerGroupString","defaultOptions","newOptions","assign","mouseEnabled","touchEnabled","globalToolSyncEnabled","showSVGCursors","autoResizeViewports","globalTools","globalToolChangeHistory","enabledElements","tools","isToolLocked","activeMultiPartTool","mousePositionImage","clickProximity","touchProximity","handleRadius","deleteIfHandleOutsideImage","preventHandleOutsideImage","svgCursorUrl","mouseTools","tool","supportedInteractionTypes","touchTools","enabledElementUID","find","uuid","segmentation","cursor","globalConfiguration","moduleName","setToolCursor","svgCursor","cursorBlob","getIconWithPointerSVG","URL","createObjectURL","hideToolCursor","_clearStateAndSetCursor","cursorSeting","revokeObjectURL","setToolActiveForElement","toolName","interactionTypes","getToolForElement","interactionType","inputResolver","_inputResolvers","store","toolHasAnyActiveInteractionType","setToolPassiveForElement","_resolveInputConflicts","mouseButtonMask","hideDefaultCursor","resetToolCursor","_setToolCursorIfPrimary","setToolModeForElement","setToolActive","_trackGlobalToolModeChange","setToolDisabledForElement","setToolDisabled","setToolMode","setToolEnabledForElement","setToolEnabled","setToolPassive","changeEvent","newMask","oldMask","_getNormalizedOptions","reduce","acc","mergeOptions","_resolveGenericInputConflicts","interactionTypeFlag","activeToolWithActiveInteractionType","historyEvent","shift","globalTool","stringBindings","mouseButtonMasks","mask","touchPointers","_determineStringBindings","activeBindings","Mouse","activeToolWithMatchingMouseButtonMask","isMouseActive","MouseWheel","Touch","activeTouchTool","isTouchActive","activeMultiTouchToolWithOneTouchPointer","isMultiTouchActive","TouchPinch","TouchRotate","DoubleTap","MultiTouch","activeMultiTouchTool","passiveCallback","enabledCallback","activeCallback","restore","defaultWidth","activeWidth","toolStyle","setToolWidth","getToolWidth","setActiveWidth","getActiveWidth","lineWidth","fillStyle","lineDash","shouldDrawLines","beginPath","strokeStyle","setLineDash","fill","stroke","drawLine","coordSystem","pixelToCanvas","moveTo","lineTo","points","angle","atan2","cos","PI","sin","drawJoinedLines","center","arc","convertToVector3","arrayOrVector3","Vector3","projectPatientPointToImagePlane","patientPoint","imagePlane","rowCosines","columnCosines","clone","sub","dot","imagePointToPatientPoint","imagePoint","multiplyScalar","planePlaneIntersection","targetImagePlane","referenceImagePlane","targetRowCosines","targetColumnCosines","targetImagePositionPatient","referenceRowCosines","referenceColumnCosines","referenceImagePositionPatient","targetNormal","cross","targetPlane","Plane","setFromNormalAndCoplanarPoint","referenceNormal","referencePlane","originDirection","intersectPlane","origin","direction","distanceTo","line","Line3","intersections","rect","side","intersection","intersectLine","lineRectangleIntersection","topRight","bottomLeft","bottom","getRectangleFromImagePlane","rotatePoint","angleRadians","corner1","corner2","initialRotation","viewport","getViewport","clientWidth","clientHeight","scale","translation","rotation","centerPoint","ellipse","closePath","defaultColor","activeColor","fillColor","toolColors","setFillColor","getFillColor","setToolColor","getToolColor","setActiveColor","getActiveColor","getColorIfActive","active","evtDetail","handleKeys","handleKey","drawnIndependently","drawHandlesIfActive","handleCanvasCoords","lines","linkAnchorPoints","refPoint","boundingBox","findClosestPoint","boundingBoxPoints","defaultFontSize","defaultFont","defaultBackgroundColor","textStyle","setFont","font","getFont","setFontSize","fontSize","getFontSize","setBackgroundColor","backgroundColor","getBackgroundColor","textLines","padding","textBaseline","text","fillText","fillRect","textBoxWidth","origFont","measureText","maxWidth","draw","centering","fillBox","fillTextLines","textBox","textBoxAnchorPoints","xOffset","yCenter","textCoords","drawTextBox","hasMoved","drawLink","corner3","corner4","canvas","getContext","setTransform","defaultValue","shadow","shadowColor","getDefault","shadowBlur","shadowOffsetX","shadowOffsetY","hflip","vflip","translate","rotate","isEmptyObject","_resetHandles","_startOutliningRegion","_isEmptyObject","_applyStrategy","_setHandlesAndUpdate","previousPixeldata","segmentationMixinType","applyActiveStrategy","postTouchStartCallback","postMouseDownCallback","mouseClickCallback","touchDragCallback","mouseDragCallback","mouseMoveCallback","touchEndCallback","mouseUpCallback","initializeMixin","renderToolData","getNewContext","canvasContext","startCanvas","endCanvas","drawCircle","currentHandle","_addPoint","polylineSegmentationMixin","freehandSegmentationMixin","activeOrDisabledBinaryTool","enabledOrDisabledBinaryTool","circleSegmentationMixin","rectangleSegmentationMixin","drawRect","renderBrushMixin","renderBrush","mousePosition","_drawing","_lastImageCoords","_mouseUpRender","circleRadius","mouseCoordsCanvas","isMergeableObject","cloneIfNecessary","optionsArgument","deepmerge","defaultArrayMerge","source","destination","mergeObject","arrayMerge","globalConfigurationModule","BaseTool","defaultProps","initialConfiguration","strategies","defaultStrategy","mixins","activeStrategy","_options","_configuration","updateOnMouseMove","_applyMixins","_cursors","cursors","defaultCursor","mixinsArray","mixin","strategy","changeCursor","coords","insideRect","_isHandleNearImagePoint","distanceThreshold","pointNearHandle","hasBoundingBox","pointInsideBoundingBox","handleCanvas","getHandleNearImagePoint","nearbyHandle","handleName","canvasPoint","activeHandle","_getActiveHandle","renderData","imageRect","handleOutsideImage","allowedOutsideImage","clip","low","high","clipToBox","box","handlerType","segmentationModule","BaseBrushTool","alwaysEraseOnClick","_drawingMouseUpCallback","_paint","_startPainting","_startListeningForMouseUp","_isCtrlDown","paintEventData","isToolActiveForElement","_endPainting","_stopListeningForMouseUp","removeEventListener","addEventListener","oldRadius","ctrlKey","isMultiPartTool","BaseAnnotationTool","getActiveTool","buttons","getActiveToolsForElement","isMultiPartToolActive","filterToolsUseableWithMultiPartTools","_dragEvents","mouse","touch","_upOrEndEvents","annotation","doneMovingCallback","dragHandler","_dragHandler","upOrEndHandler","_upOrEndHandler","eventType","deltaPoints","invalidated","movesIndependently","activeTool","updateCachedStats","preventDefault","stopPropagation","anyHandlesOutsideImage","runAnimation","fingerDistance","aboveFinger","page","targetLocation","pageToPixel","_animate","handlePressed","distanceRemaining","linearDistEachFrame","requestAnimationFrame","_moveEvents","_moveEndEvents","moveHandler","_moveHandler","moveEndHandler","_moveEndHandler","_stopImmediatePropagation","stopImmediatePropagation","moveHandleNearImagePoint","moveHandle","findHandleDataNearImagePoint","moveAnnotation","moveAllHandles","imageNeedsUpdate","handleActivator","nearToolAndNotMarkedActive","pointNearTool","notNearToolAndMarkedActive","lineSegment","distanceToPoint","precision","multiplier","cursorModule","MouseCursor","iconGroupString","svgString","_generateIconSVGString","Blob","_generateIconWithPointerSVGString","svgOptions","svgSize","_injectColors","toolColor","angleCursor","arrowAnnotateCursor","bidirectionalCursor","cobbAngleCursor","circleRoiCursor","ellipticalRoiCursor","freehandRoiCursor","freehandRoiSculptorCursor","lengthCursor","probeCursor","rectangleRoiCursor","textMarkerCursor","crosshairsCursor","eraserCursor","magnifyCursor","panCursor","rotateCursor","stackScrollCursor","wwwcRegionCursor","wwwcCursor","zoomCursor","segToolCursorBoundaries","minusRect","plusRect","scissorIcon","rectangleIcon","circleIcon","freehandEraseInsideCursor","freehandFillInsideCursor","freehandEraseOutsideCursor","freehandFillOutsideCursor","segRectangleEraseInsideCursor","segRectangleFillInsideCursor","segRectangleEraseOutsideCursor","segRectangleFillOutsideCursor","segCircleEraseInsideCursor","segCircleFillInsideCursor","segCircleEraseOutsideCursor","segCircleFillOutsideCursor","getPixelSpacing","rowImagePixelSpacing","colPixelSpacing","colImagePixelSpacing","isObject","debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","useRAF","invokeFunc","time","thisArg","startTimer","pendingFunc","shouldInvoke","timeSinceLastCall","timerExpired","now","trailingEdge","timeSinceLastInvoke","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","Boolean","cancel","id","cancelAnimationFrame","cancelTimer","flush","pending","throttle","AngleTool","drawHandles","preventNewMeasurement","throttledUpdateCachedStats","visible","highlight","middle","lineSegDistance","sideA","sideB","sideC","sideALength","sideBLength","sideCLength","acos","rAngle","roundToDecimal","drawHandlesOnHover","currentTarget","setShadow","handleStartCanvas","handleMiddleCanvas","handleOptions","suffix","fromCharCode","textBoxText","textWidth","transform","internal","getTransform","invert","transformPoint","drawLinkedTextBox","createNewMeasurement","moveNewHandle","vector","ArrowAnnotateTool","getTextCallback","changeTextCallback","arrowFirst","handleEndCanvas","drawArrow","textHeight","midpoint","_updateTextForNearbyAnnotation","_doneChangingTextCallback","updatedText","deleteTool","doneChangingTextCallback","prompt","getHandle","extraAttributes","mouseEventData","isCreating","perpendicularStart","locked","perpendicularEnd","longestDiameter","shortestDiameter","pointNearPerpendicular","getLineVector","startPoint","endPoint","dx","dy","updatePerpendicularLineHandles","startX","startY","endX","endY","mid","perpendicularLineLength","rowMultiplier","columnMultiplier","coordsData","strokeWidth","getTextBoxText","lengthText","widthText","labels","config","checkPixelSpacing","doneCallback","timestamp","getTime","hasHandlesOutside","longestDiameterSize","shortestDiameterSize","isTooSmal","isTooFast","cancelled","getMeasurementLocationCallback","modifiedEventData","toolCoordinates","setCoords","getCoords","handleActivatorChanged","newActiveState","hover","nearTool","nearToolAndInactive","notNearToolAndActive","handleSelectedTouchCallback","handleSelectedMouseCallback","getDistanceWithPixelSpacing","calcX","calcY","createLine","getBaseData","fixedPoint","longLine","perpendicularLine","distanceToFixed","moveLongLine","proposedPoint","baseData","newLineLength","distanceRatio","newLine","distancePS","distancePE","updatePerpendicularLine","isPerpendicularEndFixed","getDirectionMultiplier","helperLine","isMovingStart","getMovingPoint","movingKey","fixedKey","movePerpendicularLine","lineHasLength","highNumber","MAX_SAFE_INTEGER","getHelperLine","newIntersection","distanceFromTool","outOfBounds","d1","d2","swapAttribute","attribute","originalA","originalB","swapHandles","handleDoneMove","moving","selected","_moveCallback","startPoints","handleParams","unselectAllHandles","wx","wy","invertHandles","_dragCallback","setHandlesPosition","currentImage","getImage","imageRenderedHandler","interactionEndCallback","IMAGE_RENDERED","preventPropagation","getDoneMovingCallback","setHandlesMovingState","touchEndEvents","touchMoveHandle","emptyLocationCallback","BidirectionalTool","changeMeasurementLocationCallback","additionalData","addNewMeasurement","handleSelectedCallback","pixelSpacing","tempL","toFixed","calculateLongestAndShortestDiameters","storedPixelValue","skipRescale","patientStudyModule","seriesModule","modality","modalityPixelValue","slope","intercept","patientWeight","petSequenceModule","radiopharmaceuticalInfo","startTime","radiopharmaceuticalStartTime","totalDose","radionuclideTotalDose","halfLife","radionuclideHalfLife","seriesAcquisitionTime","seriesTime","acquisitionTimeInSeconds","fracToDec","fractionalSeconds","seconds","minutes","hours","injectionStartTimeInSeconds","durationInSeconds","correctedDose","exp","suv","fractionalValue","location","xRadius","yRadius","normalized","sp","sumSquared","pointInEllipse","variance","calculateEllipseStatistics","getROITextBoxCoords","corners","handlesLeftToRight","sort","handlesTopToBottom","_determineCorners","centerX","centerY","parts","CircleRoiTool","hasStartAndEndHandles","getDistance","distanceFromCenter","meanStdDevSUV","pixels","getPixels","ellipseMeanStdDev","calculateSUV","area","_calculateStats","cachedStats","newContext","hasPixelSpacing","defaultCoords","textBoxContent","_createTextBoxContent","unit","_getUnit","showHounsfieldUnits","isColorImage","showMinMax","otherLines","hasStandardUptakeValues","meanString","numbersWithCommas","stdDevString","meanSuvString","stdDevSuvString","targetStringLength","minString","maxString","_formatArea","CobbAngleTool","hasIncomplete","start2","end2","dx1","ceil","dy1","dx2","dy2","toMoveHandle","pendingMeasurement","getIncomplete","ev","onMeasureModified","EllipticalRoiTool","validParameters","minorEllipse","majorEllipse","pointInMinorEllipse","ellipseCoordinates","_getEllipseImageCoordinates","drawEllipse","dataHandles","inROI","rayFromPointCrosssesLine","handleI","handleJ","yp","y1","y2","lp1","lp2","lptemp","lPointY","dydx","gradient","lineSegmentAtPoint","sign","isLineRightOfPoint","sumPointIfInFreehand","workingSum","pixelValue","pointInFreehand","squared","ClickedLineData","toolIndex","handleIndexArray","FreehandHandleData","position","doesIntersectOtherLines","q1","ignoredHandleIds","doesIntersect","q2","orient","orientation","onSegment","dataHandle","q","orientationValue","newHandle","candidateHandle","lastHandleId","modify","modifiedHandleId","modifiedHandle","neighborHandleId","neighborHandle","FreehandLineFinder","_eventData","_toolName","closestToolIndex","findTool","closeLines","_getCloseLinesInTool","_findCorrectLine","_toolData","_mousePoint","_nearestHandleToPointAllTools","closestHandle","handleIndex","closestHandleForToolI","_nearestHandleToPoint","closest","handleDistanceFromMousePoint","nextIndex","getNextHandleIndex","_distanceOfPointfromLine","_pointProjectsToLineSegment","handle1","handle2","getCanvasPointsFromHandles","getLineAsVector","_getLineOriginToMouseAsVector","mProj","magnitude","pMouse","currentIndex","insertIndex","_deletePoint","deleteInfo","deleteHandle","_insertPoint","insertInfo","arrayContainsZero","_getInsertionIndex","handleData","addLine","calculateFreehandStatistics","statisticsObj","getSum","freehandArea","scaling","freeHandArea","freehandIntersect","insertOrDelete","nearby","handleNearby","findLine","freehandUtils","FreehandRoiTool","mouseLocation","spacing","activeHandleRadius","completeHandleRadius","completeHandleRadiusTouch","alwaysShowHandles","invalidColor","currentTool","_dragging","_modifying","_drawingMouseDownCallback","_drawingMouseMoveCallback","_drawingMouseDragCallback","_drawingMouseDoubleClickCallback","_editMouseUpCallback","_editMouseDragCallback","_drawingTouchStartCallback","_drawingTouchDragCallback","_drawingDoubleTapClickCallback","_editTouchDragCallback","_pointNearHandle","distanceI","canvasCoords","meanStdDev","polyBoundingBox","invalidHandlePlacement","canComplete","firstHandle","freehand","moSuffix","meanText","stdDevText","areaText","_startDrawing","_pointNearHandleAllTools","dragOrigin","_activateModify","_getMouseLocation","_checkInvalidHandleLocation","_drawingDrag","_addPointPencilMode","lastHandlePlaced","_endDrawing","completeDrawing","_getPrevHandleIndex","lastLineIndex","lastLine","_deactivateModify","_dropHandle","previousHandleData","currentHandleData","_activateDraw","_activeDrawingToolReference","newHandleData","fireModifiedEvent","every","_isDistanceLargerThanSpacing","_deactivateDraw","fireCompletedEvent","_checkHandlesPencilMode","_checkHandlesPolygonMode","_isDistanceSmallerThanCompleteSpacingCanvas","_invalidHandlePencilMode","_isDistanceSmallerThanSpacing","p1Canvas","p2Canvas","_drawingInteractionType","_compareDistanceToSpacing","comparison","_closeToolIfDrawing","LengthTool","row","column","storedPixelData","red","green","blue","ProbeTool","probeCoords","storedPixels","getRGBPixels","getStoredPixels","mo","fontHeight","RectangleRoiTool","roiCoordinates","_getRectangleImageCoordinates","roiMeanStdDev","rectangle","_calculateRectangleStats","TextMarkerTool","markers","current","ascending","loop","touchPressCallback","_changeText","doubleClickCallback","insideBoundingBox","BrushTool","SphericalBrushTool","imagesInRange","imagePlaneOfCurrentImage","ippOfCurrentImage","_getImagesInRange","radiusOnImage","previousPixeldataForImagesInRange","radiusInMM","_getRadiusOnImage","correction","nodes","lastNode","snapPointsToGrid","scissorOperation","allInside","allOutside","isScissorOperation","checkIfSimpleScissorOperation","fillInsideFreehand","eraseInsideFreehand","workingLabelMap","Uint8Array","isLabel","additive","operationIndex","splitLineIntoSeperateOperations","shouldFillOver","pixelCoord","getPixelCoordinateFromPixelIndex","pixelPath","getPixelPathBetweenPixels","leftPath","rightPath","getNodesPerpendicularToPathPixel","getPixelPaths","firstPixelOnPath","pixel","expandBoundingBox","clipBoundingBox","leftArea","rightArea","leftPixel","fillFromPixel","rightPixel","replaceValue","fillValue","performOperation","floodFill","floodedI","pathPixel","nextPathPixel","isPointInPolygon","vs","inside","xi","yi","xj","yj","eraseFreehand","eraseOutsideFreehand","eraseRectangle","eraseInsideRectangle","eraseOutsideRectangle","fillFreehand","fillOutsideFreehand","fillRectangle","fillInsideRectangle","fillOutsideRectangle","fillCircle","fillInsideCircle","fillOutsideCircle","eraseCircle","eraseInsideCircle","eraseOutsideCircle","FreehandScissorsTool","FILL_INSIDE","FILL_OUTSIDE","ERASE_OUTSIDE","ERASE_INSIDE","RectangleScissorsTool","CircleScissorsTool","CorrectionScissorsTool","CORRECTION","_DEFAULT_LOAD_HANDLER","defaultStartLoadHandler","defaultEndLoadHandler","defaultErrorLoadingHandler","_getUUIDFromElement","loadHandlerManager","setStartLoadHandler","handler","getStartLoadHandler","setEndLoadHandler","getEndLoadHandler","setErrorLoadingHandler","getErrorLoadingHandler","removeHandlers","CrosshairsTool","eventHandler","_chooseLocation","synchronizationContext","sourceElement","sourceImageId","sourceImagePlane","getSourceElements","targetElement","minDistance","MAX_VALUE","newImageIdIndex","stackToolDataSource","imagePosition","normal","startLoadingHandler","endLoadingHandler","errorLoadingHandler","preventCache","loadImage","displayImage","DoubleTapFitToWindowTool","fitToWindow","DragProbeTool","minimal","minimalStrategy","_movingEventCallback","_endMovingEventCallback","dragEventData","isTouchEvent","pageCoordY","toolCoords","modalityPixelValueText","EraserTool","preMouseDownCallback","_deleteAllNearbyTools","preTouchStartCallback","FreehandRoiSculptorTool","referencedToolName","minSpacing","dragColor","hoverColor","showCursorOnHover","limitRadiusOutsideRegion","hoverCursorFadeAlpha","hoverCursorFadeDistance","_active","activeMouseUpCallback","activeTouchEndCallback","activeMouseDragCallback","_toolSizeCanvas","_recentTouchEnd","_renderHoverCursor","_selectFreehandTool","_initialiseSculpting","_sculpt","_activeEnd","_deselectAllTools","_invalidateToolData","mouseUpRender","_deactivateSculpt","radiusCanvas","distanceFromPointCanvas","unlimitedRadius","_limitCursorRadiusCanvas","globalAlpha","_getClosestFreehandToolOnElement","_configureToolSize","_activateFreehandTool","_activateSculpt","_sculptData","toolSize","_toolSizeImage","maxSpacing","pushedHandles","_pushHandles","first","_insertNewHandles","_consolidateHandles","distanceToHandle","_pushOneHandle","last","directionUnitVector","lastHandleIndex","_getPreviousHandleIndex","indiciesToInsertAfter","_findNewHandleIndicies","newIndexModifier","_insertHandleRadially","_checkSpacing","pointAfterLast","_getNextHandleIndex","pointBeforeFirst","nextHandleIndex","previousIndex","_getNextHandleIndexBeforeInsert","insertPosition","_getInsertPosition","closePairs","_findCloseHandlePairs","_mergeCloseHandles","pair","removedIndexModifier","_getCorrectedPair","_combineHandles","newClosePairs","handlePair","midPoint","handleAfterPairIndex","freehandRoiTool","radiusImage","distanceFromPoint","_limitCursorRadiusImage","TOUCH_TAP","_limitCursorRadius","areaModifier","canvasArea","pixelCoords","distanceFromToolI","distanceToMidPoint","correctedPair","MagnifyTool","magnifySize","magnificationLevel","zoomCanvas","zoomElement","_createMagnificationCanvas","disabledCallback","_destroyMagnificationCanvas","_addMagnifyingGlass","_updateMagnifyingGlass","_removeMagnifyingGlass","touchDragEndCallback","newImageCallback","_drawMagnificationTool","_removeZoomElement","_drawZoomedElement","querySelector","display","magnifyCanvas","canvasLocation","copyFrom","drawImage","touchOffset","magnifyPosition","magnifierBox","getBoundingClientRect","origCanvas","createElement","zoomEnabledElement","setViewport","classList","appendChild","removeChild","OverlayTool","forceImageUpdate","overlayPlaneMetadata","overlays","viewportPixelSpacing","displayedArea","brhc","tlhc","overlay","layerCanvas","layerContext","globalCompositeOperation","overlayX","overlayY","getOrientationString","vec3","orientationX","orientationY","orientationZ","z","invertOrientationString","orientationString","inverted","toUpperCase","OrientationMarkersTool","drawAllMarkers","getOrientationMarkers","getOrientationMarkerPositions","textWidths","drawTopLeftText","drawBottomRightText","oppositeRow","PanMultiTouchTool","multiTouchDragCallback","numPointers","_getTranslation","_applyTranslation","widthScale","heightScale","PanTool","referenceElement","targetImage","referenceImage","frameOfReferenceUID","angleInRadians","angleTo","referenceLine","calculateReferenceLine","waitForEnabledElementImageToLoad","ex","ReferenceLinesTool","renderer","renderActiveReferenceLine","setToPixelCoordinateSystem","referenceEnabledElement","p0","p12","p13","p23","RotateTool","horizontal","horizontalStrategy","vertical","verticalStrategy","dragCallback","initialPoints","client","centerPoints","angleInfo","angleBetweenPoints","configMaxSimultaneousRequests","RotateTouchTool","ScaleOverlayTool","minorTickLength","majorTickLength","canvasSize","verticalIntervalScale","horizontalIntervalScale","hscaleBounds","computeScaleBounds","vscaleBounds","imageAttributes","verticalMinorTick","horizontalMinorTick","verticalLine","horizontalLine","drawVerticalScalebarIntervals","drawHorizontalScalebarIntervals","horizontalReduction","verticalReduction","hReduction","vReduction","canvasBounds","maxSimultaneousRequests","IE","9","10","Firefox","Opera","11","12","Chrome","Safari","getBrowserInfo","tem","ua","M","appName","appVersion","getMaxSimultaneousRequests","getDefaultSimultaneousRequests","browserName","browserVersion","browserData","requestPool","interaction","thumbnail","prefetch","numRequests","maxNumRequests","awake","grabDelay","startAgain","startGrabbing","sendRequest","requestDetails","failCallback","imageLoadObject","imageCache","getImageLoadObject","promise","priority","requestTypeToLoadPriority","requestsToSend","getNextRequest","addRequest","addToBeginning","clearRequestStack","getRequestPool","stackRenderer","stackRendererData","newImageId","render","requestPoolManager","allowSkipping","nbImages","scrollToIndex","pendingEvent","scrollWithoutSkipping","NEW_IMAGE","newImageHandler","StackScrollMouseWheelTool","scroll","elementToolOptions","getToolOptions","optionsObject","toolOptionObject","setToolOptions","findIndex","elementOptions","StackScrollMultiTouchTool","pixelsPerImage","_getPixelPerImage","deltaY","_getDeltaY","imageIdIndexOffset","deltaPointsY","stackScrollSpeed","offsetHeight","StackScrollTool","luminance","WwwcRegionTool","minWindowWidth","_applyWWWCRegion","pixelLuminanceData","getLuminance","minMaxMean","_calculateMinMaxMean","minPixelValue","maxPixelValue","voi","windowWidth","windowCenter","pixelLuminance","globalMin","globalMax","numPixels","spv","WwwcTool","basicLevelingStrategy","deltaX","ticks","scaleLimits","maxScale","minScale","factor","changeViewportScale","correctShift","viewportOrientation","cosA","sinA","newX","newY","ZoomMouseWheelTool","spinY","updatedViewport","zoomUtils","ZoomTool","translateStrategy","zoomToCenter","zoomToCenterStrategy","preventZoomOutsideImage","imageX","imageY","newCoords","desiredTranslation","distanceToDesired","ZoomTouchPinchTool","scaleChange","pageStartX","pageStartY","imageStartX","imageStartY","_copy","preventClickTimeout","isClickEvent","clickDelay","getEventButtons","which","preventClickHandler","mouseDoubleClick","pageToPoint","pageX","pageY","clientX","clientY","lastPoints","copyPoints","mouseDown","mouseMove","onMouseMove","onMouseUp","subtract","metaKey","shiftKey","spinX","pixelX","pixelY","wheelDelta","wheelDeltaY","wheelDeltaX","deltaMode","wheelEventHandler","startingCoords","normalizeWheel","mouseWheelData","passive","lastInteractionType","lastInteractionTime","antiGhostDelay","pointerType","handleTap","handleTapMouse","handleTapTouch","attachEvents","eventList","tapHandler","eventName","removeEvents","mouseEvents","touchEvents","touchStartDelay","pressTimeout","pageDistanceMoved","lastDelta","lastScale","lastRotation","preventNextPinch","isPress","pressDelay","pressMaxDistance","onTouch","srcEvent","delta","pointers","touches","changedTouches","changedPointers","preventGhostClick","mc","hammer","touchInput","hammerOptions","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","TouchInput","Manager","panOptions","DIRECTION_ALL","threshold","pan","Pan","pinch","Pinch","Rotate","recognizeWith","doubleTap","Tap","taps","interval","posThreshold","renderSegmentationFill","isActiveLabelMap","labelmapCanvas","canvasTopLeft","canvasTopRight","canvasBottomRight","cornerstoneCanvasWidth","cornerstoneCanvasHeight","previousImageSmoothingEnabled","imageSmoothingEnabled","previousGlobalAlpha","transformCanvasContext","canvasViewportTranslation","getCanvasViewportTranslation","resetCanvasContextTransform","colorLutTable","canvasElement","ctx","imageData","ImageData","putImageData","getLabelmapCanvas","renderSegmentationOutline","outline","previousAlpha","drawLines","lineSegments","offset","halfLineWidth","theta","cosTheta","sinTheta","unitVectorI","unitVectorJ","getOutlineOffset","coord","_getPixelIndiciesAroundPixel","_addTopOutline","_addBottomOutline","_addLeftOutline","_addRightOutline","_addTopLeftCorner","_addTopRightCorner","_addBottomLeftCorner","_addBottomRightCorner","getOutline","hasPixelToTop","hasPixelToBotoom","hasPixelToLeft","hasPixelToRight","lineSegmentsForSegment","renderSegmentation","shouldRenderFill","shouldRenderOutline","renderInactiveLabelMaps","renderActiveLabelMap","onImageRendered","toolsToRender","stackToolState","segmentationConfiguration","onImageRenderedBrushEventHandler","customFunction","proximity","activeAndPassiveTools","getInteractiveToolsForElement","activeTools","firstActiveToolWithCallback","annotationTools","getToolsWithDataForElement","annotationToolsWithMoveableHandles","getToolsWithMoveableHandles","firstToolWithMoveableHandles","annotationToolsWithPointNearClick","firstToolNearPoint","firstAnnotationNearPoint","toolSelectedCallback","preMouseDownActivateCallback","mouseClick","customCallbackHandler","mouseUp","mouseWheel","mouseDownActivate","mouseDrag","onNewImage","touchEventData","deactivateAllHandles","toolsWithMoveableHandles","moveableHandle","deactivateAllToolInstances","toolsNearPoint","allActiveTools","touchStartActiveCallback","touchStartActive","annotationToolsWithPointNearTouch","touchDrag","touchEnd","touchPinch","touchPress","touchRotate","tap","touchStart","multiTouchDrag","addToolForElement","ApiTool","addTool","_addToolGlobally","elementEnabledEvt","imageRenderedEventDispatcher","newImageEventDispatcher","mouseEventListeners","wheelEventListener","mouseToolEventDispatcher","touchEventListeners","touchToolEventDispatcher","_addEnabledElement","enabledElementCallback","_initModulesOnElement","_addGlobalToolsToElement","setToolModeFns","disabled","_repeatGlobalToolHistory","elementDisabledEvt","_removeAllToolsForElement","_removeEnabledElement","_removeLoadHandlers","removeEnabledElementCallback","_cleanModulesOnElement","foundElementIndex","resizeTimeout","resizeThrottler","forceEnabledElementResize","resize","_addCornerstoneEventListeners","_initModules","configurationEntry","windowResizeHandler","elementEnabledEvent","ELEMENT_ENABLED","elementDisabledEvent","ELEMENT_DISABLED","events","addEnabledElement","removeEnabledElement","_removeCornerstoneEventListeners","resetPrefetchTimeout","requestType","maxImagesToPrefetch","preserveExistingPool","resetPrefetchDelay","range","lowEnd","highEnd","stackPrefetchData","stackPrefetch","indicesToRequest","removeFromList","nextImageIdIndex","nearest","nearestIndex","lowerIndex","higherIndex","imageIdsToPrefetch","shouldLoadLower","shouldLoadHigher","imageToLoad","imageIndex","getPromiseRemovedHandler","onImageUpdated","indexOfCurrentImage","promiseRemovedHandler","IMAGE_CACHE_PROMISE_REMOVED","getConfiguration","setConfiguration","newMaxSimultaneousRequests","FusionRenderer","layerIds","findImageFn","imageStacks","isInteger","baseImageObject","currentImageId","overlayImageStacks","baseImage","baseLayerId","setLayerImage","addLayer","imgObj","overlayLayerIndex","layerIndex","currentLayerId","setActiveLayer","stackRenderers","stopClipWithData","playClipData","intervalId","usingFrameTimeVector","clearInterval","playClip","framesPerSecond","playClipTimeouts","stackToolData","playClipToolData","lastFrameTimeStamp","frameRate","frameTimeVector","ignoreFrameTimeVector","speed","sample","delay","limit","timeouts","isTimeVarying","getPlayClipTimeouts","playClipAction","imageCount","eventDetail","triggerStopEvent","playClipTimeoutHandler","setInterval","stopClip","removeToolForElement","removeTool","_removeToolGlobally","setToolOptionsForElement","newStackSpecificToolStateManager","toolTypes","oldStateManager","stackStateManagers","addStackStateManager","otherTools","stackTools","stackSpecificStateManager","newFrameOfReferenceSpecificToolStateManager","frameOfReference","frameOfReferenceToolState","remove","globalFrameOfReferenceSpecificToolStateManager","filename","mimetype","msToBlob","blob","msSaveBlob","lnk","download","href","toDataURL","initMouseEvent","fireEvent","newModule","overwrite","alreadyRegistered","isModuleNameRegistered","lib","lineHeight","fontScale","ignorePointerEvents","webkitUserSelect","webkitTouchCallout","mozUserSelect","msUserSelect","oUserSelect","khtmlUserSelect","userSelect","unselectable","oncontextmenu","pointerEvents","currentPointsImage","keyCode","ellipseUtils","segmentationUtils","isMixinRegistered","item","itemKey","isItemNameRegistered","isValidInput","registerModule","registerMixin","registerItem","items","register","synchronizer","sourceViewport","targetViewport","unique","Synchronizer","that","sourceElements","targetElements","ignoreFiredEvents","initialData","isDisabled","noElements","targetIndex","targetImageId","sourceIndex","positionDifference","distances","onEvent","disableHandler","clearToolOptionsByElement","setHandler","getHandler","getDistances","sourceEnabledElement","sourceImagePosition","targetEnabledElement","targetImagePosition","addSource","oneEvent","updateDisableHandlers","addTarget","removeSource","removeTarget","getTargetElements","sourceStackData","distanceToSquared","finalPosition","targetStackData","uri","cornerstoneTools","SaveAs","enableLogger","disableLogger","importInternal","import","registerSome","wwwcSynchronizer","updateImageSynchronizer","stackScrollSynchronizer","stackImagePositionSynchronizer","stackImagePositionOffsetSynchronizer","stackImageIndexSynchronizer","panZoomSynchronizer"],"mappings":"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AkMF,SAAcC,GACZ,IACMA,EACFhB,EAASiB,QAAQC,QAAQ,QAASF,GAElChB,EAASiB,QAAQE,WAAW,SAE9B,MAAOC,MAxMTC,KAoNF,WACE,IAAIxE,EAEJ,IACEA,EAAImD,EAASiB,QAAQK,QAAQ,SAC7B,MAAOF,KAMJvE,QAAwB,IAAZ0E,GAA2B,QAASA,IACnD1E,EAAI0E,EAAQC,IAAIC,OAGlB,OAAO5E,GAlOPuD,UA8FF,WAIE,GACoB,oBAAXzE,QACPA,OAAO4F,UACkB,aAAxB5F,OAAO4F,QAAQG,MAAuB/F,OAAO4F,QAAQI,QAEtD,OAAO,EAGT,GACuB,oBAAdC,WACPA,UAAUC,WACVD,UAAUC,UAAUC,cAAchB,MAAM,yBAExC,OAAO,EAIT,MACuB,oBAAbiB,UACNA,SAASC,iBACTD,SAASC,gBAAgBC,OACzBF,SAASC,gBAAgBC,MAAMC,kBACd,oBAAXvG,QACNA,OAAOwG,UACNxG,OAAOwG,QAAQC,SACbzG,OAAOwG,QAAQE,WAAa1G,OAAOwG,QAAQG,QAE1B,oBAAdV,WACNA,UAAUC,WACVD,UAAUC,UAAUC,cAAchB,MAAM,mBACxCyB,SAASC,OAAOC,GAAI,KAAO,IACP,oBAAdb,WACNA,UAAUC,WACVD,UAAUC,UAAUC,cAAchB,MAAM,uBAlI5CG,QA8OF,WACE,IAGE,OAAOyB,aACP,MAAOtB,KA1PKuB,IAahB3C,EAAS4C,OAAS,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAqGF5C,EAAS6C,IAAMV,QAAQW,OAASX,QAAQU,KAAO,aAkE/C,IAAMvC,EAAayC,YAAM/C,GACNM,EAAW0C,WAKnBC,EAAI,SAASC,GACtB,IACE,OAAOC,KAAKC,UAAUF,GACtB,MAAO9B,GACP,4CAAsCA,EAAMiC,WAIjC/C,Q,gCCtQf9E,EAAOD,QAfP,SAAyBuE,EAAKxC,EAAKN,GAYjC,OAXIM,KAAOwC,EACTrD,OAAOC,eAAeoD,EAAKxC,EAAK,CAC9BN,MAAOA,EACPL,YAAY,EACZ4B,cAAc,EACdC,UAAU,IAGZsB,EAAIxC,GAAON,EAGN8C,I,gBCZTtE,EAAOD,QAAU,EAAQ,K,iDC8RVwH,IAzRf,SAAevB,GAsCb,SAAS8B,EAAYjD,GAGnB,IAFA,IAAIkD,EAAO,EAEFxH,EAAI,EAAGA,EAAIsE,EAAUhC,OAAQtC,IACpCwH,GAAQA,GAAQ,GAAKA,EAAOlD,EAAUmD,WAAWzH,GACjDwH,GAAQ,EAGV,OAAOE,EAAYb,OAAOc,KAAKC,IAAIJ,GAAQE,EAAYb,OAAOvE,QAWhE,SAASoF,EAAYpD,GACnB,IAAIuD,EAEJ,SAASd,IAAe,2BAAN5C,EAAM,yBAANA,EAAM,gBAEtB,GAAK4C,EAAMe,QAAX,CAIA,IAAMhF,EAAOiE,EAGPgB,EAAOC,OAAO,IAAIC,MAClBC,EAAKH,GAAQF,GAAYE,GAE/BjF,EAAK2B,KAAOyD,EACZpF,EAAKqF,KAAON,EACZ/E,EAAKiF,KAAOA,EACZF,EAAWE,EAEX5D,EAAK,GAAKuD,EAAYU,OAAOjE,EAAK,IAEX,iBAAZA,EAAK,IAEdA,EAAKkE,QAAQ,MAIf,IAAIzD,EAAQ,EAEZT,EAAK,GAAKA,EAAK,GAAGW,QAAQ,iBAAiB,SAACC,EAAOuD,GAEjD,GAAc,OAAVvD,EACF,OAAOA,EAETH,IACA,IAAM2D,EAAYb,EAAYT,WAAWqB,GAEzC,GAAyB,mBAAdC,EAA0B,CACnC,IAAMC,EAAMrE,EAAKS,GAEjBG,EAAQwD,EAAUpI,KAAK2C,EAAM0F,GAG7BrE,EAAKQ,OAAOC,EAAO,GACnBA,IAGF,OAAOG,KAIT2C,EAAYxD,WAAW/D,KAAK2C,EAAMqB,IAEpBrB,EAAKgE,KAAOY,EAAYZ,KAEhC2B,MAAM3F,EAAMqB,IAmBpB,OAhBA4C,EAAMzC,UAAYA,EAClByC,EAAMe,QAAUJ,EAAYI,QAAQxD,GACpCyC,EAAM1C,UAAYqD,EAAYrD,YAC9B0C,EAAMrC,MAAQ6C,EAAYjD,GAC1ByC,EAAM2B,QAAUA,EAChB3B,EAAM4B,OAASA,EAKiB,mBAArBjB,EAAYkB,MACrBlB,EAAYkB,KAAK7B,GAGnBW,EAAYmB,UAAUC,KAAK/B,GAEpBA,EAGT,SAAS2B,IACP,IAAM9D,EAAQ8C,EAAYmB,UAAUE,QAAQ3E,MAE5C,OAAe,IAAXQ,IACF8C,EAAYmB,UAAUlE,OAAOC,EAAO,IAE7B,GAMX,SAAS+D,EAAOrE,EAAW0E,GACzB,IAAMC,EAAWvB,EACftD,KAAKE,gBACmB,IAAd0E,EAA4B,IAAMA,GAC1C1E,GAKJ,OAFA2E,EAASnC,IAAM1C,KAAK0C,IAEbmC,EAkGT,SAASC,EAAYC,GACnB,OAAOA,EACJC,WACAC,UAAU,EAAGF,EAAOC,WAAW9G,OAAS,GACxCwC,QAAQ,UAAW,KAoBxB,OArRA4C,EAAYX,MAAQW,EACpBA,EAAY4B,QAAU5B,EACtBA,EAAYU,OAyQZ,SAAgBI,GACd,GAAIA,aAAee,MACjB,OAAOf,EAAIgB,OAAShB,EAAIlB,QAG1B,OAAOkB,GA7QTd,EAAY+B,QA0MZ,WACE,IAAMxE,EAAa,cACdyC,EAAYgC,MAAMC,IAAIT,IADR,IAEdxB,EAAYkC,MAAMD,IAAIT,GAAaS,KAAI,SAAArF,GAAS,iBAAQA,QAC3DuF,KAAK,KAIP,OAFAnC,EAAYoC,OAAO,IAEZ7E,GAjNTyC,EAAYoC,OAiKZ,SAAgB7E,GAMd,IAAIjF,EALJ0H,EAAY1C,KAAKC,GAEjByC,EAAYgC,MAAQ,GACpBhC,EAAYkC,MAAQ,GAGpB,IAAMG,GAA+B,iBAAf9E,EAA0BA,EAAa,IAAI8E,MAC/D,UAEIC,EAAMD,EAAMzH,OAElB,IAAKtC,EAAI,EAAGA,EAAIgK,EAAKhK,IACd+J,EAAM/J,KAOW,OAFtBiF,EAAa8E,EAAM/J,GAAG8E,QAAQ,MAAO,QAEtB,GACb4C,EAAYkC,MAAMd,KAAK,IAAIrC,OAAJ,WAAexB,EAAWgF,OAAO,GAAjC,OAEvBvC,EAAYgC,MAAMZ,KAAK,IAAIrC,OAAJ,WAAexB,EAAf,QAI3B,IAAKjF,EAAI,EAAGA,EAAI0H,EAAYmB,UAAUvG,OAAQtC,IAAK,CACjD,IAAMgC,EAAW0F,EAAYmB,UAAU7I,GAEvCgC,EAAS8F,QAAUJ,EAAYI,QAAQ9F,EAASsC,aA9LpDoD,EAAYI,QA0NZ,SAAiBvH,GACf,GAA8B,MAA1BA,EAAKA,EAAK+B,OAAS,GACrB,OAAO,EAGT,IAAItC,EACAgK,EAEJ,IAAKhK,EAAI,EAAGgK,EAAMtC,EAAYkC,MAAMtH,OAAQtC,EAAIgK,EAAKhK,IACnD,GAAI0H,EAAYkC,MAAM5J,GAAGkK,KAAK3J,GAC5B,OAAO,EAIX,IAAKP,EAAI,EAAGgK,EAAMtC,EAAYgC,MAAMpH,OAAQtC,EAAIgK,EAAKhK,IACnD,GAAI0H,EAAYgC,MAAM1J,GAAGkK,KAAK3J,GAC5B,OAAO,EAIX,OAAO,GA7OTmH,EAAYlD,SAAW2F,EAAQ,IAE/BzJ,OAAO0J,KAAK3E,GAAK4E,SAAQ,SAAA9I,GACvBmG,EAAYnG,GAAOkE,EAAIlE,MAMzBmG,EAAYmB,UAAY,GAMxBnB,EAAYgC,MAAQ,GACpBhC,EAAYkC,MAAQ,GAOpBlC,EAAYT,WAAa,GAkBzBS,EAAYH,YAAcA,EAoO1BG,EAAYoC,OAAOpC,EAAYpC,QAExBoC,I,cC3RT,SAAS4C,EAAgB7J,EAAGqB,GAM1B,OALArC,EAAOD,QAAU8K,EAAkB5J,OAAOsC,gBAAkB,SAAyBvC,EAAGqB,GAEtF,OADArB,EAAEyC,UAAYpB,EACPrB,GAGF6J,EAAgB7J,EAAGqB,GAG5BrC,EAAOD,QAAU8K,G,cCRjB,IAOIC,EACAC,EARAhF,EAAU/F,EAAOD,QAAU,GAU/B,SAASiL,IACL,MAAM,IAAIlB,MAAM,mCAEpB,SAASmB,IACL,MAAM,IAAInB,MAAM,qCAsBpB,SAASoB,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,GAC/B,MAAME,GACJ,IAEI,OAAOP,EAAiBpK,KAAK,KAAMyK,EAAK,GAC1C,MAAME,GAEJ,OAAOP,EAAiBpK,KAAKiE,KAAMwG,EAAK,MAvCnD,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,EAEzB,MAAOK,GACLP,EAAmBE,EAEvB,IAEQD,EADwB,mBAAjBO,aACcA,aAEAL,EAE3B,MAAOI,GACLN,EAAqBE,GAjB7B,GAwEA,IAEIM,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAa1I,OACb2I,EAAQD,EAAaK,OAAOJ,GAE5BE,GAAc,EAEdF,EAAM3I,QACNgJ,KAIR,SAASA,IACL,IAAIJ,EAAJ,CAGA,IAAIK,EAAUZ,EAAWS,GACzBF,GAAW,EAGX,IADA,IAAIlB,EAAMiB,EAAM3I,OACV0H,GAAK,CAGP,IAFAgB,EAAeC,EACfA,EAAQ,KACCE,EAAanB,GACdgB,GACAA,EAAaG,GAAYK,MAGjCL,GAAc,EACdnB,EAAMiB,EAAM3I,OAEhB0I,EAAe,KACfE,GAAW,EAnEf,SAAyBO,GACrB,GAAIjB,IAAuBO,aAEvB,OAAOA,aAAaU,GAGxB,IAAKjB,IAAuBE,IAAwBF,IAAuBO,aAEvE,OADAP,EAAqBO,aACdA,aAAaU,GAExB,IAEWjB,EAAmBiB,GAC5B,MAAOX,GACL,IAEI,OAAON,EAAmBrK,KAAK,KAAMsL,GACvC,MAAOX,GAGL,OAAON,EAAmBrK,KAAKiE,KAAMqH,KAgD7CC,CAAgBH,IAiBpB,SAASI,EAAKf,EAAKgB,GACfxH,KAAKwG,IAAMA,EACXxG,KAAKwH,MAAQA,EAYjB,SAASC,KA5BTrG,EAAQsG,SAAW,SAAUlB,GACzB,IAAIzG,EAAO,IAAI4H,MAAMC,UAAU1J,OAAS,GACxC,GAAI0J,UAAU1J,OAAS,EACnB,IAAK,IAAItC,EAAI,EAAGA,EAAIgM,UAAU1J,OAAQtC,IAClCmE,EAAKnE,EAAI,GAAKgM,UAAUhM,GAGhCiL,EAAMnC,KAAK,IAAI6C,EAAKf,EAAKzG,IACJ,IAAjB8G,EAAM3I,QAAiB4I,GACvBP,EAAWW,IASnBK,EAAK/J,UAAU4J,IAAM,WACjBpH,KAAKwG,IAAInC,MAAM,KAAMrE,KAAKwH,QAE9BpG,EAAQyG,MAAQ,UAChBzG,EAAQ0G,SAAU,EAClB1G,EAAQC,IAAM,GACdD,EAAQ2G,KAAO,GACf3G,EAAQ4G,QAAU,GAClB5G,EAAQ6G,SAAW,GAInB7G,EAAQ8G,GAAKT,EACbrG,EAAQ+G,YAAcV,EACtBrG,EAAQgH,KAAOX,EACfrG,EAAQiH,IAAMZ,EACdrG,EAAQkH,eAAiBb,EACzBrG,EAAQmH,mBAAqBd,EAC7BrG,EAAQoH,KAAOf,EACfrG,EAAQqH,gBAAkBhB,EAC1BrG,EAAQsH,oBAAsBjB,EAE9BrG,EAAQuH,UAAY,SAAUxM,GAAQ,MAAO,IAE7CiF,EAAQwH,QAAU,SAAUzM,GACxB,MAAM,IAAIgJ,MAAM,qCAGpB/D,EAAQyH,IAAM,WAAc,MAAO,KACnCzH,EAAQ0H,MAAQ,SAAUC,GACtB,MAAM,IAAI5D,MAAM,mCAEpB/D,EAAQ4H,MAAQ,WAAa,OAAO,I,cC7KpC3N,EAAOD,QAVP,SAA4BkE,GAC1B,GAAIqI,MAAMsB,QAAQ3J,GAAM,CACtB,IAAK,IAAI1D,EAAI,EAAGsN,EAAO,IAAIvB,MAAMrI,EAAIpB,QAAStC,EAAI0D,EAAIpB,OAAQtC,IAC5DsN,EAAKtN,GAAK0D,EAAI1D,GAGhB,OAAOsN,K,cCFX7N,EAAOD,QAJP,SAA0B+N,GACxB,GAAIxM,OAAOiD,YAAYtD,OAAO6M,IAAkD,uBAAzC7M,OAAOkB,UAAUwH,SAASjJ,KAAKoN,GAAgC,OAAOxB,MAAMyB,KAAKD,K,cCG1H9N,EAAOD,QAJP,WACE,MAAM,IAAI0C,UAAU,qD,cCGtB,IAAIH,EAAI,IACJ3B,EAAQ,GAAJ2B,EACJ0L,EAAQ,GAAJrN,EACJE,EAAQ,GAAJmN,EACJC,EAAQ,EAAJpN,EACJqN,EAAQ,OAAJrN,EAqJR,SAASsN,EAAO1F,EAAI2F,EAAOpM,EAAGlB,GAC5B,IAAIuN,EAAWD,GAAa,IAAJpM,EACxB,OAAOkG,KAAKoG,MAAM7F,EAAKzG,GAAK,IAAMlB,GAAQuN,EAAW,IAAM,IAvI7DrO,EAAOD,QAAU,SAASgJ,EAAKwF,GAC7BA,EAAUA,GAAW,GACrB,IAAIrI,SAAc6C,EAClB,GAAa,WAAT7C,GAAqB6C,EAAIlG,OAAS,EACpC,OAkBJ,SAAe2L,GAEb,IADAA,EAAMC,OAAOD,IACL3L,OAAS,IACf,OAEF,IAAIyC,EAAQ,mIAAmIoJ,KAC7IF,GAEF,IAAKlJ,EACH,OAEF,IAAItD,EAAI2M,WAAWrJ,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMgB,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOtE,EAAIkM,EACb,IAAK,QACL,IAAK,OACL,IAAK,IACH,OAAOlM,EAAIiM,EACb,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOjM,EAAInB,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOmB,EAAIgM,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOhM,EAAIrB,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOqB,EAAIM,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAON,EACT,QACE,QAvEK4M,CAAM7F,GACR,GAAa,WAAT7C,GAAqB2I,SAAS9F,GACvC,OAAOwF,EAAQO,KA0GnB,SAAiBrG,GACf,IAAI2F,EAAQlG,KAAKC,IAAIM,GACrB,GAAI2F,GAASvN,EACX,OAAOsN,EAAO1F,EAAI2F,EAAOvN,EAAG,OAE9B,GAAIuN,GAASJ,EACX,OAAOG,EAAO1F,EAAI2F,EAAOJ,EAAG,QAE9B,GAAII,GAASzN,EACX,OAAOwN,EAAO1F,EAAI2F,EAAOzN,EAAG,UAE9B,GAAIyN,GAAS9L,EACX,OAAO6L,EAAO1F,EAAI2F,EAAO9L,EAAG,UAE9B,OAAOmG,EAAK,MAxHYsG,CAAQhG,GAiFlC,SAAkBN,GAChB,IAAI2F,EAAQlG,KAAKC,IAAIM,GACrB,GAAI2F,GAASvN,EACX,OAAOqH,KAAKoG,MAAM7F,EAAK5H,GAAK,IAE9B,GAAIuN,GAASJ,EACX,OAAO9F,KAAKoG,MAAM7F,EAAKuF,GAAK,IAE9B,GAAII,GAASzN,EACX,OAAOuH,KAAKoG,MAAM7F,EAAK9H,GAAK,IAE9B,GAAIyN,GAAS9L,EACX,OAAO4F,KAAKoG,MAAM7F,EAAKnG,GAAK,IAE9B,OAAOmG,EAAK,KA/F2BuG,CAASjG,GAEhD,MAAM,IAAIe,MACR,wDACEnC,KAAKC,UAAUmB,M,cC/BrB/I,EAAOD,QAJP,SAAyBkE,GACvB,GAAIqI,MAAMsB,QAAQ3J,GAAM,OAAOA,I,cCyBjCjE,EAAOD,QA1BP,SAA+BkE,EAAK1D,GAClC,IAAI0O,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKtL,EAAI3C,OAAOiD,cAAmB2K,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAK5F,KAAKiG,EAAG9N,QAETjB,GAAK0O,EAAKpM,SAAWtC,GAH8C2O,GAAK,IAK9E,MAAOQ,GACPP,GAAK,EACLC,EAAKM,EACL,QACA,IACOR,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,I,cCnBTjP,EAAOD,QAJP,WACE,MAAM,IAAI0C,UAAU,0D,gBCQtB,IAAIkN,EAAI,WACN,OAAOhL,MAAyB,iBAATtB,MAAqBA,KADtC,IAEAuM,SAAS,cAATA,GAIJC,EAAaF,EAAEG,oBACjB7O,OAAO8O,oBAAoBJ,GAAGrG,QAAQ,uBAAyB,EAG7D0G,EAAaH,GAAcF,EAAEG,mBAOjC,GAJAH,EAAEG,wBAAqBT,EAEvBrP,EAAOD,QAAU,EAAQ,IAErB8P,EAEFF,EAAEG,mBAAqBE,OAGvB,WACSL,EAAEG,mBACT,MAAMzE,GACNsE,EAAEG,wBAAqBT,I,eC3B1B,SAAUY,GACT,aAEA,IAEIZ,EAFAa,EAAKjP,OAAOkB,UACZgO,EAASD,EAAG9N,eAEZgO,EAA4B,mBAAX9O,OAAwBA,OAAS,GAClD+O,EAAiBD,EAAQ7L,UAAY,aACrC+L,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQ7O,aAAe,gBAE3CkP,EAA6B,iBAAXzQ,EAClB0Q,EAAUT,EAAOH,mBACrB,GAAIY,EACED,IAGFzQ,EAAOD,QAAU2Q,OAJrB,EAaAA,EAAUT,EAAOH,mBAAqBW,EAAWzQ,EAAOD,QAAU,IAc1D4Q,KAAOA,EAoBf,IAAIC,EAAyB,iBACzBC,EAAyB,iBACzBC,EAAoB,YACpBC,EAAoB,YAIpBC,EAAmB,GAYnBC,EAAoB,GACxBA,EAAkBZ,GAAkB,WAClC,OAAO1L,MAGT,IAAIuM,EAAWjQ,OAAOuC,eAClB2N,EAA0BD,GAAYA,EAASA,EAASE,EAAO,MAC/DD,GACAA,IAA4BjB,GAC5BC,EAAOzP,KAAKyQ,EAAyBd,KAGvCY,EAAoBE,GAGtB,IAAIE,EAAKC,EAA2BnP,UAClCoP,EAAUpP,UAAYlB,OAAOY,OAAOoP,GACtCO,EAAkBrP,UAAYkP,EAAGzN,YAAc0N,EAC/CA,EAA2B1N,YAAc4N,EACzCF,EAA2Bd,GACzBgB,EAAkBC,YAAc,oBAYlCf,EAAQgB,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAO/N,YAClD,QAAOgO,IACHA,IAASJ,GAG2B,uBAAnCI,EAAKH,aAAeG,EAAK9Q,QAIhC4P,EAAQmB,KAAO,SAASF,GAUtB,OATI1Q,OAAOsC,eACTtC,OAAOsC,eAAeoO,EAAQL,IAE9BK,EAAOlO,UAAY6N,EACbd,KAAqBmB,IACzBA,EAAOnB,GAAqB,sBAGhCmB,EAAOxP,UAAYlB,OAAOY,OAAOwP,GAC1BM,GAOTjB,EAAQoB,MAAQ,SAASC,GACvB,MAAO,CAAEC,QAASD,IAsEpBE,EAAsBC,EAAc/P,WACpC+P,EAAc/P,UAAUmO,GAAuB,WAC7C,OAAO3L,MAET+L,EAAQwB,cAAgBA,EAKxBxB,EAAQyB,MAAQ,SAASC,EAASC,EAAShP,EAAMiP,GAC/C,IAAIxE,EAAO,IAAIoE,EACbvB,EAAKyB,EAASC,EAAShP,EAAMiP,IAG/B,OAAO5B,EAAQgB,oBAAoBW,GAC/BvE,EACAA,EAAK0B,OAAO+C,MAAK,SAASC,GACxB,OAAOA,EAAO/C,KAAO+C,EAAOhR,MAAQsM,EAAK0B,WAsKjDyC,EAAsBZ,GAEtBA,EAAGb,GAAqB,YAOxBa,EAAGhB,GAAkB,WACnB,OAAO1L,MAGT0M,EAAG1H,SAAW,WACZ,MAAO,sBAkCT+G,EAAQ/F,KAAO,SAAS1I,GACtB,IAAI0I,EAAO,GACX,IAAK,IAAI7I,KAAOG,EACd0I,EAAKtB,KAAKvH,GAMZ,OAJA6I,EAAK8H,UAIE,SAASjD,IACd,KAAO7E,EAAK9H,QAAQ,CAClB,IAAIf,EAAM6I,EAAK+H,MACf,GAAI5Q,KAAOG,EAGT,OAFAuN,EAAKhO,MAAQM,EACb0N,EAAKC,MAAO,EACLD,EAQX,OADAA,EAAKC,MAAO,EACLD,IAsCXkB,EAAQU,OAASA,EAMjBuB,EAAQxQ,UAAY,CAClByB,YAAa+O,EAEbC,MAAO,SAASC,GAcd,GAbAlO,KAAK+D,KAAO,EACZ/D,KAAK6K,KAAO,EAGZ7K,KAAKmO,KAAOnO,KAAKoO,MAAQ1D,EACzB1K,KAAK8K,MAAO,EACZ9K,KAAKqO,SAAW,KAEhBrO,KAAKsO,OAAS,OACdtO,KAAKoN,IAAM1C,EAEX1K,KAAKuO,WAAWtI,QAAQuI,IAEnBN,EACH,IAAK,IAAI/R,KAAQ6D,KAEQ,MAAnB7D,EAAKsS,OAAO,IACZjD,EAAOzP,KAAKiE,KAAM7D,KACjBuS,OAAOvS,EAAKwS,MAAM,MACrB3O,KAAK7D,GAAQuO,IAMrBkE,KAAM,WACJ5O,KAAK8K,MAAO,EAEZ,IACI+D,EADY7O,KAAKuO,WAAW,GACLO,WAC3B,GAAwB,UAApBD,EAAWtN,KACb,MAAMsN,EAAWzB,IAGnB,OAAOpN,KAAK+O,MAGdC,kBAAmB,SAAS9M,GAC1B,GAAIlC,KAAK8K,KACP,MAAM5I,EAGR,IAAI+M,EAAUjP,KACd,SAASkP,EAAOC,EAAKC,GAYnB,OAXAC,EAAO9N,KAAO,QACd8N,EAAOjC,IAAMlL,EACb+M,EAAQpE,KAAOsE,EAEXC,IAGFH,EAAQX,OAAS,OACjBW,EAAQ7B,IAAM1C,KAGN0E,EAGZ,IAAK,IAAIxT,EAAIoE,KAAKuO,WAAWrQ,OAAS,EAAGtC,GAAK,IAAKA,EAAG,CACpD,IAAI0T,EAAQtP,KAAKuO,WAAW3S,GACxByT,EAASC,EAAMR,WAEnB,GAAqB,SAAjBQ,EAAMC,OAIR,OAAOL,EAAO,OAGhB,GAAII,EAAMC,QAAUvP,KAAK+D,KAAM,CAC7B,IAAIyL,EAAWhE,EAAOzP,KAAKuT,EAAO,YAC9BG,EAAajE,EAAOzP,KAAKuT,EAAO,cAEpC,GAAIE,GAAYC,EAAY,CAC1B,GAAIzP,KAAK+D,KAAOuL,EAAMI,SACpB,OAAOR,EAAOI,EAAMI,UAAU,GACzB,GAAI1P,KAAK+D,KAAOuL,EAAMK,WAC3B,OAAOT,EAAOI,EAAMK,iBAGjB,GAAIH,GACT,GAAIxP,KAAK+D,KAAOuL,EAAMI,SACpB,OAAOR,EAAOI,EAAMI,UAAU,OAG3B,KAAID,EAMT,MAAM,IAAItK,MAAM,0CALhB,GAAInF,KAAK+D,KAAOuL,EAAMK,WACpB,OAAOT,EAAOI,EAAMK,gBAU9BC,OAAQ,SAASrO,EAAM6L,GACrB,IAAK,IAAIxR,EAAIoE,KAAKuO,WAAWrQ,OAAS,EAAGtC,GAAK,IAAKA,EAAG,CACpD,IAAI0T,EAAQtP,KAAKuO,WAAW3S,GAC5B,GAAI0T,EAAMC,QAAUvP,KAAK+D,MACrByH,EAAOzP,KAAKuT,EAAO,eACnBtP,KAAK+D,KAAOuL,EAAMK,WAAY,CAChC,IAAIE,EAAeP,EACnB,OAIAO,IACU,UAATtO,GACS,aAATA,IACDsO,EAAaN,QAAUnC,GACvBA,GAAOyC,EAAaF,aAGtBE,EAAe,MAGjB,IAAIR,EAASQ,EAAeA,EAAaf,WAAa,GAItD,OAHAO,EAAO9N,KAAOA,EACd8N,EAAOjC,IAAMA,EAETyC,GACF7P,KAAKsO,OAAS,OACdtO,KAAK6K,KAAOgF,EAAaF,WAClBtD,GAGFrM,KAAK8P,SAAST,IAGvBS,SAAU,SAAST,EAAQU,GACzB,GAAoB,UAAhBV,EAAO9N,KACT,MAAM8N,EAAOjC,IAcf,MAXoB,UAAhBiC,EAAO9N,MACS,aAAhB8N,EAAO9N,KACTvB,KAAK6K,KAAOwE,EAAOjC,IACM,WAAhBiC,EAAO9N,MAChBvB,KAAK+O,KAAO/O,KAAKoN,IAAMiC,EAAOjC,IAC9BpN,KAAKsO,OAAS,SACdtO,KAAK6K,KAAO,OACa,WAAhBwE,EAAO9N,MAAqBwO,IACrC/P,KAAK6K,KAAOkF,GAGP1D,GAGT2D,OAAQ,SAASL,GACf,IAAK,IAAI/T,EAAIoE,KAAKuO,WAAWrQ,OAAS,EAAGtC,GAAK,IAAKA,EAAG,CACpD,IAAI0T,EAAQtP,KAAKuO,WAAW3S,GAC5B,GAAI0T,EAAMK,aAAeA,EAGvB,OAFA3P,KAAK8P,SAASR,EAAMR,WAAYQ,EAAMS,UACtCvB,EAAcc,GACPjD,IAKb,MAAS,SAASkD,GAChB,IAAK,IAAI3T,EAAIoE,KAAKuO,WAAWrQ,OAAS,EAAGtC,GAAK,IAAKA,EAAG,CACpD,IAAI0T,EAAQtP,KAAKuO,WAAW3S,GAC5B,GAAI0T,EAAMC,SAAWA,EAAQ,CAC3B,IAAIF,EAASC,EAAMR,WACnB,GAAoB,UAAhBO,EAAO9N,KAAkB,CAC3B,IAAI0O,EAASZ,EAAOjC,IACpBoB,EAAcc,GAEhB,OAAOW,GAMX,MAAM,IAAI9K,MAAM,0BAGlB+K,cAAe,SAASC,EAAUC,EAAYC,GAa5C,OAZArQ,KAAKqO,SAAW,CACdzO,SAAU6M,EAAO0D,GACjBC,WAAYA,EACZC,QAASA,GAGS,SAAhBrQ,KAAKsO,SAGPtO,KAAKoN,IAAM1C,GAGN2B,IAnqBX,SAASL,EAAKyB,EAASC,EAAShP,EAAMiP,GAEpC,IAAI2C,EAAiB5C,GAAWA,EAAQlQ,qBAAqBoP,EAAYc,EAAUd,EAC/E2D,EAAYjU,OAAOY,OAAOoT,EAAe9S,WACzCyR,EAAU,IAAIjB,EAAQL,GAAe,IAMzC,OAFA4C,EAAUC,QAkMZ,SAA0B/C,EAAS/O,EAAMuQ,GACvC,IAAIwB,EAAQxE,EAEZ,OAAO,SAAgBqC,EAAQlB,GAC7B,GAAIqD,IAAUtE,EACZ,MAAM,IAAIhH,MAAM,gCAGlB,GAAIsL,IAAUrE,EAAmB,CAC/B,GAAe,UAAXkC,EACF,MAAMlB,EAKR,OAAOsD,IAMT,IAHAzB,EAAQX,OAASA,EACjBW,EAAQ7B,IAAMA,IAED,CACX,IAAIiB,EAAWY,EAAQZ,SACvB,GAAIA,EAAU,CACZ,IAAIsC,EAAiBC,EAAoBvC,EAAUY,GACnD,GAAI0B,EAAgB,CAClB,GAAIA,IAAmBtE,EAAkB,SACzC,OAAOsE,GAIX,GAAuB,SAAnB1B,EAAQX,OAGVW,EAAQd,KAAOc,EAAQb,MAAQa,EAAQ7B,SAElC,GAAuB,UAAnB6B,EAAQX,OAAoB,CACrC,GAAImC,IAAUxE,EAEZ,MADAwE,EAAQrE,EACF6C,EAAQ7B,IAGhB6B,EAAQD,kBAAkBC,EAAQ7B,SAEN,WAAnB6B,EAAQX,QACjBW,EAAQW,OAAO,SAAUX,EAAQ7B,KAGnCqD,EAAQtE,EAER,IAAIkD,EAASwB,EAASpD,EAAS/O,EAAMuQ,GACrC,GAAoB,WAAhBI,EAAO9N,KAAmB,CAO5B,GAJAkP,EAAQxB,EAAQnE,KACZsB,EACAF,EAEAmD,EAAOjC,MAAQf,EACjB,SAGF,MAAO,CACLxP,MAAOwS,EAAOjC,IACdtC,KAAMmE,EAAQnE,MAGS,UAAhBuE,EAAO9N,OAChBkP,EAAQrE,EAGR6C,EAAQX,OAAS,QACjBW,EAAQ7B,IAAMiC,EAAOjC,OA1QP0D,CAAiBrD,EAAS/O,EAAMuQ,GAE7CsB,EAcT,SAASM,EAASE,EAAIpR,EAAKyN,GACzB,IACE,MAAO,CAAE7L,KAAM,SAAU6L,IAAK2D,EAAGhV,KAAK4D,EAAKyN,IAC3C,MAAOrC,GACP,MAAO,CAAExJ,KAAM,QAAS6L,IAAKrC,IAiBjC,SAAS6B,KACT,SAASC,KACT,SAASF,KA4BT,SAASW,EAAsB9P,GAC7B,CAAC,OAAQ,QAAS,UAAUyI,SAAQ,SAASqI,GAC3C9Q,EAAU8Q,GAAU,SAASlB,GAC3B,OAAOpN,KAAKwQ,QAAQlC,EAAQlB,OAoClC,SAASG,EAAcgD,GAgCrB,IAAIS,EAgCJhR,KAAKwQ,QA9BL,SAAiBlC,EAAQlB,GACvB,SAAS6D,IACP,OAAO,IAAIC,SAAQ,SAASC,EAASC,IAnCzC,SAASC,EAAO/C,EAAQlB,EAAK+D,EAASC,GACpC,IAAI/B,EAASwB,EAASN,EAAUjC,GAASiC,EAAWnD,GACpD,GAAoB,UAAhBiC,EAAO9N,KAEJ,CACL,IAAIsM,EAASwB,EAAOjC,IAChBvQ,EAAQgR,EAAOhR,MACnB,OAAIA,GACiB,iBAAVA,GACP2O,EAAOzP,KAAKc,EAAO,WACdqU,QAAQC,QAAQtU,EAAMwQ,SAASO,MAAK,SAAS/Q,GAClDwU,EAAO,OAAQxU,EAAOsU,EAASC,MAC9B,SAASrG,GACVsG,EAAO,QAAStG,EAAKoG,EAASC,MAI3BF,QAAQC,QAAQtU,GAAO+Q,MAAK,SAAS0D,GAI1CzD,EAAOhR,MAAQyU,EACfH,EAAQtD,MACP,SAAS5M,GAGV,OAAOoQ,EAAO,QAASpQ,EAAOkQ,EAASC,MAvBzCA,EAAO/B,EAAOjC,KAiCZiE,CAAO/C,EAAQlB,EAAK+D,EAASC,MAIjC,OAAOJ,EAaLA,EAAkBA,EAAgBpD,KAChCqD,EAGAA,GACEA,KA+GV,SAASL,EAAoBvC,EAAUY,GACrC,IAAIX,EAASD,EAASzO,SAASqP,EAAQX,QACvC,GAAIA,IAAW5D,EAAW,CAKxB,GAFAuE,EAAQZ,SAAW,KAEI,UAAnBY,EAAQX,OAAoB,CAC9B,GAAID,EAASzO,SAAS2R,SAGpBtC,EAAQX,OAAS,SACjBW,EAAQ7B,IAAM1C,EACdkG,EAAoBvC,EAAUY,GAEP,UAAnBA,EAAQX,QAGV,OAAOjC,EAIX4C,EAAQX,OAAS,QACjBW,EAAQ7B,IAAM,IAAItP,UAChB,kDAGJ,OAAOuO,EAGT,IAAIgD,EAASwB,EAASvC,EAAQD,EAASzO,SAAUqP,EAAQ7B,KAEzD,GAAoB,UAAhBiC,EAAO9N,KAIT,OAHA0N,EAAQX,OAAS,QACjBW,EAAQ7B,IAAMiC,EAAOjC,IACrB6B,EAAQZ,SAAW,KACZhC,EAGT,IAAImF,EAAOnC,EAAOjC,IAElB,OAAMoE,EAOFA,EAAK1G,MAGPmE,EAAQZ,EAAS+B,YAAcoB,EAAK3U,MAGpCoS,EAAQpE,KAAOwD,EAASgC,QAQD,WAAnBpB,EAAQX,SACVW,EAAQX,OAAS,OACjBW,EAAQ7B,IAAM1C,GAUlBuE,EAAQZ,SAAW,KACZhC,GANEmF,GA3BPvC,EAAQX,OAAS,QACjBW,EAAQ7B,IAAM,IAAItP,UAAU,oCAC5BmR,EAAQZ,SAAW,KACZhC,GAoDX,SAASoF,EAAaC,GACpB,IAAIpC,EAAQ,CAAEC,OAAQmC,EAAK,IAEvB,KAAKA,IACPpC,EAAMI,SAAWgC,EAAK,IAGpB,KAAKA,IACPpC,EAAMK,WAAa+B,EAAK,GACxBpC,EAAMS,SAAW2B,EAAK,IAGxB1R,KAAKuO,WAAW7J,KAAK4K,GAGvB,SAASd,EAAcc,GACrB,IAAID,EAASC,EAAMR,YAAc,GACjCO,EAAO9N,KAAO,gBACP8N,EAAOjC,IACdkC,EAAMR,WAAaO,EAGrB,SAASrB,EAAQL,GAIf3N,KAAKuO,WAAa,CAAC,CAAEgB,OAAQ,SAC7B5B,EAAY1H,QAAQwL,EAAczR,MAClCA,KAAKiO,OAAM,GA8Bb,SAASxB,EAAO0D,GACd,GAAIA,EAAU,CACZ,IAAIwB,EAAiBxB,EAASzE,GAC9B,GAAIiG,EACF,OAAOA,EAAe5V,KAAKoU,GAG7B,GAA6B,mBAAlBA,EAAStF,KAClB,OAAOsF,EAGT,IAAKzB,MAAMyB,EAASjS,QAAS,CAC3B,IAAItC,GAAK,EAAGiP,EAAO,SAASA,IAC1B,OAASjP,EAAIuU,EAASjS,QACpB,GAAIsN,EAAOzP,KAAKoU,EAAUvU,GAGxB,OAFAiP,EAAKhO,MAAQsT,EAASvU,GACtBiP,EAAKC,MAAO,EACLD,EAOX,OAHAA,EAAKhO,MAAQ6N,EACbG,EAAKC,MAAO,EAELD,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM6F,GAIjB,SAASA,IACP,MAAO,CAAE7T,MAAO6N,EAAWI,MAAM,IAxfpC,CAssBC,WACE,OAAO9K,MAAyB,iBAATtB,MAAqBA,KAD9C,IAEQuM,SAAS,cAATA,K,isFC/sBN2G,EAAcpW,OAAOoW,YACrBC,EAAkBrW,OAAOqW,gBACzBC,EAAStW,OAAOsW,OAEL,GACb,gBAAgBC,GACdH,EAAcG,GAEhB,kBACE,OAAOH,GAET,oBAAoBI,GAClBH,EAAkBG,GAEpB,sBACE,OAAOH,GAET,WAAWxW,GACTyW,EAASzW,GAEX,aACE,OAAOyW,I,gBCmMIG,EA/MA,CASbC,WAAY,4BAMZC,SAAU,0BAOVC,oBAAqB,oCAMrBC,WAAY,4BAMZC,WAAY,4BAMZC,YAAa,6BAMbC,mBAAoB,mCAMpBC,YAAa,6BAUbC,YAAa,6BAObC,mBAAoB,mCAKpBC,UAAW,2BAKXC,WAAY,4BAKZC,eAAgB,+BAMhBC,YAAa,6BAMbC,aAAc,8BAMdC,YAAa,6BAMbC,IAAK,sBAKLC,WAAY,4BAKZC,kBAAmB,kCAKnBC,yBAA0B,wCAK1BC,iBAAkB,iCAUlBC,SAAU,0BAMVC,OAAQ,wBAMRC,UAAW,2BASXC,kBAAmB,mCAKnBC,qBAAsB,sCAKtBC,sBAAuB,uCAKvBC,oBAAqB,qCAKrBC,iBAAkB,kCAKlBC,aAAc,8BAKdC,aAAc,8BAKdC,4BAA6B,2CAK7BC,oBAAqB,oCAKrBC,kBAAmB,oCC3MN,SAASC,EAAaC,EAAI9S,GAAqB,IACxD+S,EADyCC,EAAe,uDAAN,KActD,MAVkC,mBAAvB/Y,OAAOgZ,YAChBF,EAAQ,IAAIE,YAAYjT,EAAM,CAC5BgT,SACAE,YAAY,KAGdH,EAAQ1S,SAAS8S,YAAY,gBACvBC,gBAAgBpT,GAAM,GAAM,EAAMgT,GAGnCF,EAAGO,cAAcN,GCfX,SAASO,EAAYC,GAClC,OAAIA,aAAsCC,YACjCD,EAGFE,GAAaC,oBAAoBH,GCd1C,IAKeI,EALK,CAClBC,cAAe,EACfC,eAAgB,GCCVD,EAAkCD,EAAlCC,cAAeC,EAAmBF,EAAnBE,eAUR,SAASC,EAAcC,EAAiBC,EAAeC,GAAM,IAEtEC,EADIC,EAAkBC,GAAU,gBAA5BD,cAGR,OAAQA,EAAcE,WACpB,KAAKT,EACHM,EAAgB,EAEhB,MAEF,KAAKL,EACHK,EAAgB,EAChB,MAEF,QACE,MAAM,IAAItQ,MAAJ,iCAAoCuQ,EAAcE,YAI5DN,EAAgBO,YAAYN,GAAiB,CAC3CO,OAAQ,IAAIC,YAAYP,EAAOC,GAC/BO,YAAa,GACbC,SAAU,GACVC,mBAAoB,EACpBC,cAAe,EACfC,eAAgB,GAChBC,KAAM,GACNC,KAAM,IC5BV,SAASC,IACP,IAAIC,EAAY,GAiChB,SAASC,EAAoBC,EAASC,EAAUC,IAEJ,IAAtCJ,EAAU/Y,eAAeiZ,KAC3BF,EAAUE,GAAW,IAGvB,IAAMG,EAAmBL,EAAUE,IAGe,IAA9CG,EAAiBpZ,eAAekZ,KAClCE,EAAiBF,GAAY,CAC3BC,KAAM,KAIOC,EAAiBF,GAGzBC,KAAKlS,KAAKkS,GAgBrB,SAASE,EAAoBJ,EAASC,GAEpC,IAA0C,IAAtCH,EAAU/Y,eAAeiZ,GAA7B,CAIA,IAAMG,EAAmBL,EAAUE,GAGnC,IAAkD,IAA9CG,EAAiBpZ,eAAekZ,GAIpC,OAAOE,EAAiBF,IAa1B,SAASI,EAAsBL,IACa,IAAtCF,EAAU/Y,eAAeiZ,WAItBF,EAAUE,GAGnB,MAAO,CACLja,IAhDF,SAA6Bua,EAASL,GACpC,IAAMM,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAG9D,GAAKC,EAAeG,MAIpB,OAAON,EAAoBG,EAAeG,MAAMV,QAASC,IAyCzDU,IAhFF,SAA6BL,EAASL,EAAUC,GAC9C,IAAMK,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAGzDC,EAAeG,OAGpBX,EAAoBQ,EAAeG,MAAMV,QAASC,EAAUC,IA0E5DU,MApBF,SAA+BN,GAC7B,IAAMC,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAEzDC,EAAeG,OAGpBL,EAAsBE,EAAeG,MAAMV,UAe3CI,sBACAL,sBACAM,wBACAQ,qBAvGF,SAA8Bb,GAC5B,OAAOF,EAAUE,IAuGjBc,wBApGF,SAAiCd,EAASG,GACxCL,EAAUE,GAAWG,GAoGrBY,cAjGF,WACE,OAAOjB,GAiGPkB,iBA9FF,SAA0BC,GACxBnB,EAAYmB,GA8FZnB,aAMJ,IAAMoB,EAAwCrB,ICtH9C,SAASsB,EAA2Bb,GAClC,IAAMC,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAQ9D,YAJwCtM,IAApCuM,EAAea,mBACjBb,EAAea,iBAAmBF,GAG7BX,EAAea,iBAcxB,SAASC,EAAaf,EAASL,EAAUqB,GACdH,EAA2Bb,GAEnCK,IAAIL,EAASL,EAAUqB,GASxC5D,EAAa4C,EAPK/E,EAAOyB,kBACP,CAChBiD,WACAK,UACAgB,oBAkBJ,SAASC,EAAajB,EAASL,GAG7B,OAFyBkB,EAA2Bb,GAE5Bva,IAAIua,EAASL,GAavC,SAASuB,EAAgBlB,EAASL,EAAUC,GAC1C,IACMuB,EADmBN,EAA2Bb,GAClBva,IAAIua,EAASL,GAE/C,GAAKwB,GAAaA,EAASvB,MAASuB,EAASvB,KAAK1Y,OAAlD,CAOA,IAFA,IAAIka,GAAe,EAEVxc,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IACpCuc,EAASvB,KAAKhb,KAAOgb,IACvBwB,EAAcxc,GAIlB,IAAqB,IAAjBwc,EACFD,EAASvB,KAAKrW,OAAO6X,EAAa,GASlChE,EAAa4C,EAPK/E,EAAO4B,oBACP,CAChB8C,WACAK,UACAgB,gBAAiBpB,KAiBvB,SAASyB,EAAerB,EAASL,GAC/B,IACMwB,EADmBN,EAA2Bb,GAClBva,IAAIua,EAASL,QAG9BjM,IAAbyN,IACFA,EAASvB,KAAO,IAapB,SAAS0B,EAA2BtB,EAASc,GACpBZ,EAAStF,YAAYuF,kBAAkBH,GAE/Cc,iBAAmBA,E,WC3I9BS,EAAa1Y,YADA,oBA2BZ,IAAM2Y,EAAY,SAAAC,GACvB,IAAM/V,EAAM6V,EAAWhU,OAAOkU,GAE9B,MAAO,CACL/V,MAEAgW,KAA6ChW,EAE7CzB,WAAOe,IASE0D,EAAS,eAAC+S,EAAD,iEA5CH,mBA4CG,aAA+B5Y,IAAS6F,OAAO+S,IAOxDpT,EAAU,kBAAMxF,IAASwF,WC/CvBoL,EALD,CACZkI,OAAQ,GACRC,eAAgB,ICIZC,EAASL,EAAU,6CCmHzB,SAASM,EAA0B9B,GAA0C,IAAjC+B,EAAiC,uDAAZ,WACvDrD,EAAkBC,GAAU,gBAA5BD,cAGFsD,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAAL,CAIA,IAAM4D,EAAsB5D,EAAgB4D,oBACtCC,EAAa7D,EAAgBO,YAAYqD,GAE/C,OAAQH,GACN,IAAK,WACHI,EAAWjD,qBAEPiD,EAAWjD,mBAAqBR,EAAc0D,sBAChDD,EAAWjD,mBAAqB,GAElC,MACF,IAAK,WACHiD,EAAWjD,qBAEPiD,EAAWjD,oBAAsB,IACnCiD,EAAWjD,mBAAqBR,EAAc0D,uBC/ItD,IAAMP,EAASL,EAAU,sDCAzB,IAAMK,EAASL,EAAU,mDAWV,SAASa,EAAevE,GACrC,IAAMkC,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAAMuC,EAAatB,EAAajB,EAAS,SAEzC,GAAKuC,EAAL,CAQA,IAKI1D,EACAqD,EANEM,EAAYD,EAAW3C,KAAK,GAE5BoC,EAAeQ,EAAUP,SAAS,GAClC3D,EAAkB7E,EAAMkI,OAAOK,GAUrC,OALI1D,IACFO,EAAcP,EAAgBO,YAC9BqD,EAAsB5D,EAAgB4D,qBAGjC,CACLrD,cACAqD,sBACAO,oBAAqBD,EAAUC,qBAvB/BZ,EAAO5X,MACL,kGAoCC,SAASyY,EAAc5E,EAA4BS,GAAe,MAC1B8D,EAC3CvE,GADMe,EAD+D,EAC/DA,YAAaqD,EADkD,EAClDA,oBAOrB,OAAOrD,EAHPN,OACoB7K,IAAlB6K,EAA8BA,EAAgB2D,G,IC/D1C/D,EAAkCD,EAAlCC,cAAeC,EAAmBF,EAAnBE,eAcvB,SAASuE,EAAmB7E,EAA4BS,GACtD,IAAMyB,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAHqE,IAO7DnB,EAAgBwD,EAAerC,GAA/BnB,YAER,IAAKA,EACH,MAAO,GAV4D,IAejEtU,EACAkU,EAHIC,EAAkBC,GAAU,gBAA5BD,cAKR,OAAQA,EAAcE,WACpB,KAAKT,EACH5T,EAAO,cACPkU,EAAgB,IAEhB,MAEF,KAAKL,EACH7T,EAAO,eACPkU,EAAgB,IAChB,MAEF,QACE,MAAM,IAAItQ,MAAJ,iCAAoCuQ,EAAcE,YAG5D,IAAMgD,EAAiBnI,EAAMmI,eAE7B,QAAsBlO,IAAlB6K,EAA6B,CAC/B,IAAM4D,EAAatD,EAAYN,GAE/B,OAAI4D,EACK,CACL5D,gBACAE,gBACAlU,OACAuU,OAAQqD,EAAWrD,OACnB8D,SAAUhB,EAAeO,EAAWhD,qBAIxC,EAKF,IAFA,IAAM0D,EAAkB,GAEfje,EAAI,EAAGA,EAAIia,EAAY3X,OAAQtC,IAAK,CAC3C,IAAMud,EAAatD,EAAYja,GAE3Bud,GACFU,EAAgBnV,KAAK,CACnB6Q,cAAe3Z,EACf6Z,cAAe,EACfK,OAAQqD,EAAWrD,OACnB8D,SAAUhB,EAAeO,EAAWhD,iBAK1C,OAAO0D,GCpFM,SAASC,EAAuBC,GAO7C,IANA,IACMna,EADa,IAAIoa,IAAID,GACCtN,SAEtBwN,EAAqB,GACvBnP,GAAO,GAEHA,GAAM,CACZ,IAAMD,EAAOjL,EAASiL,QAEtBC,EAAOD,EAAKC,OAGVmP,EAAmBvV,KAAKmG,EAAKhO,OAIjC,OAAOod,E,oBCdM,SAASC,GACtBC,EACAJ,EACAK,GAEIL,EAAUI,KAAgBC,IAC5BL,EAAUI,GAAc,GCD5B,SAASE,GACPC,EACAP,EACAK,EACAG,GAEA,IADAC,EACA,wDACMC,EAAgB,SAACC,EAAGnR,GAAJ,OAAUA,EAAIgR,EAAUG,GAE9CJ,EAAarU,SAAQ,SAAA0U,GACnB,IAAMC,EAAUH,EAAa,WAAb,MAAiBE,IAE7BH,EACFN,GAAoBU,EAASb,EAAWK,GAExCL,EAAUa,GAAWR,KCfZ,SAASS,GACtBC,EACAC,EACAC,EACAC,GAQA,IANA,IAAMC,EAAYJ,EAAIvG,OACdwF,EAA4BgB,EAA5BhB,UAAWK,EAAiBW,EAAjBX,aACXhD,EAAU8D,EAAV9D,MACA+D,EAAkB/D,EAAlB+D,MAAOC,EAAWhE,EAAXgE,OAGNxf,EAAI,EAAGA,EAAIuf,EAAOvf,IACzB,IAAK,IAAIkH,EAAI,EAAGA,EAAIkY,EAAQ,GAAIlY,IAC9BoX,GAAoBpX,EAAIqY,EAAQvf,EAAGme,EAAWK,GAKlD,IAAK,IAAIxe,EAAI,EAAGA,EAAIof,EAAQ,GAAIpf,IAC9B,IAAK,IAAIkH,EAAIkY,EAAQ,GAAIlY,EAAImY,EAAY,GAAInY,IAC3CoX,GAAoBpX,EAAIqY,EAAQvf,EAAGme,EAAWK,GAKlD,IAAK,IAAIxe,EAAIqf,EAAY,GAAIrf,EAAIuf,EAAOvf,IACtC,IAAK,IAAIkH,EAAIkY,EAAQ,GAAIlY,EAAImY,EAAY,GAAInY,IAC3CoX,GAAoBpX,EAAIqY,EAAQvf,EAAGme,EAAWK,GAKlD,IAAK,IAAIxe,EAAI,EAAGA,EAAIuf,EAAOvf,IACzB,IAAK,IAAIkH,EAAImY,EAAY,GAAInY,EAAIsY,EAAQtY,IACvCoX,GAAoBpX,EAAIqY,EAAQvf,EAAGme,EAAWK,G,uBCtCrC,SAASiB,GAAclB,EAAYJ,EAAWK,GAC3D,OAAOL,EAAUI,KAAgBC,ECLpB5B,EAAU,mDAazB,SAAS8C,GACPR,EACAC,EACAQ,EACAP,EACAC,GAEA,IADAO,EACA,uDADkB,SAEVL,EAAUL,EAAIvG,OAAO6C,MAArB+D,MACApB,EAA4BgB,EAA5BhB,UAAWK,EAAiBW,EAAjBX,aAFnB,OAGqBY,EAHrB,GAGOS,EAHP,KAGaC,EAHb,YAIqBT,EAJrB,GAIOU,EAJP,KAIaC,EAJb,KAMwB,YAApBJ,GACFX,GAAwBC,EAAKC,EAAeC,EAASC,GAGvD,IAAK,IAAIP,EAAIe,EAAMf,EAAIiB,EAAMjB,IAC3B,IAAK,IAAInR,EAAImS,EAAMnS,EAAIqS,EAAMrS,IAAK,CAChC,IAAM4Q,EAAa5Q,EAAI4R,EAAQT,EAK7BW,GAAclB,EAAYJ,EAAWK,IACrCmB,EAAa,CACXb,IACAnR,QAGFwQ,EAAUI,GAAc,IAiBzB,SAAS0B,GACdf,EACAC,EACAQ,EACAP,EACAC,GAEAK,GAAWR,EAAKC,EAAeQ,EAAcP,EAASC,EAAa,UAc9D,SAASa,GACdhB,EACAC,EACAQ,EACAP,EACAC,GAEAK,GACER,EACAC,GACA,SAAAJ,GAAK,OAAKY,EAAaZ,KACvBK,EACAC,EACA,WCzFW,SAASc,GACtBjB,EACAC,EACAC,EACAC,GAMA,IALA,IACQlB,EAA4BgB,EAA5BhB,UAAWK,EAAiBW,EAAjBX,aADnB,EAE0BU,EAAIvG,OAAO6C,MAA7B+D,EAFR,EAEQA,MAAOC,EAFf,EAEeA,OAGNxf,EAAI,EAAGA,EAAIuf,EAAOvf,IACzB,IAAK,IAAIkH,EAAI,EAAGA,EAAIkY,EAAQ,GAAIlY,IAC9BiX,EAAUjX,EAAIqY,EAAQvf,GAAKwe,EAK/B,IAAK,IAAIxe,EAAI,EAAGA,EAAIof,EAAQ,GAAIpf,IAC9B,IAAK,IAAIkH,EAAIkY,EAAQ,GAAIlY,EAAImY,EAAY,GAAInY,IAC3CiX,EAAUjX,EAAIqY,EAAQvf,GAAKwe,EAK/B,IAAK,IAAIxe,EAAIqf,EAAY,GAAIrf,EAAIuf,EAAOvf,IACtC,IAAK,IAAIkH,EAAIkY,EAAQ,GAAIlY,EAAImY,EAAY,GAAInY,IAC3CiX,EAAUjX,EAAIqY,EAAQvf,GAAKwe,EAK/B,IAAK,IAAIxe,EAAI,EAAGA,EAAIuf,EAAOvf,IACzB,IAAK,IAAIkH,EAAImY,EAAY,GAAInY,EAAIsY,EAAQtY,IACvCiX,EAAUjX,EAAIqY,EAAQvf,GAAKwe,ECxCjC,IAAMvB,GAASL,EAAU,kDAazB,SAASwD,GACPlB,EACAC,EACAQ,EACAP,EACAC,GAEA,IADAO,EACA,uDADkB,SAEVzB,EAA4BgB,EAA5BhB,UAAWK,EAAiBW,EAAjBX,aAEnB,QAAkB1P,IAAdqP,QAA4CrP,IAAjB0P,EAA/B,CAHA,IAWQe,EAAUL,EAAIvG,OAAO6C,MAArB+D,MAXR,OAYqBH,EAZrB,GAYOS,EAZP,KAYaC,EAZb,YAaqBT,EAbrB,GAaOU,EAbP,KAaaC,EAbb,KAewB,YAApBJ,GACFO,GAAuBjB,EAAKC,EAAeC,EAASC,GAGtD,IAAK,IAAIP,EAAIe,EAAMf,EAAIiB,EAAMjB,IAC3B,IAAK,IAAInR,EAAImS,EAAMnS,EAAIqS,EAAMrS,IAAK,CAChC,IAAM4Q,EAAa5Q,EAAI4R,EAAQT,EAK7Ba,EAAa,CACXb,IACAnR,QAGFwQ,EAAUI,GAAcC,SA3B5BvB,GAAO5X,MAAP,gFA4CG,SAASgb,GACdnB,EACAC,EACAQ,EACAP,EACAC,GAEAe,GAAUlB,EAAKC,EAAeQ,EAAcP,EAASC,EAAa,UAc7D,SAASiB,GACdpB,EACAC,EACAQ,EACAP,EACAC,GAEAe,GACElB,EACAC,GACA,SAAAJ,GAAK,OAAKY,EAAaZ,KACvBK,EACAC,EACA,WCtFW,gBAAS7e,EAAQ+f,GAAoB,IAAdvS,EAAc,uDAAJ,GACxCwS,EAAUxS,EAAQwS,SAAW,aAC7BC,EAAazS,EAAQyS,YAAc,aACnCC,EAAS1S,EAAQ0S,QAAUC,GAC3BC,EAAY5S,EAAQ4S,YAAa,EACjCC,EAAYhgB,EAAI0f,GAChBO,EAAeC,IACfvX,EAAQ,GACRwX,EAAU,GACVC,EAAS,GACTC,EAAS,GAIf,IAFA1X,EAAMV,KAAK,CAAEqY,YAAaZ,IAEnB/W,EAAMlH,OAAS,GACpB8e,EAAM5X,EAAM2I,OAGd,MAAO,CACL6O,UACAK,WAAYA,KAGd,SAASD,EAAME,GACb,IAAMC,EAAUD,EAAIH,YACdK,EAAWF,EAAIG,aAEjBC,EAAQH,KAGZI,EAAcJ,GAEVK,EAAOL,IACTM,EAAcN,GACdO,EAAaP,IAEbQ,EAAeP,IAInB,SAASE,EAAQngB,GACf,OAAuB,IAAhB0f,EAAO1f,GAGhB,SAASogB,EAAcpgB,GACrB0f,EAAO1f,IAAO,EAGhB,SAASqgB,EAAOL,GACd,IAAMS,EAAOC,EAAOphB,EAAK,CAAC0gB,IAE1B,OAAOU,EAAOvB,EAAQ,CAACsB,EAAMnB,IAG/B,SAASgB,EAAcN,GACrBP,EAAQlY,KAAKyY,GACbf,EAAO,WAAP,MAAWe,IAGb,SAASQ,EAAeP,GACtBN,EAAOM,GAAYA,EACnBf,EAAU,WAAV,MAAce,IAGhB,SAASM,EAAaP,GACpB,IAAK,IAAIvhB,EAAI,EAAGA,EAAI8gB,EAAaxe,OAAQtC,GAAK,EAAG,CAI/C,IAHA,IAAMkiB,EAAOpB,EAAa9gB,GACpBmiB,EAAWZ,EAAQxO,MAAM,GAEtB7L,EAAI,EAAGA,EAAIqa,EAAQjf,OAAQ4E,GAAK,EACvCib,EAASjb,IAAMgb,EAAKhb,GAGtBsC,EAAMV,KAAK,CACTqY,YAAagB,EACbV,aAAcF,KAKpB,SAAS1gB,EAAI0gB,GACX,OAAO/gB,EAAM,WAAN,MAAU+gB,IAGnB,SAASU,EAAOG,EAAGje,GACjB,IACE,OAAOie,EAAC,WAAD,MAAKje,IACZ,MAAOkB,GACP,QAIJ,SAAS0b,IAGP,OAFqBsB,EAAQ9B,EAAKje,QAEdggB,QAAO,SAASJ,GAClC,IAAMK,EAAQC,GAAeN,GAE7B,OAAiB,IAAVK,IAA0B,IAAVA,GAAe3B,MAI1C,SAASyB,EAAQ/f,GASf,IARA,IAAMmgB,EAAQ,GAERC,EAAc,SAASC,GAC3B,OAAOA,EAAO5Y,MAAM,IAAIJ,KAAI,SAAStJ,GACnC,OAAOmG,SAASnG,EAAG,IAAM,MAIpBL,EAAI,EAAGA,EAAI2H,KAAKib,IAAI,EAAGtgB,GAAStC,GAAK,EAAG,CAC/C,IAAM2iB,EAASE,GAAK7iB,EAAEoJ,SAAS,GAAI,IAAK9G,GAExCmgB,EAAM3Z,KAAK4Z,EAAYC,IAGzB,OAAOF,EAGT,SAASpB,IACP,IAAMzV,EAAQ,GAEd,IAAK,IAAMrK,KAAO2f,EACZA,EAAOrf,eAAeN,IACxBqK,EAAMvD,QAAQ6Y,EAAO3f,IAIzB,OAAOqK,IAIX,SAAS+U,GAAcmC,EAAGC,GACxB,OAAOD,IAAMC,EAGf,SAASP,GAAe5W,GAGtB,IAFA,IAAI2W,EAAQ,EAEHviB,EAAI,EAAGA,EAAI4L,EAAMtJ,OAAQtC,GAAK,EACpB,IAAb4L,EAAM5L,KACRuiB,GAAS,GAIb,OAAOA,EAGT,SAASM,GAAKF,EAAQK,EAAW1gB,GAI/B,OAHc,IAAIyJ,MAAMzJ,EAAS,GACfuH,KAAKmZ,GAETL,GAAQ5P,OAAOzQ,GCnKhB,SAAS2gB,GAAgBC,EAAaC,GAAW,IAExDC,GAASC,EADM/H,EAASrF,gBAAgB8I,MAAtCsE,UACgBH,EAAaC,GAErC,MAAO,CACLG,KAAM3b,KAAK4b,MAAM5b,KAAK6b,IAAIN,EAAYpE,EAAIsE,EAAQD,EAAUrE,IAC5D2E,IAAK9b,KAAK4b,MAAM5b,KAAK6b,IAAIN,EAAYvV,EAAIyV,EAAQD,EAAUxV,IAC3D4R,MAAgB,EAAT6D,EACP5D,OAAiB,EAAT4D,GCfG,SAASM,GAA2BxE,GAAK,IAC9CyE,EAAYzE,EAAIvG,OAAhBgL,QAD8C,EAEHzE,EAAIvG,OAAO6C,MAA/CoI,EAFuC,EAE9CrE,MAA2BsE,EAFmB,EAE3BrE,OACrBsE,EAAoBb,GAAgBU,EAAQI,MAAOJ,EAAQK,KAE7DjE,EAAO+D,EAAkBvE,MAAQuE,EAAkBR,KACnDzD,EAAOiE,EAAkBR,KACzBtD,EAAO8D,EAAkBL,IAAMK,EAAkBtE,OACjDM,EAAOgE,EAAkBL,IAY7B,OAVA5D,EAAOlY,KAAK4b,MAAM1D,GAClBC,EAAOnY,KAAK4b,MAAMzD,GAClBC,EAAOpY,KAAK4b,MAAMxD,GAClBC,EAAOrY,KAAK4b,MAAMvD,GAElBD,EAAOpY,KAAK6b,IAAII,EAAY7D,GAC5BF,EAAOlY,KAAKsc,IAAI,EAAGpE,GACnBG,EAAOrY,KAAK6b,IAAIK,EAAa7D,GAGtB,CAAC,CAACH,EAFTC,EAAOnY,KAAKsc,IAAI,EAAGnE,IAEG,CAACC,EAAMC,ICtBhB,SAASkE,GAA4BC,EAAU3I,GAC5D,IAAIqE,EAAOuE,IACPrE,EAAO,EACPD,EAAOsE,IACPpE,EAAO,EACHT,EAAkB/D,EAAlB+D,MAAOC,EAAWhE,EAAXgE,OAmBf,OAjBA2E,EAAS9Z,SAAQ,SAAAlD,GACf0Y,EAAOlY,KAAK6b,IAAIrc,EAAE,GAAI0Y,GACtBE,EAAOpY,KAAKsc,IAAI9c,EAAE,GAAI4Y,GACtBD,EAAOnY,KAAK6b,IAAIrc,EAAE,GAAI2Y,GACtBE,EAAOrY,KAAKsc,IAAI9c,EAAE,GAAI6Y,MAGxBH,EAAOlY,KAAK4b,MAAM1D,GAClBC,EAAOnY,KAAK4b,MAAMzD,GAClBC,EAAOpY,KAAK4b,MAAMxD,GAClBC,EAAOrY,KAAK4b,MAAMvD,GAElBD,EAAOpY,KAAK6b,IAAIjE,EAAOQ,GACvBF,EAAOlY,KAAKsc,IAAI,EAAGpE,GACnBG,EAAOrY,KAAK6b,IAAIhE,EAAQQ,GACxBF,EAAOnY,KAAKsc,IAAI,EAAGnE,GAEZ,CAAC,CAACD,EAAMC,GAAO,CAACC,EAAMC,ICZhB,SAASqE,GACtBjB,EACAkB,EACA3F,GAGA,IAFA4F,EAEA,uDAFS,EACTC,EACA,uDADS,EAEHC,EAAK9c,KAAK4b,MAAMgB,GAChBG,EAAK/c,KAAK4b,MAAMiB,GAEtB,GAAe,IAAXpB,EACF,MAAO,CAAC,CAACqB,EAAIC,IAMf,IAHA,IAAMC,EAAc,GAChB/f,EAAQ,EAEH+I,GAAKyV,EAAQzV,GAAKyV,EAAQzV,IAAK,CACtC,IAAM6W,EAASE,EAAK/W,EAEpB,KAAI6W,EAASF,GAAQE,EAAS,GAI9B,IAAK,IAAI1F,GAAKsE,EAAQtE,GAAKsE,EAAQtE,IAAK,CACtC,IAAMyF,EAASE,EAAK3F,EAEhByF,GAAU5F,GAAW4F,EAAS,GAI9BzF,EAAIA,EAAInR,EAAIA,EAAIyV,EAASA,IAC3BuB,EAAY/f,KAAW,CAAC6f,EAAK3F,EAAG4F,EAAK/W,KAK3C,OAAOgX,EC/CT,IAAMC,GAAe,EAAIjd,KAAKkd,KAAK,GAE7BC,GAAa,CACjBC,GAAI,CACFjG,EAAG,EACHnR,EAAG,GAELqX,QAAS,CACPlG,EAAG8F,GACHjX,EAAGiX,IAELK,MAAO,CACLnG,EAAG,EACHnR,EAAG,GAELuX,UAAW,CACTpG,EAAG8F,GACHjX,GAAIiX,IAENO,KAAM,CACJrG,EAAG,EACHnR,EAAG,GAELyX,SAAU,CACRtG,GAAI8F,GACJjX,GAAIiX,IAENtB,KAAM,CACJxE,GAAI,EACJnR,EAAG,GAEL0X,OAAQ,CACNvG,GAAI8F,GACJjX,EAAGiX,KAaQ,YAASU,EAAIC,GAQ1B,IAPA,IAAMzjB,EAAI,CACRgd,EAAGwG,EAAGxG,EACNnR,EAAG2X,EAAG3X,GAGF6X,EAAO,GAEND,EAAGzG,IAAMhd,EAAEgd,GAAKyG,EAAG5X,IAAM7L,EAAE6L,GAC5B4X,EAAGzG,IAAMhd,EAAEgd,EAETyG,EAAG5X,EAAI7L,EAAE6L,EACX7L,EAAE6L,IAEF7L,EAAE6L,IAEK4X,EAAG5X,IAAM7L,EAAE6L,EAEhB4X,EAAGzG,EAAIhd,EAAEgd,EACXhd,EAAEgd,IAEFhd,EAAEgd,IAEKyG,EAAG5X,EAAI7L,EAAE6L,EACd4X,EAAGzG,EAAIhd,EAAEgd,EAEX2G,GAAY3jB,EAAGyjB,GAGfG,GAAW5jB,EAAGyjB,GAEPA,EAAGzG,EAAIhd,EAAEgd,EAElB6G,GAAc7jB,EAAGyjB,GAGjBK,GAAa9jB,EAAGyjB,GAGlBC,EAAK1c,KAAK,CACRgW,EAAGhd,EAAEgd,EACLnR,EAAG7L,EAAE6L,IAMT,OAFA6X,EAAKrT,MAEEqT,GAUT,SAASC,GAAY3jB,EAAGyjB,GACtB,IAAMM,EAAaC,GAAoBhkB,EAAGyjB,GAW1C,OAFqBQ,GAND,CAClBC,GAAaH,EAAYf,GAAWC,IACpCiB,GAAaH,EAAYf,GAAWG,OACpCe,GAAaH,EAAYf,GAAWE,YAMpC,KAAK,EACHljB,EAAE6L,IACF,MACF,KAAK,EACH7L,EAAEgd,IACF,MACF,KAAK,EACHhd,EAAE6L,IACF7L,EAAEgd,KAWR,SAAS4G,GAAW5jB,EAAGyjB,GACrB,IAAMM,EAAaC,GAAoBhkB,EAAGyjB,GAW1C,OAFqBQ,GAND,CAClBC,GAAaH,EAAYf,GAAWC,IACpCiB,GAAaH,EAAYf,GAAWxB,MACpC0C,GAAaH,EAAYf,GAAWO,WAMpC,KAAK,EACHvjB,EAAE6L,IACF,MACF,KAAK,EACH7L,EAAEgd,IACF,MACF,KAAK,EACHhd,EAAE6L,IACF7L,EAAEgd,KAWR,SAAS6G,GAAc7jB,EAAGyjB,GACxB,IAAMM,EAAaC,GAAoBhkB,EAAGyjB,GAW1C,OAFqBQ,GAND,CAClBC,GAAaH,EAAYf,GAAWK,MACpCa,GAAaH,EAAYf,GAAWG,OACpCe,GAAaH,EAAYf,GAAWI,cAMpC,KAAK,EACHpjB,EAAE6L,IACF,MACF,KAAK,EACH7L,EAAEgd,IACF,MACF,KAAK,EACHhd,EAAE6L,IACF7L,EAAEgd,KAWR,SAAS8G,GAAa9jB,EAAGyjB,GACvB,IAAMM,EAAaC,GAAoBhkB,EAAGyjB,GAW1C,OAFqBQ,GAND,CAClBC,GAAaH,EAAYf,GAAWK,MACpCa,GAAaH,EAAYf,GAAWxB,MACpC0C,GAAaH,EAAYf,GAAWM,aAMpC,KAAK,EACHtjB,EAAE6L,IACF,MACF,KAAK,EACH7L,EAAEgd,IACF,MACF,KAAK,EACHhd,EAAE6L,IACF7L,EAAEgd,KAWR,SAASgH,GAAoBhkB,EAAGyjB,GAC9B,IAAMlC,EAAW/H,EAASrF,gBAAgB8I,MAAMsE,SAASvhB,EAAGyjB,GAE5D,MAAO,CACLzG,GAAIyG,EAAGzG,EAAIhd,EAAEgd,GAAKuE,EAClB1V,GAAI4X,EAAG5X,EAAI7L,EAAE6L,GAAK0V,GAItB,SAAS2C,GAAalkB,EAAGyjB,GACvB,OAAOzjB,EAAEgd,EAAIyG,EAAGzG,EAAIhd,EAAE6L,EAAI4X,EAAG5X,EAS/B,SAASoY,GAAoCna,GAC3C,IAAIqa,EAAera,EAAM,GAAKA,EAAM,GAAK,EAAI,EAM7C,OAJIA,EAAM,GAAKA,EAAMqa,KACnBA,EAAe,GAGVA,ECzPM,SAASC,GAA6B9K,EAASzB,GAAe,IACnEwM,EAAYpM,GAAU,gBAAtBoM,QAERxM,OACoB7K,IAAlB6K,EACIwM,EAAQ7I,oBAAoBlC,GAC5BzB,EAEN2B,EAAStF,YAAYwC,aAAa4C,EAAS/E,EAAOkC,kBAAmB,CACnEoB,kBCnBW,SAASyM,GACtBC,EACAC,GAIA,IAFA,IAAM7hB,EAAO,GAEJzE,EAAI,EAAGA,EAAIqmB,EAAkB/jB,OAAQtC,IACxCqmB,EAAkBrmB,KAAOsmB,EAAatmB,IACxCyE,EAAKqE,KAAK,CAAC9I,EAAGqmB,EAAkBrmB,GAAIsmB,EAAatmB,KAIrD,OAAOyE,E,ICJD8U,GAAkCD,EAAlCC,cAAeC,GAAmBF,EAAnBE,eA+DvB,SAAS+M,GACPnJ,EACAlD,EACAP,GAKA,IAJAU,EAIA,uDAJW,GACXmM,EAGA,uCAFAC,EAEA,uCACQ3M,GADR,wDAC0BC,GAAU,gBAA5BD,eAEJJ,EAAkB7E,EAAMkI,OAAOK,GAE9B1D,IACH7E,EAAMkI,OAAOK,GAAgB,CAC3BE,oBAAqB3D,EACrBM,YAAa,IAGfP,EAAkB7E,EAAMkI,OAAOK,IAGjC1D,EAAgBO,YAAYN,GAAiB,CAC3CO,SACAE,YAAa,GACbC,WACAC,mBAAoB,EACpBC,cAAe,EACfC,eAAgB,GAChBC,KAAM,GACNC,KAAM,IAMR,IAHA,IAAMN,EAAcV,EAAgBO,YAAYN,GAAeS,YACzDsM,EAAqBxM,EAAOyM,WAAaH,EAEtCxmB,EAAI,EAAGA,EAAIwmB,EAAgBxmB,IAAK,CACvC,IAAIme,OAAS,EAEb,OAAQrE,EAAcE,WACpB,KAAKT,GACH4E,EAAY,IAAIyI,YACd1M,EACAwM,EAAqB1mB,EACrB0mB,EAAqB,GAGvB,MAEF,KAAKlN,GACH2E,EAAY,IAAI0I,aACd3M,EACAwM,EAAqB1mB,EACrB0mB,EAAqB,GAEvB,MAEF,QACE,MAAM,IAAInd,MAAJ,iCAAoCuQ,EAAcE,YAG5D,IAAMqE,EAAqBoI,EACvBA,EAAwBzmB,GACxBke,EAAuBC,GAEvBE,GAAsBA,EAAmByI,MAAK,SAAAC,GAAO,OAAIA,OAC3D3M,EAAYpa,GAAK,CACfme,YACAE,wBCpIR,IAAMpB,GAASL,EAAU,qDAkPzB,SAASoK,GAAmBC,EAAQC,EAAaC,GAC/C,IAAMC,EAAiBH,EAAO3kB,OACxB+kB,EAAMH,EAAYC,GAAYG,qBAIpC,GAAmB,IAAfH,EAGF,OAAOI,GAAsBF,EAFZH,EAAYC,EAAa,GAAGG,sBAGxC,GAAIH,IAAeC,EAAiB,EAGzC,OAAOG,GAAsBF,EAFZH,EAAYC,EAAa,GAAGG,sBAM/C,IAAME,EAAWN,EAAYC,EAAa,GAAGG,qBACvCG,EAAWP,EAAYC,EAAa,GAAGG,qBAE7C,OACGC,GAAsBF,EAAKG,GAC1BD,GAAsBF,EAAKI,IAC7B,EAUJ,SAASF,GAAsBG,EAAMC,GACnC,OAAOhgB,KAAKkd,KACVld,KAAKib,IAAI8E,EAAK,GAAKC,EAAK,GAAI,GAC1BhgB,KAAKib,IAAI8E,EAAK,GAAKC,EAAK,GAAI,GAC5BhgB,KAAKib,IAAI8E,EAAK,GAAKC,EAAK,GAAI,I,IC3R1BpO,GAAkCD,EAAlCC,cAAeC,GAAmBF,EAAnBE,eAYR,SAASoO,GACtBlO,EACAC,EACAkO,EACAvD,EACA3F,GACA,IAMIR,EALIrE,EAAkBC,GAAU,gBAA5BD,cACFgO,EAAcxD,EAAO3F,EAErBoJ,EAAgBD,EAAcD,EAIpC,OAAQ/N,EAAcE,WACpB,KAAKT,GACH4E,EAAY,IAAIyI,YACdlN,EAAgBO,YAAYN,GAAeO,OAC3B,EAAhB6N,EACAD,GAGF,MAEF,KAAKtO,GACH2E,EAAY,IAAI0I,aACdnN,EAAgBO,YAAYN,GAAeO,OAC3B,EAAhB6N,EACAD,GAEF,MAEF,QACE,MAAM,IAAIve,MAAJ,iCAAoCuQ,EAAcE,YAG5DN,EAAgBO,YAAYN,GAAeS,YAAYyN,GAAgB,CACrE1J,YACAE,mBAAoB,I,IC1ChB9E,GAAkCD,EAAlCC,cAAeC,GAAmBF,EAAnBE,eAEjByD,GAASL,EAAU,kDCNV,SAASoL,GAAT,EAAkC1D,EAAM2D,GAAM,IAApBnJ,EAAoB,EAApBA,EAAGnR,EAAiB,EAAjBA,EAC1C,OAAOmR,EAAImJ,GAAQnJ,GAAK,GAAKnR,EAAI2W,GAAQ3W,GAAK,ECFhD,IAAMsP,GAASL,EACb,sECHF,IAAMK,GAASL,EAAU,gDASV,SAASsL,GAAY3N,GAA8B,IAAfyD,EAAe,uDAAJ,GAEtDR,EADoBzD,GAAU,gBAA5BD,cACkC0D,oBAEtCQ,IAgEN,SAA8BA,EAAUR,GAClCQ,EAAS1b,OAASkb,EACpBP,GAAOH,KAAP,8CACyCkB,EAAS1b,OADlD,0DAC0Gkb,EAD1G,+BAGSQ,EAAS1b,OAASkb,GAC3BP,GAAOH,KAAP,wCACmCU,EADnC,gDAC8FQ,EAAS1b,OADvG,6BACkIkb,EADlI,0BArEA2K,CAAqBnK,EAAUR,GAE3BQ,EAAS1b,OAASkb,IACpBQ,EAAW,GAAH,WACHA,GADG,IAEHoK,GAAqB5K,EAAsBQ,EAAS1b,YAK3D0b,EAAWA,GAAYoK,GAAqB5K,GAI9CQ,EAAS3V,QAAQ,CAAC,EAAG,EAAG,EAAG,IAE3BwM,EAAMmI,eAAezC,GAAiByD,EAiCjC,SAASqK,GAAYC,GAC1B,MAAyC,iBAA9BA,EACFzT,EAAMmI,eAAesL,GAGvBzT,EAAMmI,eAAesL,EAA0B/N,eA4BxD,SAAS6N,KAGP,IAHkD,IAAtBG,EAAsB,uDAAL,IACvCC,EAAS,GAENxoB,EAAI,EAAGA,EAAIuoB,EAAgBvoB,IAClCwoB,EAAO1f,KAAK2f,GAAgBC,KAAcC,OAG5C,OAAOH,EAGT,IAAMI,GAAc,MAChBC,GAAW,MAEf,SAASH,KAOP,OANAG,IAAYD,KAEI,MACdC,IAAY,KAGPA,GAGT,IAAI5oB,GAAI,GACF6oB,GAAO,IACPC,GAAO,GACPC,GAAO,IAEb,SAASL,MACP1oB,IAAK+oB,IAEGF,KAGN7oB,GAAI8oB,IAFS9oB,GAAI6oB,KAKnB,OAAO7oB,GAYT,SAASwoB,GAAgBQ,GAAkC,IAKrDnoB,EAAGsO,EAAG2T,EALkBhhB,EAA6B,uDAAzB,EAAG9B,EAAsB,uDAAlB,GAAKipB,EAAa,uDAAL,IAC9C7oB,GAAK,EAAIsH,KAAKC,IAAI,EAAI3H,EAAI,IAAM8B,EAChC+c,EAAIze,GAAK,EAAIsH,KAAKC,IAAMqhB,EAAM,GAAM,EAAK,IACzC7oB,EAAIH,EAAII,EAAI,EAkBlB,OAdI4oB,EAAM,IACPnoB,EAAYT,EAAT+O,EAAY0P,EAATiE,EAAY,GACVkG,EAAM,KACdnoB,EAAYge,EAAT1P,EAAY/O,EAAT0iB,EAAY,GACVkG,EAAM,KACdnoB,EAAY,EAATsO,EAAY/O,EAAT0iB,EAAYjE,GACVmK,EAAM,KACdnoB,EAAY,EAATsO,EAAY0P,EAATiE,EAAY1iB,GACV4oB,EAAM,KACdnoB,EAAYge,EAAT1P,EAAY,EAAT2T,EAAY1iB,GACV4oB,EAAM,MACdnoB,EAAYT,EAAT+O,EAAY,EAAT2T,EAAYjE,GAGd,CAAW,KAAThe,EAAIV,GAAoB,KAATgP,EAAIhP,GAAoB,KAAT2iB,EAAI3iB,GAAU8oB,GCpKvD,IAAMjM,GAASL,EAAU,kD,ICgBVuM,GAjBc,CAC3BC,eAAe,EACfC,YAAY,EACZC,+BAA+B,EAC/BlG,OAAQ,GACRmG,UAAW,EACXC,UAAW,GACXC,UAAW,GACXC,kBAAmB,GACnBC,aAAc,GACdC,qBAAsB,IACtBC,aAAc,EACdC,cAAc,EACdtM,oBAAqB,MACrBxD,UAjBwBV,EAAlBC,eCEF0D,GAASL,EAAU,uCAuDzB,SAASmN,GAAWxM,EAAYyM,EAAYC,GAAc,IAChD7P,EAAgBmD,EAAhBnD,YAER4P,EAAW3f,SAAQ,SAAA6f,GAKjB,IAL8B,IACtBrC,EAAuBqC,EAAvBrC,aAAcpjB,EAASylB,EAATzlB,KAEhB0Z,EADa/D,EAAYyN,GACF1J,UAEpBne,EAAI,EAAGA,EAAIyE,EAAKnC,OAAQtC,IAAK,CACpC,IAAMmqB,EAAQ1lB,EAAKzE,GAEnBme,EAAUgM,EAAM,IAAMA,EAAMF,OCqBnB,QACbpV,QACAiF,iBACAsQ,mBAPF,WACElC,GAAY,IAOZ/B,QAAS,CACP9L,S/B1EJ,SAAqBnB,EAA4BS,EAAe6E,GAC9D,IAAMpD,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAAL,CAWA,GALAC,OACoB7K,IAAlB6K,EACID,EAAgB4D,oBAChB3D,EAEDD,EAAgBO,YAAYN,GAAjC,CAMA,IAAM4D,EAAa7D,EAAgBO,YAAYN,GAE/C,YAAqB7K,IAAjB0P,EACKjB,EAAWlD,SAGbkD,EAAWlD,SAASmE,GAXzBvB,EAAOH,KAAP,0CAA+CnD,EAA/C,oBAXAsD,EAAOH,KAAP,kC+B6DAS,WAAYO,EACZ7D,YAAawD,EACbH,oBCtFJ,SAAgCpE,GAC9B,IAAMkC,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAIL,OAAOA,EAAgB4D,sBDsErBhD,mB9BvFJ,SAA+BpB,EAA4BS,GACzD,IAAMyB,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAI1D,EAAiB,CACnBC,OACoB7K,IAAlB6K,EACID,EAAgB4D,oBAChB3D,EAEN,IAAM4D,EAAa7D,EAAgBO,YAAYN,GAE/C,GAAI4D,EACF,OAAOA,EAAWjD,mBAItB,OAAO,I8B8DL+P,iB7BnFJ,SACEnR,EACAsF,EACA7E,GAEA,GAAK6E,EAAL,CAIA,IAAMpD,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAAL,CAWA,GALAC,OACoB7K,IAAlB6K,EACID,EAAgB4D,oBAChB3D,EAEDD,EAAgBO,YAAYN,GASjC,OAHmBD,EAAgBO,YAAYN,GACnBa,eAAegE,GANzCvB,EAAOH,KAAP,0CAA+CnD,EAA/C,oBAXAsD,EAAOH,KAAP,mC6B8DAwN,WP9EW,SAAuBpR,GACpC,IAAMkC,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAAMpF,EAAcsF,EAAStF,YACvB2H,EAAatB,EAAajB,EAAS,SAEzC,GAAKuC,EAAL,CAQA,IAYIL,EAZEM,EAAYD,EAAW3C,KAAK,GAE5BK,EAAiBrF,EAAYuF,kBAAkBH,GAE/CyC,EAAsBD,EAAUC,oBAtB0B,EAuBtCxC,EAAeG,MAAjC8I,EAvBwD,EAuBxDA,KAAM3F,EAvBkD,EAuBlDA,QAER6H,EAAiB5I,EAAUP,SAAS/a,OACpC8a,EAAeQ,EAAUP,SAAS,GAEpC3D,EAAkB7E,EAAMkI,OAAOK,GAInC,GAAI1D,EAAiB,CAGnB,GAFA4D,EAAsB5D,EAAgB4D,qBAEjC5D,EAAgBO,YAAYqD,GAG/B7D,EAAcC,EAAiB4D,EAFlBgH,EAAO3F,EAAU6H,GAM7B9M,EAAgBO,YAAYqD,GAAqBlD,YAChDyD,IAGF+J,GACElO,EACA4D,EACAO,EACAyG,EACA3F,OAGC,CACLrB,EAAsB,EAEtBzI,EAAMkI,OAAOK,GAAgB,CAC3BE,sBACArD,YAAa,IAOfR,EAJAC,EAAkB7E,EAAMkI,OAAOK,GAIAE,EAFlBgH,EAAO3F,EAAU6H,GAI9BoB,GACElO,EACA4D,EACAO,EACAyG,EACA3F,GAIJ,IAAMpB,EAAa7D,EAAgBO,YAAYqD,GAE/C,MAAO,CACLgN,WAAY/M,EAAWnD,YAAYyD,GACnCN,aACAM,sBACAP,uBAxEAL,GAAO5X,MACL,mGOmEFklB,yBPkBG,SACLhN,EACAsK,EACAvD,EACA3F,GAEA,IAAKpB,EAAWnD,YAAYyN,GAAe,KAMrC1J,EALIrE,EAAkBC,GAAU,gBAA5BD,cACFgO,EAAcxD,EAAO3F,EAErBoJ,EAAgBD,EAAcD,EAIpC,OAAQ/N,EAAcE,WACpB,KAAKT,GACH4E,EAAY,IAAIyI,YACdrJ,EAAWrD,OACK,EAAhB6N,EACAD,GAGF,MAEF,KAAKtO,GACH2E,EAAY,IAAI0I,aACdtJ,EAAWrD,OACK,EAAhB6N,EACAD,GAEF,MAEF,QACE,MAAM,IAAIve,MAAJ,iCAAoCuQ,EAAcE,YAG5DuD,EAAWnD,YAAYyN,GAAgB,CACrC1J,YACAE,mBAAoBH,EAAuBC,IAI/C,OAAOZ,EAAWnD,YAAYyN,IO3D5B2C,cTlFW,SACbtR,EACAsF,EACA7E,GAEA,IAAM3D,EAAcsF,EAAStF,YACvBoF,EAAUsC,EAAWxE,GAE3B,IAAKkC,EACH,OAAO,KAGT,IACMiC,EADahB,EAAajB,EAAS,SACbJ,KAAK,GAAGqC,SAC9BD,EAAeC,EAAS,GAE9B,OAAO,IAAI/H,SAAQ,SAAAC,GACjB,IAAMmE,EAAkB7E,EAAMkI,OAAOK,GAEhC1D,GACHnE,EAAQ,MAJkB,MAgDhC,SAAyB8H,GAOvB,IANA,IAAM6J,EAAc,GAEduD,EADcnP,EAAStF,YACQ0U,SAEjCC,GAAqB,EAEhB3qB,EAAI,EAAGA,EAAIqd,EAAS/a,OAAQtC,IAAK,CACxC,IAAM4qB,EAAmBH,EAAiB5pB,IACxC,mBACAwc,EAASrd,IAGX,IAAK4qB,EAAkB,CACrBD,GAAqB,EACrB,MAGFzD,EAAYpe,KAAK8hB,GAGnB,MAAO,CAAED,qBAAoBzD,eA9DiB2D,CAAgBxN,GAApDsN,EAPoB,EAOpBA,mBAAoBzD,EAPA,EAOAA,YAEvByD,IACH1N,GAAOH,KACL,6EAEFvH,EAAQ,OAGVoE,OACoB7K,IAAlB6K,EACID,EAAgB4D,oBAChB3D,EAMN,IAJA,IAAM4D,EAAa7D,EAAgBO,YAAYN,GAEzCmR,EAAgB,GAEb9qB,EAAI,EAAGA,EAAIqd,EAAS/a,OAAQtC,IACnC8qB,EAAchiB,KAAKkN,EAAY+U,kBAAkB1N,EAASrd,KAG5DsV,QAAQ0V,IAAIF,GAAe9Y,MAAK,SAAAiV,GAC9B,IAAMgE,EAoDL,SACL1N,EACA0J,EACAC,EACA1I,GAeA,IAbA,IAAM0M,EAyER,SACE3N,EACA0J,EACAC,EACA1I,GAMA,IALA,MACgDyI,EAAO,GAA/CkE,EADR,EACQA,gBAAiBC,EADzB,EACyBA,mBACnBhR,EAAcmD,EAAWnD,YACzB8Q,EAAiB,GAEdlrB,EAAI,EAAGA,EAAIoa,EAAY9X,OAAQtC,IAAK,CAC3C,IAAMsqB,EAAalQ,EAAYpa,GAE/B,GAAIsqB,GAAcA,EAAWjM,mBAAmBgN,SAAS7M,GAAe,CAQtE,IAPA,IACM8M,EADiBtE,GAAmBC,EAAQC,EAAalnB,GAC3BmrB,EAAkBC,EAChDG,EAAwBjB,EAAWnM,UACnCqN,EAAiBvE,EAAOjnB,GAAGyrB,eAC3B5a,EAAS,GAGN/O,EAAI,EAAGA,EAAIypB,EAAsBjpB,OAAQR,IAC5CypB,EAAsBzpB,KAAO0c,GAC/B3N,EAAO/H,KAAK0iB,EAAe1pB,IAI/BopB,EAAepiB,KAAK,CAClBwiB,aACAza,YAKN,OAAOqa,EA3GgBQ,CACrBnO,EACA0J,EACAC,EACA1I,GAGEmN,EAAqB,EACrB1H,EAAMiH,EAAe,GAAGra,OAAO,GAC/B2S,EAAMS,EACN2H,EAAS,EAGJ5rB,EAAI,EAAGA,EAAIkrB,EAAe5oB,OAAQtC,IAAK,OACfkrB,EAAelrB,GAAtC6Q,EADsC,EACtCA,OAAQya,EAD8B,EAC9BA,WAEhBM,GAAUN,EAAaza,EAAOvO,OAE9B,IAAIupB,EAAM,EAEVhb,EAAOxG,SAAQ,SAAApJ,GACTA,EAAQgjB,EACVA,EAAMhjB,EACGA,EAAQuiB,IACjBA,EAAMviB,GAGR4qB,GAAO5qB,KAGT0qB,GAAsBE,EAAMP,EAG9BK,GAAsBC,EAKtB,IAHA,IAAIE,EAAsB,EAGjB9rB,EAAI,EAAGA,EAAIkrB,EAAe5oB,OAAQtC,IAAK,OACfkrB,EAAelrB,GAAtC6Q,EADsC,EACtCA,OAAQya,EAD8B,EAC9BA,WAEZS,EAAY,EAEhBlb,EAAOxG,SAAQ,SAAApJ,GACb8qB,GAAapkB,KAAKib,IAAI3hB,EAAQ0qB,EAAoB,MAGpDG,GAAuBC,EAAYT,EAMrC,OAHAQ,GAAuBF,EACvBE,EAAsBnkB,KAAKkd,KAAKiH,GAEzB,CACLF,SACAI,KAAML,EACNM,OAAQH,EACR7H,MACAT,OApHgB0I,CACZ3O,EACA0J,EACAC,EACA1I,GAGFjJ,EAAQ0V,US8BVkB,+BLzFW,SAA2CjN,GACxD,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAkCkE,EAAlClE,QAASI,EAAyB8D,EAAzB9D,MAAO4Q,EAAkB9M,EAAlB8M,cAExB,GAAKA,EAAL,CAMA,IAAMnE,EAAOzM,EAAM+D,MACb+E,EAAO9I,EAAMgE,OAEnB,GAAKpE,EAAL,CAIA,IACMwC,EADavB,EAAajB,EAAS,SACZJ,KAAK,GAC5B6C,EAAsBD,EAAUC,oBAChCT,EAAeQ,EAAUP,SAAS,GAClC3D,EAAkB7E,EAAMkI,OAAOK,GAE/BE,EAAsB5D,EAAgB4D,oBAEtCC,EAAa7D,EAAgBO,YAAYqD,GAE/C,GAAKC,EAAL,CAKA,IAAM+M,EAAa/M,EAAWnD,YAAYyD,GAE1C,GAAKyM,EAAL,CAKA,IAAMnM,EAAYmM,EAAWnM,UAvCgC,EAyC9CiO,EAAc5Q,MAAvBsD,EAzCuD,EAyCvDA,EAAGnR,EAzCoD,EAyCpDA,EAKT,GAAIqa,GAAe,CAAElJ,EAHrBA,EAAInX,KAAK4b,MAAMzE,GAGSnR,EAFxBA,EAAIhG,KAAK4b,MAAM5V,IAEc2W,EAAM2D,GAAO,CACxC,IAAMzJ,EAAeL,EAAUxQ,EAAIsa,EAAOnJ,GAE1C,GAAqB,IAAjBN,EACF,OAGF,MAAO,CACLA,eACAnE,SAAUkD,EAAWlD,SAASmE,aAlDhCvB,GAAOH,KAAK,mCKqFZuP,WHzFW,SACbnT,GAEA,IADAoT,EACA,wDACMlR,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAAMuC,EAAatB,EAAajB,EAAS,SAEzC,GAAKuC,EAAL,CAQA,IAKIjZ,EAJE0Y,EADYO,EAAW3C,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAIrC,GAAI1D,EAAiB,CACnB,IAAM4D,EAAsB5D,EAAgB4D,oBACtCC,EAAa7D,EAAgBO,YAAYqD,GAEzChD,EAAqBiD,EAAWjD,mBAEtC5V,EAAQmQ,EAAMmI,eAAeO,EAAWhD,eAAeD,QAGvD5V,EAAQmQ,EAAMmI,eAAe,GAAG,GAGlC,OAAOsP,EAAO,eACF5nB,EAAM,GADJ,aACWA,EAAM,GADjB,aACwBA,EAAM,GAD9B,0BAEFA,EAAM,GAFJ,aAEWA,EAAM,GAFjB,aAEwBA,EAAM,GAF9B,WA1BZuY,GAAO5X,MACL,mGG4EF4Y,gBAAiBF,EACjBwO,qB3BRJ,SAAiCrT,GAC/B,IAAMkC,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACbJ,KAAK,GAAGqC,SACN,GAExB3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAML,OAAOqE,EAAmB3C,EAFE1B,EAAgB4D,uB2BR1CU,SAAUqK,GACVmE,6BJrEG,SACLlE,EACA9J,GAIA,OAFiB6J,GAAYC,GAEb9J,KIiEhBiO,QAAS,CACPpS,S/BzCJ,SACEnB,GAIA,IAHAS,EAGA,uDAHgB,EAChB6E,EAEA,uCADAnE,EACA,uCACMe,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAAMpF,EAAcsF,EAAStF,YAEvB4H,EADavB,EAAajB,EAAS,SACZJ,KAAK,GAC5BoC,EAAeQ,EAAUP,SAAS,GAEpC3D,EAAkB7E,EAAMkI,OAAOK,GAWnC,GATK1D,IACH7E,EAAMkI,OAAOK,GAAgB,CAC3BzD,gBACAM,YAAa,IAGfP,EAAkB7E,EAAMkI,OAAOK,KAG5B1D,EAAgBO,YAAYN,GAAgB,CAC/C,IAD+C,EACxB3D,EAAYuF,kBAAkBH,GAEZI,MAIzC/B,EAAcC,EAAiBC,EAPgB,EAGvC2K,KAHuC,EAGjC3F,QACSf,EAAUP,SAAS/a,QAMzBoX,EAAgBO,YAAYN,GAEpCU,SAASmE,GAAgBnE,I+BElCqS,qBV1FJ,SACExT,EACAgB,EACAP,GAIA,IAHAU,EAGA,uDAHW,GACXoM,EAEA,uCADAlM,EACA,uDADgB,EAEVa,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAAMuC,EAAatB,EAAajB,EAAS,SACnCoL,EAAiB7I,EAAW3C,KAAK,GAAGqC,SAAS/a,OAGnDikB,GAFqB5I,EAAW3C,KAAK,GAAGqC,SAAS,GAI/CnD,EACAP,EACAU,EACAmM,EACAC,EACAlM,GAGF2L,GAA6B9K,EAASzB,KU+DpCgT,yBAA0BpG,GAC1BqG,4B9B5BJ,SAAqC1T,GACnC,IAAMkC,EAAUsC,EAAWxE,GAEtBkC,GAIL8B,EAA0B9B,EAAS,a8BsBjCyR,4B9BZJ,SAAqC3T,GACnC,IAAMkC,EAAUsC,EAAWxE,GAEtBkC,GAIL8B,EAA0B9B,EAAS,a8BMjCd,mB9BpEJ,SAA+BpB,EAA4BsF,GACzD,IAAMpD,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAAL,CAIA,IAAM4D,EAAsB5D,EAAgB4D,oBACtCC,EAAa7D,EAAgBO,YAAYqD,GAEvCxD,EAAkBC,GAAU,gBAA5BD,cAEJ0E,GAAgB,EAClBA,EAAe,EACNA,EAAe1E,EAAc0D,sBACtCgB,EAAe1E,EAAc0D,qBAG/BD,EAAWjD,mBAAqBkE,K8ByC9BsO,wB7B/CJ,SACE5T,EACAsF,EACA7E,GAEA,GAAK6E,EAAL,CAIA,IAAMpD,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAAL,CAWA,GALAC,OACoB7K,IAAlB6K,EACID,EAAgB4D,oBAChB3D,EAEDD,EAAgBO,YAAYN,GAAjC,CAMA,IACMa,EADad,EAAgBO,YAAYN,GACba,eAIlC,OAFAA,EAAegE,IAAiBhE,EAAegE,IAEvChE,EAAegE,GAVrBvB,EAAOH,KAAP,0CAA+CnD,EAA/C,oBAXAsD,EAAOH,KAAP,mC6B0BAiQ,2BAA4B,SAAAzC,GAC1BA,EAAWjM,mBAAqBH,EAC9BoM,EAAWnM,YAGf6O,cE/GW,SACb9T,EACAsF,EACA7E,GAEA,GAAK6E,EAAL,CAIA,IAAMpD,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAEMgC,EAFaf,EAAajB,EAAS,SACZJ,KAAK,GACHqC,SAAS,GAElC3D,EAAkB7E,EAAMkI,OAAOK,GAErC,GAAK1D,EAAL,CAIAC,OACoB7K,IAAlB6K,EACID,EAAgB4D,oBAChB3D,EAEN,IAAM4D,EAAa7D,EAAgBO,YAAYN,GAE/C,GAAK4D,EAAL,QAKOA,EAAWlD,SAASmE,GAK3B,IAHA,IAAMpE,EAAcmD,EAAWnD,YAGtBpa,EAAI,EAAGA,EAAIoa,EAAY9X,OAAQtC,IAAK,CAC3C,IAAMsqB,EAAalQ,EAAYpa,GAG/B,GAAIsqB,GAAcA,EAAWjM,mBAAmBgN,SAAS7M,GAAe,CACtE,IAAML,EAAYmM,EAAWnM,UAGvB8O,EAAiB3C,EAAWjM,mBAAmBtV,QACnDyV,GAGF8L,EAAWjM,mBAAmB1Z,OAAOsoB,EAAgB,GAGrD,IAAK,IAAInrB,EAAI,EAAGA,EAAIqc,EAAU7b,OAAQR,IAChCqc,EAAUrc,KAAO0c,IACnBL,EAAUrc,GAAK,IAMvBwZ,EAAStF,YAAYkX,YAAY9R,QF+C/B4C,SAAUkK,GACViF,2BJ1FG,SAAuC5P,EAAYhD,GACxDgD,EAAWhD,cAAgBA,GI0FzB6S,+BJvEG,SACL9E,EACA9J,EACA6O,GAEiBhF,GAAYC,GAEpB9J,GAAgB6O,GIiEvB/P,oBCvFJ,SAAgCpE,GAA+C,IAAnBS,EAAmB,uDAAH,EACpEyB,EAAUsC,EAAWxE,GAE3B,GAAKkC,EAAL,CAIA,IAAMpF,EAAcsF,EAAStF,YAEvB4H,EADavB,EAAajB,EAAS,SACZJ,KAAK,GAT2C,EAUtDhF,EAAYuF,kBAAkBH,GACZI,MAEnC5B,EAbuE,EAWrE0K,KAXqE,EAW/D3F,QACSf,EAAUP,SAAS/a,OAEpC8a,EAAeQ,EAAUP,SAAS,GAEpC3D,EAAkB7E,EAAMkI,OAAOK,GAE/B1D,GACFA,EAAgB4D,oBAAsB3D,EAEjCD,EAAgBO,YAAYN,IAC/BF,EAAcC,EAAiBC,EAAeC,KAGhD/E,EAAMkI,OAAOK,GAAgB,CAC3BE,oBAAqB3D,EACrBM,YAAa,IAKfR,EAFAC,EAAkB7E,EAAMkI,OAAOK,GAEAzD,EAAeC,IAGhD5D,EAAYkX,YAAY9R,KDqDtBgI,OGhIW,SAAmBkK,GAAW,IACnCxT,EAAkBC,GAAU,gBAA5BD,cAERA,EAAcsJ,OAASzb,KAAK6b,IAC1B7b,KAAKsc,IAAIqJ,EAAWxT,EAAcyP,WAClCzP,EAAc0P,YH4Hd+D,UD7HJ,SAAmBnS,EAAS4O,EAAYrQ,GACtC,IAAM4D,EAAaO,EAAc1C,EAASzB,GAE1C4D,EAAW9C,KAAK3R,KAAKkhB,GACrBzM,EAAW7C,KAAO,IC0HhBD,KDvHJ,SAAcW,EAASzB,GACrB,IAAM4D,EAAaO,EAAc1C,EAASzB,GAClCc,EAAe8C,EAAf9C,KAAMC,EAAS6C,EAAT7C,KAEd,GAAKD,EAAKnY,OAAV,CAOA,IAAM0nB,EAAavP,EAAKtI,MAGxB4X,GAAWxM,EAAYyM,EAAY,GAGnCtP,EAAK5R,KAAKkhB,GAEV1O,EAAStF,YAAYkX,YAAY9R,QAd/B6B,GAAOH,KAAK,mBCmHZpC,KDlGJ,SAAcU,EAASzB,GACrB,IAAM4D,EAAaO,EAAc1C,EAASzB,GAClCc,EAAe8C,EAAf9C,KAAMC,EAAS6C,EAAT7C,KAEd,GAAKA,EAAKpY,OAAV,CAOA,IAAM0nB,EAAatP,EAAKvI,MAGxB4X,GAAWxM,EAAYyM,EAAY,GAGnCvP,EAAK3R,KAAKkhB,GAEV1O,EAAStF,YAAYkX,YAAY9R,QAd/B6B,GAAOH,KAAK,qBKtCVhD,GAAgB,CACpB0T,SAAU,GACVC,QAAS,CACP3O,EAAG,GACHnR,EAAG,IAEL+f,WAAY,CACV5O,EAAG,EACHnR,EAAG,GAELggB,wBAAyB,sHAgBZ,IACb7T,iBACAqM,QANc,CACdyH,eAAgB,kBAAM9T,KAMtB2S,QAbc,CACdmB,eAAgB,SAAAC,GACdntB,OAAOotB,OAAOhU,GAAe+T,MCZlB,IACb/T,cAToB,CACpBiU,cAAc,EACdC,cAAc,EACdC,uBAAuB,EACvBC,gBAAgB,EAChBC,qBAAqB,ICIVtZ,IAFE+H,EAAU,6BAEJ,CAEnBwR,YAAa,GACbC,wBAAyB,GAEzBC,gBAAiB,GACjBC,MAAO,GACPC,cAAc,EACdC,oBAAqB,KACrBC,mBAAoB,GAEpBC,eAAgB,EAChBC,eAAgB,GAChBC,aAAc,EACdC,4BAA4B,EAC5BC,2BAA2B,EAE3BC,aAAc,OAGH7I,GAAU,CACrB8I,WAAY,kBACVpa,GAAM0Z,MAAMjM,QAAO,SAAA4M,GAAI,OACrBA,EAAKC,0BAA0B9D,SAAS,aAE5C+D,WAAY,kBACVva,GAAM0Z,MAAMjM,QAAO,SAAA4M,GAAI,OACrBA,EAAKC,0BAA0B9D,SAAS,aAE5ChS,oBAAqB,SAAAgW,GAAiB,OACpCxa,GAAMyZ,gBAAgBgB,MACpB,SAAAlU,GAAO,OACLE,EAAStF,YAAYuF,kBAAkBH,GAASmU,OAChDF,OAMKnvB,GAAU,CACrBsvB,gBACAC,UACAC,wBAGK,SAAS3V,GAAU4V,GACxB,OAAOzvB,GAAQyvB,GAGF,QACbzvB,WACA2U,SACAsR,YChDa,YAAS/K,EAAS7a,GAC/B,OAAOsU,GAAM0Z,MAAMe,MACjB,SAAAJ,GAAI,OAAIA,EAAK9T,UAAYA,GAAW8T,EAAK3uB,OAASA,MCXhDmvB,GAAsBxvB,GAAQwvB,oBASpC,SAASE,GAAcxU,EAASyU,GAC9B,GAAKH,GAAoB5V,cAAcoU,eAAvC,CAOA,IAAM4B,EAAaD,EAAUE,wBACvBrC,EAAamC,EAAUnC,WAEvBsB,EAAepvB,OAAOowB,IAAIC,gBAAgBH,GAEhD1U,EAAQlV,MAAMupB,OAAd,eAA+BT,EAA/B,cAAiDtB,EAAjD,UAEA7Y,GAAMma,aAAeA,GAOvB,SAASkB,GAAe9U,GACjBsU,GAAoB5V,cAAcoU,gBAIvCiC,GAAwB/U,EAAS,QAGnC,SAAS+U,GAAwB/U,EAASgV,GACpCvb,GAAMma,cACRpvB,OAAOowB,IAAIK,gBAAgBxb,GAAMma,cAGnCna,GAAMma,aAAe,KACrB5T,EAAQlV,MAAMupB,OAASW,ECtCzB,IAAMV,GAAsB3V,GAAU,uBAChCkD,GAASL,EAAU,qBA0BnB0T,GAA0B,SAC9BlV,EACAmV,EACAviB,EACAwiB,QAGyB1hB,IAArB0hB,GAAkCzkB,MAAMsB,QAAQW,KAClDwiB,EAAmBxiB,EACnBA,EAAU,MAGZ,IAAMkhB,EAAOuB,GAAkBrV,EAASmV,GAEpCrB,IAmQN,SAAgC9T,EAAS8T,EAAMlhB,EAASwiB,GAItDtB,EAAKC,0BAA0B9kB,SAAQ,SAAAqmB,GACrC,QACuB5hB,IAArB0hB,GACAA,EAAiBnF,SAASqF,GAC1B,CACA,IAAMC,EAAgBC,GAAgBF,GAElCC,EACFA,EAAczB,EAAM9T,EAASpN,GAE7BiP,GAAOH,KACL,gDACA4T,OAMsBG,GAAMhc,MAAM0Z,MAAMjM,QAC9C,SAAAphB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,MACFD,EAAEiuB,0BAA0B7sB,OAAS,KAGnB+H,SAAQ,SAAAnJ,GAC5B,IAAI4vB,GAAkC,EAEtC5vB,EAAEiuB,0BAA0B9kB,SAAQ,SAAAqmB,GAC9BxvB,EAAE8M,QAAF,YAAe0iB,EAAf,aACFI,GAAkC,MAIjCA,IACH7T,GAAOnW,IAAI,+BAAgC5F,EAAEX,MAC7CwwB,GAAyB3V,EAASla,EAAEX,UA1StCywB,CAAuB5V,EAAS8T,EAAMlhB,EAASwiB,GAI/CtB,EAAKC,0BAA0B9kB,SAAQ,SAAAqmB,QAEd5hB,IAArB0hB,GACAA,EAAiBnF,SAASqF,GAE1B1iB,EAAQ,KAAD,OAAM0iB,EAAN,YAAiC,EAExC1iB,EAAQ,KAAD,OAAM0iB,EAAN,YAAiC,KAK1ChB,GAAoB5V,cAAcoU,gBAClCgB,EAAKC,0BAA0B9D,SAAS,UAU9C,SAAiCjQ,EAASpN,EAASkhB,GACjD,IAAI+B,EAGFA,EADqB,iBAAZjjB,EACS,CAACA,GAEDA,EAAQijB,gBAGxBA,EAAgB5F,SAAS,KACvB6D,EAAKW,UACPD,GAAcV,EAAK9T,QAAS8T,EAAKW,WACxBX,EAAKgC,kBACdhB,GAAe9U,GD9DrB,SAAyBA,GACvB+U,GAAwB/U,EAAS,WC+D7B+V,CAAgB/V,IAvBhBgW,CAAwBhW,EAASpN,EAASkhB,IAK9CmC,GAAsB,SAAU,KAAMjW,EAASmV,EAAUviB,IAmC3D,IAAMsjB,GAAgB,SAASf,EAAUviB,EAASwiB,GAChDe,GAA2B,SAAUhB,EAAUviB,EAASwiB,GACxDK,GAAMhc,MAAMyZ,gBAAgBjkB,SAAQ,SAAA+Q,GAClCkV,GAAwBlV,EAASmV,EAAUviB,EAASwiB,OAgBlDgB,GAA4BH,GAAsB7vB,KACtD,KACA,WACA,MAcIiwB,GAAkBC,GAAYlwB,KAAK,KAAM,WAAY,MAcrDmwB,GAA2BN,GAAsB7vB,KACrD,KACA,UACA,MAcIowB,GAAiBF,GAAYlwB,KAAK,KAAM,UAAW,MAcnDuvB,GAA2BM,GAAsB7vB,KACrD,KACA,UACA6U,EAAO6B,kBAcH2Z,GAAiBH,GAAYlwB,KACjC,KACA,UACA6U,EAAO6B,kBAgBT,SAASmZ,GAAsBlwB,EAAM2wB,EAAa1W,EAASmV,EAAUviB,GACnE,IA0b6B+jB,EAASC,EA1bhC9C,EAAOuB,GAAkBrV,EAASmV,GAEnCrB,GAMLlhB,EAAUikB,GAAsBjkB,GAM9BjC,MAAMsB,QAAQW,EAAQijB,kBACa,IAAnCjjB,EAAQijB,gBAAgB3uB,QACxByJ,MAAMsB,QAAQ6hB,EAAKlhB,QAAQijB,mBAE3BjjB,EAAQijB,iBAwamBc,EAvazB/jB,EAAQijB,gBAua0Be,EAtalC9C,EAAKlhB,QAAQijB,gBAwaVc,EAAQ1mB,OAAO2mB,GAASE,QAAO,SAACC,EAAK/xB,GAK1C,OAJwB,IAApB+xB,EAAIppB,QAAQ3I,IACd+xB,EAAIrpB,KAAK1I,GAGJ+xB,IACN,MAzaHjD,EAAK/tB,KAAOA,EACZ+tB,EAAKkD,aAAapkB,GAGdkhB,EAAK,GAAD,OAAI/tB,EAAJ,cACN+tB,EAAK,GAAD,OAAI/tB,EAAJ,aAAoBia,EAASpN,GAI/B8jB,GAOFtZ,EAAa4C,EAAS0W,EANQ,CAC5B9jB,UACAuiB,WACA5qB,KAAMmsB,KAnCR7U,GAAOH,KAAK,8CAA+CyT,GA0D/D,SAASmB,GAAYvwB,EAAM2wB,EAAavB,EAAUviB,GAChDujB,GAA2BpwB,EAAMovB,EAAUviB,GAC3C6iB,GAAMhc,MAAMyZ,gBAAgBjkB,SAAQ,SAAA+Q,GAClCiW,GAAsBlwB,EAAM2wB,EAAa1W,EAASmV,EAAUviB,MA6MhE,SAASqkB,GAA8B3B,EAAiBxB,EAAM9T,GAC5D,IAAMkX,EAAsB,KAAH,OAAQ5B,EAAR,UACnB6B,EAAsC1B,GAAMhc,MAAM0Z,MAAMe,MAC5D,SAAApuB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,OACiC,IAAnCD,EAAE8M,QAAQskB,MAGVC,IACFtV,GAAOnW,IACL,gCACAyrB,EAAoChyB,KACpC+xB,GAEFC,EAAoCvkB,QAAQskB,IAAuB,GAIvE,SAASf,GAA2BpwB,EAAMovB,EAAUviB,EAASwiB,GAC3D,GAAKd,GAAoB5V,cAAcmU,sBAAvC,CAKA,IAAMuE,EAAe,CACnBrxB,OACAgD,KAAM,CAACosB,EAAUviB,IAGfwiB,GACFgC,EAAa1pB,KAAK0nB,GAGpBK,GAAMhc,MAAMwZ,wBAAwBvlB,KAAK0pB,GAKvC3B,GAAMhc,MAAMwZ,wBAAwB/rB,OAHF,IAKlCuuB,GAAMhc,MAAMwZ,wBAAwBoE,QAItC,IAAMC,EAAa7B,GAAMhc,MAAMuZ,YAAYmC,GAE3C,GAAKmC,EAQL,GAAa,WAATvxB,EAAmB,CACrB,IAAIwxB,EAiCR,SAAkCpC,EAAUviB,EAASwiB,QAC1B1hB,IAArB0hB,GAAkCzkB,MAAMsB,QAAQW,KAClDwiB,EAAmBxiB,EACnBA,EAAU,MAGZ,IAAM2kB,EAAiB,GACjBD,EAAa7B,GAAMhc,MAAMuZ,YAAYmC,GAE3C,GAAImC,EAAY,CAEd,IAAMxD,EAAO,IAAIwD,EAAWxD,KAAKwD,EAAWrwB,OAE5C6sB,EAAKC,0BAA0B9kB,SAAQ,SAAAqmB,GACrC,QACuB5hB,IAArB0hB,GACAA,EAAiBnF,SAASqF,GAE1B,GAAwB,UAApBA,EAA6B,CAC/B,IAAMkC,EAAmBX,GAAsBjkB,GAC5CijB,gBAGCllB,MAAMsB,QAAQulB,IAAqBA,EAAiBtwB,OAAS,EAC/DswB,EAAiBvoB,SAAQ,SAAAwoB,GAAI,OAC3BF,EAAe7pB,KAAf,UAAuB4nB,EAAvB,YAA0CmC,OAG5C9mB,MAAMsB,QAAQulB,IACc,IAA5BA,EAAiBtwB,QAEjBqwB,EAAe7pB,KAAf,UAAuB4nB,EAAvB,gBAE2B,eAApBA,EACTiC,EAAe7pB,KAAf,UACK4nB,EADL,YACwBxB,EAAKpV,cAAcgZ,gBAG3CH,EAAe7pB,KAAK4nB,MAM5B,OAAOiC,EA7EgBI,CACnBxC,EACAviB,EACAwiB,GAIF9vB,OAAO0J,KAAKymB,GAAMhc,MAAMuZ,aAAa/jB,SAAQ,SAAA9I,GAC3C,IAAM2tB,EAAO2B,GAAMhc,MAAMuZ,YAAY7sB,GAErC2tB,EAAK8D,eAAiB9D,EAAK8D,eAAe1Q,QACxC,SAAAtV,GAAO,OAAK2lB,EAAetH,SAASre,SAKpC2lB,EAAe7L,MAAK,SAAA9Z,GAAO,OAAIA,EAAQqe,SAAS,qBAClDqH,EAAWM,eAAiBN,EAAWM,eAAe1Q,QACpD,SAAAtV,GAAO,OAAKA,EAAQqe,SAAS,YAE/BsH,EAAiBA,EAAerQ,QAC9B,SAAAtV,GAAO,OAAKA,EAAQqe,SAAS,aAIjCqH,EAAWM,eAAiBN,EAAWM,eAAe3nB,OACpDsnB,QAGFD,EAAWM,eAAiB,QArC5B/V,GAAOH,KAAP,4DACuDyT,KAuF3D,IAAMK,GAAkB,CACtBqC,MA9QF,SAAqC/D,EAAM9T,EAASpN,GAClD,IAAMijB,EAAkBgB,GAAsBjkB,GAASijB,gBAIvD,GAFEllB,MAAMsB,QAAQ4jB,IAAoBA,EAAgB3uB,OAAS,EAE7D,CAIA,IAAM4wB,EAAwCrC,GAAMhc,MAAM0Z,MAAMe,MAC9D,SAAApuB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,OAC0B,IAA5BD,EAAE8M,QAAQmlB,eACVpnB,MAAMsB,QAAQnM,EAAE8M,QAAQijB,kBACxB/vB,EAAE8M,QAAQijB,gBAAgBnK,MAAK,SAAA3f,GAAC,OAAI8pB,EAAgB5F,SAASlkB,SAG7D+rB,IAEFA,EAAsCllB,QAAQijB,gBAAkBiC,EAAsCllB,QAAQijB,gBAAgB3O,QAC5H,SAAAuQ,GAAI,OAAK5B,EAAgB5F,SAASwH,MAKuC,IAAzEK,EAAsCllB,QAAQijB,gBAAgB3uB,SAE9D4wB,EAAsCllB,QAAQmlB,eAAgB,MAmPlEC,WAAYf,GAA8B7wB,UAAK,EAAM,cACrD6xB,MAtOF,SAAqCnE,EAAM9T,GACzC,IAAMkY,EAAkBzC,GAAMhc,MAAM0Z,MAAMe,MACxC,SAAApuB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,OAC0B,IAA5BD,EAAE8M,QAAQulB,iBAGRC,EAA0C3C,GAAMhc,MAAM0Z,MAAMe,MAChE,SAAApuB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,OAC+B,IAAjCD,EAAE8M,QAAQylB,oBACwB,IAAlCvyB,EAAE4Y,cAAcgZ,iBAGhBQ,IACFrW,GAAOnW,IACL,2CACAwsB,EAAgB/yB,MAElB+yB,EAAgBtlB,QAAQulB,eAAgB,GAEtCC,IACFvW,GAAOnW,IACL,2CACA0sB,EAAwCjzB,MAE1CizB,EAAwCxlB,QAAQylB,oBAAqB,IA2MvEC,WAAYrB,GAA8B7wB,UAAK,EAAM,cACrDmyB,YAAatB,GAA8B7wB,UAAK,EAAM,eACtDoyB,UAAWvB,GAA8B7wB,UAAK,EAAM,aACpDqyB,WAjMF,SAA0C3E,EAAM9T,GAC9C,IAQIkY,EAREQ,EAAuBjD,GAAMhc,MAAM0Z,MAAMe,MAC7C,SAAApuB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,OAC+B,IAAjCD,EAAE8M,QAAQylB,oBACVvyB,EAAE4Y,cAAcgZ,gBAAkB5D,EAAKpV,cAAcgZ,iBAKhB,IAArC5D,EAAKpV,cAAcgZ,gBACrBQ,EAAkBzC,GAAMhc,MAAM0Z,MAAMe,MAClC,SAAApuB,GAAC,OACCA,EAAEka,UAAYA,GACH,WAAXla,EAAEC,OAC0B,IAA5BD,EAAE8M,QAAQulB,kBAIZO,IACF7W,GAAOnW,IACL,gDACAgtB,EAAqBvzB,MAEvBuzB,EAAqB9lB,QAAQylB,oBAAqB,GAGhDH,IACFrW,GAAOnW,IACL,2CACAwsB,EAAgB/yB,MAElB+yB,EAAgBtlB,QAAQulB,eAAgB,KAmK5C,SAAStB,GAAsBjkB,GAwB7B,OAvBIjC,MAAMsB,QAAQW,GAEhBA,EAAU,CAAEijB,gBAAiBjjB,GACpBA,IAAYtN,OAAOsN,KAG5BA,EAAU,CAAEijB,gBAAiB,CAACjjB,KAI3BA,EAAQnM,eAAe,qBAC1BmM,EAAQijB,gBAAkB,IAGvBllB,MAAMsB,QAAQW,EAAQijB,mBACzBjjB,EAAQijB,gBAAkB,CAACjjB,EAAQijB,kBAIrCjjB,EAAQijB,gBAAkBjjB,EAAQijB,gBAAgB3O,QAChD,SAAA7hB,GAAC,MAAiB,iBAANA,GAAwB,IAANA,KAGzBuN,EChoBM,QACb+lB,gBAnBF,SAAyB3Y,GACvBoW,GAA0BpW,EAAShX,KAAK7D,OAmBxCyzB,gBAVF,SAAyB5Y,GACvBkV,GAAwBlV,EAAShX,KAAK7D,QCQzB,QACbwzB,gBApBF,SAAyB3Y,GACvBoW,GAA0BpW,EAAShX,KAAK7D,OAoBxC0zB,eAXF,SAAwB7Y,GACtBuW,GAAyBvW,EAAShX,KAAK7D,QCV1B,YAAS8S,EAAS8B,GAC/B9B,EAAQrO,OACRmQ,EAAG9B,GACHA,EAAQ6gB,WCfNC,GAAe,EACjBC,GAAc,EAkBhB,IAOeC,GAPG,CAChBC,aAjBF,SAAsB/U,GACpB4U,GAAe5U,GAiBfgV,aAdF,WACE,OAAOJ,IAcPK,eAXF,SAAwBjV,GACtB6U,GAAc7U,GAWdkV,eARF,WACE,OAAOL,KCMM,YAAS/gB,GAA2B,IAAlBrF,EAAkB,uDAAR,GAAImH,EAAI,uCAE/CzQ,EAKEsJ,EALFtJ,MACAgwB,EAIE1mB,EAJF0mB,UACAC,EAGE3mB,EAHF2mB,UACAC,EAEE5mB,EAFF4mB,SAL+C,EAO7C5mB,EADF6mB,uBAN+C,SASjDxhB,EAAQyhB,YACRzhB,EAAQ0hB,YAAcrwB,GAAS2O,EAAQ0hB,YAEvC1hB,EAAQqhB,UACNA,QACe5lB,IAAd4lB,GAA2BL,GAAUE,gBACtClhB,EAAQqhB,UACNE,GACFvhB,EAAQ2hB,YAAYJ,GAGtBzf,EAAG9B,GAECshB,IACFthB,EAAQshB,UAAYA,EACpBthB,EAAQ4hB,QAGNJ,GACFxhB,EAAQ6hB,SAGNN,GACFvhB,EAAQ2hB,YAAY,KClCT,SAASG,GACtB9hB,EACA+H,EACA2I,EACAC,EACAhW,GAEA,IADAonB,EACA,uDADc,QAEd5P,GAAKnS,EAASrF,GAAS,SAAAqF,GACD,UAAhB+hB,IACFrR,EAAQzI,EAAStF,YAAYqf,cAAcja,EAAS2I,GACpDC,EAAM1I,EAAStF,YAAYqf,cAAcja,EAAS4I,IAGpD3Q,EAAQiiB,OAAOvR,EAAMjF,EAAGiF,EAAMpW,GAC9B0F,EAAQkiB,OAAOvR,EAAIlF,EAAGkF,EAAIrW,MChBf,gBACb0F,EACA+H,EACA2I,EACAyR,EACAxnB,GAEA,IADAonB,EACA,uDADc,QAEd5P,GAAKnS,EAASrF,GAAS,SAAAqF,GACD,UAAhB+hB,IACFrR,EAAQzI,EAAStF,YAAYqf,cAAcja,EAAS2I,GACpDyR,EAASA,EAAO7rB,KAAI,SAAA7H,GAAC,OAAIwZ,EAAStF,YAAYqf,cAAcja,EAAStZ,OAEvEuR,EAAQiiB,OAAOvR,EAAMjF,EAAGiF,EAAMpW,GAC9B6nB,EAAOnrB,SAAQ,YAAc,IAAXyU,EAAW,EAAXA,EAAGnR,EAAQ,EAARA,EACnB0F,EAAQkiB,OAAOzW,EAAGnR,UClBT,YAAS0F,EAAS0Q,EAAOC,EAAKtf,EAAOgwB,GAElD,IAEMe,EAAQ9tB,KAAK+tB,MAAM1R,EAAIrW,EAAIoW,EAAMpW,EAAGqW,EAAIlF,EAAIiF,EAAMjF,GAGpD9Q,EAAU,CACZtJ,QACAgwB,aAGFS,GAAS9hB,OAASvE,EAAWiV,EAAOC,EAAKhW,EAAS,UAClDA,EAAU,CACRtJ,QACAgwB,YACAC,UAAWjwB,GAGb,IAAM8wB,EAAS,CACb,CACE1W,EAAGkF,EAAIlF,EAnBQ,GAmBSnX,KAAKguB,IAAIF,EAAQ9tB,KAAKiuB,GAAK,GACnDjoB,EAAGqW,EAAIrW,EApBQ,GAoBShG,KAAKkuB,IAAIJ,EAAQ9tB,KAAKiuB,GAAK,IAErD,CACE9W,EAAGkF,EAAIlF,EAvBQ,GAuBSnX,KAAKguB,IAAIF,EAAQ9tB,KAAKiuB,GAAK,GACnDjoB,EAAGqW,EAAIrW,EAxBQ,GAwBShG,KAAKkuB,IAAIJ,EAAQ9tB,KAAKiuB,GAAK,IAErD5R,GAGF8R,GAAgBziB,OAASvE,EAAWkV,EAAKwR,EAAQxnB,EAAS,WC5B7C,YACbqF,EACA+H,EACA2a,EACA3S,EACApV,GAEA,IADAonB,EACA,uDADc,QAEM,UAAhBA,IACFW,EAASza,EAAStF,YAAYqf,cAAcja,EAAS2a,IAGvDvQ,GAAKnS,EAASrF,GAAS,SAAAqF,GACrBA,EAAQ2iB,IAAID,EAAOjX,EAAGiX,EAAOpoB,EAAGyV,EAAQ,EAAG,EAAIzb,KAAKiuB,QCtBzC,SAASK,GAAiBC,GACvC,IAAMjgB,EAAkBqF,EAASrF,gBAEjC,OAAIigB,aAA0BjgB,EAAgBkgB,QACrCD,EAGF,IAAIjgB,EAAgBkgB,QACzBD,EAAe,GACfA,EAAe,GACfA,EAAe,ICRZ,SAASE,GAAgCC,EAAcC,GAC5D,IAAMC,EAAaN,GAAiBK,EAAWC,YACzCC,EAAgBP,GAAiBK,EAAWE,eAC5ClP,EAAuB2O,GAC3BK,EAAWhP,sBAEPvI,EAAQsX,EAAaI,QAAQC,IAAIpP,GAIvC,MAAO,CACLxI,EAJQyX,EAAWI,IAAI5X,GAASuX,EAAWlL,mBAK3Czd,EAJQ6oB,EAAcG,IAAI5X,GAASuX,EAAWnL,iBAkB3C,SAASyL,GAAyBC,EAAYP,GACnD,IAAMC,EAAaN,GAAiBK,EAAWC,YACzCC,EAAgBP,GAAiBK,EAAWE,eAC5ClP,EAAuB2O,GAC3BK,EAAWhP,sBAGPxI,EAAIyX,EAAWE,QAAQK,eAAeD,EAAW/X,GAEvDA,EAAEgY,eAAeR,EAAWlL,oBAC5B,IAAMzd,EAAI6oB,EAAcC,QAAQK,eAAeD,EAAWlpB,GAE1DA,EAAEmpB,eAAeR,EAAWnL,iBAC5B,IAAMkL,EAAevX,EAAErD,IAAI9N,GAI3B,OAFA0oB,EAAa5a,IAAI6L,GAEV+O,EAuFF,SAASU,GAAuBC,EAAkBC,GACvD,IAAMC,EAAmBjB,GAAiBe,EAAiBT,YACrDY,EAAsBlB,GAAiBe,EAAiBR,eACxDY,EAA6BnB,GACjCe,EAAiB1P,sBAEb+P,EAAsBpB,GAAiBgB,EAAoBV,YAC3De,EAAyBrB,GAC7BgB,EAAoBT,eAEhBe,EAAgCtB,GACpCgB,EAAoB3P,sBAIhBkQ,EAAeN,EAAiBT,QAAQgB,MAAMN,GAC9CO,EAAc,IAAIpc,EAASrF,gBAAgB0hB,MAEjDD,EAAYE,8BACVJ,EACAJ,GAGF,IAAMS,EAAkBR,EACrBZ,QACAgB,MAAMH,GACHQ,EAAiB,IAAIxc,EAASrF,gBAAgB0hB,MAEpDG,EAAeF,8BACbC,EACAN,GAGF,IAAMQ,EAAkBD,EAAerB,QAAQuB,eAAeN,GACxDO,EAASF,EAAgBE,OACzBC,EAAYH,EAAgBG,UAG5B7Y,EAAcuX,GAClB,CACE9X,EAAGmY,EAAoBtY,QACvBhR,EAAGspB,EAAoB3S,MAEzB2S,GAEI5T,EAAWkU,EAA8BY,WAAW9Y,GAGpD+Y,EAAO,IAAI9c,EAASrF,gBAAgBoiB,MAE1CD,EAAKrU,MAAQkU,EACbG,EAAKpU,IAAMiU,EAAOxB,QAAQhb,IAAIyc,EAAUpB,eAAezT,IAGvD,IACMiV,EA/ER,SAAmCF,EAAMG,GACvC,IAAMD,EAAgB,GAWtB,OATA53B,OAAO0J,KAAKmuB,GAAMluB,SAAQ,SAASmuB,GACjC,IAAMzR,EAAUwR,EAAKC,GACfC,EAAeL,EAAKM,cAAc3R,GAEpC0R,GACFH,EAAcxvB,KAAK2vB,MAIhBH,EAmEeK,CAA0BP,EAnIlD,SAAoC9B,GAElC,IAAMlX,EAAUwX,GACd,CACE9X,EAAG,EACHnR,EAAG,GAEL2oB,GAEIsC,EAAWhC,GACf,CACE9X,EAAGwX,EAAW3X,QACdhR,EAAG,GAEL2oB,GAEIuC,EAAajC,GACjB,CACE9X,EAAG,EACHnR,EAAG2oB,EAAWhS,MAEhBgS,GAEIjX,EAAcuX,GAClB,CACE9X,EAAGwX,EAAW3X,QACdhR,EAAG2oB,EAAWhS,MAEhBgS,GAWF,MAPa,CACX7S,IAAK,IAAInI,EAASrF,gBAAgBoiB,MAAMjZ,EAASwZ,GACjDtV,KAAM,IAAIhI,EAASrF,gBAAgBoiB,MAAMjZ,EAASyZ,GAClD5T,MAAO,IAAI3J,EAASrF,gBAAgBoiB,MAAMO,EAAUvZ,GACpDyZ,OAAQ,IAAIxd,EAASrF,gBAAgBoiB,MAAMQ,EAAYxZ,IA8F5C0Z,CAA2B9B,IAKxC,GAA6B,IAAzBqB,EAAch2B,OAIlB,MAAO,CACLyhB,MAAOuU,EAAc,GACrBtU,IAAKsU,EAAc,IAchB,SAASU,GAAYja,EAAOgX,EAAQN,GACzC,IAAMwD,EAAexD,GAAS9tB,KAAKiuB,GAAK,KAYxC,MAAO,CACL9W,EAVAnX,KAAKguB,IAAIsD,IAAiBla,EAAMD,EAAIiX,EAAOjX,GAC3CnX,KAAKkuB,IAAIoD,IAAiBla,EAAMpR,EAAIooB,EAAOpoB,GAC3CooB,EAAOjX,EASPnR,EANAhG,KAAKkuB,IAAIoD,IAAiBla,EAAMD,EAAIiX,EAAOjX,GAC3CnX,KAAKguB,IAAIsD,IAAiBla,EAAMpR,EAAIooB,EAAOpoB,GAC3CooB,EAAOpoB,GCnNI,gBACb0F,EACA+H,EACA8d,EACAC,EACAnrB,GAGA,IAFAonB,EAEA,uDAFc,QACdgE,EACA,uDADkB,EAEE,UAAhBhE,IACF8D,EAAU5d,EAAStF,YAAYqf,cAAcja,EAAS8d,GACtDC,EAAU7d,EAAStF,YAAYqf,cAAcja,EAAS+d,IAGxD,IAAME,EAAW/d,EAAStF,YAAYsjB,YAAYle,GAG7BmE,EAAgCnE,EAA7Cme,YAAkC/Z,EAAWpE,EAAzBoe,aACpBC,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,YACTC,EAAWN,EAASM,SAAWP,EAE/BQ,EAAc,CAClB9a,EAAGS,EAAQ,EAAIma,EAAY5a,EAAI2a,EAC/B9rB,EAAG6R,EAAS,EAAIka,EAAY/rB,EAAI8rB,GAG9B9xB,KAAKC,IAAI+xB,GAAY,MACvBT,EAAUF,GAAYE,EAASU,GAAcD,GAC7CR,EAAUH,GAAYG,EAASS,GAAcD,IAE/C,IAAMjsB,EAAI/F,KAAKC,IAAIsxB,EAAQpa,EAAIqa,EAAQra,GACjCrR,EAAI9F,KAAKC,IAAIsxB,EAAQvrB,EAAIwrB,EAAQxrB,GACjCkS,EAAOlY,KAAK6b,IAAI0V,EAAQpa,EAAGqa,EAAQra,GACnCgB,EAAOnY,KAAK6b,IAAI0V,EAAQvrB,EAAGwrB,EAAQxrB,GAErCooB,EAAS,CACXjX,EAAGe,EAAOnS,EAAI,EACdC,EAAGmS,EAAOrS,EAAI,GAGZ9F,KAAKC,IAAI+xB,GAAY,MACvB5D,EAASiD,GAAYjD,EAAQ6D,EAAaD,IAE5C,IAAMlE,EAASkE,EAAWhyB,KAAKiuB,GAAM,IAErCpQ,GAAKnS,EAASrF,GAAS,SAAAqF,GACrBA,EAAQwmB,QAAQ9D,EAAOjX,EAAGiX,EAAOpoB,EAAGD,EAAI,EAAGD,EAAI,EAAGgoB,EAAO,EAAG,EAAI9tB,KAAKiuB,IACrEviB,EAAQymB,gBCpERC,GAAe,QACjBC,GAAc,cACdC,GAAY,cAkCd,IAUeC,GAVI,CACjBC,aAjCF,SAAsBz1B,GACpBu1B,GAAYv1B,GAiCZ01B,aA9BF,WACE,OAAOH,IA8BPI,aA3BF,SAAsB31B,GACpBq1B,GAAer1B,GA2Bf41B,aAxBF,WACE,OAAOP,IAwBPQ,eArBF,SAAwB71B,GACtBs1B,GAAct1B,GAqBd81B,eAlBF,WACE,OAAOR,IAkBPS,iBAfF,SAA0Bzf,GACxB,OAAIA,EAAKtW,MACAsW,EAAKtW,MAGPsW,EAAK0f,OAASV,GAAcD,KCXtB,YAAS1mB,EAASsnB,EAAWhX,GAAuB,IAAd3V,EAAc,uDAAJ,GACvDoN,EAAUuf,EAAUvf,QACpB2e,EAAeG,GAAWI,eAEhCjnB,EAAQ0hB,YAAc/mB,EAAQtJ,OAASq1B,EAIvC,IAFA,IAAMa,EAAal6B,OAAO0J,KAAKuZ,GANkC,WAQxD3jB,GACP,IAAM66B,EAAYD,EAAW56B,GACvBsT,EAASqQ,EAAQkX,GAEvB,IAAkC,IAA9BvnB,EAAOwnB,mBACT,iBAGF,IAAoC,IAAhC9sB,EAAQ+sB,sBAAiCznB,EAAOonB,OAClD,iBAGF,IAAMhG,EAAYphB,EAAOonB,OACrBrG,GAAUI,iBACVJ,GAAUE,eACRI,EAAY3mB,EAAQinB,KAE1BzP,GACEnS,EACA,CACEqhB,YACAC,cAEF,SAAAthB,GACE,IAAM2nB,EAAqB1f,EAAStF,YAAYqf,cAC9Cja,EACA9H,GAIIub,EACJvb,EAAO8P,QAAUpV,EAAQ6gB,cAAgBha,GAAMga,aAEjDxb,EAAQ2iB,IACNgF,EAAmBlc,EACnBkc,EAAmBrtB,EACnBkhB,EACA,EACA,EAAIlnB,KAAKiuB,QAtCR51B,EAAI,EAAGA,EAAI46B,EAAWt4B,OAAQtC,IAAK,EAAnCA,ICXI,YACbqT,EACA+H,EACA6f,EACAjtB,GAEA,IADAonB,EACA,uDADc,QAEd5P,GAAKnS,EAASrF,GAAS,SAAAqF,GACrB4nB,EAAM5wB,SAAQ,SAAA+tB,GACZ,IAAIrU,EAAQqU,EAAKrU,MACbC,EAAMoU,EAAKpU,IAEf,GAAoB,UAAhBoR,EAAyB,CAC3B,IAAMpf,EAAcsF,EAAStF,YAE7B+N,EAAQ/N,EAAYqf,cAAcja,EAAS2I,GAC3CC,EAAMhO,EAAYqf,cAAcja,EAAS4I,GAG3C3Q,EAAQiiB,OAAOvR,EAAMjF,EAAGiF,EAAMpW,GAC9B0F,EAAQkiB,OAAOvR,EAAIlF,EAAGkF,EAAIrW,UCtBjB,YACbutB,EACAC,EACAC,EACA/nB,EACA3O,EACAgwB,GAKA,IAAM3Q,EACJmX,EAAiB54B,OAAS,EACtBgZ,EAASrF,gBAAgB8I,MAAMsc,iBAC7BH,EACAC,GAEFA,EAGAG,EAAoB,CACxB,CACExc,EAAGsc,EAAY9X,KAAO8X,EAAY7b,MAAQ,EAC1C5R,EAAGytB,EAAY3X,KAEjB,CACE3E,EAAGsc,EAAY9X,KACf3V,EAAGytB,EAAY3X,IAAM2X,EAAY5b,OAAS,GAE5C,CACEV,EAAGsc,EAAY9X,KAAO8X,EAAY7b,MAAQ,EAC1C5R,EAAGytB,EAAY3X,IAAM2X,EAAY5b,QAEnC,CACEV,EAAGsc,EAAY9X,KAAO8X,EAAY7b,MAClC5R,EAAGytB,EAAY3X,IAAM2X,EAAY5b,OAAS,IAkB9C2V,GAAS9hB,OAASvE,EAAWiV,EAZjBzI,EAASrF,gBAAgB8I,MAAMsc,iBACzCC,EACAvX,GAIc,CACdrf,QACAgwB,YACAE,SAAU,CAAC,EAAG,IAGkC,WCtEhD2G,GAAkB,GACpBC,GAAc,GAAH,OAAMD,GAAN,YACXE,GAAyB,cA0B3B,IASeC,GATG,CAChBC,QAzBF,SAAiBC,GACfJ,GAAcI,GAyBdC,QAtBF,WACE,OAAOL,IAsBPM,YAnBF,SAAqBC,GACnBR,GAAkBQ,GAmBlBC,YAhBF,WACE,OAAOT,IAgBPU,mBAbF,SAA4BC,GAC1BT,GAAyBS,GAazBC,mBAVF,WACE,OAAOV,KCVM,YAASpoB,EAAS+nB,EAAagB,EAAWzH,EAAW0H,GAClE,IAAMN,EAAWL,GAAUM,cAE3B3oB,EAAQuoB,KAAOF,GAAUG,UACzBxoB,EAAQipB,aAAe,MACvBjpB,EAAQshB,UAAYA,EACpByH,EAAU/xB,SAAQ,SAASkyB,EAAM33B,GAC/ByO,EAAQmpB,SACND,EACAnB,EAAY9X,KAAO+Y,EACnBjB,EAAY3X,IAAM4Y,EAAUz3B,GAASm3B,EAAWM,QCdvC,YAAShpB,EAAS+nB,EAAazG,GAC5CthB,EAAQshB,UAAYA,EACpBthB,EAAQopB,SACNrB,EAAY9X,KACZ8X,EAAY3X,IACZ2X,EAAY7b,MACZ6b,EAAY5b,SCDT,SAASkd,GAAarpB,EAASkpB,EAAMF,GAC1C,IAAMT,EAAOF,GAAUG,UACjBc,EAAWtpB,EAAQuoB,KAErBA,GAAQA,IAASe,IACnBtpB,EAAQuoB,KAAOA,GAEjB,IAAMrc,EAAQlM,EAAQupB,YAAYL,GAAMhd,MAMxC,OAJIqc,GAAQA,IAASe,IACnBtpB,EAAQuoB,KAAOe,GAGVpd,EAAQ,EAAI8c,EAiBN,gBAAShpB,EAAS+oB,EAAWtd,EAAGnR,EAAGjJ,EAAOsJ,GACL,mBAA9CtN,OAAOkB,UAAUwH,SAASjJ,KAAKi8B,KACjCA,EAAY,CAACA,IAGf,IACML,EAAWL,GAAUM,cACrBE,EAAkBR,GAAUS,qBAG9BU,EAAW,EAEfT,EAAU/xB,SAAQ,SAASkyB,GAEzB,IAAMhd,EAAQmd,GAAarpB,EAASkpB,EATtB,GAYdM,EAAWl1B,KAAKsc,IAAI4Y,EAAUtd,MAIhC,IAAM6b,EAAc,CAClB7b,MAAOsd,EACPrd,OAlBc,EAkBI4c,EAAU95B,QAAUy5B,EAlBxB,IA8ChB,OAzBAe,GAAKzpB,GAAS,SAAAA,GACZA,EAAQ0hB,YAAcrwB,EAGlBsJ,GAAWA,EAAQ+uB,YAAqC,IAAxB/uB,EAAQ+uB,UAAUje,IACpDA,GAAKsc,EAAY7b,MAAQ,GAGvBvR,GAAWA,EAAQ+uB,YAAqC,IAAxB/uB,EAAQ+uB,UAAUpvB,IACpDA,GAAKytB,EAAY5b,OAAS,GAG5B4b,EAAY9X,KAAOxE,EACnBsc,EAAY3X,IAAM9V,EAElB,IAAMgnB,EACJ3mB,IAA6B,IAAlBA,EAAQjH,MAAiB,UAAYm1B,EAElDc,GAAQ3pB,EAAS+nB,EAAazG,GAG9BsI,GAAc5pB,EAAS+nB,EAAagB,EAAW13B,EA1CjC,MA8CT02B,GC3EM,YACb/nB,EACA+H,EACA8hB,EACAX,EACA5Y,EACAwZ,EACAz4B,EACAgwB,EACA0I,EACAC,GAEA,IAAMrnB,EAAcsF,EAAStF,YAGvBsnB,EAAatnB,EAAYqf,cAAcja,EAAS8hB,GAElDE,IACFE,EAAWxe,GAAKse,GAGlB,IAAMpvB,EAAU,CACd+uB,UAAW,CACTje,GAAG,EACHnR,EAAG0vB,IAaP,GARAH,EAAQ9B,YAAcmC,GACpBlqB,EACAkpB,EACAe,EAAWxe,EACXwe,EAAW3vB,EACXjJ,EACAsJ,GAEEkvB,EAAQM,SAAU,CAEpB,IAAMtC,EAAmBiC,EAAoBxZ,GAASha,KAAI,SAAA8D,GAAC,OACzDuI,EAAYqf,cAAcja,EAAS3N,MAIrCgwB,GACEvC,EACAoC,EACAJ,EAAQ9B,YACR/nB,EACA3O,EACAgwB,KCnDS,YACbrhB,EACA+H,EACA8d,EACAC,EACAnrB,GAGA,IAFAonB,EAEA,uDAFc,QACdgE,EACA,uDADkB,EAElB,GAAoB,UAAhBhE,EAAyB,CAC3B,IAAMpf,EAAcsF,EAAStF,YAE7BkjB,EAAUljB,EAAYqf,cAAcja,EAAS8d,GAC7CC,EAAUnjB,EAAYqf,cAAcja,EAAS+d,GAG/C,IAAME,EAAW/d,EAAStF,YAAYsjB,YAAYle,GAG7BmE,EAAgCnE,EAA7Cme,YAAkC/Z,EAAWpE,EAAzBoe,aACpBC,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,YACTC,EAAWN,EAASM,SAAWP,EAE/BQ,EAAc,CAClB9a,EAAGS,EAAQ,EAAIma,EAAY5a,EAAI2a,EAC/B9rB,EAAG6R,EAAS,EAAIka,EAAY/rB,EAAI8rB,GAG9B9xB,KAAKC,IAAI+xB,GAAY,MACvBT,EAAUF,GAAYE,EAASU,GAAcD,GAC7CR,EAAUH,GAAYG,EAASS,GAAcD,IAG/C,IAAMjsB,EAAI/F,KAAKC,IAAIsxB,EAAQpa,EAAIqa,EAAQra,GACjCrR,EAAI9F,KAAKC,IAAIsxB,EAAQvrB,EAAIwrB,EAAQxrB,GAEvCurB,EAAU,CACRpa,EAAGnX,KAAK6b,IAAI0V,EAAQpa,EAAGqa,EAAQra,GAC/BnR,EAAGhG,KAAK6b,IAAI0V,EAAQvrB,EAAGwrB,EAAQxrB,IAGjCwrB,EAAU,CACRra,EAAGoa,EAAQpa,EAAIpR,EACfC,EAAGurB,EAAQvrB,EAAIF,GAGjB,IAAIiwB,EAAU,CACZ5e,EAAGoa,EAAQpa,EAAIpR,EACfC,EAAGurB,EAAQvrB,GAGTgwB,EAAU,CACZ7e,EAAGoa,EAAQpa,EACXnR,EAAGurB,EAAQvrB,EAAIF,GAGb9F,KAAKC,IAAI+xB,GAAY,MACvBT,EAAUF,GAAYE,EAASU,EAAaD,GAC5CR,EAAUH,GAAYG,EAASS,EAAaD,GAC5C+D,EAAU1E,GAAY0E,EAAS9D,EAAaD,GAC5CgE,EAAU3E,GAAY2E,EAAS/D,EAAaD,IAG9CnU,GAAKnS,EAASrF,GAAS,SAAAqF,GACrBA,EAAQiiB,OAAO4D,EAAQpa,EAAGoa,EAAQvrB,GAClC0F,EAAQkiB,OAAOmI,EAAQ5e,EAAG4e,EAAQ/vB,GAClC0F,EAAQiiB,OAAOoI,EAAQ5e,EAAG4e,EAAQ/vB,GAClC0F,EAAQkiB,OAAO4D,EAAQra,EAAGqa,EAAQxrB,GAClC0F,EAAQiiB,OAAO6D,EAAQra,EAAGqa,EAAQxrB,GAClC0F,EAAQkiB,OAAOoI,EAAQ7e,EAAG6e,EAAQhwB,GAClC0F,EAAQiiB,OAAOqI,EAAQ7e,EAAG6e,EAAQhwB,GAClC0F,EAAQkiB,OAAO2D,EAAQpa,EAAGoa,EAAQvrB,OCjFvB,YAASiwB,GACtB,IAAMvqB,EAAUuqB,EAAOC,WAAW,MAIlC,OAFAxqB,EAAQyqB,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAE7BzqB,GCTM,YAASpS,EAAO88B,GAC7B,YAAiBjvB,IAAV7N,EAAsB88B,EAAe98B,GCW/B,YAASoS,GAAuB,IAAdrF,EAAc,uDAAJ,GACrCA,EAAQgwB,SACV3qB,EAAQ4qB,YAAcC,GAAWlwB,EAAQiwB,YAAa,WACtD5qB,EAAQ8qB,WAAaD,GAAWlwB,EAAQmwB,WAAY,GACpD9qB,EAAQ+qB,cAAgBF,GAAWlwB,EAAQowB,cAAe,GAC1D/qB,EAAQgrB,cAAgBH,GAAWlwB,EAAQqwB,cAAe,KCX/C,YAAShrB,EAASuqB,EAAQvE,GACvC,GAAMA,EAASiF,OAASjF,EAASkF,OAASlF,EAASM,SAAnD,CAIA,IAAMD,EAAc,CAClB5a,EAAG8e,EAAOre,MAAQ,EAAI8Z,EAASK,YAAY5a,EAAIua,EAASI,MACxD9rB,EAAGiwB,EAAOpe,OAAS,EAAI6Z,EAASK,YAAY/rB,EAAI0rB,EAASI,OAG3DpmB,EAAQmrB,UAAU9E,EAAY5a,EAAG4a,EAAY/rB,GAEzC0rB,EAASM,UACXtmB,EAAQorB,OAAQpF,EAASM,SAAWhyB,KAAKiuB,GAAM,KAG7CyD,EAASkF,OACXlrB,EAAQomB,MAAM,GAAI,GAGhBJ,EAASiF,OACXjrB,EAAQomB,OAAO,EAAG,GAGpBpmB,EAAQmrB,WAAW9E,EAAY5a,GAAI4a,EAAY/rB,KC1BlC,YAAS0F,GACtBA,EAAQyqB,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,ICDvBY,GAHO,SAAA36B,GAAG,OACK,IAA5BrD,OAAO0J,KAAKrG,GAAKzB,QAAgByB,EAAIV,cAAgB3C,Q,GCH1BqZ,GAAU,gBAA/BoM,G,GAAAA,QAASsG,G,GAAAA,QASjB,SAASkS,KACPv6B,KAAKuf,QAAU,CACbI,MAAO,GACPC,IAAK,IA+CT,SAAS4a,GAAsB1f,GAC7B,IACM9D,EAAU8D,EAAIvG,OAAOyC,QACrBI,EAAQ0D,EAAIvG,OAAOyT,cAAc5Q,MAWvC,OATIqjB,GAAez6B,KAAKuf,QAAQI,OAC9B3f,KAAKuf,QAAQI,MAAQvI,GAErBpX,KAAKuf,QAAQK,IAAMxI,EACnBpX,KAAK06B,eAAe5f,IAGtB5D,EAAStF,YAAYkX,YAAY9R,IAXZ,EAwBvB,SAAS2jB,GAAqB7f,GAAK,MACEA,EAAIvG,OAA/ByC,EADyB,EACzBA,QACAI,EAFyB,EAChB4Q,cACT5Q,MAERpX,KAAKuf,QAAQK,IAAMxI,EACnBF,EAAStF,YAAYkX,YAAY9R,GAWnC,SAAS0jB,GAAe5f,GACtBA,EAAIvG,OAAOgL,QAAUvf,KAAKuf,QADC,IAEnBvI,EAAY8D,EAAIvG,OAAhByC,QAFmB,EAI6B+K,GAAQmE,WAC9DlP,GADMkP,EAJmB,EAInBA,WAAY/M,EAJO,EAIPA,WAAYM,EAJL,EAIKA,oBAI1BM,EAAYmM,EAAWnM,UACvB6gB,EAAoB7gB,EAAUpL,QAa9BoM,EAAgB,CACpBqW,OAZa,CACbzR,MAAO,CACLjF,EAAG1a,KAAKuf,QAAQI,MAAMjF,EACtBnR,EAAGvJ,KAAKuf,QAAQI,MAAMpW,GAExBqW,IAAK,CACHlF,EAAG1a,KAAKuf,QAAQK,IAAIlF,EACpBnR,EAAGvJ,KAAKuf,QAAQK,IAAIrW,IAMtBwQ,YACAK,aAAcjB,EAAWjD,mBACzB2kB,sBAAuB,2BAGzB76B,KAAK86B,oBAAoBhgB,EAAKC,GAE9B,IAAM+K,EAAY,CAChBrC,aAAchK,EACdpZ,KAAM2hB,GAAwB4Y,EAAmB7gB,IAGnDsO,GAAQc,UAAUnpB,KAAKgX,QAAS,CAAC8O,IAGjCuC,GAAQM,2BAA2BzC,GACnChP,EAAStF,YAAYkX,YAAY9R,GAEjChX,KAAKu6B,gBAOQ,QACbQ,uBAAwBP,GACxBQ,sBAAuBR,GACvBS,mBAAoBT,GACpBU,kBAAmBP,GACnBQ,kBAAmBR,GACnBS,kBAAmBT,GACnBU,iBAAkBX,GAClBY,gBAAiBZ,GACjBa,gBAAiBhB,GACjBiB,eAxIF,SAAwB1gB,GAAK,WACrBI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QACF1W,EAAQyhB,GAAQkG,WAAWjR,GAAS,GACpC/H,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAC9Cva,EAAa/H,EAASrF,gBAAgB8I,MAAtCsE,SAERyZ,GAAKzpB,GAAS,SAAAA,GACZ,IAAK,EAAKsQ,QACR,OAAO,KAET,IAAMoc,EAAczkB,EAAStF,YAAYqf,cACvCja,EACA,EAAKuI,QAAQI,OAGTic,EAAY1kB,EAAStF,YAAYqf,cACrCja,EACA,EAAKuI,QAAQK,KAITZ,EAASC,EAAS0c,EAAaC,GAGrCC,GAAW5sB,EAAS+H,EAAS,EAAKuI,QAAQI,MAAOX,EAAQ,CAAE1e,cAgH7Di6B,iBACAG,mBCjKI7hB,GAASL,EAAU,sB,GAEI7C,GAAU,gBAA/BoM,G,GAAAA,QAASsG,G,GAAAA,QA2CjB,SAASmS,GAAsB1f,GAC7B,IAAM9D,EAAU8D,EAAIvG,OAAOyC,QACrBI,EAAQ0D,EAAIvG,OAAOyT,cAAc5Q,MACjCga,EAASpxB,KAAKuf,QAAQ6R,OAE5B,IAAKA,EAAOlzB,OAGV,OAFA2a,GAAOH,KAAK,iDAEL,KAGT0Y,EAAO1sB,KAAK,CACVgW,EAAGtD,EAAMsD,EACTnR,EAAG6N,EAAM7N,EACTstB,MAAO,KAGT72B,KAAK87B,eAAiB,EAEtB5kB,EAAStF,YAAYkX,YAAY9R,GAWnC,SAAS2jB,GAAqB7f,GAC5B,IAAMI,EAAYJ,EAAIvG,OAChByC,EAAU8D,EAAIvG,OAAOyC,QAE3BhX,KAAK+7B,UAAU7gB,GACfhE,EAAStF,YAAYkX,YAAY9R,GAWnC,SAAS0jB,GAAe5f,GACtB,IAAMsW,EAASpxB,KAAKuf,QAAQ6R,OACpBpa,EAAY8D,EAAIvG,OAAhByC,QAFmB,EAI6B+K,GAAQmE,WAC9DlP,GADMkP,EAJmB,EAInBA,WAAY/M,EAJO,EAIPA,WAAYM,EAJL,EAIKA,oBAI1BM,EAAYmM,EAAWnM,UACvB6gB,EAAoB7gB,EAAUpL,QAE9BoM,EAAgB,CACpBqW,SACArX,YACAK,aAAcjB,EAAWjD,mBACzB2kB,sBAAuB,6BAGzB76B,KAAK86B,oBAAoBhgB,EAAKC,GAE9B,IAAM+K,EAAY,CAChBrC,aAAchK,EACdpZ,KAAM2hB,GAAwB4Y,EAAmB7gB,IAGnDsO,GAAQc,UAAUnpB,KAAKgX,QAAS,CAAC8O,IAGjCuC,GAAQM,2BAA2BzC,GACnChP,EAAStF,YAAYkX,YAAY9R,GAEjChX,KAAKu6B,gBAUP,SAASA,KACPv6B,KAAKuf,QAAU,CACb6R,OAAQ,IAGVpxB,KAAK87B,cAAgB,EAwCR,QACbf,uBAAwBP,GACxBQ,sBAAuBR,GACvBS,mBAAoBT,GACpBU,kBAAmBP,GACnBQ,kBAAmBR,GACnBS,kBAAmBT,GACnBU,iBAAkBX,GAClBY,gBAAiBZ,GACjBa,gBAAiBhB,GACjBiB,eAhLF,SAAwB1gB,GACtB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QACF1W,EAAQyhB,GAAQkG,WAAWjR,GAAS,GACpC/H,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAChDpI,EAASpxB,KAAKuf,QAAQ6R,OAExBA,EAAOlzB,OAAS,GAIpBw6B,GAAKzpB,GAAS,SAAAA,GACZ,IAAK,IAAInM,EAAI,EAAGA,EAAIsuB,EAAOlzB,OAAQ4E,IAAK,CACtC,IAAM+zB,EAAQ,IAAIzF,EAAOtuB,GAAG+zB,OAExB/zB,IAAMsuB,EAAOlzB,OAAS,GAGxB24B,EAAMnyB,KAAK0sB,EAAO,IAEpBM,GAAgBziB,EAAS+H,EAASoa,EAAOtuB,GAAI+zB,EAAO,CAClDv2B,eA4JNi6B,iBACAwB,UA1CF,SAAmBjhB,GACjB,IAAMsW,EAASpxB,KAAKuf,QAAQ6R,OAExBA,EAAOlzB,QAETkzB,EAAOpxB,KAAK87B,cAAgB,GAAGjF,MAAMnyB,KAAK,CACxCgW,EAAGI,EAAIkN,cAAc5Q,MAAMsD,EAC3BnR,EAAGuR,EAAIkN,cAAc5Q,MAAM7N,EAC3BstB,MAAO,KAKXzF,EAAO1sB,KAAK,CACVgW,EAAGI,EAAIkN,cAAc5Q,MAAMsD,EAC3BnR,EAAGuR,EAAIkN,cAAc5Q,MAAM7N,EAC3BstB,MAAO,KAIT72B,KAAK87B,eAAiB,EAGtB5kB,EAAStF,YAAYkX,YAAYhO,EAAI9D,UAoBrC0jB,mBChMM3Y,GAAYpM,GAAU,gBAAtBoM,QAgCR,IAQeia,GARmB1/B,OAAOotB,OAAO,GAAIuS,GAA2B,CAC7ET,eAvBF,SAAwB1gB,GAAK,WACrBI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QACF1W,EAAQyhB,GAAQkG,WAAWjR,GAAS,GACpC/H,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAChDja,EAAUvf,KAAKuf,QAErBmZ,GAAKzpB,GAAS,SAAAA,GAGZ,GAF4BsQ,EAAQ6R,OAAOlzB,OAAS,EAGlD,IAAK,IAAI4E,EAAI,EAAGA,EAAIyc,EAAQ6R,OAAOlzB,OAAQ4E,IAAK,CAC9C,IAAM+zB,EAAQ,IAAItX,EAAQ6R,OAAOtuB,GAAG+zB,OAEpCnF,GAAgBziB,EAAS+H,EAAS,EAAKuI,QAAQ6R,OAAOtuB,GAAI+zB,EAAO,CAC/Dv2B,iB,GCvBmBqV,GAAU,gBAA/BoM,G,GAAAA,QAASsG,G,GAAAA,QA6BjB,SAASmS,GAAsB1f,GAC7B,IACM9D,EAAU8D,EAAIvG,OAAOyC,QACrBI,EAAQ0D,EAAIvG,OAAOyT,cAAc5Q,MAWvC,OATIqjB,GAAez6B,KAAKuf,QAAQI,OAC9B3f,KAAKuf,QAAQI,MAAQvI,GAErBpX,KAAKuf,QAAQK,IAAMxI,EACnBpX,KAAK06B,eAAe5f,IAGtB5D,EAAStF,YAAYkX,YAAY9R,IAXZ,EAwBvB,SAAS2jB,GAAqB7f,GAAK,MAI7BA,EAAIvG,OAFNyC,EAF+B,EAE/BA,QACiBI,EAHc,EAG/B4Q,cAAiB5Q,MAGnBpX,KAAKuf,QAAQK,IAAMxI,EACnBF,EAAStF,YAAYkX,YAAY9R,GAWnC,SAAS0jB,GAAe5f,GACtBA,EAAIvG,OAAOgL,QAAUvf,KAAKuf,QADC,IAGnBvI,EAAY8D,EAAIvG,OAAhByC,QAHmB,EAK6B+K,GAAQmE,WAC9DlP,GADMkP,EALmB,EAKnBA,WAAY/M,EALO,EAKPA,WAAYM,EALL,EAKKA,oBAI1BM,EAAYmM,EAAWnM,UACvB6gB,EAAoB7gB,EAAUpL,QAa9BoM,EAAgB,CACpBqW,OAZa,CACb,CACE1W,EAAG1a,KAAKuf,QAAQI,MAAMjF,EACtBnR,EAAGvJ,KAAKuf,QAAQI,MAAMpW,GAExB,CACEmR,EAAG1a,KAAKuf,QAAQK,IAAIlF,EACpBnR,EAAGvJ,KAAKuf,QAAQK,IAAIrW,IAMtBwQ,YACAK,aAAcjB,EAAWjD,mBACzB2kB,sBAAuB,8BAGzB76B,KAAK86B,oBAAoBhgB,EAAKC,GAE9B,IAAM+K,EAAY,CAChBrC,aAAchK,EACdpZ,KAAM2hB,GAAwB4Y,EAAmB7gB,IAGnDsO,GAAQc,UAAUnpB,KAAKgX,QAAS,CAAC8O,IAGjCuC,GAAQM,2BAA2BzC,GACnChP,EAAStF,YAAYkX,YAAY9R,GAEjChX,KAAKu6B,gBAUP,SAASA,KACPv6B,KAAKuf,QAAU,CACbI,MAAO,GACPC,IAAK,ICxEM,ICtDA,IACbsc,8BACAC,+BACAC,2BACAJ,6BACAC,6BACAI,2BFgIa,CACbtB,uBAAwBP,GACxBQ,sBAAuBR,GACvBS,mBAAoBT,GACpBU,kBAAmBP,GACnBQ,kBAAmBR,GACnBS,kBAAmBT,GACnBU,iBAAkBX,GAClBY,gBAAiBZ,GACjBa,gBAAiBhB,GACjBiB,eAzIF,SAAwB1gB,GAAK,WACrBI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QACF1W,EAAQyhB,GAAQkG,WAAWjR,GAAS,GACpC/H,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAEtDd,GAAKzpB,GAAS,SAAAA,GACZqtB,GAASrtB,EAAS+H,EAAS,EAAKuI,QAAQI,MAAO,EAAKJ,QAAQK,IAAK,CAC/Dtf,cAkIJi6B,iBACAG,mBE3IA6B,iBD+Ca,CACbC,YAtDF,SAAqB1hB,GAAK,IAMpB2hB,EALI7qB,EAAgBsF,EAAhBtF,YADgB,EAEW+D,GAAU,gBAArCoM,EAFgB,EAEhBA,QAASrM,EAFO,EAEPA,cACXwF,EAAYJ,EAAIvG,OAChB0gB,EAAW/Z,EAAU+Z,SAa3B,GATIj1B,KAAK08B,SACPD,EAAgBz8B,KAAK28B,iBACZ38B,KAAK48B,gBACdH,EAAgBz8B,KAAK28B,iBACrB38B,KAAK48B,gBAAiB,GAEtBH,EAAgBhQ,GAAMhc,MAAM6Z,mBAGzBmS,EAAL,CAjBwB,MAqBEvhB,EAAU9D,MAA5B8I,EArBgB,EAqBhBA,KAAM3F,EArBU,EAqBVA,QArBU,EAsBPkiB,EAAT/hB,EAtBgB,EAsBhBA,EAAGnR,EAtBa,EAsBbA,EAEX,KAAImR,EAAI,GAAKA,EAAIH,GAAWhR,EAAI,GAAKA,EAAI2W,GAAzC,CAKA,IAAMlB,EAAStJ,EAAcsJ,OACvB/P,EAAUiM,EAAUwgB,cACpB1kB,EAAUkE,EAAUlE,QACpB1W,EAAQyhB,EAAQkG,WAAWjR,EAAShX,KAAK08B,UAE/CztB,EAAQyqB,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEpC,IAAMmD,EAAe7d,EAASiW,EAASI,MACjCyH,EAAoBlrB,EAAYqf,cAAcja,EAASylB,GAE7DxtB,EAAQyhB,YACRzhB,EAAQ0hB,YAAcrwB,EACtB2O,EAAQwmB,QACNqH,EAAkBpiB,EAClBoiB,EAAkBvzB,EAClBszB,EACAA,EACA,EACA,EACA,EAAIt5B,KAAKiuB,IAEXviB,EAAQ6hB,cE3DJiM,GAAoB,SAAA34B,GAGxB,OAFsBA,GAAsB,WAAf,IAAOA,IAIM,oBAAxC9H,OAAOkB,UAAUwH,SAASjJ,KAAKqI,IACS,kBAAxC9H,OAAOkB,UAAUwH,SAASjJ,KAAKqI,IAU7B44B,GAAmB,SAACngC,EAAOogC,GAC/B,IAPkB74B,EASlB,OAFc64B,IAA6C,IAA1BA,EAAgB5K,OAEjC0K,GAAkBlgC,GAC9BqgC,IAVc94B,EAUQvH,EATV8K,MAAMsB,QAAQ7E,GAAO,GAAK,IASRvH,EAAOogC,GACrCpgC,GAGAsgC,GAAoB,SAACn/B,EAAQo/B,EAAQH,GACzC,IAAMI,EAAcr/B,EAAO2Q,QAY3B,OAVAyuB,EAAOn3B,SAAQ,SAASS,EAAG9K,QACK,IAAnByhC,EAAYzhC,GACrByhC,EAAYzhC,GAAKohC,GAAiBt2B,EAAGu2B,GAC5BF,GAAkBr2B,GAC3B22B,EAAYzhC,GAAKshC,GAAUl/B,EAAOpC,GAAI8K,EAAGu2B,IACT,IAAvBj/B,EAAO2G,QAAQ+B,IACxB22B,EAAY34B,KAAKs4B,GAAiBt2B,EAAGu2B,OAIlCI,GAGHC,GAAc,SAACt/B,EAAQo/B,EAAQH,GACnC,IAAMI,EAAc,GAepB,OAbIN,GAAkB/+B,IACpB1B,OAAO0J,KAAKhI,GAAQiI,SAAQ,SAAS9I,GACnCkgC,EAAYlgC,GAAO6/B,GAAiBh/B,EAAOb,GAAM8/B,MAGrD3gC,OAAO0J,KAAKo3B,GAAQn3B,SAAQ,SAAS9I,GAC9B4/B,GAAkBK,EAAOjgC,KAAUa,EAAOb,GAG7CkgC,EAAYlgC,GAAO+/B,GAAUl/B,EAAOb,GAAMigC,EAAOjgC,GAAM8/B,GAFvDI,EAAYlgC,GAAO6/B,GAAiBI,EAAOjgC,GAAM8/B,MAM9CI,GAGHH,GAAY,WAA+C,IAA9Cl/B,EAA8C,uDAArC,GAAIo/B,EAAiC,uDAAxB,GAAIH,EAAoB,uCACzDz1B,EAAQG,MAAMsB,QAAQm0B,GACtBxzB,EAAUqzB,GAAmB,CAAEM,WAAYJ,IAC3CI,EAAa3zB,EAAQ2zB,YAAcJ,GAEzC,OAAI31B,EACKG,MAAMsB,QAAQjL,GACjBu/B,EAAWv/B,EAAQo/B,EAAQH,GAC3BD,GAAiBI,EAAQH,GAGxBK,GAAYt/B,EAAQo/B,EAAQH,IAGtBC,MCnETrkB,GAASL,EAAU,uBAEnBglB,GAA4B7nB,GAAU,uBAmT7B8nB,G,WA7Rb,WAAYx/B,EAAOy/B,GAAc,YAI/B19B,KAAK29B,qBAAuBT,GAAUQ,EAAcz/B,GAJrB,MAc3B+B,KAAK29B,qBAPPxhC,EAP6B,EAO7BA,KACAyhC,EAR6B,EAQ7BA,WACAC,EAT6B,EAS7BA,gBACAnoB,EAV6B,EAU7BA,cACAqV,EAX6B,EAW7BA,0BACA+S,EAZ6B,EAY7BA,OACArS,EAb6B,EAa7BA,UAOFzrB,KAAK7D,KAAOA,EAGZ6D,KAAKjD,KAAO,WACZiD,KAAKgX,aAAUtM,EACf1K,KAAK+qB,0BAA4BA,GAA6B,GAE9D/qB,KAAK49B,WAAaA,GAAc,GAChC59B,KAAK69B,gBACHA,GAAmBvhC,OAAO0J,KAAKhG,KAAK49B,YAAY,SAAMlzB,EACxD1K,KAAK+9B,eAAiB/9B,KAAK69B,gBAEvBpS,IACFzrB,KAAKyrB,UAAYA,GAKnBzrB,KAAKg+B,SAAW,GAGhBh+B,KAAKi+B,eAAiB3hC,OAAOotB,OAAO,GAAIhU,GAKxC1V,KAAKk+B,mBAAoB,EACzBl+B,KAAK8sB,mBAAoB,EAGrBgR,GAAUA,EAAO5/B,QACnB8B,KAAKm+B,aAAaL,GAGpB99B,KAAKo+B,SAAW9hC,OAAOotB,OAAO,GAAI1pB,KAAK29B,qBAAqBU,SAE5D,IAAMC,EACJt+B,KAAK69B,iBAAmB79B,KAAKo+B,SAASp+B,KAAK+9B,gBAEzCO,IACFt+B,KAAKyrB,UAAY6S,G,iDA6CR10B,GACX5J,KAAKg+B,SAAW1hC,OAAOotB,OAAO,GAAI1pB,KAAKg+B,SAAUp0B,K,qCAYjD5J,KAAKg+B,SAAW,K,0CAgBEljB,EAAKC,GACvB,OAAO/a,KAAK49B,WAAW59B,KAAK+9B,gBAAgBhiC,KAAKiE,KAAM8a,EAAKC,K,mCAYjDwjB,GACX,IAAK,IAAI3iC,EAAI,EAAGA,EAAI2iC,EAAYrgC,OAAQtC,IAAK,CAC3C,IAAM4iC,EAAQV,GAAO,GAAD,OAAIS,EAAY3iC,KAEf,WAAjB,IAAO4iC,IACTliC,OAAOotB,OAAO1pB,KAAMw+B,GAEgB,mBAAzBx+B,KAAKu7B,iBAEdv7B,KAAKu7B,mBAGP1iB,GAAOH,KAAP,UAAe1Y,KAAK7D,KAApB,mBAAmC2hC,GAAOliC,GAA1C,qBAKyB,aAAzBoE,KAAKu7B,wBACAv7B,KAAKu7B,kB,wCAYEkD,GAChBz+B,KAAK+9B,eAAiBU,EAElBjB,GAA0B9nB,cAAcoU,gBAC1C9pB,KAAK0+B,aAAa1+B,KAAKgX,QAASynB,K,mCAWvBznB,EAASynB,GAEpB,GAAKznB,EAAL,CAKA,IAAMqU,EAASrrB,KAAKo+B,SAASK,GAEzBpT,IACFrrB,KAAKyrB,UAAYJ,EAEC,WAAdrrB,KAAKjD,MACPyuB,GAAcxU,EAASqU,O,oCAhI3B,OAAOrrB,KAAKi+B,gB,aAGIvoB,GAChB1V,KAAKi+B,eAAiBvoB,I,8BAatB,OAAO1V,KAAKg+B,Y,+CCjHD,YAAS9uB,EAAQyvB,GAC9B,GAAKzvB,EAAO8nB,YAIZ,OAAO9f,EAASrF,gBAAgB8I,MAAMikB,WAAWD,EAAQzvB,EAAO8nB,cC4E5D6H,GAA0B,SAC9B3vB,EACA8H,EACA2nB,EACAG,GAEA,GAAI5vB,EAAOzR,eAAe,oBACxB,GAAIyR,EAAO6vB,gBAAgB/nB,EAAS9H,EAAQyvB,GAC1C,OAAO,OAEJ,IAA8B,IAA1BzvB,EAAO8vB,gBAChB,GAAIC,GAAuB/vB,EAAQyvB,GACjC,OAAO,MAEJ,CACL,IAAMO,EAAehoB,EAAStF,YAAYqf,cAAcja,EAAS9H,GAMjE,GALiBgI,EAASrF,gBAAgB8I,MAAMsE,SAC9CigB,EACAP,IAGcG,EACd,OAAO,EAIX,OAAO,GAGMK,GAxGiB,SAA1BA,EACJnoB,EACAuI,EACAof,EACAG,GAEA,IAAIM,EAEJ,GAAK7f,EAAL,CAIA,GAAI5X,MAAMsB,QAAQsW,GAGhB,IAFA,IAAMiX,EAAal6B,OAAO0J,KAAKuZ,GAEtB3jB,EAAI,EAAGA,EAAI46B,EAAWt4B,OAAQtC,IAAK,CAC1C,IACMsT,EAASqQ,EADHiX,EAAW56B,IAGvB,GAEGsT,EAAOzR,eAAe,MACtByR,EAAOzR,eAAe,MAKrBohC,GAAwB3vB,EAAQ8H,EAAS2nB,EAAQG,GAAoB,CACvEM,EAAelwB,EACf,YAGC,GAAuB,WAAnB,IAAOqQ,GAGhB,IAFA,IAAMiX,EAAal6B,OAAO0J,KAAKuZ,GAEtB3jB,EAAI,EAAGA,EAAI46B,EAAWt4B,OAAQtC,IAAK,CAC1C,IAAMyjC,EAAa7I,EAAW56B,GAE9B,GAAI+L,MAAMsB,QAAQsW,EAAQ8f,KAOxB,GANAD,EAAeD,EACbnoB,EACAuI,EAAQ8f,GACRV,EACAG,GAGA,UAEG,CACL,IAAM5vB,EAASqQ,EAAQ8f,GAEvB,GACER,GAAwB3vB,EAAQ8H,EAAS2nB,EAAQG,GACjD,CACAM,EAAelwB,EACf,QAMR,OAAOkwB,IChEM,YAASpoB,EAASuI,EAAS+f,EAAaR,GAChDA,IACHA,EAAoB,GAGtB,IAAMS,EA8BR,SAA0BhgB,GACxB,IAAIggB,EAYJ,OAVAjjC,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAS9J,GACpC,IAAM+S,EAASqQ,EAAQpjB,IAED,IAAlB+S,EAAOonB,SACTiJ,EAAerwB,MAMZqwB,EA3CcC,CAAiBjgB,GAChC6f,EAAeD,GACnBnoB,EACAuI,EACA+f,EACAR,GAGF,OAAIS,IAAiBH,SACE10B,IAAjB00B,IACFA,EAAa9I,QAAS,QAGH5rB,IAAjB60B,IACFA,EAAajJ,QAAS,IAGjB,ICxBI,gBAASmJ,EAAYlgB,GAClC,IAAMnI,EAAQqoB,EAAWroB,MACnBsoB,EAAY,CAChBxgB,KAAM,EACNG,IAAK,EACLlE,MAAO/D,EAAM+D,MACbC,OAAQhE,EAAMgE,QAGZukB,GAAqB,EAgBzB,OAdArjC,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAS9J,GACpC,IAAM+S,EAASqQ,EAAQpjB,IAEY,IAA/B+S,EAAO0wB,sBAKwD,IAAjE1oB,EAASrF,gBAAgB8I,MAAMikB,WAAW1vB,EAAQwwB,KAElDC,GAAqB,MAIlBA,GC3BF,SAASE,GAAKz7B,EAAK07B,EAAKC,GAC7B,OAAOx8B,KAAK6b,IAAI7b,KAAKsc,IAAIigB,EAAK17B,GAAM27B,GAY/B,SAASC,GAAUrlB,EAAOslB,GAE/BtlB,EAAMD,EAAImlB,GAAKllB,EAAMD,EAAG,EAAGulB,EAAI9kB,OAC/BR,EAAMpR,EAAIs2B,GAAKllB,EAAMpR,EAAG,EAAG02B,EAAI7kB,QAGlBykB,UCjBA,YAAS7oB,EAASmT,EAAO+V,GACtC,OAAO/V,EAAMjM,QACX,SAAA4M,GAAI,OACFA,EAAK9T,UAAYA,GACH,WAAd8T,EAAK/tB,YACY2N,IAAhBw1B,GAA6BpV,EAAKlhB,QAAL,YAAkBs2B,EAAlB,gB,mBCJrB,YAASlpB,EAAS7a,GAG/B,MAAqB,WAFRkwB,GAAkBrV,EAAS7a,GAE5BY,MCNRojC,GAAqBxqB,GAAU,gBA0VtByqB,G,YAhVb,WAAYniC,GAA0B,MAAnBy/B,EAAmB,uDAAJ,GAAI,mBAC/BA,EAAahoB,gBAChBgoB,EAAahoB,cAAgB,CAAE2qB,oBAAoB,KAGrD,4BAAMpiC,EAAOy/B,KAERQ,mBAAoB,EACzB,EAAKpR,mBAAoB,EAEzB,EAAK4P,UAAW,EAChB,EAAK4D,wBAA0B,EAAKA,wBAAwBljC,KAA7B,SAXK,E,yDA0B1B0d,GACV,MAAM,IAAI3V,MAAJ,iDAAoDnF,KAAK7D,KAAzD,Q,6BAYD2e,GACL,MAAM,IAAI3V,MAAJ,4CAA+CnF,KAAK7D,KAApD,Q,wCAeU2e,GAAK,IACbkN,EAAkBlN,EAAIvG,OAAtByT,cAERhoB,KAAK28B,iBAAmB3U,EAAc5Q,MAIlCpX,KAAK08B,UACP18B,KAAKugC,OAAOzlB,K,2CAYKA,GACnB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAA2BkE,EAA3BlE,QAASgR,EAAkB9M,EAAlB8M,cASjB,OAPAhoB,KAAKwgC,eAAe1lB,GAEpB9a,KAAK28B,iBAAmB3U,EAAc5Q,MACtCpX,KAAK08B,UAAW,EAChB18B,KAAKygC,0BAA0BzpB,GAC/BhX,KAAKugC,OAAOzlB,IAEL,I,qCAWMA,GACb,IAAMI,EAAYJ,EAAIvG,OAChByC,EAAUkE,EAAUlE,QAClBtB,EAA2ByqB,GAA3BzqB,cAHU,EAGiByqB,GAAZpe,QAOXmE,WAAWlP,GAJrBkP,EANgB,EAMhBA,WACA/M,EAPgB,EAOhBA,WACAM,EARgB,EAQhBA,oBACAP,EATgB,EAShBA,oBAGIsB,EACJxa,KAAK0gC,YAAYxlB,IAAclb,KAAK0V,cAAc2qB,mBAUpD,GARArgC,KAAK2gC,eAAiB,CACpBza,aACA/M,aACAM,sBACAP,sBACAsB,eAGE9E,EAAcgQ,aAAc,CAC9B,IAAMzD,EAAoBiE,EAAWnM,UAAUpL,QAE/C3O,KAAK2gC,eAAe1e,kBAAoBA,K,mCAY/BnH,GAWX,IAXgB,IACRpF,EAA2ByqB,GAA3BzqB,cAAe2S,EAAY8X,GAAZ9X,QADP,EAE4BroB,KAAK2gC,eAAzCza,EAFQ,EAERA,WAAYzM,EAFJ,EAEIA,oBAId7Z,EADa,IAAIoa,IAAIkM,EAAWnM,WACVtN,SAEtBwN,EAAqB,GACvBnP,GAAO,GAEHA,GAAM,CACZ,IAAMD,EAAOjL,EAASiL,QAEtBC,EAAOD,EAAKC,OAGVmP,EAAmBvV,KAAKmG,EAAKhO,OAMjC,GAFAqpB,EAAWjM,mBAAqBA,EAE5BvE,EAAcgQ,aAAc,KAGxBI,EAAY,CAChBrC,aAAchK,EACdpZ,KAAM2hB,GAJsBhiB,KAAK2gC,eAA3B1e,kBACaiE,EAAWnM,YAMhCsO,EAAQc,UAAUnpB,KAAKgX,QAAS,CAAC8O,IAGnChE,GAA6B9hB,KAAKgX,W,wCAelB8D,GAAK,IACbkN,EAAkBlN,EAAIvG,OAAtByT,cAERhoB,KAAK28B,iBAAmB3U,EAAc5Q,Q,qCASzB0D,GACb,IACM9D,EADY8D,EAAIvG,OACIyC,QAGtB4pB,GAAuB5pB,EAAShX,KAAK7D,OAEvC6D,KAAKw8B,YAAY1hB,K,sCAYLA,GACd,IACE5D,EAAStF,YAAYkX,YAAY9oB,KAAKgX,SACtC,MAAO/V,GAGP,U,8CAYoB6Z,GACtB,IACM9D,EADY8D,EAAIvG,OACIyC,QAE1BhX,KAAK6gC,aAAa/lB,GAElB9a,KAAK08B,UAAW,EAChB18B,KAAK48B,gBAAiB,EACtB58B,KAAK8gC,yBAAyB9pB,K,uCAGf8D,GACX9a,KAAK08B,WAEP18B,KAAK6gC,aAAa/lB,GAClB9a,KAAKwgC,eAAe1lB,M,gDAYE9D,GACxBA,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUnS,KAAKsgC,yBAClDtpB,EAAQ+pB,oBACN9uB,EAAOM,YACPvS,KAAKsgC,yBAGPtpB,EAAQgqB,iBAAiB/uB,EAAOE,SAAUnS,KAAKsgC,yBAC/CtpB,EAAQgqB,iBAAiB/uB,EAAOM,YAAavS,KAAKsgC,yBAElDppB,EAAStF,YAAYkX,YAAY9R,K,+CAWVA,GACvBA,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUnS,KAAKsgC,yBAClDtpB,EAAQ+pB,oBACN9uB,EAAOM,YACPvS,KAAKsgC,yBAGPppB,EAAStF,YAAYkX,YAAY9R,K,0CAcf,IACVtB,EAA2ByqB,GAA3BzqB,cAAe2S,EAAY8X,GAAZ9X,QACjB4Y,EAAYvrB,EAAcsJ,OAC5BkK,EAAY3lB,KAAK4b,MAAkB,IAAZ8hB,GAIvB/X,IAAc+X,IAChB/X,GAAa,GAGfb,EAAQrJ,OAAOkK,K,0CAUG,IACVxT,EAA2ByqB,GAA3BzqB,cAAe2S,EAAY8X,GAAZ9X,QACjB4Y,EAAYvrB,EAAcsJ,OAC1BkK,EAAY3lB,KAAK4b,MAAkB,GAAZ8hB,GAE7B5Y,EAAQrJ,OAAOkK,K,kCAGLhO,GACV,OAAQA,EAAU5G,OAAS4G,EAAU5G,MAAM4sB,SAAYhmB,EAAUgmB,Y,GA7UzCzD,ICNb,YAAStT,GACtB,OAAOA,EAAMjM,QACX,SAAA4M,GAAI,QACDA,EAAKqW,iBACJrW,aAAgBsW,IAChBtW,aAAgBsV,QCZT,SAASiB,GACtBrqB,EACAsqB,GAEA,IACInX,EAuBJ,GArBwB,WAHxB,uDADkB,SAMhBA,GADAA,EAAQoX,GAAyBvqB,EAAS+K,GAAQiJ,eACpC9M,QAAO,SAAA4M,GAAI,OAAIA,EAAKlhB,QAAQulB,kBAM1ChF,GAHAA,EAAQoX,GAAyBvqB,EAAS+K,GAAQ8I,eAGpC3M,QACZ,SAAA4M,GAAI,OACFnjB,MAAMsB,QAAQ6hB,EAAKlhB,QAAQijB,kBAC3ByU,GACAxW,EAAKlhB,QAAQijB,gBAAgB5F,SAASqa,IACtCxW,EAAKlhB,QAAQmlB,iBAGbte,GAAM+wB,wBACRrX,EAAQsX,GAAqCtX,KAI5B,IAAjBA,EAAMjsB,OAIV,OAAOisB,EAAM,GC3Bf,IAAMtR,GAASL,EAAU,+BAEnBkpB,GAAc,CAClBC,MAAO,CAAC1vB,EAAOI,YACfuvB,MAAO,CAAC3vB,EAAOY,aAGXgvB,GAAiB,CACrBF,MAAO,CAAC1vB,EAAOE,SAAUF,EAAOM,aAChCqvB,MAAO,CACL3vB,EAAOW,UACPX,EAAOa,eACPb,EAAOc,YACPd,EAAOgB,YACPhB,EAAOiB,MAsBI,cAEbiZ,EACA2V,EACA5yB,GAIA,IAPE8H,EAOF,EAPEA,QAIFpN,EAGA,uDAHU,GACV0iB,EAEA,uDAFkB,QAClByV,EACA,uCAEAn4B,EAAUtN,OAAOotB,OACf,CACEgB,2BAA4Bja,GAAMia,2BAClCC,0BAA2Bla,GAAMka,2BAEnC/gB,GAGF,IAAMo4B,EAAcC,GAAa7kC,KAC/B4C,KACAmsB,EACA2V,EACAl4B,EACA0iB,GAGI4V,EAAiB,SAAjBA,EAAiBpnB,GACrBqnB,GACEhW,EACA2V,EACAl4B,EACA0iB,EACA,CACE0V,cACAE,kBAEFpnB,EACAinB,IAIJD,EAAWxL,QAAS,EACpB7lB,GAAM2Z,cAAe,EAGrBsX,GAAYpV,GAAiBrmB,SAAQ,SAAAm8B,GACnCprB,EAAQgqB,iBAAiBoB,EAAWJ,MAEtCH,GAAevV,GAAiBrmB,SAAQ,SAAAm8B,GACtCprB,EAAQgqB,iBAAiBoB,EAAWF,OAIxC,SAASD,GACP9V,EACA2V,GAIA,IAHAl4B,EAGA,uDAHU,GACV0iB,EAEA,uCADAxR,EACA,yCACoCA,EAAIvG,OAAhCyC,EADR,EACQA,QAASI,EADjB,EACiBA,MAAOkqB,EADxB,EACwBA,QADxB,EAEiBxmB,EAAIvG,OAAO8tB,YAAYjrB,MAAhCsD,EAFR,EAEQA,EAAGnR,EAFX,EAEWA,EAEXu4B,EAAWxL,QAAS,EACpBwL,EAAWQ,aAAc,EAIzB,IAFA,IAAM9L,EAAal6B,OAAO0J,KAAK87B,EAAWviB,SAEjC3jB,EAAI,EAAGA,EAAI46B,EAAWt4B,OAAQtC,IAAK,CAC1C,IAAMuB,EAAMq5B,EAAW56B,GACjBsT,EAAS4yB,EAAWviB,QAAQpiB,IAIF,IAA9B+R,EAAOqzB,oBAENrzB,EAAOzR,eAAe,MACtByR,EAAOzR,eAAe,OAKzByR,EAAOwL,GAAKA,EACZxL,EAAO3F,GAAKA,EAERK,EAAQ+gB,2BACVqV,GAAU9wB,EAAQkI,IAItBF,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAMwrB,EAAanB,GAAcrqB,EAASsqB,EAAShV,GAE/CkW,aAAsBpB,IACxBoB,EAAWC,kBAAkBrrB,EAAOJ,EAAS8qB,GAU/C1tB,EAAa4C,EAPK/E,EAAO0B,qBACC,CACxBwY,WACAnV,UACAgB,gBAAiB8pB,IAKnBhnB,EAAI4nB,iBACJ5nB,EAAI6nB,kBAGN,SAASR,GACPhW,EACA2V,GAMA,IALAl4B,EAKA,uDALU,GACV0iB,EAIA,gFAHE0V,EAGF,EAHEA,YAAaE,EAGf,EAHeA,eACfpnB,EAEA,uCADAinB,EACA,uCACM7mB,EAAYJ,EAAIvG,OAChByC,EAAU8D,EAAIvG,OAAOyC,QAE3B8qB,EAAWxL,QAAS,EACpBwL,EAAWQ,aAAc,EACzB7xB,GAAM2Z,cAAe,EAGrBsX,GAAYpV,GAAiBrmB,SAAQ,SAAAm8B,GACnCprB,EAAQ+pB,oBAAoBqB,EAAWJ,MAEzCH,GAAevV,GAAiBrmB,SAAQ,SAAAm8B,GACtCprB,EAAQ+pB,oBAAoBqB,EAAWF,MAKvCt4B,EAAQ8gB,4BACRkY,GAAuB1nB,EAAW4mB,EAAWviB,UAE7CrH,EAAgBlB,EAASmV,EAAU2V,GAGK,mBAA/Bl4B,EAAQm4B,qBACjBlpB,GAAOH,KACL,iIAEF9O,EAAQm4B,sBAGwB,mBAAvBA,GACTA,IAGF7qB,EAAStF,YAAYkX,YAAY9R,GC9LnC,IAAM6B,GAASL,EAAU,2BAEnBqqB,GAAe,CACnBhmC,OAAO,GAGH6kC,GAAc,CAClBC,MAAO,CAAC1vB,EAAOI,YACfuvB,MAAO,CAAC3vB,EAAOY,aAGXgvB,GAAiB,CACrBF,MAAO,CAAC1vB,EAAOE,SAAUF,EAAOM,aAChCqvB,MAAO,CACL3vB,EAAOW,UACPX,EAAOa,eACPb,EAAOc,YACPd,EAAOgB,YACPhB,EAAOiB,MAsBI,YACbqjB,EACApK,EACA2V,EACA5yB,GAIA,IAHAtF,EAGA,uDAHU,GACV0iB,EAEA,uDAFkB,QAClByV,EACA,uCAEAn4B,EAAUtN,OAAOotB,OACf,CACEgB,2BAA4Bja,GAAMia,2BAClCC,0BAA2Bla,GAAMka,2BAEnC/gB,GAGF,IAAMoN,EAAUuf,EAAUvf,QACpBgrB,EAAcC,GAAa7kC,KAC/B4C,KACAmsB,EACA2V,EACA5yB,EACAtF,EACA0iB,GAGI4V,EAAiB,SAAjBA,EAAiBpnB,GACrBqnB,GACEhW,EACAoK,EACAuL,EACA5yB,EACAtF,EACA0iB,EACA,CACE0V,cACAE,kBAEFpnB,EACAinB,IAmBJ,GAfA7yB,EAAOonB,QAAS,EAChBwL,EAAWxL,QAAS,EACpB7lB,GAAM2Z,cAAe,EAGrBsX,GAAYpV,GAAiBrmB,SAAQ,SAAAm8B,GACnCprB,EAAQgqB,iBAAiBoB,EAAWJ,MAEtCH,GAAevV,GAAiBrmB,SAAQ,SAAAm8B,GACtCprB,EAAQgqB,iBAAiBoB,EAAWF,MAMd,UAApB5V,EAA6B,CAC/BuW,GAAahmC,OAAQ,EACrB,IAAMoa,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAIxD8rB,GAAkB,GAElBC,EAAc,CAClBroB,EAAG6b,EAAUvO,cAAcgb,KAAKtoB,EAChCnR,EAAGgtB,EAAUvO,cAAcgb,KAAKz5B,EAAIu5B,GAGhCG,EAAiB/rB,EAAStF,YAAYsxB,YAC1ClsB,EACA+rB,EAAYroB,EACZqoB,EAAYx5B,GAGd45B,GAASj0B,EAAQ2zB,GAAc5rB,EAAgBgsB,KAInD,SAAShB,GACP9V,EACA2V,EACA5yB,EACAtF,EACA0iB,EACAxR,GACA,MACmDA,EAAIvG,OAA/C6C,EADR,EACQA,MAAO4Q,EADf,EACeA,cAAehR,EAD9B,EAC8BA,QAASsqB,EADvC,EACuCA,QACjC0B,EAAOhb,EAAcgb,KAErBC,EAAiB/rB,EAAStF,YAAYsxB,YAC1ClsB,EACAgsB,EAAKtoB,EACe,UAApB4R,EAA8B0W,EAAKz5B,GAJf,GAIkCy5B,EAAKz5B,GAG7Ds5B,GAAahmC,OAAQ,EACrBqS,EAAOonB,QAAS,EAChBpnB,EAAOkqB,UAAW,EAClBlqB,EAAOwL,EAAIuoB,EAAevoB,EAC1BxL,EAAO3F,EAAI05B,EAAe15B,EAE1Bu4B,EAAWQ,aAAc,EAErB14B,EAAQ+gB,2BACVqV,GAAU9wB,EAAQkI,GAGpBF,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAMwrB,EAAanB,GAAcrqB,EAASsqB,EAAShV,GAE/CkW,aAAsBpB,IACxBoB,EAAWC,kBAAkBrrB,EAAOJ,EAAS8qB,GAU/C1tB,EAAa4C,EAPK/E,EAAO0B,qBACC,CACxBwY,WACAnV,UACAgB,gBAAiB8pB,IAMrB,SAASK,GACPhW,EACAoK,EACAuL,EACA5yB,GAMA,IALAtF,EAKA,uDALU,GACV0iB,EAIA,gFAHE0V,EAGF,EAHEA,YAAaE,EAGf,EAHeA,eACfpnB,EAEA,uCADAinB,EACA,uCACM3qB,EAAQmf,EAAUvO,cAAc5Q,MAChCJ,EAAU8D,EAAIvG,OAAOyC,QAE3B9H,EAAOonB,QAAS,EAChBwL,EAAWxL,QAAS,EAEpBwL,EAAWQ,aAAc,EACzB7xB,GAAM2Z,cAAe,EACrByY,GAAahmC,OAAQ,EAGrB6kC,GAAYpV,GAAiBrmB,SAAQ,SAAAm8B,GACnCprB,EAAQ+pB,oBAAoBqB,EAAWJ,MAEzCH,GAAevV,GAAiBrmB,SAAQ,SAAAm8B,GACtCprB,EAAQ+pB,oBAAoBqB,EAAWF,MAKvCt4B,EAAQ8gB,4BACRkY,GAAuBrM,EAAWuL,EAAWviB,UAE7CrH,EAAgBlB,EAASmV,EAAU2V,GAIjChnB,EAAIvZ,OAAS0Q,EAAOgB,cACtB6H,EAAIvG,OAAO6uB,cAAgBtB,EAC3B5yB,EAAOwL,EAAItD,EAAMsD,EACjBxL,EAAO3F,EAAI6N,EAAM7N,GAGuB,mBAA/BK,EAAQm4B,qBACjBlpB,GAAOH,KACL,iIAGF9O,EAAQm4B,sBAGwB,mBAAvBA,GACTA,IAGF7qB,EAAStF,YAAYkX,YAAY9R,GAcnC,SAASmsB,GAASj0B,EAAQ2zB,EAAc5rB,EAAgBgsB,GACtD,GAAKJ,EAAahmC,MAAlB,CAKA,IAAMwmC,EAAoB9/B,KAAKC,IAAI0L,EAAO3F,EAAI05B,EAAe15B,GACvD+5B,EAAsBD,EAAoB,GAEhD,GAAIA,EAAoB,EAItB,OAHAn0B,EAAO3F,EAAI05B,EAAe15B,OAC1Bs5B,EAAahmC,OAAQ,GAKnBqS,EAAO3F,EAAI05B,EAAe15B,EAC5B2F,EAAO3F,GAAK+5B,EACHp0B,EAAO3F,EAAI05B,EAAe15B,IACnC2F,EAAO3F,GAAK+5B,GAIdpsB,EAAStF,YAAYkX,YAAY7R,EAAeD,SAGhDE,EAAStF,YAAY2xB,uBAAsB,WACzCJ,GAASj0B,EAAQ2zB,EAAc5rB,EAAgBgsB,OC3QnD,IAAMpqB,GAASL,EAAU,8BAEnBgrB,GAAc,CAClB7B,MAAO,CAAC1vB,EAAOK,WAAYL,EAAOI,YAClCuvB,MAAO,CAAC3vB,EAAOY,aAGX4wB,GAAiB,CACrB9B,MAAO,CAAC1vB,EAAOE,SAAUF,EAAOM,aAChCqvB,MAAO,CAAC3vB,EAAOW,UAAWX,EAAOc,YAAad,EAAOiB,MAoBxC,YACbqjB,EACApK,EACA2V,EACA5yB,EACAtF,GAGA,IAFA0iB,EAEA,uDAFkB,QAClByV,EACA,uCAEAn4B,EAAUtN,OAAOotB,OACf,CACEgB,2BAA4Bja,GAAMia,2BAClCC,0BAA2Bla,GAAMka,2BAEnC/gB,GAGF,IAAMoN,EAAUuf,EAAUvf,QAM1B,SAAS0sB,EAAY5oB,GACnB6oB,GACExX,EACA2V,EACA5yB,EACAtF,EACA0iB,EACA,CACEoX,cACAE,kBAEF9oB,GAIJ,SAAS8oB,EAAe9oB,GACtB+oB,GACE1X,EACA2V,EACA5yB,EACAtF,EACA0iB,EACA,CACEoX,cACAE,kBAEF9oB,EACAinB,GA/BJD,EAAWxL,QAAS,EACpBpnB,EAAOonB,QAAS,EAChB7lB,GAAM2Z,cAAe,EAkCrBoZ,GAAYlX,GAAiBrmB,SAAQ,SAAAm8B,GACnCprB,EAAQgqB,iBAAiBoB,EAAWsB,MAEtC1sB,EAAQgqB,iBAAiB/uB,EAAOS,YAAaoxB,KAG/C,SAASH,GACPxX,EACA2V,EACA5yB,EACAtF,EACA0iB,EALF,EAOExR,GACA,IAFE8oB,EAEF,EAFEA,eAEF,EACmD9oB,EAAIvG,OAA/CyT,EADR,EACQA,cAAe5Q,EADvB,EACuBA,MAAOJ,EAD9B,EAC8BA,QAASsqB,EADvC,EACuCA,QAGvCmC,GAAenX,GAAiBrmB,SAAQ,SAAAm8B,GACtCprB,EAAQgqB,iBAAiBoB,EAAWwB,MAEtC,IAAMZ,EAAOhb,EAAcgb,KAErBC,EAAiB/rB,EAAStF,YAAYsxB,YAC1ClsB,EACoB,UAApBsV,EAA8B0W,EAAKtoB,GAHhB,GAGmCsoB,EAAKtoB,EACvC,UAApB4R,EAA8B0W,EAAKz5B,GAJhB,GAImCy5B,EAAKz5B,GAG7Du4B,EAAWQ,aAAc,EACzBpzB,EAAOonB,QAAS,EAChBpnB,EAAOwL,EAAIuoB,EAAevoB,EAC1BxL,EAAO3F,EAAI05B,EAAe15B,EAEtBK,GAAWA,EAAQ+gB,2BACrBqV,GAAU9wB,EAAQkI,GAGpBF,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAMwrB,EAAanB,GAAcrqB,EAASsqB,EAAShV,GAE/CkW,aAAsBpB,IACxBoB,EAAWC,kBAAkBrrB,EAAOJ,EAAS8qB,GAG/C,IAAMM,EAAYnwB,EAAO0B,qBAOzBS,EAAa4C,EAASorB,EANI,CACxBjW,WACAnV,UACAgB,gBAAiB8pB,IAMrB,SAAS+B,GACP1X,EACA2V,EACA5yB,EACAtF,EACA0iB,EALF,EAOExR,EACAinB,GACA,IAHE2B,EAGF,EAHEA,YAAaE,EAGf,EAHeA,eAGf,EACmC9oB,EAAIvG,OAA/ByC,EADR,EACQA,QACFgsB,EAFN,EACiBhb,cACUgb,KAErBC,EAAiB/rB,EAAStF,YAAYsxB,YAC1ClsB,EACoB,UAApBsV,EAA8B0W,EAAKtoB,GAHhB,GAGmCsoB,EAAKtoB,EACvC,UAApB4R,EAA8B0W,EAAKz5B,GAJhB,GAImCy5B,EAAKz5B,GAsB7D,GAlBAu4B,EAAWxL,QAAS,EACpBwL,EAAWQ,aAAc,EACzBpzB,EAAOonB,QAAS,EAChBpnB,EAAOwL,EAAIuoB,EAAevoB,EAC1BxL,EAAO3F,EAAI05B,EAAe15B,EAC1BkH,GAAM2Z,cAAe,EAGrBoZ,GAAYlX,GAAiBrmB,SAAQ,SAAAm8B,GACnCprB,EAAQ+pB,oBAAoBqB,EAAWsB,MAEzCD,GAAenX,GAAiBrmB,SAAQ,SAAAm8B,GACtCprB,EAAQ+pB,oBAAoBqB,EAAWwB,MAEzC5sB,EAAQ+pB,oBAAoB9uB,EAAOS,YAAaoxB,IAI5ChpB,EAAIvZ,OAAS0Q,EAAOc,aAAe+H,EAAIvZ,OAAS0Q,EAAOgB,YAezD,OAdA/D,EAAOonB,QAAS,EAChBpf,EAAStF,YAAYkX,YAAY9R,GACS,mBAA/BpN,EAAQm4B,qBACjBlpB,GAAOH,KACL,iIAGF9O,EAAQm4B,2BAGwB,mBAAvBA,GACTA,KAMAn4B,EAAQ+gB,2BACVqV,GAAU9wB,EAAQ4L,EAAIvG,OAAO6C,OAK7BxN,EAAQ8gB,4BACRkY,GAAuB9nB,EAAIvG,OAAQutB,EAAWviB,UAE9CrH,EAAgBlB,EAASmV,EAAU2V,GAGK,mBAA/Bl4B,EAAQm4B,qBACjBlpB,GAAOH,KACL,iIAGF9O,EAAQm4B,sBAGwB,mBAAvBA,GACTA,IAIF7qB,EAAStF,YAAYkX,YAAY9R,GAcnC,SAAS8sB,GAA0BhpB,GAGjC,OAFAA,EAAIipB,4BAEG,ECvOT,IAAMC,GAA2B,SAC/BlpB,EACAgQ,EACA3S,EACAjJ,EACAod,GAEAnU,EAASme,QAAS,EAClB7lB,GAAM2Z,cAAe,EAErB6Z,GACEnpB,EAAIvG,OACJuW,EAAK3uB,KACLgc,EACAjJ,EACA4b,EAAKlhB,QACL0iB,GAGFxR,EAAIipB,2BACJjpB,EAAI6nB,kBACJ7nB,EAAI4nB,kBAmBAwB,GAA+B,SACnCltB,EACAR,EACA2V,EACAwS,GAGA,IADA,IADArS,EACA,uDADkB,QAET1wB,EAAI,EAAGA,EAAI4a,EAAUI,KAAK1Y,OAAQtC,IAAK,CAC9C,IAAMgb,EAAOJ,EAAUI,KAAKhb,GACtBsT,EAASiwB,GACbnoB,EACAJ,EAAK2I,QACLof,EACoB,UAApBrS,EAA8B7b,GAAM8Z,eAAiB9Z,GAAM+Z,gBAG7D,GAAItb,EACF,MAAO,CACLA,SACA0H,UAuBFutB,GAAiB,SACrBrpB,EACAgQ,EACAgX,GAEA,IADAxV,EACA,uDADkB,QAElBwV,EAAWxL,QAAS,EACpB7lB,GAAM2Z,cAAe,EAErBga,GACEtpB,EAAIvG,OACJuW,EAAK3uB,KACL2lC,EACA,KACAhX,EAAKlhB,QACL0iB,GACA,WACEwV,EAAWxL,QAAS,EACpB7lB,GAAM2Z,cAAe,KAIzBtP,EAAIipB,2BACJjpB,EAAI6nB,kBACJ7nB,EAAI4nB,kBCpHA7pB,GAASL,EAAU,sBAsKV4oB,G,qJA/IQtmB,GACnB,MAAM,IAAI3V,MAAJ,0DAC+CnF,KAAK7D,KADpD,Q,oCAmBM6a,EAASJ,EAAM+nB,GAAmC,wDAC9D,MAAM,IAAIx5B,MAAJ,mDAAsDnF,KAAK7D,KAA3D,Q,wCAiBU6a,EAASJ,EAAM+nB,GAC/B,MAAM,IAAIx5B,MAAJ,uDAC4CnF,KAAK7D,KADjD,Q,qCAaO2e,GACb,MAAM,IAAI3V,MAAJ,6CAAgDnF,KAAK7D,KAArD,Q,wCAeU2e,GAOhB,IAPqB,MACcA,EAAIvG,OAA/ByC,EADa,EACbA,QACF2nB,EAFe,EACJ3W,cACYwR,OACvBhjB,EAAYyB,EAAajB,EAAShX,KAAK7D,MAEzCkoC,GAAmB,EAEdnoC,EAAI,EAAGA,EAAIsa,EAAUI,KAAK1Y,OAAQhC,IAAK,CAC9C,IAAM0a,EAAOJ,EAAUI,KAAK1a,IAG2B,IAAnDooC,GAAgBttB,EAASJ,EAAK2I,QAASof,KACzC0F,GAAmB,GAKrB,IAAME,EACJvkC,KAAKwkC,cAAcxtB,EAASJ,EAAM+nB,EAAQ,WAAa/nB,EAAK0f,OACxDmO,GACHzkC,KAAKwkC,cAAcxtB,EAASJ,EAAM+nB,EAAQ,UAAY/nB,EAAK0f,QAE1DiO,GAA8BE,KAChC7tB,EAAK0f,QAAU1f,EAAK0f,OACpB+N,GAAmB,GAIvB,OAAOA,I,6CAccvpB,EAAK3C,EAAUjJ,GAAmC,IAA3Bod,EAA2B,uDAAT,QAC9D0X,GAAyBlpB,EAAK9a,KAAMmY,EAAUjJ,EAAQod,K,2CAcnCxR,EAAKgnB,GAAuC,IAA3BxV,EAA2B,uDAAT,QACtD6X,GAAerpB,EAAK9a,KAAM8hC,EAAYxV,K,wCAWtBlV,EAAOJ,EAASJ,GAEhCiC,GAAOH,KAAP,gDAAqD1Y,KAAK7D,KAA1D,U,GA1J6BshC,ICJlB,YAASzmB,EAAS2I,EAAOC,EAAK+e,GAC3C,IAAM/sB,EAAcsF,EAAStF,YAEvB8yB,EAAc,CAClB/kB,MAAO/N,EAAYqf,cAAcja,EAAS2I,GAC1CC,IAAKhO,EAAYqf,cAAcja,EAAS4I,IAG1C,OAAO1I,EAASrF,gBAAgB6yB,YAAYC,gBAC1CD,EACA/F,ICdW,YAAS9hC,EAAO+nC,GAC7B,IAAMC,EAAathC,KAAKib,IAAI,GAAIomB,GAEhC,OAAOrhC,KAAKoG,MAAM9M,EAAQgoC,GAAcA,GCTpCC,GAAehpC,GAAQuvB,OAaR0Z,G,WACnB,WAAYC,EAAiBp7B,GAAS,YACpC5J,KAAKglC,gBAAkBA,EACvBhlC,KAAK4J,QAAUtN,OAAOotB,OACpB,GACAob,GAAa/iB,QAAQyH,iBACrB5f,G,iDAUqB,IAAdA,EAAc,uDAAJ,GACbq7B,EAAYjlC,KAAKklC,uBAAuBt7B,GAE9C,OAAO,IAAIu7B,KAAK,CAACF,GAAY,CAAE1jC,KAAM,oB,yCASR,IAAdqI,EAAc,uDAAJ,GACzB,OAAO5J,KAAKklC,uBAAuBt7B,K,8CASD,IAAdA,EAAc,uDAAJ,GACxBq7B,EAAYjlC,KAAKolC,kCAAkCx7B,GAEzD,OAAO,IAAIu7B,KAAK,CAACF,GAAY,CAAE1jC,KAAM,oB,iDASA,IAAdqI,EAAc,uDAAJ,GACjC,OAAO5J,KAAKolC,kCAAkCx7B,K,0DAoBA,IAAdA,EAAc,uDAAJ,GACpCy7B,EAAa/oC,OAAOotB,OAAO,GAAI1pB,KAAK4J,QAASA,GAC3C2f,EAA+C8b,EAA/C9b,wBAAyBH,EAAsBic,EAAtBjc,SAAUC,EAAYgc,EAAZhc,QAErCgM,EAAQjM,EAAW7lB,KAAKsc,IAAIwJ,EAAQ3O,EAAG2O,EAAQ9f,GAC/C+7B,EAAU,GAAKlc,EAEf6b,EAAY,4GAAH,OAGFK,EAHE,qBAGkBA,EAHlB,0BAG2CA,EAH3C,YAGsDA,EAHtD,8CAMP/b,EANO,yEAQ6B8L,EAR7B,0BASPr1B,KAAKglC,gBATE,gCAaf,OAAOhlC,KAAKulC,cAAcN,EAAWI,K,+CASF,IAAdz7B,EAAc,uDAAJ,GACzBy7B,EAAa/oC,OAAOotB,OAAO,GAAI1pB,KAAK4J,QAASA,GAC3Cwf,EAAsBic,EAAtBjc,SAAUC,EAAYgc,EAAZhc,QAEZ4b,EAAY,0GAAH,OAGF7b,EAHE,qBAGmBA,EAHnB,mCAITC,EAAQ3O,EAJC,YAII2O,EAAQ9f,EAJZ,+BAMTvJ,KAAKglC,gBANI,kBASf,OAAOhlC,KAAKulC,cAAcN,EAAWI,K,oCAUzBJ,GAAyB,IAAdr7B,EAAc,uDAAJ,GAC3BgsB,EAAchsB,EAAQgsB,aAAeE,GAAWM,iBAChDoP,EAAY57B,EAAQ47B,WAAa1P,GAAWI,eAC5CL,EAAYjsB,EAAQisB,WAAaC,GAAWE,eAElD,OAAOiP,EACJvkC,QAAQ,gBADJ,UACwBk1B,IAC5Bl1B,QAAQ,cAFJ,UAEsB8kC,IAC1B9kC,QAAQ,cAHJ,UAGsBm1B,M,iCAvE7B,IAAMvM,EAAatpB,KAAK4J,QAAQ0f,WAEhC,gBAAUA,EAAW5O,EAArB,YAA0B4O,EAAW/f,O,KCjE5Bk8B,GAAc,IAAIV,GAAJ,yNAKzB,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKIm8B,GAAsB,IAAIX,GAAJ,kOAIjC,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIo8B,GAAsB,IAAIZ,GAAJ,u0BASjC,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIq8B,GAAkB,IAAIb,GAAJ,mVAS7B,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIs8B,GAAkB,IAAId,GAAJ,uFAE7B,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIu8B,GAAsB,IAAIf,GAAJ,8NAKjC,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIw8B,GAAoB,IAAIhB,GAAJ,k9EAkC/B,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIy8B,GAA4B,IAAIjB,GAAJ,4wFAmCvC,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKI08B,GAAe,IAAIlB,GAAJ,uOAI1B,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKI28B,GAAc,IAAInB,GAAJ,8XAOzB,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKI48B,GAAqB,IAAIpB,GAAJ,+SAMhC,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKI68B,GAAmB,IAAIrB,GAAJ,mpBAW9B,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKI88B,GAAmB,IAAItB,GAAJ,qvBAa9B,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKI+8B,GAAe,IAAIvB,GAAJ,oTAM1B,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKIg9B,GAAgB,IAAIxB,GAAJ,4YAO3B,CACE1b,QAAS,CACP3O,EAAG,IACHnR,EAAG,OAKIi9B,GAAY,IAAIzB,GAAJ,ohBASvB,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKIk9B,GAAe,IAAI1B,GAAJ,mfAS1B,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKIm9B,GAAoB,IAAI3B,GAAJ,kXAO/B,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIo9B,GAAmB,IAAI5B,GAAJ,gMAK9B,CACE1b,QAAS,CACP3O,EAAG,KACHnR,EAAG,QAKIq9B,GAAa,IAAI7B,GAAJ,oLAGxB,CACE1b,QAAS,CACP3O,EAAG,GACHnR,EAAG,MAKIs9B,GAAa,IAAI9B,GAAJ,ktBAYxB,CACE1b,QAAS,CACP3O,EAAG,IACHnR,EAAG,OAKHu9B,GAA0B,CAC9BpsB,EAAG,IACHnR,EAAG,IAGCw9B,GAAY,eAACzmC,EAAD,uDAAS,eAAT,4BACDA,EADC,yDAGZ0mC,GAAW,eACf1mC,EADe,uDACP,eADO,4BAEGA,EAFH,mFAGGA,EAHH,wDAKX2mC,GAAc,8iBACdC,GAAgB,kIAChBC,GAAa,kNAENC,GAA4B,IAAIrC,GAAJ,UACpCkC,GADoC,YACrBF,MAClB,CACE1d,QAASyd,KAIAO,GAA2B,IAAItC,GAAJ,UACnCkC,GADmC,YACpBD,MAClB,CACE3d,QAASyd,KAIAQ,GAA6B,IAAIvC,GAAJ,UACrCkC,GADqC,YACtBF,MAClB,CACE1d,QAASyd,KAIAS,GAA4B,IAAIxC,GAAJ,UACpCkC,GADoC,YACrBD,MAClB,CACE3d,QAASyd,KAIAU,GAAgC,IAAIzC,GAAJ,UACxCmC,GADwC,YACvBH,MACpB,CACE1d,QAASyd,KAIAW,GAA+B,IAAI1C,GAAJ,UACvCmC,GADuC,YACtBF,MACpB,CACE3d,QAASyd,KAIAY,GAAiC,IAAI3C,GAAJ,UACzCmC,GADyC,YACxBH,MACpB,CACE1d,QAASyd,KAIAa,GAAgC,IAAI5C,GAAJ,UACxCmC,GADwC,YACvBF,MACpB,CACE3d,QAASyd,KAIAc,GAA6B,IAAI7C,GAAJ,UACrCoC,GADqC,YACvBJ,MACjB,CACE1d,QAASyd,KAIAe,GAA4B,IAAI9C,GAAJ,UACpCoC,GADoC,YACtBH,MACjB,CACE3d,QAASyd,KAIAgB,GAA8B,IAAI/C,GAAJ,UACtCoC,GADsC,YACxBJ,MACjB,CACE1d,QAASyd,KAIAiB,GAA6B,IAAIhD,GAAJ,UACrCoC,GADqC,YACvBH,MACjB,CACE3d,QAASyd,KC9dE,SAASkB,GAAgB5wB,GACtC,IAAM8a,EAAahb,EAAStF,YAAY0U,SAAS7pB,IAC/C,mBACA2a,EAAMV,SAGR,OAAIwb,EACK,CACLnL,gBACEmL,EAAWnL,iBAAmBmL,EAAW+V,qBAC3CC,gBACEhW,EAAWlL,oBAAsBkL,EAAWiW,sBAI3C,CACLphB,gBAAiB3P,EAAM2P,gBACvBmhB,gBAAiB9wB,EAAM4P,oBCUZohB,OANf,SAAkBvrC,GAChB,IAAM0E,EAAO,IAAO1E,GAEpB,OAAiB,OAAVA,IAA4B,WAAT0E,GAA8B,aAATA,ICgMlC8mC,OA3Jf,SAAkBC,EAAMC,EAAM3+B,GAC5B,IAAI4+B,EAAUC,EAAUC,EAAS76B,EAAQ86B,EAASC,EAE9CC,EAAiB,EACjBC,GAAU,EACVC,GAAS,EACTC,GAAW,EAGTC,GACHV,GAAiB,IAATA,GAAsD,mBAAjC/sC,OAAO+nC,sBAEvC,GAAoB,mBAAT+E,EACT,MAAM,IAAIxqC,UAAU,uBAUtB,SAASorC,EAAWC,GAClB,IAAMppC,EAAOyoC,EACPY,EAAUX,EAMhB,OAJAD,EAAWC,OAAW/9B,EACtBm+B,EAAiBM,EACjBt7B,EAASy6B,EAAKjkC,MAAM+kC,EAASrpC,GAK/B,SAASspC,EAAWC,EAAaf,GAC/B,OAAIU,EACKztC,OAAO+nC,sBAAsB+F,GAG/B7iC,WAAW6iC,EAAaf,GA8BjC,SAASgB,EAAaJ,GACpB,IAAMK,EAAoBL,EAAOP,EAMjC,YACmBl+B,IAAjBk+B,GACAY,GAAqBjB,GACrBiB,EAAoB,GACnBT,GATyBI,EAAON,GASCH,EAItC,SAASe,IACP,IAAMN,EAAOtlC,KAAK6lC,MAElB,GAAIH,EAAaJ,GACf,OAAOQ,EAAaR,GAGtBR,EAAUU,EAAWI,EAhCvB,SAAuBN,GACrB,IACMS,EAAsBT,EAAON,EAC7BgB,EAActB,GAFMY,EAAOP,GAIjC,OAAOG,EACHxlC,KAAK6b,IAAIyqB,EAAanB,EAAUkB,GAChCC,EAyB+BC,CAAcX,IAGnD,SAASQ,EAAaR,GAKpB,OAJAR,OAAUj+B,EAINs+B,GAAYR,EACPU,EAAWC,IAEpBX,EAAWC,OAAW/9B,EAEfmD,GAmBT,SAASk8B,IAAmB,IAC1B,IAAMZ,EAAOtlC,KAAK6lC,MACZM,EAAaT,EAAaJ,GAFN,mBAANppC,EAAM,yBAANA,EAAM,gBAQ1B,GAJAyoC,EAAWzoC,EACX0oC,EAAWzoC,KACX4oC,EAAeO,EAEXa,EAAY,CACd,QAAgBt/B,IAAZi+B,EACF,OApFN,SAAqBQ,GAOnB,OALAN,EAAiBM,EAEjBR,EAAUU,EAAWI,EAAclB,GAG5BO,EAAUI,EAAWC,GAAQt7B,EA6EzBo8B,CAAYrB,GAErB,GAAIG,EAIF,OAFAJ,EAAUU,EAAWI,EAAclB,GAE5BW,EAAWN,GAOtB,YAJgBl+B,IAAZi+B,IACFA,EAAUU,EAAWI,EAAclB,IAG9B16B,EAMT,OAzIA06B,EAAO3kC,OAAO2kC,IAAS,EACnBH,GAASx+B,KACXk/B,EAAUoB,QAAQtgC,EAAQk/B,SAE1BJ,GADAK,EAAS,YAAan/B,GACHrG,KAAKsc,IAAIjc,OAAOgG,EAAQ8+B,UAAY,EAAGH,GAAQG,EAClEM,EAAW,aAAcp/B,EAAUsgC,QAAQtgC,EAAQo/B,UAAYA,GAgIjEe,EAAUI,OAzCV,gBACkBz/B,IAAZi+B,GAlEN,SAAqByB,GACnB,GAAInB,EACF,OAAOztC,OAAO6uC,qBAAqBD,GAErCzjC,aAAayjC,GA+DXE,CAAY3B,GAEdE,EAAiB,EACjBL,EAAWI,EAAeH,EAAWE,OAAUj+B,GAqCjDq/B,EAAUQ,MAlCV,WACE,YAAmB7/B,IAAZi+B,EAAwB96B,EAAS87B,EAAa9lC,KAAK6lC,QAkC5DK,EAAUS,QA/BV,WACE,YAAmB9/B,IAAZi+B,GAgCFoB,GCjJMU,OAnBf,SAAkBnC,EAAMC,EAAM3+B,GAC5B,IAAIk/B,GAAU,EACVE,GAAW,EAEf,GAAoB,mBAATV,EACT,MAAM,IAAIxqC,UAAU,uBAOtB,OALIsqC,GAASx+B,KACXk/B,EAAU,YAAal/B,EAAUsgC,QAAQtgC,EAAQk/B,SAAWA,EAC5DE,EAAW,aAAcp/B,EAAUsgC,QAAQtgC,EAAQo/B,UAAYA,GAG1DX,GAASC,EAAMC,EAAM,CAC1BO,UACAE,WACAN,QAASH,KC3BQmC,G,YACnB,aAAwB,MAAZzsC,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,QACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAWga,GACX/vB,cAAe,CACbi1B,aAAa,IANK,OAUtB,4BAAM1sC,EAAOy/B,KAERkN,uBAAwB,EAE7B,EAAKC,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAd7C,E,kEAiBHvnB,GAEnB,MAAO,CACL4vB,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACb/iB,QAAS,CACPI,MAAO,CACLjF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEV0U,OAAQ,CACNtwB,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEVwC,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,O,oCAMVhoB,EAASJ,EAAM+nB,GAC3B,OAAqB,IAAjB/nB,EAAKk0B,UAKPG,GACEj0B,EACAJ,EAAK2I,QAAQI,MACb/I,EAAK2I,QAAQyrB,OACbrM,GACE,IACJsM,GAAgBj0B,EAASJ,EAAK2I,QAAQyrB,OAAQp0B,EAAK2I,QAAQK,IAAK+e,GAC9D,M,wCAIYvnB,EAAOJ,EAASJ,GAAM,MACOoxB,GAAgB5wB,GAArD2P,EAD8B,EAC9BA,gBAAiBmhB,EADa,EACbA,gBAEnBgD,EAAQ,CACZxwB,GAAI9D,EAAK2I,QAAQyrB,OAAOtwB,EAAI9D,EAAK2I,QAAQI,MAAMjF,GAAKwtB,EACpD3+B,GAAIqN,EAAK2I,QAAQyrB,OAAOzhC,EAAIqN,EAAK2I,QAAQI,MAAMpW,GAAKwd,GAGhDokB,EAAQ,CACZzwB,GAAI9D,EAAK2I,QAAQK,IAAIlF,EAAI9D,EAAK2I,QAAQyrB,OAAOtwB,GAAKwtB,EAClD3+B,GAAIqN,EAAK2I,QAAQK,IAAIrW,EAAIqN,EAAK2I,QAAQyrB,OAAOzhC,GAAKwd,GAG9CqkB,EAAQ,CACZ1wB,GAAI9D,EAAK2I,QAAQK,IAAIlF,EAAI9D,EAAK2I,QAAQI,MAAMjF,GAAKwtB,EACjD3+B,GAAIqN,EAAK2I,QAAQK,IAAIrW,EAAIqN,EAAK2I,QAAQI,MAAMpW,GAAKwd,GAG7CskB,EAAcntC,GAAOgtC,GACrBI,EAAcptC,GAAOitC,GACrBI,EAAcrtC,GAAOktC,GAGvB/Z,EAAQ9tB,KAAKioC,MACdjoC,KAAKib,IAAI6sB,EAAa,GACrB9nC,KAAKib,IAAI8sB,EAAa,GACtB/nC,KAAKib,IAAI+sB,EAAa,KACrB,EAAIF,EAAcC,IAGvBja,GAAS,IAAM9tB,KAAKiuB,GAEpB5a,EAAK60B,OAASC,GAAera,EAAO,GACpCza,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZI,EAAYJ,EAAIvG,OAChB0C,EAAiBiE,EAAUjE,eAFf,EAG2BjX,KAAK0V,cAA1C+U,EAHU,EAGVA,aAAckhB,EAHJ,EAGIA,mBAEhBxzB,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAWL,IANA,IAAMlJ,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAC9CpiB,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QAbG,EAc2BgxB,GAAgB5wB,GAArD2P,EAdU,EAcVA,gBAAiBmhB,EAdP,EAcOA,gBAEnB5X,EAAYL,GAAUE,eAhBV,WAkBTv0B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFpS,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAAS,EAAKyG,eAGxB,IAAMpV,EAAQw1B,GAAWO,iBAAiBzf,GAEpCk1B,EAAoB50B,EAAStF,YAAYqf,cAC7C/V,EAAUlE,QACVJ,EAAK2I,QAAQI,OAETosB,EAAqB70B,EAAStF,YAAYqf,cAC9C/V,EAAUlE,QACVJ,EAAK2I,QAAQyrB,QAGftZ,GACEziB,EACAiM,EAAUlE,QACVJ,EAAK2I,QAAQI,MACb,CAAC/I,EAAK2I,QAAQyrB,OAAQp0B,EAAK2I,QAAQK,KACnC,CAAEtf,UAIJ,IAAM0rC,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAgBvB,GAbI,EAAKj2B,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,IAIvB,IAArBp1B,EAAK0rB,cACH1rB,EAAK60B,OACP,EAAKZ,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,IAIvCA,EAAK60B,OAAQ,CACf,IAIIvS,EAJEf,EAiDZ,SAAqBvhB,EAAMmQ,EAAiBmhB,GAC1C,IAAM+D,EAAUllB,GAAoBmhB,EAAmC,GAAjB,eAGtD,OACEtxB,EAAK60B,OAAOzmC,WAAa8E,OAAOoiC,aAAa9pC,SAHnC,OAGiD,KAAO6pC,EAtDnDE,CAAYv1B,EAAMmQ,EAAiBmhB,GAMhD,IAAKtxB,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClCF,EAAa,CACXxe,EAAGqxB,EAAmBrxB,EACtBnR,EAAGwiC,EAAmBxiC,GAGxB,IACM6iC,EAAY9T,GAAarpB,EAASkpB,EADxB,GAGZ4T,EAAmBrxB,EAAIoxB,EAAkBpxB,EAC3Cwe,EAAWxe,GAdE,GAcc0xB,EAAY,GAEvClT,EAAWxe,GAhBE,GAmBf,IAAM2xB,EAAYn1B,EAAStF,YAAY06B,SAASC,aAC9Ct1B,GAGFo1B,EAAUG,SAEV,IAAM7N,EAAS0N,EAAUI,eAAevT,EAAWxe,EAAGwe,EAAW3vB,GAEjEqN,EAAK2I,QAAQuZ,QAAQpe,EAAIikB,EAAOjkB,EAChC9D,EAAK2I,QAAQuZ,QAAQvvB,EAAIo1B,EAAOp1B,EAGlCmjC,GACEz9B,EACAiM,EAAUlE,QACVJ,EAAK2I,QAAQuZ,QACbX,EACAvhB,EAAK2I,QACLwZ,EACAz4B,EACAgwB,EACA,GACA,QA9FC10B,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,GA6GT,SAASm9B,EAAoBxZ,GAC3B,MAAO,CAACA,EAAQI,MAAOJ,EAAQyrB,OAAQzrB,EAAQK,Q,wCAIjC9E,EAAKwR,GAAiB,WACtC,IAAItsB,KAAK4qC,sBAAT,CAIA5qC,KAAK4qC,uBAAwB,EAC7B9vB,EAAI4nB,iBACJ5nB,EAAI6nB,kBAEJ,IAAMznB,EAAYJ,EAAIvG,OAChByD,EAAkBhY,KAAK2sC,qBAAqBzxB,GAC5ClE,EAAU8D,EAAIvG,OAAOyC,QAG3Be,EAAaf,EAAShX,KAAK7D,KAAM6b,GACjCd,EAAStF,YAAYkX,YAAY9R,GAGjC41B,GACE1xB,EACAlb,KAAK7D,KACL6b,EACAA,EAAgBuH,QAAQyrB,OACxBhrC,KAAK4J,QACL0iB,GACA,WACEtU,EAAgBse,QAAS,EACzBte,EAAgBuH,QAAQK,IAAI0W,QAAS,EAErCpf,EAAStF,YAAYkX,YAAY9R,GAGjC41B,GACE1xB,EACA,EAAK/e,KACL6b,EACAA,EAAgBuH,QAAQK,IACxB,EAAKhW,QACL0iB,GACA,WACEtU,EAAgBse,QAAS,EACzB,EAAKsU,uBAAwB,EAC7B1zB,EAAStF,YAAYkX,YAAY9R,c,GA3RNoqB,IAmSvC,SAASljC,GAAO2uC,GACd,OAAOtpC,KAAKkd,KAAKld,KAAKib,IAAIquB,EAAOnyB,EAAG,GAAKnX,KAAKib,IAAIquB,EAAOtjC,EAAG,I,IC3SzCujC,G,YACnB,aAAwB,MAAZ7uC,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,gBACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbq3B,mBACAC,sBACArC,aAAa,EACbgB,oBAAoB,EACpBsB,YAAY,GAEdxhB,UAAWia,IAXS,OActB,4BAAMznC,EAAOy/B,KACRkN,uBAAwB,EAfP,E,kEAkBH9vB,GAEnB,MAAO,CACLgwB,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP6U,QAAS,CACPI,MAAO,CACLjF,EAAGI,EAAIvG,OAAOyT,cAAc5Q,MAAMsD,EAClCnR,EAAGuR,EAAIvG,OAAOyT,cAAc5Q,MAAM7N,EAClCwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,EAAGI,EAAIvG,OAAOyT,cAAc5Q,MAAMsD,EAClCnR,EAAGuR,EAAIvG,OAAOyT,cAAc5Q,MAAM7N,EAClCwhC,WAAW,EACXzU,QAAQ,GAEVwC,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,O,oCAMVhoB,EAASJ,EAAM+nB,GAC3B,OAAqB,IAAjB/nB,EAAKk0B,SAKPG,GAAgBj0B,EAASJ,EAAK2I,QAAQI,MAAO/I,EAAK2I,QAAQK,IAAK+e,GAC/D,K,kFAQW7jB,GAAK,aACkBA,EAAIvG,OAAhCyC,EADU,EACVA,QAASC,EADC,EACDA,eADC,EAE2BjX,KAAK0V,cAA1C+U,EAFU,EAEVA,aAAckhB,EAFJ,EAEIA,mBAGhBxzB,EAAWF,EAAajB,EAAShX,KAAK7D,MAE5C,GAAKgc,EAUL,IALA,IAAMqhB,EAAS1e,EAAIvG,OAAOmnB,cAAclC,OAClCvqB,EAAUwsB,GAAcjC,GAExBlJ,EAAYL,GAAUE,eAfV,WAiBTv0B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFpS,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAAS,EAAKyG,eAExB,IAAMpV,EAAQw1B,GAAWO,iBAAiBzf,GAGpCk1B,EAAoB50B,EAAStF,YAAYqf,cAC7Cja,EACAJ,EAAK2I,QAAQI,OAETutB,EAAkBh2B,EAAStF,YAAYqf,cAC3Cja,EACAJ,EAAK2I,QAAQK,KAIX,EAAKlK,cAAcu3B,WACrBE,GACEl+B,EACAi+B,EACApB,EACAxrC,EACAgwB,GAGF6c,GACEl+B,EACA68B,EACAoB,EACA5sC,EACAgwB,GAIJ,IAAM0b,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAGnB,EAAKj2B,cAAci1B,aACrBA,GAAY17B,EAAS6L,EAAIvG,OAAQqC,EAAK2I,QAASysB,GAGjD,IAAM7T,EA4DV,SAAqBvhB,GACnB,OAAOA,EAAKuhB,KA7DGgU,CAAYv1B,GAGzB,GAAIuhB,GAAiB,KAATA,EAAa,CAEvB,IACMiU,EAAY9T,GAAarpB,EAASkpB,EADxB,GAEViV,EAAa9V,GAAUM,cAAgB,GAEzC3Y,EAAW1b,KAAKsc,IAAIusB,EAAWgB,GAAc,EAAI,EAMrD,GAJIF,EAAgBxyB,EAAIoxB,EAAkBpxB,IACxCuE,GAAYA,IAGTrI,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClC,IAAIF,EAGFA,EADE,EAAKxjB,cAAcu3B,WACR,CACXvyB,EAAGwyB,EAAgBxyB,EAAI0xB,EAAY,EAAIntB,EACvC1V,EAAG2jC,EAAgB3jC,EAAI6jC,EAAa,GAKzB,CACX1yB,EAAGoxB,EAAkBpxB,EAAI0xB,EAAY,EAAIntB,EACzC1V,EAAGuiC,EAAkBviC,EAAI6jC,EAAa,GAI1C,IAAMf,EAAYn1B,EAAStF,YAAY06B,SAASC,aAC9Ct1B,GAGFo1B,EAAUG,SAEV,IAAM7N,EAAS0N,EAAUI,eAAevT,EAAWxe,EAAGwe,EAAW3vB,GAEjEqN,EAAK2I,QAAQuZ,QAAQpe,EAAIikB,EAAOjkB,EAChC9D,EAAK2I,QAAQuZ,QAAQvvB,EAAIo1B,EAAOp1B,EAGlCmjC,GACEz9B,EACA+H,EACAJ,EAAK2I,QAAQuZ,QACbX,EACAvhB,EAAK2I,QACLwZ,EACAz4B,EACAgwB,EACA,GACA,QAzGC10B,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,GAmHT,SAASm9B,EAAoBxZ,GAC3B,IAAM8tB,EAAW,CACf3yB,GAAI6E,EAAQI,MAAMjF,EAAI6E,EAAQK,IAAIlF,GAAK,EACvCnR,GAAIgW,EAAQI,MAAMpW,EAAIgW,EAAQK,IAAIrW,GAAK,GAGzC,MAAO,CAACgW,EAAQI,MAAO0tB,EAAU9tB,EAAQK,Q,wCAI3B9E,EAAKwR,GAAiB,WAChCtV,EAAU8D,EAAIvG,OAAOyC,QACrBgB,EAAkBhY,KAAK2sC,qBAAqB7xB,GAGlD/C,EAAaf,EAAShX,KAAK7D,KAAM6b,GACjCd,EAAStF,YAAYkX,YAAY9R,GAEjC41B,GACE9xB,EAAIvG,OACJvU,KAAK7D,KACL6b,EACAA,EAAgBuH,QAAQK,IACxB5f,KAAK4J,QACL0iB,GACA,gBAC+B5hB,IAAzBsN,EAAgBmgB,MAClB,EAAKziB,cAAcq3B,iBAAgB,SAAA5U,GAC7BA,EACFngB,EAAgBmgB,KAAOA,EAEvBjgB,EAAgBlB,EAAS,EAAK7a,KAAM6b,GAGtCA,EAAgBse,QAAS,EACzBpf,EAAStF,YAAYkX,YAAY9R,GAEjC5C,EAAa4C,EAAS/E,EAAO0B,qBAAsB,CACjDgD,SAAU,EAAKxa,KACf6a,UACAgB,sBAED8C,EAAIvG,QAET2C,EAAStF,YAAYkX,YAAY9R,Q,0CAKnB8D,GAClB,OAAO9a,KAAKstC,+BAA+BxyB,K,yCAG1BA,GACjB,OAAO9a,KAAKstC,+BAA+BxyB,K,qDAGdA,GAC7B,IAAM9D,EAAU8D,EAAIvG,OAAOyC,QACrB2nB,EAAS7jB,EAAIvG,OAAOyT,cAAcwR,OAClChjB,EAAYyB,EAAajB,EAAShX,KAAK7D,MAE7C,IAAKqa,EACH,OAAO,EAGT,IAAK,IAAI5a,EAAI,EAAGA,EAAI4a,EAAUI,KAAK1Y,OAAQtC,IAAK,CAC9C,IAAMgb,EAAOJ,EAAUI,KAAKhb,GAE5B,GACEoE,KAAKwkC,cAAcxtB,EAASJ,EAAM+nB,IAClCM,GAAuBroB,EAAK2I,QAAQuZ,QAAS6F,GAgB7C,OAdA/nB,EAAK0f,QAAS,EACdpf,EAAStF,YAAYkX,YAAY9R,GAGjChX,KAAK0V,cAAcs3B,mBACjBp2B,EACAkE,EAAIvG,OACJvU,KAAKutC,0BAA0BnwC,KAAK4C,KAAMgX,EAASJ,IAGrDkE,EAAIipB,2BACJjpB,EAAI4nB,iBACJ5nB,EAAI6nB,mBAEG,K,gDAKa3rB,EAASgB,EAAiBw1B,EAAaC,IAC5C,IAAfA,EACFv1B,EAAgBlB,EAAShX,KAAK7D,KAAM6b,GAEpCA,EAAgBmgB,KAAOqV,EAGzBx1B,EAAgBse,QAAS,EACzBpf,EAAStF,YAAYkX,YAAY9R,GAEjC5C,EAAa4C,EAAS/E,EAAO0B,qBAAsB,CACjDgD,SAAU3W,KAAK7D,KACf6a,UACAgB,wB,GA9SyCopB,IAmT/C,SAAS2L,GAAgBW,GACvBA,EAAyBC,OAAO,2BAGlC,SAASX,GAAmBp2B,EAAMsE,EAAWwyB,GAC3CA,EAAyBC,OAAO,4BCxVlC,IAAMC,GAAY,SAAClzB,EAAGnR,EAAG/I,GAAP,IAAcqtC,EAAd,uDAAgC,GAAhC,OAChBvxC,OAAOotB,OACL,CACEhP,IACAnR,IACA/I,QACAk2B,oBAAoB,EACpBkJ,qBAAqB,EACrBmL,WAAW,EACXzU,QAAQ,GAEVuX,IAGW,YAASC,GAAgB,MACrBA,EAAe9lB,cAAc5Q,MAAtCsD,EAD8B,EAC9BA,EAAGnR,EAD2B,EAC3BA,EA2BX,MAzBwB,CACtBoN,SAAU3W,KAAK7D,KACf4xC,YAAY,EACZjD,SAAS,EACTxU,QAAQ,EACRgM,aAAa,EACb/iB,QAAS,CACPI,MAAOiuB,GAAUlzB,EAAGnR,EAAG,GACvBqW,IAAKguB,GAAUlzB,EAAGnR,EAAG,EAAG,CAAE+sB,QAAQ,IAClC0X,mBAAoBJ,GAAUlzB,EAAGnR,EAAG,EAAG,CAAE0kC,QAAQ,IACjDC,iBAAkBN,GAAUlzB,EAAGnR,EAAG,GAClCuvB,QAAS8U,GAAUlzB,EAAI,GAAInR,EAAI,GAAI,KAAM,CACvCwhC,WAAW,EACX3R,UAAU,EACV9C,QAAQ,EACRiM,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,KAGpBmP,gBAAiB,EACjBC,iBAAkB,ICnChBC,GAAyB,SAC7Br3B,EACAuI,EACAof,EACAG,GAEA,IAAMltB,EAAcsF,EAAStF,YACvBC,EAAkBqF,EAASrF,gBAC3B6yB,EAAc,CAClB/kB,MAAO/N,EAAYqf,cAAcja,EAASuI,EAAQyuB,oBAClDpuB,IAAKhO,EAAYqf,cAAcja,EAASuI,EAAQ2uB,mBAQlD,OALwBr8B,EAAgB6yB,YAAYC,gBAClDD,EACA/F,GAGuBG,GAGZ,YAAS9nB,EAASJ,EAAM+nB,GAAmC,IAA3BrS,EAA2B,uDAAT,QACzD1a,EAAcsF,EAAStF,YACvBC,EAAkBqF,EAASrF,gBACzB0N,EAAY3I,EAAZ2I,QACFmlB,EAAc,CAClB/kB,MAAO/N,EAAYqf,cAAcja,EAASuI,EAAQI,OAClDC,IAAKhO,EAAYqf,cAAcja,EAASuI,EAAQK,MAG5C+kB,EAAkB9yB,EAAgB6yB,YAAYC,gBAClDD,EACA/F,GAGF,GAAIM,GAAuB1f,EAAQuZ,QAAS6F,GAC1C,OAAO,EAGT,IAAMG,EACgB,UAApBxS,EAA8B7b,GAAM8Z,eAAiB9Z,GAAM+Z,eAE7D,QAAI6jB,GAAuBr3B,EAASuI,EAASof,EAAQG,IAI9C6F,EAAkB7F,GCxCZ,SAASwP,GACtBtnB,EACAD,EACAwnB,EACAC,GAEA,IAAMC,GAAMF,EAAW7zB,EAAI8zB,EAAS9zB,GAAKsM,EACnC0nB,GAAMH,EAAWhlC,EAAIilC,EAASjlC,GAAKwd,EACnC7oB,EAASqF,KAAKkd,KAAKguB,EAAKA,EAAKC,EAAKA,GAIxC,MAAO,CACLh0B,EAJc+zB,EAAKvwC,EAKnBqL,EAJcmlC,EAAKxwC,EAKnBA,UCbW,SAASywC,GACtBzzB,EACAlD,GAEA,IAAKA,EAAgBuH,QAAQyuB,mBAAmBC,OAC9C,OAAO,EAGT,IAAIW,EAAQC,EAAQC,EAAMC,EAL1B,EAOuB/2B,EAAgBuH,QAA/BI,EAPR,EAOQA,MAAOC,EAPf,EAOeA,IAPf,EAQwD1E,EAAU9D,MARlE,IAQQ4P,0BARR,MAQ6B,EAR7B,MAQgCD,uBARhC,MAQkD,EARlD,EAUA,GAAIpH,EAAMjF,IAAMkF,EAAIlF,GAAKiF,EAAMpW,IAAMqW,EAAIrW,EACvCqlC,EAASjvB,EAAMjF,EACfm0B,EAASlvB,EAAMpW,EACfulC,EAAOlvB,EAAIlF,EACXq0B,EAAOnvB,EAAIrW,MACN,CAEL,IAAMylC,EAAM,CACVt0B,GAAIiF,EAAMjF,EAAIkF,EAAIlF,GAAK,EACvBnR,GAAIoW,EAAMpW,EAAIqW,EAAIrW,GAAK,GAInBsjC,EAASyB,GACbtnB,EACAD,EACApH,EACAC,GAGIqvB,EAA0BpC,EAAO3uC,OAAS,EAC1CgxC,EAAgBD,GAA2B,EAAIloB,GAC/CooB,EAAmBF,GAA2B,EAAIjoB,GAExD4nB,EAASI,EAAIt0B,EAAIy0B,EAAmBtC,EAAOtjC,EAC3CslC,EAASG,EAAIzlC,EAAI2lC,EAAgBrC,EAAOnyB,EACxCo0B,EAAOE,EAAIt0B,EAAIy0B,EAAmBtC,EAAOtjC,EACzCwlC,EAAOC,EAAIzlC,EAAI2lC,EAAgBrC,EAAOnyB,EAQxC,OALA1C,EAAgBuH,QAAQyuB,mBAAmBtzB,EAAIk0B,EAC/C52B,EAAgBuH,QAAQyuB,mBAAmBzkC,EAAIslC,EAC/C72B,EAAgBuH,QAAQ2uB,iBAAiBxzB,EAAIo0B,EAC7C92B,EAAgBuH,QAAQ2uB,iBAAiB3kC,EAAIwlC,GAEtC,EC5CM,IChBXK,GDgBW,YAASt0B,GAAK,WACrBI,EAAYJ,EAAIvG,OACdyC,EAAkCkE,EAAlClE,QAAS0kB,EAAyBxgB,EAAzBwgB,cAAetkB,EAAU8D,EAAV9D,MAFL,EAGkBpX,KAAK0V,cAA1C+U,EAHmB,EAGnBA,aAAckhB,EAHK,EAGLA,mBAGhBxzB,EAAWF,EAAajB,EAAShX,KAAK7D,MAE5C,GAAKgc,EAAL,CAR2B,MAYkB6vB,GAAgB5wB,GAArD2P,EAZmB,EAYnBA,gBAAiBmhB,EAZE,EAYFA,gBAGzB,GAAKnhB,GAAoBmhB,EAWzB,IANA,IAEI5nC,EAFE2O,EAAUwsB,GAAcC,EAAclC,QAGtC5D,EAAcE,GAAWM,iBACzB9F,EAAYL,GAAUE,eAxBD,WA0BlBv0B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFxqC,EAAQsW,EAAK0f,OAASV,EAAcE,GAAWI,gBAGtB,IAArBtf,EAAK0rB,cACH1rB,EAAKu3B,iBAAmBv3B,EAAKw3B,iBAC/B,EAAKvD,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,IAI3C8hB,GAAKzpB,GAAS,SAAAA,GAEZ48B,GAAU58B,EAAS,EAAKyG,eAFD,MAUnBkB,EAAK2I,QALPI,EALqB,EAKrBA,MACAC,EANqB,EAMrBA,IACAouB,EAPqB,EAOrBA,mBACAE,EARqB,EAQrBA,iBACApV,EATqB,EASrBA,QAIF/H,GAAS9hB,EAAS+H,EAAS2I,EAAOC,EAAK,CAAEtf,UAGzC,IAAM+uC,EAAc/e,EAEpBqe,GAA+BzzB,EAAWtE,GAC1Cma,GAAS9hB,EAAS+H,EAASg3B,EAAoBE,EAAkB,CAC/D5tC,QACA+uC,gBAIF,IAAMrD,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAInB,EAAKj2B,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,GAMhD,IAOMhU,EAAYsX,GAAe14B,EAAMmQ,EAAiBmhB,GAExDwE,GACEz9B,EACA+H,EACA8hB,EACAd,EACAphB,EAAK2I,SAbqB,SAAAA,GAAO,MAAI,CACrCA,EAAQI,MACRJ,EAAQK,IACRL,EAAQyuB,mBACRzuB,EAAQ2uB,oBAWR5tC,EACAgwB,EAjBc,IAmBd,OA5EG10B,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,KAkFL0zC,GAAiB,SAAC14B,EAAMmQ,EAAiBmhB,GAC7C,IAAI+D,EAAS,MAERllB,GAAoBmhB,IACvB+D,EAAS,WAGX,IAAMsD,EAAa,MAAH,OAAS34B,EAAKu3B,iBAAd,OAAgClC,GAC1CuD,EAAY,MAAH,OAAS54B,EAAKw3B,kBAAd,OAAiCnC,GAExCwD,EAAW74B,EAAX64B,OAER,OAAIA,GAAU9nC,MAAMsB,QAAQwmC,GAC1B,cAAWA,GAAX,CAAmBF,EAAYC,IAG1B,CAACD,EAAYC,IE/HP,YAAS10B,EAAKwR,GAAiB,WACtCpR,EAAYJ,EAAIvG,OACdyC,EAA4BkE,EAA5BlE,QAASI,EAAmB8D,EAAnB9D,MAAOkqB,EAAYpmB,EAAZomB,QAClBoO,EAAS1vC,KAAK0V,cAEpB,IAAIi6B,GAAkBv4B,GAAtB,CAIA,IAAMY,EAAkBhY,KAAK2sC,qBAAqBzxB,GAE5C00B,EAAe,WACnB53B,EAAgBse,QAAS,EACzBpf,EAAStF,YAAYkX,YAAY9R,IAInCe,EAAaf,EAAShX,KAAK7D,KAAM6b,GACjCd,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAM64B,GAAY,IAAIhsC,MAAOisC,UApBe,EAqBR93B,EAAgBuH,QAA5CK,EArBoC,EAqBpCA,IAAKouB,EArB+B,EAqB/BA,mBAEbpB,GACE1xB,EACAlb,KAAK7D,KACL6b,EACA4H,EACA,GACA0M,GACA,WAAM,IACI/M,EAA+CvH,EAA/CuH,QAAS4uB,EAAsCn2B,EAAtCm2B,gBAAiBC,EAAqBp2B,EAArBo2B,iBAC5B2B,EAAoBnN,GAAuB1nB,EAAWqE,GACtDywB,EAAsBhmC,WAAWmkC,IAAoB,EACrD8B,EAAuBjmC,WAAWokC,IAAqB,EACvD8B,EAAYF,EAAsB,GAAKC,EAAuB,EAC9DE,GAAY,IAAItsC,MAAOisC,UAAYD,EAAY,IAEjDE,GAAqBG,GAAaC,GAEpCn4B,EAAgBo4B,WAAY,EAC5Bl4B,EAAgBlB,EAAS,EAAK7a,KAAM6b,IAGpC03B,EAAOW,+BACLr4B,EACAkD,EACA00B,GAKJjB,GAA+BzzB,EAAWlD,GAC1Cg2B,EAAmBC,QAAS,EAE5Bj2B,EAAgBsqB,aAAc,EAE9BprB,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAMwrB,EAAanB,GAAcrqB,EAASsqB,EAAShV,GAE/CkW,aAAsBpB,IACxBoB,EAAWC,kBAAkBrrB,EAAOJ,EAASgB,GAG/C,IAAMs4B,EAAoB,CACxB35B,SAAU,EAAKxa,KACf6a,UACAgB,mBAGF5D,EAAa4C,EAAS/E,EAAO0B,qBAAsB28B,GACnDl8B,EAAa4C,EAAS/E,EAAO2B,sBAAuB08B,QAKpDX,GAAoB,SAAAv4B,GACxB,IAAM8a,EAAahb,EAAStF,YAAY0U,SAAS7pB,IAC/C,mBACA2a,EAAMV,SAEJqQ,EAAkB3P,EAAM2P,gBACxBmhB,EAAkB9wB,EAAM4P,mBAU5B,OARIkL,IACFnL,EACEmL,EAAWnL,iBAAmBmL,EAAW+V,qBAC3CC,EACEhW,EAAWlL,oBAAsBkL,EAAWiW,uBAIxCphB,IAAoBmhB,GDhG9B,IAKeqI,GALS,CACtBC,UATF,SAAmBt1B,GACjBk0B,GAAal0B,EAAU8M,cAAcwR,QASrCiX,UANF,WACE,OAAOrB,KEgCM,YAAS96B,GAAO,WACvB4G,EAAY5G,EAAMC,OAChByC,EAAYkE,EAAZlE,QAERu5B,GAAgBC,UAAUt1B,GAG1B,IAAM/C,EAAWF,EAAajB,EAAShX,KAAK7D,MAE5C,GAAKgc,EAAL,CAOA,IAFA,IAAIksB,GAAmB,EAdM,WAgBpBzoC,GAEP,IAAM+iC,EAASzjB,EAAU8M,cAAcwR,OAEjC5iB,EAAOuB,EAASvB,KAAKhb,GACrB80C,EAtDc,SACtB15B,EACAuI,EACA+f,GAEG,IADHR,EACG,uDADiB,EAEdM,EAAeD,GACnBnoB,EACAuI,EACA+f,EACAR,GAGE4R,GAAyB,EAgB7B,OAdAp0C,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAAwwB,GAC3B,GAAkB,YAAdA,EAAJ,CAGA,IAAMvnB,EAASqQ,EAAQkX,GACjBka,EAAiBzhC,IAAWkwB,EAE9BlwB,EAAOonB,SAAWqa,IACpBD,GAAyB,GAG3BxhC,EAAOonB,OAASqa,MAGXD,EAyB0BpM,CAC7BttB,EACAJ,EAAK2I,QACLof,GAGFriC,OAAO0J,KAAK4Q,EAAK2I,SAAStZ,SAAQ,SAAAwwB,GAChC,GAAkB,YAAdA,EAAJ,CAGA,IAAMvnB,EAAS0H,EAAK2I,QAAQkX,GAE5BvnB,EAAO0hC,MAAQ1hC,EAAOonB,WAGpBoa,IACFrM,GAAmB,GAGrB,IAAMwM,EAAW,EAAKrM,cAAcxtB,EAASJ,EAAM+nB,EAAQ,SACrDmS,EAAsBD,IAAaj6B,EAAK0f,OACxCya,GAAwBF,GAAYj6B,EAAK0f,QAE3Cwa,GAAuBC,KACzBn6B,EAAK0f,QAAU1f,EAAK0f,OACpB+N,GAAmB,IA9BdzoC,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,IAmCgB,IAArByoC,GACFntB,EAAStF,YAAYkX,YAAY9R,KC3FtB,YAAS8D,EAAK3C,EAAUjJ,GAAmC,IAA3Bod,EAA2B,uDAAT,QACvC,UAApBA,EACFtsB,KAAKgxC,4BAA4Bl2B,GAEjC9a,KAAKixC,4BAA4Bn2B,ICMtB,SAASo2B,GACtBlqB,EACAD,EACAwnB,EACAC,GAEA,IAAM2C,GAAS5C,EAAW7zB,EAAI8zB,EAAS9zB,GAAKqM,EACtCqqB,GAAS7C,EAAWhlC,EAAIilC,EAASjlC,GAAKyd,EAE5C,OAAOzjB,KAAKkd,KAAK0wB,EAAQA,EAAQC,EAAQA,GChB3C,SAASC,GAAW9C,EAAYC,GAC9B,MAAO,CACL7uB,MAAO4uB,EACP3uB,IAAK4uB,GAcM,SAAS8C,GAAYt5B,EAAiBkD,EAAWq2B,GAAY,IAClE7M,EAAgBxtB,EAASrF,gBAAzB6yB,YADkE,EAOtE1sB,EAAgBuH,QAJlBI,EAHwE,EAGxEA,MACAC,EAJwE,EAIxEA,IACAouB,EALwE,EAKxEA,mBACAE,EANwE,EAMxEA,iBANwE,EAQlBhzB,EAAU9D,MARQ,IAQlE4P,0BARkE,MAQ7C,EAR6C,MAQ1CD,uBAR0C,MAQxB,EARwB,EAUpEyqB,EAAWH,GAAW1xB,EAAOC,GAC7B6xB,EAAoBJ,GAAWrD,EAAoBE,GACnD7Z,EAAeqQ,EAAYpQ,cAAckd,EAAUC,GASzD,MAAO,CACLzqB,qBACAD,kBACApH,QACAC,MACAouB,qBACAE,mBACAsD,WACAnd,eACAqd,gBAhBsBR,GACtBlqB,EACAD,EACAwqB,EACAld,GAaAkd,cCrCW,SAASI,GACtBC,EACA55B,EACAkD,EACAq2B,GAEA,IAAMM,EAAWP,GAAYt5B,EAAiBkD,EAAWq2B,GACjDvqB,EAAyD6qB,EAAzD7qB,mBAAoBD,EAAqC8qB,EAArC9qB,gBAAiB2qB,EAAoBG,EAApBH,gBAGvCI,EAAgBZ,GACpBlqB,EACAD,EACAwqB,EACAK,GAIF,GAAIE,GAAiBJ,EACnB,OAAO,EAIT,IAAMK,EAAgBL,EAAkBI,EAOlCE,EChCO,SAAiCH,EAAU7C,GAAK,IAE3DhoB,EAOE6qB,EAPF7qB,mBACAD,EAME8qB,EANF9qB,gBACApH,EAKEkyB,EALFlyB,MACAquB,EAIE6D,EAJF7D,mBACAE,EAGE2D,EAHF3D,iBACA7Z,EAEEwd,EAFFxd,aACAkd,EACEM,EADFN,WAIIU,EAAaf,GACjBlqB,EACAD,EACAinB,EACA3Z,GAII6d,EAAahB,GACjBlqB,EACAD,EACAmnB,EACA7Z,GAIIwY,EAASyB,GACbtnB,EACAD,EACAwqB,EACAvC,GAIInK,EAAa0M,IAAe5xB,EAAQ,GAAK,EACzCuvB,EAAgBrK,EAAa9d,EAC7BooB,EAAmBtK,EAAa7d,EAGtC,MAAO,CACLrH,MAAO,CACLjF,EAAGs0B,EAAIt0B,EAAImyB,EAAOtjC,EAAI0oC,EAAa/C,EACnC3lC,EAAGylC,EAAIzlC,EAAIsjC,EAAOnyB,EAAIu3B,EAAa9C,GAAoB,GAEzDvvB,IAAK,CACHlF,EAAGs0B,EAAIt0B,EAAImyB,EAAOtjC,EAAI2oC,EAAahD,GAAiB,EACpD3lC,EAAGylC,EAAIzlC,EAAIsjC,EAAOnyB,EAAIw3B,EAAa/C,IDhBvBgD,CAAwBN,EANhB,CACtBn3B,EAAG62B,EAAW72B,GAAKk3B,EAAcl3B,EAAI62B,EAAW72B,GAAKq3B,EACrDxoC,EAAGgoC,EAAWhoC,GAAKqoC,EAAcroC,EAAIgoC,EAAWhoC,GAAKwoC,IAYvD,OALA/5B,EAAgBuH,QAAQyuB,mBAAmBtzB,EAAIs3B,EAAQryB,MAAMjF,EAC7D1C,EAAgBuH,QAAQyuB,mBAAmBzkC,EAAIyoC,EAAQryB,MAAMpW,EAC7DyO,EAAgBuH,QAAQ2uB,iBAAiBxzB,EAAIs3B,EAAQpyB,IAAIlF,EACzD1C,EAAgBuH,QAAQ2uB,iBAAiB3kC,EAAIyoC,EAAQpyB,IAAIrW,GAElD,EE3CM,SAAS6oC,GAAwBb,EAAYrD,GAC1D,OAAOqD,IAAerD,ECCT,SAASmE,GAAuBd,EAAYrD,GACzD,OAAOkE,GAAwBb,EAAYrD,IAAqB,EAAI,E,wBCEvD,SAASiE,GACtBN,EACA7C,EACAsD,EACAzF,GACA,MAEE7lB,EAME6qB,EANF7qB,mBACAD,EAKE8qB,EALF9qB,gBACAwqB,EAIEM,EAJFN,WACAvD,EAGE6D,EAHF7D,mBACAE,EAEE2D,EAFF3D,iBACAwD,EACEG,EADFH,gBAII7M,EACJwN,GAAuBd,EAAYrD,GAAoBwD,EAUnDa,EC5BO,SACbhB,EACAvD,EACAE,GAEA,OAAIkE,GAAwBb,EAAYrD,GAC/BF,EAGFE,EDYasE,CAClBjB,EACAvD,EACAE,KAIoCF,EAChCyE,EAAYF,EAAgB,QAAU,MACtCG,EAAWH,EAAgB,MAAQ,QAGzC,mBACGE,EAAY,CACX/3B,EAAG43B,EAAW3yB,MAAMjF,EACpBnR,EAAG+oC,EAAW3yB,MAAMpW,IAHxB,OAKGmpC,EAAW,CACVh4B,EAAGs0B,EAAIt0B,EAAImyB,EAAOtjC,EAAIwd,EAAkB8d,EACxCt7B,EAAGylC,EAAIzlC,EAAIsjC,EAAOnyB,EAAIsM,EAAqB6d,GAAc,IAP7D,EE7Ba,SAAS8N,GACtBf,EACA55B,EACAkD,EACAq2B,GACA,IACQ7M,EAAgBxtB,EAASrF,gBAAzB6yB,YACFmN,EAAWP,GAAYt5B,EAAiBkD,EAAWq2B,GAEvDvqB,EAKE6qB,EALF7qB,mBACAD,EAIE8qB,EAJF9qB,gBACApH,EAGEkyB,EAHFlyB,MACA6xB,EAEEK,EAFFL,SACAnd,EACEwd,EADFxd,aAIF,ICtBa,SACbrN,EACAD,EACAiN,GASA,OAAsB,IAPHkd,GACjBlqB,EACAD,EACAiN,EAAKrU,MACLqU,EAAKpU,KDaFgzB,CAAc5rB,EAAoBD,EAAiByqB,GACtD,OAAO,EAIT,IAAM3E,EAASyB,GACbtnB,EACAD,EACApH,EACA0U,GAIIie,EEhCO,SAAuBT,EAAUD,EAAe/E,GAAQ,IAEnE7lB,EAIE6qB,EAJF7qB,mBACAD,EAGE8qB,EAHF9qB,gBACAmnB,EAEE2D,EAFF3D,iBACAqD,EACEM,EADFN,WAIIsB,EAAajvC,OAAOkvC,iBAGpBjO,EACJwN,GAAuBd,EAAYrD,GAAoB2E,EAEzD,MAAO,CACLlzB,MAAOiyB,EACPhyB,IAAK,CACHlF,EAAGk3B,EAAcl3B,EAAImyB,EAAOtjC,EAAIwd,EAAkB8d,EAClDt7B,EAAGqoC,EAAcroC,EAAIsjC,EAAOnyB,EAAIsM,EAAqB6d,GAAc,IFapDkO,CAAclB,EAAUD,EAAe/E,GAGpDmG,EAAkBtO,EAAYpQ,cAAckd,EAAUc,GAG5D,IAAKU,EACH,OAAO,EAIT,IAAMhB,EAAUG,GACdN,EACAmB,EACAV,EACAzF,GASF,OALA70B,EAAgBuH,QAAQyuB,mBAAmBtzB,EAAIs3B,EAAQryB,MAAMjF,EAC7D1C,EAAgBuH,QAAQyuB,mBAAmBzkC,EAAIyoC,EAAQryB,MAAMpW,EAC7DyO,EAAgBuH,QAAQ2uB,iBAAiBxzB,EAAIs3B,EAAQpyB,IAAIlF,EACzD1C,EAAgBuH,QAAQ2uB,iBAAiB3kC,EAAIyoC,EAAQpyB,IAAIrW,GAElD,EGlEM,gBAAS2F,EAAQgM,EAAWtE,EAAMq8B,GAC/C,IACIC,EAEA7e,EACA8e,EACAC,EAEE5B,EAAW,GACXC,EAAoB,GACpBG,EAAgB,CACpBl3B,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EAAIu4B,EAAiBv4B,EACtDnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EAAI0pC,EAAiB1pC,GAGnC,IAAjB2F,EAAO1O,MAEAmxC,GAAaC,EAAeh7B,EAAMsE,EAAWtE,EAAK2I,QAAQK,MAEjE1Q,EAAOwL,EAAIk3B,EAAcl3B,EACzBxL,EAAO3F,EAAIqoC,EAAcroC,IAEzB2R,EAAU8M,cAAc5Q,MAAMsD,EAAIxL,EAAOwL,EACzCQ,EAAU8M,cAAc5Q,MAAM7N,EAAI2F,EAAO3F,GAEjB,IAAjB2F,EAAO1O,MAEPmxC,GAAaC,EAAeh7B,EAAMsE,EAAWtE,EAAK2I,QAAQI,QAEjEzQ,EAAOwL,EAAIk3B,EAAcl3B,EACzBxL,EAAO3F,EAAIqoC,EAAcroC,IAEzB2R,EAAU8M,cAAc5Q,MAAMsD,EAAIxL,EAAOwL,EACzCQ,EAAU8M,cAAc5Q,MAAM7N,EAAI2F,EAAO3F,GAEjB,IAAjB2F,EAAO1O,OAChB0yC,GAAc,EAEd1B,EAAS7xB,MAAQ,CACfjF,EAAG9D,EAAK2I,QAAQI,MAAMjF,EACtBnR,EAAGqN,EAAK2I,QAAQI,MAAMpW,GAExBioC,EAAS5xB,IAAM,CACblF,EAAG9D,EAAK2I,QAAQK,IAAIlF,EACpBnR,EAAGqN,EAAK2I,QAAQK,IAAIrW,GAGtBkoC,EAAkB9xB,MAAQ,CACxBjF,EAAG9D,EAAK2I,QAAQ2uB,iBAAiBxzB,EACjCnR,EAAGqN,EAAK2I,QAAQ2uB,iBAAiB3kC,GAEnCkoC,EAAkB7xB,IAAM,CACtBlF,EAAGk3B,EAAcl3B,EACjBnR,EAAGqoC,EAAcroC,IAGnB8qB,EAAend,EAASrF,gBAAgB6yB,YAAYpQ,cAClDkd,EACAC,MAGAA,EAAkB7xB,IAAM,CACtBlF,EAAG9D,EAAK2I,QAAQyuB,mBAAmBtzB,EACnCnR,EAAGqN,EAAK2I,QAAQyuB,mBAAmBzkC,GAGrC8qB,EAAend,EAASrF,gBAAgB6yB,YAAYpQ,cAClDkd,EACAC,GAGF0B,EAAKj8B,EAASrF,gBAAgB8I,MAAMsE,SAClCoV,EACAzd,EAAK2I,QAAQI,OAEfyzB,EAAKl8B,EAASrF,gBAAgB8I,MAAMsE,SAClCoV,EACAzd,EAAK2I,QAAQK,OAGVyU,GAAgB8e,EAAK,GAAKC,EAAK,KAClCF,GAAc,KAIL,EAERA,GACUP,GACXf,EACAh7B,EACAsE,EACAtE,EAAK2I,QAAQ2uB,oBAIbhzB,EAAU8M,cAAc5Q,MAAMsD,EAAI9D,EAAK2I,QAAQyuB,mBAAmBtzB,EAClEQ,EAAU8M,cAAc5Q,MAAM7N,EAAIqN,EAAK2I,QAAQyuB,mBAAmBzkC,IAG5C,IAAjB2F,EAAO1O,QAChB0yC,GAAc,EAGd1B,EAAS7xB,MAAQ,CACfjF,EAAG9D,EAAK2I,QAAQI,MAAMjF,EACtBnR,EAAGqN,EAAK2I,QAAQI,MAAMpW,GAExBioC,EAAS5xB,IAAM,CACblF,EAAG9D,EAAK2I,QAAQK,IAAIlF,EACpBnR,EAAGqN,EAAK2I,QAAQK,IAAIrW,GAGtBkoC,EAAkB9xB,MAAQ,CACxBjF,EAAG9D,EAAK2I,QAAQyuB,mBAAmBtzB,EACnCnR,EAAGqN,EAAK2I,QAAQyuB,mBAAmBzkC,GAErCkoC,EAAkB7xB,IAAM,CACtBlF,EAAGk3B,EAAcl3B,EACjBnR,EAAGqoC,EAAcroC,IAGnB8qB,EAAend,EAASrF,gBAAgB6yB,YAAYpQ,cAClDkd,EACAC,MAGAA,EAAkB7xB,IAAM,CACtBlF,EAAG9D,EAAK2I,QAAQ2uB,iBAAiBxzB,EACjCnR,EAAGqN,EAAK2I,QAAQ2uB,iBAAiB3kC,GAGnC8qB,EAAend,EAASrF,gBAAgB6yB,YAAYpQ,cAClDkd,EACAC,GAGF0B,EAAKj8B,EAASrF,gBAAgB8I,MAAMsE,SAClCoV,EACAzd,EAAK2I,QAAQI,OAEfyzB,EAAKl8B,EAASrF,gBAAgB8I,MAAMsE,SAClCoV,EACAzd,EAAK2I,QAAQK,OAGVyU,GAAgB8e,EAAK,GAAKC,EAAK,KAClCF,GAAc,KAIL,EAERA,GACUP,GACXf,EACAh7B,EACAsE,EACAtE,EAAK2I,QAAQyuB,sBAIb9yB,EAAU8M,cAAc5Q,MAAMsD,EAAI9D,EAAK2I,QAAQ2uB,iBAAiBxzB,EAChEQ,EAAU8M,cAAc5Q,MAAM7N,EAAIqN,EAAK2I,QAAQ2uB,iBAAiB3kC,KCxKlE8pC,GAAgB,SAAC30B,EAAGC,EAAG20B,GAC3B,IAAMC,EAAY70B,EAAE40B,GACdE,EAAY70B,EAAE20B,GAEpB50B,EAAE40B,GAAaE,EACf70B,EAAE20B,GAAaC,GAGXE,GAAc,SAAC/0B,EAAGC,GACtB00B,GAAc30B,EAAGC,EAAG,KACpB00B,GAAc30B,EAAGC,EAAG,KACpB00B,GAAc30B,EAAGC,EAAG,UACpB00B,GAAc30B,EAAGC,EAAG,SACpB00B,GAAc30B,EAAGC,EAAG,UACpB00B,GAAc30B,EAAGC,EAAG,aCCP,gBAAS7D,GAAK,IAIvBlE,EAJuB,OACrBsE,EAAYJ,EAAIvG,OAEdyC,EAAYkE,EAAZlE,QAGF8nB,EAAoBruB,GAAM8Z,eAE1BmpB,EAAiB,SAAAxkC,GACrB0H,EAAK0rB,aAAc,EACfM,GAAuB1nB,EAAWtE,EAAK2I,UAEzCrH,EAAgBlB,EAAS,EAAK7a,KAAMya,GAIlC1H,IACFA,EAAOykC,QAAS,EAChBzkC,EAAO0kC,UAAW,GAGpBpoB,GAAc,EAAKxU,QAAS,EAAKyU,WAEjCvU,EAAStF,YAAYkX,YAAY9R,GACjCA,EAAQgqB,iBAAiB/uB,EAAOK,WAAY,EAAKuhC,eACjD78B,EAAQgqB,iBAAiB/uB,EAAOS,YAAa,EAAKmhC,gBAG9ClV,EAASzjB,EAAU44B,YAAYta,OAC/BrhB,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAAL,CAKA,IApC2B,eAoClBvc,GACPgb,EAAOuB,EAASvB,KAAKhb,GACrB,IAAMm4C,EAAe,CAAC/8B,EAASJ,EAAK2I,QAASof,EAAQG,GACjD5vB,EAASiwB,GAAuB,WAAvB,EAA2B4U,GAExC,GAAI7kC,EAyBF,OAxBA8H,EAAQ+pB,oBAAoB9uB,EAAOK,WAAY,EAAKuhC,eACpD78B,EAAQ+pB,oBAAoB9uB,EAAOS,YAAa,EAAKmhC,eAErDj9B,EAAK0f,QAAS,EAEd0d,GAAmBp9B,EAAK2I,SACxBrQ,EAAOykC,QAAS,GAGhBzkC,EDjDS,SAAuBgM,EAAWlD,EAAiB9I,GAAQ,MACxBgM,EAAU9D,MAAlD2P,EADgE,EAChEA,gBAAiBC,EAD+C,EAC/CA,mBACjBzH,EAAYvH,EAAZuH,QACAI,EAAqDJ,EAArDI,MAAOC,EAA8CL,EAA9CK,IAAKouB,EAAyCzuB,EAAzCyuB,mBAAoBE,EAAqB3uB,EAArB2uB,iBAGlCO,GAAM9uB,EAAMjF,EAAIkF,EAAIlF,IAAMsM,GAAsB,GAChD0nB,GAAM/uB,EAAMpW,EAAIqW,EAAIrW,IAAMwd,GAAmB,GAC7C7oB,EAASqF,KAAKkd,KAAKguB,EAAKA,EAAKC,EAAKA,GAGlCuF,GACHjG,EAAmBtzB,EAAIwzB,EAAiBxzB,IAAMsM,GAAsB,GACjEktB,GACHlG,EAAmBzkC,EAAI2kC,EAAiB3kC,IAAMwd,GAAmB,GAGpE,OAFcxjB,KAAKkd,KAAKwzB,EAAKA,EAAKC,EAAKA,IAAO,GAElCh2C,GACVu1C,GAAY9zB,EAAOC,GACnB6zB,GAAY9zB,EAAOquB,GACnByF,GAAY7zB,EAAKsuB,GAEV5xC,OAAOmQ,OAAO8S,GAAS2L,MAAK,SAAA7hB,GAAC,OAAiB,IAAbA,EAAEsqC,WAGrCzkC,ECwBMilC,CAAcj5B,EAAWtE,EAAM1H,IAK5B8vB,gBACVlT,GAAe,EAAK9U,SCjEb,SACb82B,EACAn3B,EACAC,EACA1H,EACA6yB,EACApX,GACA,IACQ3T,EAA4B82B,EAA5B92B,QAASI,EAAmB02B,EAAnB12B,MAAOkqB,EAAYwM,EAAZxM,QAClB2R,EAAmB,CACvBv4B,EAAGxL,EAAOwL,EAAIozB,EAAe9lB,cAAc5Q,MAAMsD,EACjDnR,EAAG2F,EAAO3F,EAAIukC,EAAe9lB,cAAc5Q,MAAM7N,GAG7C6qC,EAAgB,SAAA9/B,GACpB,IAAM4G,EAAY5G,EAAMC,OAExBrF,EAAOkqB,UAAW,OAEG1uB,IAAjBwE,EAAO1O,OAAwC,OAAjB0O,EAAO1O,OACvC0O,EAAOwL,EAAIQ,EAAU8M,cAAc5Q,MAAMsD,EAAIu4B,EAAiBv4B,EAC9DxL,EAAO3F,EAAI2R,EAAU8M,cAAc5Q,MAAM7N,EAAI0pC,EAAiB1pC,GAE9D8qC,GAAmBnlC,EAAQgM,EAAWtE,EAAMq8B,GAG1CtoB,IACFzb,EAAOwL,EAAInX,KAAKsc,IAAI3Q,EAAOwL,EAAG,GAC9BxL,EAAOwL,EAAInX,KAAK6b,IAAIlQ,EAAOwL,EAAGQ,EAAU9D,MAAM+D,OAE9CjM,EAAO3F,EAAIhG,KAAKsc,IAAI3Q,EAAO3F,EAAG,GAC9B2F,EAAO3F,EAAIhG,KAAK6b,IAAIlQ,EAAO3F,EAAG2R,EAAU9D,MAAMgE,SAGhDxE,EAAK0rB,aAAc,EAEnBprB,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAMwrB,EAAanB,GAAcrqB,EAASsqB,EAAS,SAE/CkB,aAAsBpB,IACxBoB,EAAWC,kBAAkBrrB,EAAOJ,EAASJ,GAG/C,IAAM05B,EAAoB,CACxB35B,WACAK,UACAgB,gBAAiBpB,GAGnBM,EAAStF,YAAYwC,aACnB4C,EACA/E,EAAO0B,qBACP28B,IAIJphC,EAAOonB,QAAS,EAChB7lB,GAAM2Z,cAAe,EAErBpT,EAAQgqB,iBAAiB/uB,EAAOI,WAAY+hC,GAC5Cp9B,EAAQgqB,iBAAiB/uB,EAAOY,WAAYuhC,GAE5C,IAAME,EAAep9B,EAAStF,YAAY2iC,SAASv9B,GAC7Cw9B,EAAuB,WACVt9B,EAAStF,YAAY2iC,SAASv9B,GAGlCN,UAAY49B,EAAa59B,SACpC+9B,KAKJz9B,EAAQgqB,iBACN9pB,EAAStF,YAAYK,OAAOyiC,eAC5BF,GAGF,IAAMC,EAAyB,SAAzBA,IACJvlC,EAAOonB,QAAS,EAChB7lB,GAAM2Z,cAAe,EAErBpT,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOyiC,eAC5BF,GAGFx9B,EAAQ+pB,oBAAoB9uB,EAAOI,WAAY+hC,GAC/Cp9B,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUsiC,GAC7Cz9B,EAAQ+pB,oBAAoB9uB,EAAOM,YAAakiC,GAEhDz9B,EAAQ+pB,oBAAoB9uB,EAAOY,WAAYuhC,GAC/Cp9B,EAAQ+pB,oBAAoB9uB,EAAOa,eAAgB2hC,GACnDz9B,EAAQ+pB,oBAAoB9uB,EAAOiB,IAAKuhC,GAExCv9B,EAAStF,YAAYkX,YAAY9R,GAEC,mBAAvB+qB,GACTA,KAIJ/qB,EAAQgqB,iBAAiB/uB,EAAOE,SAAUsiC,GAC1Cz9B,EAAQgqB,iBAAiB/uB,EAAOM,YAAakiC,GAE7Cz9B,EAAQgqB,iBAAiB/uB,EAAOa,eAAgB2hC,GAChDz9B,EAAQgqB,iBAAiB/uB,EAAOiB,IAAKuhC,GDvCjCxQ,CAAW/oB,EAAW,EAAK/e,KAAMya,EAAM1H,GAAQ,kBAC7CwkC,EAAexkC,MAGjBylC,GAAmB75B,GAEnB,IAAO,IA9BFlf,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,SAAtCA,GAAsC,gCAuC/C,IALA,IAAMg5C,EAAwB,SAAAr1B,GAAO,OAAI,WACvCs1B,GAAsBt1B,GAAS,GAC/Bm0B,MAGO93C,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAExC,GADAgb,EAAOuB,EAASvB,KAAKhb,GACjBoE,KAAKwkC,cAAcxtB,EAASJ,EAAM+nB,EAAQ,SAAU,CACtD3nB,EAAQ+pB,oBAAoB9uB,EAAOK,WAAYtS,KAAK6zC,eACpD78B,EAAQ+pB,oBAAoB9uB,EAAOS,YAAa1S,KAAK6zC,eACrDj9B,EAAK0f,QAAS,EAEd0d,GAAmBp9B,EAAK2I,SACxBs1B,GAAsBj+B,EAAK2I,SAAS,GAEpC,IAAMwiB,EAAqB6S,EAAsBh+B,EAAK2I,SAiBtD,OAfA6kB,GACElpB,EACAlb,KAAK7D,KACLya,EACA,KACA,CACE8T,4BAA4B,EAC5BC,2BAA2B,GAE7B,QACAoX,GAGF4S,GAAmB75B,IAEZ,KAMPk5B,GAAqB,SAAAz0B,GACzB,IAAI8kB,GAAmB,EAWvB,OATA/nC,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAAwwB,GACT,YAAdA,IAGJlX,EAAQkX,GAAWmd,UAAW,EAC9BvP,EAAmB9kB,EAAQkX,GAAWH,QAAU+N,EAChD9kB,EAAQkX,GAAWH,QAAS,MAGvB+N,GAGHwQ,GAAwB,SAACt1B,EAAS9O,GACtCnU,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAAwwB,GACT,YAAdA,IAGJlX,EAAQkX,GAAWkd,OAASljC,OAI1BkkC,GAAqB,SAAA75B,GACzBA,EAAIipB,2BACJjpB,EAAI6nB,kBACJ7nB,EAAI4nB,kBE/IAoS,GAAiB,CACrB7iC,EAAOW,UACPX,EAAOa,eACPb,EAAOc,YACPd,EAAOgB,YACPhB,EAAOiB,KCCM,YAAS4H,GAAK,IAGvBlE,EAHuB,OACrBsE,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QAGF8nB,EAAoBruB,GAAM+Z,eAE1BkpB,EAAiB,SAAAxkC,GACrB0H,EAAK0rB,aAAc,EACfM,GAAuB1nB,EAAWtE,EAAK2I,UAEzCrH,EAAgBlB,EAAS,EAAK7a,KAAMya,GAIlC1H,IACFA,EAAOykC,QAAS,EAChBzkC,EAAO0kC,UAAW,GAGpB18B,EAAStF,YAAYkX,YAAY9R,GACjCA,EAAQgqB,iBAAiB/uB,EAAOY,WAAY,EAAKghC,gBAG7ClV,EAASzjB,EAAU44B,YAAYta,OAC/BrhB,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAAL,CAKA,IAhC2B,eAgClBvc,GACPgb,EAAOuB,EAASvB,KAAKhb,GACrB,IAAMm4C,EAAe,CAAC/8B,EAASJ,EAAK2I,QAASof,EAAQG,GAC/C5vB,EAASiwB,GAAuB,WAAvB,EAA2B4U,GAE1C,GAAI7kC,EAYF,OAXA8H,EAAQ+pB,oBAAoB9uB,EAAOY,WAAY,EAAKghC,eAEpDj9B,EAAK0f,QAAS,EAEd0d,GAAmBp9B,EAAK2I,SACxBrQ,EAAOykC,QAAS,EDzCP,SACb7F,EACAn3B,EACAC,EACA1H,EACA6yB,EACApX,GACA,IACQ3T,EAA4B82B,EAA5B92B,QAASI,EAAmB02B,EAAnB12B,MAAOkqB,EAAYwM,EAAZxM,QAClB2R,EAAmB,CACvBv4B,EAAGxL,EAAOwL,EAAIozB,EAAe9lB,cAAc5Q,MAAMsD,EACjDnR,EAAG2F,EAAO3F,EAAIukC,EAAe9lB,cAAc5Q,MAAM7N,GAG7C2xB,EAAoB,SAAA5mB,GACxB,IAAM4G,EAAY5G,EAAMC,OAExBrF,EAAOkqB,UAAW,OAEG1uB,IAAjBwE,EAAO1O,OAAwC,OAAjB0O,EAAO1O,OACvC0O,EAAOwL,EAAIQ,EAAU8M,cAAc5Q,MAAMsD,EAAIu4B,EAAiBv4B,EAC9DxL,EAAO3F,EAAI2R,EAAU8M,cAAc5Q,MAAM7N,EAAI0pC,EAAiB1pC,GAE9D8qC,GAAmBnlC,EAAQgM,EAAWtE,EAAMq8B,GAG1CtoB,IACFzb,EAAOwL,EAAInX,KAAKsc,IAAI3Q,EAAOwL,EAAG,GAC9BxL,EAAOwL,EAAInX,KAAK6b,IAAIlQ,EAAOwL,EAAGQ,EAAU9D,MAAM+D,OAE9CjM,EAAO3F,EAAIhG,KAAKsc,IAAI3Q,EAAO3F,EAAG,GAC9B2F,EAAO3F,EAAIhG,KAAK6b,IAAIlQ,EAAO3F,EAAG2R,EAAU9D,MAAMgE,SAGhDxE,EAAK0rB,aAAc,EAEnBprB,EAAStF,YAAYkX,YAAY9R,GAEjC,IAAMwrB,EAAanB,GAAcrqB,EAASsqB,EAAS,SAE/CkB,aAAsBpB,IACxBoB,EAAWC,kBAAkBrrB,EAAOJ,EAASJ,GAG/C,IAAM05B,EAAoB,CACxB35B,WACAK,UACAgB,gBAAiBpB,GAGnBM,EAAStF,YAAYwC,aACnB4C,EACA/E,EAAO0B,qBACP28B,IAIJphC,EAAOonB,QAAS,EAChB7lB,GAAM2Z,cAAe,EAErBpT,EAAQgqB,iBAAiB/uB,EAAOY,WAAYqoB,GAE5C,IAAMG,EAAmB,SAAnBA,IACJnsB,EAAOonB,QAAS,EAChB7lB,GAAM2Z,cAAe,EAErBpT,EAAQ+pB,oBAAoB9uB,EAAOY,WAAYqoB,GAC/C4Z,GAAe7uC,SAAQ,SAAAm8B,GACrBprB,EAAQ+pB,oBAAoBqB,EAAW/G,MAGzCnkB,EAAStF,YAAYkX,YAAY9R,GAEC,mBAAvB+qB,GACTA,KAIJ+S,GAAe7uC,SAAQ,SAAAm8B,GACrBprB,EAAQgqB,iBAAiBoB,EAAW/G,MCrClC0Z,CAAgB75B,EAAW,EAAK/e,KAAMya,EAAM1H,GAAQ,kBAClDwkC,EAAexkC,MAEjBylC,GAAmB75B,GAEnB,IAAO,IAjBFlf,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,SAAtCA,GAAsC,gCA0B/C,IALA,IAAMg5C,EAAwB,SAAAr1B,GAAO,OAAI,WACvCs1B,GAAsBt1B,GAAS,GAC/Bm0B,MAGO93C,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAExC,GADAgb,EAAOuB,EAASvB,KAAKhb,GACjBoE,KAAKwkC,cAAcxtB,EAASJ,EAAM+nB,EAAQ,SAAU,CACtD3nB,EAAQ+pB,oBAAoB9uB,EAAOY,WAAY7S,KAAK6zC,eACpDj9B,EAAK0f,QAAS,EAEd0d,GAAmBp9B,EAAK2I,SACxBs1B,GAAsBj+B,EAAK2I,SAAS,GAEpC,IAAMwiB,EAAqB6S,EAAsBh+B,EAAK2I,SAiBtD,OAfA6kB,GACElpB,EACAlb,KAAK7D,KACLya,EACA,KACA,CACE8T,4BAA4B,EAC5BC,2BAA2B,GAE7B,QACAoX,GAGF4S,GAAmB75B,IAEZ,KAMPk5B,GAAqB,SAAAz0B,GACzB,IAAI8kB,GAAmB,EAWvB,OATA/nC,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAAwwB,GACT,YAAdA,IAGJlX,EAAQkX,GAAWmd,UAAW,EAC9BvP,EAAmB9kB,EAAQkX,GAAWH,QAAU+N,EAChD9kB,EAAQkX,GAAWH,QAAS,MAGvB+N,GAGHwQ,GAAwB,SAACt1B,EAAS9O,GACtCnU,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAAwwB,GACT,YAAdA,IAGJlX,EAAQkX,GAAWkd,OAASljC,OAI1BkkC,GAAqB,SAAA75B,GACzBA,EAAIipB,2BACJjpB,EAAI6nB,kBACJ7nB,EAAI4nB,kBCnHN,IAAMsS,GAAwB,SAACh9B,EAAiBkD,EAAW00B,GAA7B,OAC5BA,KAWmBqF,G,YACnB,WAAYh3C,GAAO,kBACjB,IAAMy/B,EAAe,CACnBvhC,KAAM,gBACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbw/B,kCAAmCF,GACnC3E,+BAAgC2E,GAChClc,QAAS,GACTc,OAAQ,GACR+Q,aAAa,EACbgB,oBAAoB,EACpBwJ,eAAgB,IAElB1pB,UAAWka,IAbI,OAgBjB,4BAAM1nC,EAAOy/B,KAERmN,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAEnE,EAAKkK,qBAAuBA,GAAqBvvC,KAArB,SAC5B,EAAKonC,cAAgBA,GAAcpnC,KAAd,SACrB,EAAKo+B,eAAiBA,GAAep+B,KAAf,SACtB,EAAKg4C,kBAAoBA,GAAkBh4C,KAAlB,SACzB,EAAKy2C,cAAgBA,GAAcz2C,KAAd,SAErB,EAAKi4C,uBAAyBA,GAAuBj4C,KAAvB,SAC9B,EAAK6zC,4BAA8BA,GAA4B7zC,KAA5B,SACnC,EAAK4zC,4BAA8BA,GAA4B5zC,KAA5B,SA5BlB,E,+DA+BDga,EAAOJ,EAASJ,GAChC,IADsC,ECpD3B,SACboB,EACAs9B,GACA,IACQvuB,EAAqCuuB,EAArCvuB,gBAAiBmhB,EAAoBoN,EAApBpN,gBADzB,EAOIlwB,EAAgBuH,QAJlBI,EAHF,EAGEA,MACAC,EAJF,EAIEA,IACAouB,EALF,EAKEA,mBACAE,EANF,EAMEA,iBAIIO,GAAM9uB,EAAMjF,EAAIkF,EAAIlF,IAAMwtB,GAAmB,GAC7CwG,GAAM/uB,EAAMpW,EAAIqW,EAAIrW,IAAMwd,GAAmB,GAC/C7oB,EAASqF,KAAKkd,KAAKguB,EAAKA,EAAKC,EAAKA,GAGhCuF,GACHjG,EAAmBtzB,EAAIwzB,EAAiBxzB,IAAMwtB,GAAmB,GAC9DgM,GACHlG,EAAmBzkC,EAAI2kC,EAAiB3kC,IAAMwd,GAAmB,GAChE5L,EAAQ5X,KAAKkd,KAAKwzB,EAAKA,EAAKC,EAAKA,GAOrC,GALK/4B,IACHA,EAAQ,GAINA,EAAQjd,EAAQ,CAClB,IACMq3C,EAAQr3C,EAEdA,EAHcid,EAIdA,EAAQo6B,EAGV,MAAO,CACLpH,gBAAiBjwC,EAAOs3C,QAAQ,GAChCpH,iBAAkBjzB,EAAMq6B,QAAQ,IDkB5BC,CAAqC7+B,EAJpBoxB,GAAgB5wB,IAEnC+2B,EAHoC,EAGpCA,gBACAC,EAJoC,EAIpCA,iBAIFx3B,EAAKu3B,gBAAkBA,EACvBv3B,EAAKw3B,iBAAmBA,EACxBx3B,EAAK0rB,aAAc,M,GA1CwBlB,IEfhC,YAAShqB,EAAOs+B,GAAuC,IAArBC,EAAqB,wDAC9D/jC,EAAcsF,EAAStF,YACvBgkC,EAAqBhkC,EAAY0U,SAAS7pB,IAC9C,qBACA2a,EAAMV,SAEFm/B,EAAejkC,EAAY0U,SAAS7pB,IACxC,sBACA2a,EAAMV,SAGR,GAAKk/B,GAAuBC,EAA5B,CAIA,IAAMC,EAAWD,EAAaC,SAG9B,GAAiB,OAAbA,EAAJ,CAIA,IAAMC,EAAqBJ,EACvBD,EACAA,EAAmBt+B,EAAM4+B,MAAQ5+B,EAAM6+B,UAErCC,EAAgBN,EAAmBM,cAEzC,GAAKA,EAAL,CAIA,IAAMC,EAAoBvkC,EAAY0U,SAAS7pB,IAC7C,mBACA2a,EAAMV,SAGR,GAAKy/B,EAAL,CAIA,IAAMC,EAA0BD,EAAkBC,wBAC5CC,EAAYD,EAAwBE,6BACpCC,EAAYH,EAAwBI,sBACpCC,EAAWL,EAAwBM,qBACnCC,EAAwBd,EAAae,WAE3C,GAAKP,GAAcE,GAAcE,GAAaE,EAA9C,CAIA,IAAME,EACJC,GAAUH,EAAsBI,mBAAqB,GACrDJ,EAAsBK,QACU,GAAhCL,EAAsBM,QACQ,GAA9BN,EAAsBO,MAAa,GAC/BC,EACJL,GAAUT,EAAUU,mBACpBV,EAAUW,QACU,GAApBX,EAAUY,QACQ,GAAlBZ,EAAUa,MAAa,GACnBE,EACJP,EAA2BM,EACvBE,EACJd,EAAYhzC,KAAK+zC,KAAMF,EAAoB7zC,KAAKb,IAAI,GAAM+zC,GACtDc,EAAQxB,EAAqBG,EAAiBmB,EAAiB,IAErE,OAAOE,QAYT,SAAST,GAAUU,GACjB,OAAOxtC,WAAW,IAAD,OAAKwtC,ICnFT,gBAAS/hB,EAASgiB,GAC/B,IAAMC,EAAUjiB,EAAQta,MAAQ,EAC1Bw8B,EAAUliB,EAAQra,OAAS,EAEjC,GAAIs8B,GAAW,GAAOC,GAAW,EAC/B,OAAO,EAGT,IAAMhmB,EACD8D,EAAQvW,KAAOw4B,EADd/lB,EAED8D,EAAQpW,IAAMs4B,EAQbC,EACDH,EAAS/8B,EAAIiX,EADZimB,EAEDH,EAASluC,EAAIooB,EAQlB,OAJGimB,EAAeA,GAAiBF,EAAUA,GACxCE,EAAeA,GAAiBD,EAAUA,IAC7C,GCvBW,YAASE,EAAIpiB,GAQ1B,IAPA,IAAIhO,EAAM,EACNqwB,EAAa,EACb35B,EAAQ,EACR3d,EAAQ,EACR4e,EAAM,KACNS,EAAM,KAEDtW,EAAIksB,EAAQpW,IAAK9V,EAAIksB,EAAQpW,IAAMoW,EAAQra,OAAQ7R,IAC1D,IAAK,IAAImR,EAAI+a,EAAQvW,KAAMxE,EAAI+a,EAAQvW,KAAOuW,EAAQta,MAAOT,IAAK,CAM5Dq9B,GAAetiB,EALL,CACZ/a,IACAnR,QAIY,OAAR6V,IACFA,EAAMy4B,EAAGr3C,GACTqf,EAAMg4B,EAAGr3C,IAGXinB,GAAOowB,EAAGr3C,GACVs3C,GAAcD,EAAGr3C,GAASq3C,EAAGr3C,GAC7B4e,EAAM7b,KAAK6b,IAAIA,EAAKy4B,EAAGr3C,IACvBqf,EAAMtc,KAAKsc,IAAIA,EAAKg4B,EAAGr3C,IACvB2d,KAGF3d,IAIJ,GAAc,IAAV2d,EACF,MAAO,CACLA,QACAyJ,KAAM,EACNowB,SAAU,EACVnwB,OAAQ,EACRzI,IAAK,EACLS,IAAK,GAIT,IAAM+H,EAAOH,EAAMtJ,EACb65B,EAAWF,EAAa35B,EAAQyJ,EAAOA,EAE7C,MAAO,CACLzJ,QACAyJ,OACAowB,WACAnwB,OAAQtkB,KAAKkd,KAAKu3B,GAClB54B,MACAS,QCzDW,IACbo4B,8BACAF,mBCDa,SAASG,GAAoBjjB,EAAU1V,GACpD,IAAM44B,EA+BR,SAA2B54B,GACzB,IAAM64B,EAAqB,CAAC74B,EAAQI,MAAOJ,EAAQK,KAAKy4B,MAcxD,SAAmB35B,EAAGC,GACpB,OAAOD,EAAEhE,EAAIiE,EAAEjE,GAAK,EAAI,KAdpB49B,EAAqB,CAAC/4B,EAAQI,MAAOJ,EAAQK,KAAKy4B,MAgBxD,SAAmB35B,EAAGC,GACpB,OAAOD,EAAEnV,EAAIoV,EAAEpV,GAAK,EAAI,KAhBpB2V,EAAOk5B,EAAmB,GAC1Bv3B,EAAQu3B,EAAmBA,EAAmBl6C,OAAS,GACvDmhB,EAAMi5B,EAAmB,GACzB5jB,EAAS4jB,EAAmBA,EAAmBp6C,OAAS,GAE9D,MAAO,CACLmhB,MACAH,OACAwV,SACA7T,SA3Cc03B,CAAkBh5B,GAC5Bi5B,GAAWL,EAAQj5B,KAAKxE,EAAIy9B,EAAQt3B,MAAMnG,GAAK,EAC/C+9B,GAAWN,EAAQ94B,IAAI9V,EAAI4uC,EAAQzjB,OAAOnrB,GAAK,EAC/CuvB,EAAU,GAmBhB,OAjBI7D,EAASM,UAAY,GAAKN,EAASM,SAAW,KAChDuD,EAAQpe,EAAIua,EAASiF,MAAQie,EAAQj5B,KAAKxE,EAAIy9B,EAAQt3B,MAAMnG,EAC5Doe,EAAQvvB,EAAIkvC,GAEVxjB,EAASM,UAAY,IAAMN,EAASM,SAAW,MACjDuD,EAAQpe,EAAI89B,EACZ1f,EAAQvvB,EAAI0rB,EAASkF,MAAQge,EAAQzjB,OAAOnrB,EAAI4uC,EAAQ94B,IAAI9V,GAE1D0rB,EAASM,UAAY,KAAON,EAASM,SAAW,MAClDuD,EAAQpe,EAAIua,EAASiF,MAAQie,EAAQt3B,MAAMnG,EAAIy9B,EAAQj5B,KAAKxE,EAC5Doe,EAAQvvB,EAAIkvC,GAEVxjB,EAASM,UAAY,KAAON,EAASM,SAAW,MAClDuD,EAAQpe,EAAI89B,EACZ1f,EAAQvvB,EAAI0rB,EAASkF,MAAQge,EAAQ94B,IAAI9V,EAAI4uC,EAAQzjB,OAAOnrB,GAGvDuvB,ECtBM,gBAASpe,GACtB,IAAMg+B,EAAQh+B,EAAE1V,WAAWW,MAAM,KAIjC,OAFA+yC,EAAM,GAAKA,EAAM,GAAGh4C,QAAQ,wBAAyB,KAE9Cg4C,EAAMjzC,KAAK,MCedoT,GAASL,EAAU,kCAUJmgC,G,YACnB,aAAwB,MAAZ16C,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,YACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAWoa,IAJS,OAOtB,4BAAM5nC,EAAOy/B,KAERmN,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAT7C,E,kEAYHvnB,GAInB,GAFEA,GAAaA,EAAU8M,eAAiB9M,EAAU8M,cAAc5Q,MAUlE,MAAO,CACL0zB,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACb/iB,QAAS,CACPI,MAAO,CACLjF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEVtB,gBAAiB9Z,EAAU+Z,SAASM,SACpCuD,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,KAhCpBnmB,GAAO5X,MAAP,kDAC6CjB,KAAK7D,KADlD,8B,oCAsCU6a,EAASJ,EAAM+nB,EAAQrS,GACnC,IAAMssB,EACJhiC,GAAQA,EAAK2I,SAAW3I,EAAK2I,QAAQI,OAAS/I,EAAK2I,QAAQK,IAEvDi5B,EAAc3hC,EAASrF,gBAAgB8I,MAAMsE,SAQnD,GANK25B,GACH//B,GAAOH,KAAP,8CACyC1Y,KAAK7D,KAD9C,sBAKGy8C,IAA0C,IAAjBhiC,EAAKk0B,QACjC,OAAO,EAGT,IAAM7rB,EAA+B,UAApBqN,EAA8B,GAAK,GAE9CqP,EAAczkB,EAAStF,YAAYqf,cACvCja,EACAJ,EAAK2I,QAAQI,OAGTic,EAAY1kB,EAAStF,YAAYqf,cACrCja,EACAJ,EAAK2I,QAAQK,KAITk5B,EAAqBD,EAAYld,EAAagD,GAG9C3f,EAAS65B,EAAYld,EAAaC,GAGxC,OACEkd,EAAqB95B,EAASC,EAAW,GACzC65B,EAAqB95B,EAASC,EAAW,I,wCAI3B7H,EAAOJ,EAASJ,GAChC,IAGMk/B,GAFJ5+B,EAAStF,YAAY0U,SAAS7pB,IAAI,sBAAuB2a,EAAMV,UAC/D,IAC4Bo/B,SACxBR,EAAetN,GAAgB5wB,GAE/ByP,EAoRV,SAAyBzP,EAAOJ,EAASuI,EAASu2B,EAAUR,GAE1D,IAiBIyD,EAjBEr5B,EAAoBb,GAAgBU,EAAQI,MAAOJ,EAAQK,KAG3Do5B,EAAS9hC,EAAStF,YAAYqnC,UAClCjiC,EACA0I,EAAkBR,KAClBQ,EAAkBL,IAClBK,EAAkBvE,MAClBuE,EAAkBtE,QAId89B,EAAoBjB,GACxBe,EACAt5B,GAKe,OAAbo2B,IACFiD,EAAgB,CACdnxB,KAAMuxB,GAAa/hC,EAAO8hC,EAAkBtxB,MAAM,IAAS,EAC3DC,OAAQsxB,GAAa/hC,EAAO8hC,EAAkBrxB,QAAQ,IAAS,IASnE,MAAO,CACLuxB,KALA71C,KAAKiuB,IACH9R,EAAkBvE,OAASm6B,EAAapN,iBAAmB,GAAM,IACjExoB,EAAkBtE,QAAUk6B,EAAavuB,iBAAmB,GAAM,IAGtD,EACd5I,MAAO+6B,EAAkB/6B,OAAS,EAClCyJ,KAAMsxB,EAAkBtxB,MAAQ,EAChCowB,SAAUkB,EAAkBlB,UAAY,EACxCnwB,OAAQqxB,EAAkBrxB,QAAU,EACpCzI,IAAK85B,EAAkB95B,KAAO,EAC9BS,IAAKq5B,EAAkBr5B,KAAO,EAC9Bk5B,iBA7TcM,CACZjiC,EACAJ,EACAJ,EAAK2I,QACLu2B,EACAR,GAGF1+B,EAAK0iC,YAAczyB,EACnBjQ,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZ3C,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAAL,CAIA,IAAM0gC,EAAc3hC,EAASrF,gBAAgB8I,MAAMsE,SAC7C/D,EAAYJ,EAAIvG,OACd6C,EAAkC8D,EAAlC9D,MAAOJ,EAA2BkE,EAA3BlE,QAAS0kB,EAAkBxgB,EAAlBwgB,cAClBpL,EAAYL,GAAUE,eAVV,EAW2BnwB,KAAK0V,cAA1C+U,EAXU,EAWVA,aAAckhB,EAXJ,EAWIA,mBAChB4N,EAAa9d,GAAcC,EAAclC,QAZ7B,EAa2BwO,GAAgB5wB,GAArD2P,EAbU,EAaVA,gBAAiBmhB,EAbP,EAaOA,gBAQnB4N,GAJJ5+B,EAAStF,YAAY0U,SAAS7pB,IAAI,sBAAuB2a,EAAMV,UAC/D,IAG4Bo/B,SACxB0D,EAAkBzyB,GAAmBmhB,EAE3CxP,GAAK6gB,GAAY,SAAAtqC,GAEf,IAAK,IAAIrT,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,CAC7C,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QAAT,CAKA,IAAMxqC,EAAQw1B,GAAWO,iBAAiBzf,GACpCo1B,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAGvBE,GAAU58B,EAAS,EAAKyG,eAExB,IAAMimB,EAAczkB,EAAStF,YAAYqf,cACvCja,EACAJ,EAAK2I,QAAQI,OAGTic,EAAY1kB,EAAStF,YAAYqf,cACrCja,EACAJ,EAAK2I,QAAQK,KAITZ,EAAS65B,EAAYld,EAAaC,GA0BxC,GAvBAC,GACE5sB,EACA+H,EACAJ,EAAK2I,QAAQI,MACbX,EACA,CACE1e,SAEF,SAGFqqC,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,IAGrB,IAArBp1B,EAAK0rB,cACH1rB,EAAK0iC,YACP,EAAKzO,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,KAKtCA,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClC,IAAMqgB,EAAgBvB,GACpBh9B,EAAU+Z,SACVre,EAAK2I,SAGPjjB,OAAOotB,OAAO9S,EAAK2I,QAAQuZ,QAAS2gB,GAGtC,IAGMC,EAAiBC,GACrB1qC,EACAmI,EAAM9W,MACNsW,EAAK0iC,YACLxD,EACA0D,EACA,EAAK9jC,eAGPkB,EAAKgjC,KAAOC,GAAS/D,EAAU,EAAKpgC,cAAcokC,qBAElDpN,GACEz9B,EACA+H,EACAJ,EAAK2I,QAAQuZ,QACb4gB,EACA9iC,EAAK2I,SAnBqB,SAAAA,GAAO,OAsCTT,EArCCS,EAAQI,MAqCIZ,EArCGQ,EAAQK,IAqCA,EACnBf,GAAgBC,EAAaC,GAA1DG,EADgD,EAChDA,KAAMG,EAD0C,EAC1CA,IAAKlE,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,OAEnB,CACL,CAEEV,EAAGwE,EAAO/D,EAAQ,EAClB5R,EAAG8V,GAEL,CAEE3E,EAAGwE,EACH3V,EAAG8V,EAAMjE,EAAS,GAEpB,CAEEV,EAAGwE,EAAO/D,EAAQ,EAClB5R,EAAG8V,EAAMjE,GAEX,CAEEV,EAAGwE,EAAO/D,EACV5R,EAAG8V,EAAMjE,EAAS,IAtBxB,IAAkC0D,EAAaC,EAAW,EAChDG,EAAMG,EAAKlE,EAAOC,IAlBlB9a,EACAgwB,EACA,IACA,a,GArOiC8Q,IA8Q3C,SAASyY,GAAS/D,EAAUgE,GAC1B,MAAoB,OAAbhE,IAA6C,IAAxBgE,EAAgC,KAAO,GAcrE,SAASH,GACP1qC,EACA8qC,GAKA,6DAJkD,GAAhDX,EAIF,EAJEA,KAAMxxB,EAIR,EAJQA,KAAMC,EAId,EAJcA,OAAQzI,EAItB,EAJsBA,IAAKS,EAI3B,EAJ2BA,IAAKk5B,EAIhC,EAJgCA,cAChCjD,EAGA,uCAFA0D,EAEA,uCADA5vC,EACA,uDADU,GAEJowC,EAAapwC,EAAQowC,aAAc,EACnChiB,EAAY,GAGZiiB,EAAa,GAEnB,IAAKF,EAAc,CACjB,IAAMG,EAA0BnB,GAAwC,IAAvBA,EAAcnxB,KACzDgyB,EAAOC,GAAS/D,EAAUlsC,EAAQkwC,qBAEpCK,EAAa,SAAH,OAAYC,GAAkBxyB,EAAK4tB,QAAQ,IAA3C,YAAkDoE,GAC1DS,EAAe,YAAH,OAAeD,GAC/BvyB,EAAO2tB,QAAQ,IADC,YAEboE,GAGL,GAAIM,EAAyB,CAc3B,IAbA,IAEMI,EAAgB,GAAH,OAFH,UAEG,OAAgBF,GACjCrB,EAAcnxB,KAAK4tB,QAAQ,KAEvB+E,EAAkB,GAAH,OALL,UAKK,OAAgBH,GACnCrB,EAAclxB,OAAO2tB,QAAQ,KAGzBgF,EAAqBj3C,KAAK4b,MAC9BlQ,EAAQupB,YAAR,UAAuB6hB,EAAvB,UAA4Cl/B,OAGvClM,EAAQupB,YAAY2hB,GAAYh/B,MAAQq/B,GAC7CL,GAAc,IAGhBF,EAAWv1C,KAAX,UAAmBy1C,GAAnB,OAAgCG,IAChCL,EAAWv1C,KAAX,UAAmB21C,EAAnB,gBAAuCE,SAEvCN,EAAWv1C,KAAX,UAAmBy1C,EAAnB,gBAAqCE,IAGvC,GAAIL,EAAY,CAOd,IANA,IAAIS,EAAY,QAAH,OAAWr7B,EAAX,YAAkBw6B,GACzBc,EAAY,QAAH,OAAW76B,EAAX,YAAkB+5B,GAC3BY,EAAqBN,EACvB32C,KAAK4b,MAAMlQ,EAAQupB,YAAR,UAAuB6hB,EAAvB,UAA4Cl/B,OACvD5X,KAAK4b,MAAMlQ,EAAQupB,YAAR,UAAuB2hB,EAAvB,UAA0Ch/B,OAElDlM,EAAQupB,YAAYiiB,GAAWt/B,MAAQq/B,GAC5CC,GAAa,IAGfR,EAAWv1C,KAAX,UAAmB+1C,GAAnB,OAA+BC,KAOnC,OAHA1iB,EAAUtzB,KAaZ,SAAqB00C,EAAMI,GAEzB,IAAMvN,EAASuN,EAAe,aACpB1vC,OAAOoiC,aAAa,MADA,aAEpBpiC,OAAOoiC,aAAa,MAE9B,sBAAgBkO,GAAkBhB,EAAK5D,QAAQ,KAA/C,OAAqDvJ,GAnBtC0O,CAAYvB,EAAMI,IACjCS,EAAWh0C,SAAQ,SAAAyU,GAAC,OAAIsd,EAAUtzB,KAAKgW,MAEhCsd,E,IClWY4iB,G,YACnB,aAAwB,MAAZ38C,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,YACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAWma,GACXlwB,cAAe,CACbi1B,aAAa,IANK,OAUtB,4BAAM1sC,EAAOy/B,KAERmd,eAAgB,EAErB,EAAKhQ,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAd7C,E,kEAiBHvnB,GAInB,OAFAlb,KAAK66C,eAAgB,EAEd,CACL/P,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACbxyB,UAAU,EACVjT,MAAO,GACP0iB,QAAS,CACPI,MAAO,CACLjF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEVwkB,OAAQ,CACNpgC,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,EACRI,oBAAoB,GAEtBqkB,KAAM,CACJrgC,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EAAI,EACrCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,EACRI,oBAAoB,GAEtBoC,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,O,oCAcVhoB,EAASJ,EAAM+nB,GAC3B,OAAqB,IAAjB/nB,EAAKk0B,WAIL9qC,KAAK66C,gBAKP5P,GAAgBj0B,EAASJ,EAAK2I,QAAQI,MAAO/I,EAAK2I,QAAQK,IAAK+e,GAC7D,IACFsM,GAAgBj0B,EAASJ,EAAK2I,QAAQu7B,OAAQlkC,EAAK2I,QAAQw7B,KAAMpc,GAC/D,O,wCAIYvnB,EAAOJ,EAASJ,GAAM,MACOoxB,GAAgB5wB,GAArD2P,EAD8B,EAC9BA,gBAAiBmhB,EADa,EACbA,gBAEnB8S,GACHz3C,KAAK03C,KAAKrkC,EAAK2I,QAAQI,MAAMjF,GAAKnX,KAAK03C,KAAKrkC,EAAK2I,QAAQK,IAAIlF,IAC9DwtB,EACIgT,GACH33C,KAAK03C,KAAKrkC,EAAK2I,QAAQI,MAAMpW,GAAKhG,KAAK03C,KAAKrkC,EAAK2I,QAAQK,IAAIrW,IAC9Dwd,EACIo0B,GACH53C,KAAK03C,KAAKrkC,EAAK2I,QAAQu7B,OAAOpgC,GAAKnX,KAAK03C,KAAKrkC,EAAK2I,QAAQw7B,KAAKrgC,IAChEwtB,EACIkT,GACH73C,KAAK03C,KAAKrkC,EAAK2I,QAAQu7B,OAAOvxC,GAAKhG,KAAK03C,KAAKrkC,EAAK2I,QAAQw7B,KAAKxxC,IAChEwd,EAEEsK,EAAQ9tB,KAAKioC,KACfjoC,KAAKC,KACFw3C,EAAMG,EAAMD,EAAME,IAChB73C,KAAKkd,KAAKu6B,EAAMA,EAAME,EAAMA,GAAO33C,KAAKkd,KAAK06B,EAAMA,EAAMC,EAAMA,MAItE/pB,GAAS,IAAM9tB,KAAKiuB,GAEpB5a,EAAK60B,OAASC,GAAera,EAAO,GACpCza,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZI,EAAYJ,EAAIvG,OADJ,EAE2BvU,KAAK0V,cAA1C+U,EAFU,EAEVA,aAAckhB,EAFJ,EAEIA,mBAEhBxzB,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAUL,IALA,IAAMlJ,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAEhDlJ,EAAYL,GAAUE,eACtBqH,EAAOF,GAAUG,UAdL,WAgBT77B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFpS,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAAS,EAAKyG,eAGxB,IAAMpV,EAAQw1B,GAAWO,iBAAiBzf,GAE1Cma,GACE9hB,EACAiM,EAAUlE,QACVJ,EAAK2I,QAAQI,MACb/I,EAAK2I,QAAQK,IACb,CACEtf,UAIAsW,EAAK9G,UACPihB,GACE9hB,EACAiM,EAAUlE,QACVJ,EAAK2I,QAAQu7B,OACblkC,EAAK2I,QAAQw7B,KACb,CACEz6C,UAMN,IAAM0rC,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAGnB,EAAKj2B,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,GAIhD/8B,EAAQshB,UAAYjwB,EAEpB,IAAM63B,EAAOvhB,EAAK/Z,MAElB,IAAK+Z,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClC,IAAMF,EAAa,CACjBxe,GAAI9D,EAAK2I,QAAQI,MAAMjF,EAAI9D,EAAK2I,QAAQK,IAAIlF,GAAK,EACjDnR,GAAIqN,EAAK2I,QAAQI,MAAMpW,EAAIqN,EAAK2I,QAAQK,IAAIrW,GAAK,EAAI,IAGvD0F,EAAQuoB,KAAOA,EACf5gB,EAAK2I,QAAQuZ,QAAQpe,EAAIwe,EAAWxe,EACpC9D,EAAK2I,QAAQuZ,QAAQvvB,EAAI2vB,EAAW3vB,EAGtCmjC,GACEz9B,EACAiM,EAAUlE,QACVJ,EAAK2I,QAAQuZ,QACbX,EACAvhB,EAAK2I,QACLwZ,EACAz4B,EACAgwB,EACA,GACA,OAxEG10B,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,GA6ET,SAASm9B,EAAoBxZ,GAC3B,MAAO,CAACA,EAAQI,MAAOJ,EAAQu7B,OAAQv7B,EAAQK,IAAKL,EAAQw7B,S,oCAIlD/jC,GACZ,IAAMR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAE7C,GAAIqa,GAAa7O,MAAMsB,QAAQuN,EAAUI,MACvC,OAAOJ,EAAUI,KAAKsU,MAAK,mBAA+B,IAA/B,EAAGpb,c,wCAIhBgL,EAAKwR,GAAiB,WACtCxR,EAAI4nB,iBACJ5nB,EAAI6nB,kBAEJ,IAEI3qB,EACAqjC,EACAtZ,EAJE7mB,EAAYJ,EAAIvG,OAOhByC,EAAU8D,EAAIvG,OAAOyC,QACrBskC,EAAqBt7C,KAAKu7C,cAAcvkC,GAE1CskC,IACFtjC,EAAkBsjC,GACFxrC,UAAW,EAC3BkI,EAAgBuH,QAAQu7B,OAAS,CAC/BpgC,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCmtB,oBAAoB,EACpBqU,WAAW,EACXzU,QAAQ,GAEVte,EAAgBuH,QAAQw7B,KAAO,CAC7BrgC,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCmtB,oBAAoB,EACpBqU,WAAW,EACXzU,QAAQ,GAEV+kB,EAAerjC,EAAgBuH,QAAQw7B,KACvC/6C,KAAK66C,eAAgB,EACrB9Y,EAAqB,WACnB,IAAMK,EAAYnwB,EAAO2B,sBACnBsH,EAAY,CAChBvE,SAAU,EAAKxa,KACf6a,UACAgB,mBAGF5D,EAAa4C,EAASorB,EAAWlnB,MAGnClD,EAAkBhY,KAAK2sC,qBAAqBzxB,GAC5CnD,EAAaf,EAAShX,KAAK7D,KAAM6b,GACjCqjC,EAAerjC,EAAgBuH,QAAQK,KAIzC1I,EAAStF,YAAYkX,YAAY9R,GAEjC41B,GACE1xB,EACAlb,KAAK7D,KACL6b,EACAqjC,EACAr7C,KAAK4J,QACL0iB,EACAyV,K,wCAIcyZ,GAAI,IACZxkC,EAAYwkC,EAAGjnC,OAAfyC,QACFI,EAAQF,EAAStF,YAAYuF,kBAAkBH,GAASI,MAF1C,EAGyB4wB,GAAgB5wB,GAArD2P,EAHY,EAGZA,gBAAiBmhB,EAHL,EAGKA,gBAEzB,GAAIsT,EAAGjnC,OAAO4X,WAAansB,KAAK7D,KAAhC,CAGA,IAAMya,EAAO4kC,EAAGjnC,OAAOyD,iBAGE,IAArBpB,EAAK0rB,cACH1rB,EAAK60B,OACPzrC,KAAK6qC,2BAA2BzzB,EAAOJ,EAASJ,GAEhD5W,KAAKyiC,kBAAkBrrB,EAAOJ,EAASJ,IAfvB,IAmBZ60B,EAAW70B,EAAX60B,OAER70B,EAAK/Z,MAAQ,GAER+G,OAAO8K,MAAM+8B,KAChB70B,EAAK/Z,MAGP,SAAqB4uC,EAAQ1kB,EAAiBmhB,GAC5C,IAAM+D,EAAUllB,GAAoBmhB,EAAmC,GAAjB,eAGtD,OACEuD,EAAOzmC,WAAa8E,OAAOoiC,aAAa9pC,SAH9B,OAG4C,KAAO6pC,EARlDE,CAAYV,EAAQ1kB,EAAiBmhB,O,qCAavClxB,GACbhX,KAAKy7C,kBAAoBz7C,KAAKy7C,kBAAkBr+C,KAAK4C,MACrDgX,EAAQgqB,iBACN/uB,EAAO0B,qBACP3T,KAAKy7C,qB,sCAIOzkC,GACdhX,KAAKy7C,kBAAoBz7C,KAAKy7C,kBAAkBr+C,KAAK4C,MACrDgX,EAAQgqB,iBACN/uB,EAAO0B,qBACP3T,KAAKy7C,qB,sCAIOzkC,GACdA,EAAQ+pB,oBACN9uB,EAAO0B,qBACP3T,KAAKy7C,qB,uCAIQzkC,GACfA,EAAQ+pB,oBACN9uB,EAAO0B,qBACP3T,KAAKy7C,uB,GAlWgCra,ICLrCvoB,GAASL,EAAU,sCAUJkjC,G,YACnB,aAAwB,MAAZz9C,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,gBACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,GAIf+V,UAAWqa,IARS,OAWtB,4BAAM7nC,EAAOy/B,KAERmN,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAb7C,E,kEAgBHvnB,GAInB,GAFEA,GAAaA,EAAU8M,eAAiB9M,EAAU8M,cAAc5Q,MAUlE,MAAO,CACL0zB,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACb/iB,QAAS,CACPI,MAAO,CACLjF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEVtB,gBAAiB9Z,EAAU+Z,SAASM,SACpCuD,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,KAhCpBnmB,GAAO5X,MAAP,kDAC6CjB,KAAK7D,KADlD,8B,oCAsCU6a,EAASJ,EAAM+nB,EAAQrS,GACnC,IAEMqvB,EADJ/kC,GAAQA,EAAK2I,SAAW3I,EAAK2I,QAAQI,OAAS/I,EAAK2I,QAAQK,IAS7D,GANK+7B,GACH9iC,GAAOH,KAAP,8CACyC1Y,KAAK7D,KAD9C,sBAKGw/C,IAAoC,IAAjB/kC,EAAKk0B,QAC3B,OAAO,EAGT,IAAM7rB,EAA+B,UAApBqN,EAA8B,GAAK,GAC9CqP,EAAczkB,EAAStF,YAAYqf,cACvCja,EACAJ,EAAK2I,QAAQI,OAETic,EAAY1kB,EAAStF,YAAYqf,cACrCja,EACAJ,EAAK2I,QAAQK,KAGTg8B,EAAe,CACnB18B,KAAM3b,KAAK6b,IAAIuc,EAAYjhB,EAAGkhB,EAAUlhB,GAAKuE,EAAW,EACxDI,IAAK9b,KAAK6b,IAAIuc,EAAYpyB,EAAGqyB,EAAUryB,GAAK0V,EAAW,EACvD9D,MAAO5X,KAAKC,IAAIm4B,EAAYjhB,EAAIkhB,EAAUlhB,GAAKuE,EAC/C7D,OAAQ7X,KAAKC,IAAIm4B,EAAYpyB,EAAIqyB,EAAUryB,GAAK0V,GAG5C48B,EAAe,CACnB38B,KAAM3b,KAAK6b,IAAIuc,EAAYjhB,EAAGkhB,EAAUlhB,GAAKuE,EAAW,EACxDI,IAAK9b,KAAK6b,IAAIuc,EAAYpyB,EAAGqyB,EAAUryB,GAAK0V,EAAW,EACvD9D,MAAO5X,KAAKC,IAAIm4B,EAAYjhB,EAAIkhB,EAAUlhB,GAAKuE,EAC/C7D,OAAQ7X,KAAKC,IAAIm4B,EAAYpyB,EAAIqyB,EAAUryB,GAAK0V,GAG5C68B,EAAsB/D,GAAe6D,EAAcjd,GAGzD,SAF4BoZ,GAAe8D,EAAcld,IAE7Bmd,K,wCAOZ1kC,EAAOJ,EAASJ,GAChC,IAGMk/B,GAFJ5+B,EAAStF,YAAY0U,SAAS7pB,IAAI,sBAAuB2a,EAAMV,UAC/D,IAC4Bo/B,SACxBR,EAAetN,GAAgB5wB,GAE/ByP,EAwQV,SAAyBzP,EAAOJ,EAASuI,EAASu2B,EAAUR,GAE1D,IAoBIyD,EApBEgD,EAAqBC,GACzBz8B,EAAQI,MACRJ,EAAQK,KAIJo5B,EAAS9hC,EAAStF,YAAYqnC,UAClCjiC,EACA+kC,EAAmB78B,KACnB68B,EAAmB18B,IACnB08B,EAAmB5gC,MACnB4gC,EAAmB3gC,QAIf89B,EAAoBjB,GACxBe,EACA+C,GAKe,OAAbjG,IACFiD,EAAgB,CACdnxB,KAAMuxB,GAAa/hC,EAAO8hC,EAAkBtxB,MAAM,IAAS,EAC3DC,OAAQsxB,GAAa/hC,EAAO8hC,EAAkBrxB,QAAQ,IAAS,IAUnE,MAAO,CACLuxB,KALA71C,KAAKiuB,IACHuqB,EAAmB5gC,OAASm6B,EAAapN,iBAAmB,GAAM,IAClE6T,EAAmB3gC,QAAUk6B,EAAavuB,iBAAmB,GAAM,IAGvD,EACd5I,MAAO+6B,EAAkB/6B,OAAS,EAClCyJ,KAAMsxB,EAAkBtxB,MAAQ,EAChCowB,SAAUkB,EAAkBlB,UAAY,EACxCnwB,OAAQqxB,EAAkBrxB,QAAU,EACpCzI,IAAK85B,EAAkB95B,KAAO,EAC9BS,IAAKq5B,EAAkBr5B,KAAO,EAC9Bk5B,iBArTcM,CACZjiC,EACAJ,EACAJ,EAAK2I,QACLu2B,EACAR,GAGF1+B,EAAK0iC,YAAczyB,EACnBjQ,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZ3C,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAAL,CAIA,IAAM+C,EAAYJ,EAAIvG,OACd6C,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QACTsZ,EAAYL,GAAUE,eATV,EAU2BnwB,KAAK0V,cAA1C+U,EAVU,EAUVA,aAAckhB,EAVJ,EAUIA,mBAChB18B,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAXpC,EAY2BwO,GAAgB5wB,GAArD2P,EAZU,EAYVA,gBAAiBmhB,EAZP,EAYOA,gBAQnB4N,GAJJ5+B,EAAStF,YAAY0U,SAAS7pB,IAAI,sBAAuB2a,EAAMV,UAC/D,IAG4Bo/B,SACxB0D,EAAkBzyB,GAAmBmhB,EAE3CxP,GAAKzpB,GAAS,SAAAA,GAEZ,IAAK,IAAIrT,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,CAC7C,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QAAT,CAKA,IAAMxqC,EAAQw1B,GAAWO,iBAAiBzf,GACpCo1B,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GA6BvB,GA1BAE,GAAU58B,EAAS,EAAKyG,eAGxBumC,GACEhtC,EACA+H,EACAJ,EAAK2I,QAAQI,MACb/I,EAAK2I,QAAQK,IACb,CACEtf,SAEF,QACAsW,EAAK2I,QAAQyV,iBAEf2V,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,IAGrB,IAArBp1B,EAAK0rB,cACH1rB,EAAK0iC,YACP,EAAKzO,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,KAKtCA,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClC,IAAMqgB,EAAgBvB,GACpBh9B,EAAU+Z,SACVre,EAAK2I,SAGPjjB,OAAOotB,OAAO9S,EAAK2I,QAAQuZ,QAAS2gB,GAGtC,IAEMC,EAAiBC,GACrB1qC,EACAmI,EAAM9W,MACNsW,EAAK0iC,YACLxD,EACA0D,EACA,EAAK9jC,eAGPkB,EAAKgjC,KAAOC,GAAS/D,EAAU,EAAKpgC,cAAcokC,qBAElDpN,GACEz9B,EACA+H,EACAJ,EAAK2I,QAAQuZ,QACb4gB,EACA9iC,EAAK2I,SAlBqB,SAAAA,GAAO,OAqCTT,EApCCS,EAAQI,MAoCIZ,EApCGQ,EAAQK,IAoCA,EACnBo8B,GACnCl9B,EACAC,GAFMG,EADgD,EAChDA,KAAMG,EAD0C,EAC1CA,IAAKlE,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,OAKnB,CACL,CAEEV,EAAGwE,EAAO/D,EAAQ,EAClB5R,EAAG8V,GAEL,CAEE3E,EAAGwE,EACH3V,EAAG8V,EAAMjE,EAAS,GAEpB,CAEEV,EAAGwE,EAAO/D,EAAQ,EAClB5R,EAAG8V,EAAMjE,GAEX,CAEEV,EAAGwE,EAAO/D,EACV5R,EAAG8V,EAAMjE,EAAS,IAzBxB,IAAkC0D,EAAaC,EAAW,EAChDG,EAAMG,EAAKlE,EAAOC,IAlBlB9a,EACAgwB,EACA,IACA,a,GAlOqC8Q,IA8Q/C,SAASyY,GAAS/D,EAAUgE,GAC1B,MAAoB,OAAbhE,IAA6C,IAAxBgE,EAAgC,KAAO,GAcrE,SAASH,GACP1qC,EACA8qC,GAKA,6DAJkD,GAAhDX,EAIF,EAJEA,KAAMxxB,EAIR,EAJQA,KAAMC,EAId,EAJcA,OAAQzI,EAItB,EAJsBA,IAAKS,EAI3B,EAJ2BA,IAAKk5B,EAIhC,EAJgCA,cAChCjD,EAGA,uCAFA0D,EAEA,uCADA5vC,EACA,uDADU,GAEJowC,EAAapwC,EAAQowC,aAAc,EACnChiB,EAAY,GAGZiiB,EAAa,GAEnB,IAAKF,EAAc,CACjB,IAAMG,EAA0BnB,GAAwC,IAAvBA,EAAcnxB,KACzDgyB,EAAOC,GAAS/D,EAAUlsC,EAAQkwC,qBAEpCK,EAAa,SAAH,OAAYC,GAAkBxyB,EAAK4tB,QAAQ,IAA3C,YAAkDoE,GAC1DS,EAAe,YAAH,OAAeD,GAC/BvyB,EAAO2tB,QAAQ,IADC,YAEboE,GAGL,GAAIM,EAAyB,CAc3B,IAbA,IAEMI,EAAgB,GAAH,OAFH,UAEG,OAAgBF,GACjCrB,EAAcnxB,KAAK4tB,QAAQ,KAEvB+E,EAAkB,GAAH,OALL,UAKK,OAAgBH,GACnCrB,EAAclxB,OAAO2tB,QAAQ,KAGzBgF,EAAqBj3C,KAAK4b,MAC9BlQ,EAAQupB,YAAR,UAAuB6hB,EAAvB,UAA4Cl/B,OAGvClM,EAAQupB,YAAY2hB,GAAYh/B,MAAQq/B,GAC7CL,GAAc,IAGhBF,EAAWv1C,KAAX,UAAmBy1C,GAAnB,OAAgCG,IAChCL,EAAWv1C,KAAX,UAAmB21C,EAAnB,gBAAuCE,SAEvCN,EAAWv1C,KAAX,UAAmBy1C,EAAnB,gBAAqCE,IAGvC,GAAIL,EAAY,CAOd,IANA,IAAIS,EAAY,QAAH,OAAWr7B,EAAX,YAAkBw6B,GACzBc,EAAY,QAAH,OAAW76B,EAAX,YAAkB+5B,GAC3BY,EAAqBN,EACvB32C,KAAK4b,MAAMlQ,EAAQupB,YAAR,UAAuB6hB,EAAvB,UAA4Cl/B,OACvD5X,KAAK4b,MAAMlQ,EAAQupB,YAAR,UAAuB2hB,EAAvB,UAA0Ch/B,OAElDlM,EAAQupB,YAAYiiB,GAAWt/B,MAAQq/B,GAC5CC,GAAa,IAGfR,EAAWv1C,KAAX,UAAmB+1C,GAAnB,OAA+BC,KAOnC,OAHA1iB,EAAUtzB,KAaZ,SAAqB00C,EAAMI,GAEzB,IAAMvN,EAASuN,EAAe,aACpB1vC,OAAOoiC,aAAa,MADA,aAEpBpiC,OAAOoiC,aAAa,MAE9B,sBAAgBkO,GAAkBhB,EAAK5D,QAAQ,KAA/C,OAAqDvJ,GAnBtC0O,CAAYvB,EAAMI,IACjCS,EAAWh0C,SAAQ,SAAAyU,GAAC,OAAIsd,EAAUtzB,KAAKgW,MAEhCsd,EAqFT,SAASgkB,GAA4Bl9B,EAAaC,GAChD,MAAO,CACLG,KAAM3b,KAAKoG,MAAMpG,KAAK6b,IAAIN,EAAYpE,EAAGqE,EAAUrE,IACnD2E,IAAK9b,KAAKoG,MAAMpG,KAAK6b,IAAIN,EAAYvV,EAAGwV,EAAUxV,IAClD4R,MAAO5X,KAAKoG,MAAMpG,KAAKC,IAAIsb,EAAYpE,EAAIqE,EAAUrE,IACrDU,OAAQ7X,KAAKoG,MAAMpG,KAAKC,IAAIsb,EAAYvV,EAAIwV,EAAUxV,KCvd3C,gBAAS2yC,EAAazE,GAMnC,IALA,IAAI0E,GAAQ,EAGRr5C,EAAIo5C,EAAYh+C,OAAS,EAEpBtC,EAAI,EAAGA,EAAIsgD,EAAYh+C,OAAQtC,IAClCwgD,GAAyB3E,EAAUyE,EAAYtgD,GAAIsgD,EAAYp5C,MACjEq5C,GAASA,GAGXr5C,EAAIlH,EAGN,OAAOugD,GAiGT,SAASC,GAAyBzhC,EAAO0hC,EAASC,GAChD,OApFmBC,EAqFL5hC,EAAMpR,EArFGizC,EAqFAH,EAAQ9yC,EArFJkzC,EAqFOH,EAAQ/yC,MApFrCizC,EAAKD,GAAMA,EAAKE,GAAQA,EAAKF,GAAMA,EAAKC,KAkB/C,SAA4B7hC,EAAO+hC,EAAKC,GAEtC,GAAID,EAAIhiC,EAAIC,EAAMD,GAAKiiC,EAAIjiC,EAAIC,EAAMD,EACnC,OAAO,EAIT,GAAIgiC,EAAIhiC,IAAMiiC,EAAIjiC,EAChB,OAAOC,EAAMD,EAAIgiC,EAAIhiC,EAIvB,GAAIgiC,EAAIhiC,EAAIiiC,EAAIjiC,EAAG,CACjB,IAAMkiC,EAASF,EAEfA,EAAMC,EACNA,EAAMC,EAER,IAAMC,EAyBR,SAA4BliC,EAAO+hC,EAAKC,GACtC,IAAMG,GAAQH,EAAIpzC,EAAImzC,EAAInzC,IAAMozC,EAAIjiC,EAAIgiC,EAAIhiC,GAM5C,MALW,CACT7d,MAAO6/C,EAAInzC,EAAIuzC,GAAQniC,EAAMD,EAAIgiC,EAAIhiC,GACrCqiC,SAAUD,GA7BIE,CAAmBriC,EAAO+hC,EAAKC,GAI/C,OACEp5C,KAAK05C,KAAKJ,EAAQE,UAAYpiC,EAAMpR,EACpChG,KAAK05C,KAAKJ,EAAQE,UAAYF,EAAQhgD,MA2CtCqgD,CAAmBviC,EAAO0hC,EAASC,IAtFvC,IAAqBC,EAAIC,EAAIC,EC6C7B,SAASU,GAAqBjB,EAAavhC,EAAOyiC,EAAYC,GACxDC,GAAgBpB,EAAavhC,KAC/ByiC,EAAWvgD,OAASwgD,EACpBD,EAAWG,SAAWF,EAAaA,EACnCD,EAAWj/B,S,ICjFMq/B,GAMnB,WAAYC,EAAWC,GAAkB,YACvC19C,KAAKy9C,UAAYA,EACjBz9C,KAAK09C,iBAAmBA,GCJPC,GAQnB,WAAYC,GAA2C,IAAjC7S,IAAiC,yDAAfzU,IAAe,qEACrDt2B,KAAK0a,EAAIkjC,EAASljC,EAClB1a,KAAKuJ,EAAIq0C,EAASr0C,EAClBvJ,KAAK+qC,UAAYA,EACjB/qC,KAAKs2B,OAASA,EACdt2B,KAAK62B,MAAQ,IC6EjB,SAASgnB,GAAwB3B,EAAah7B,EAAI48B,EAAIC,GAGpD,IAFA,IAAIj7C,EAAIo5C,EAAYh+C,OAAS,EAEpBtC,EAAI,EAAGA,EAAIsgD,EAAYh+C,OAAQtC,IACtC,IACmC,IAAjCmiD,EAAiBp5C,QAAQ/I,KACQ,IAAjCmiD,EAAiBp5C,QAAQ7B,GAF3B,CAWA,GAAIk7C,GAAc98B,EAAI48B,EAHXrN,GAAUyL,EAAYp5C,IACtB2tC,GAAUyL,EAAYtgD,KAG/B,OAAO,EAGTkH,EAAIlH,OAXFkH,EAAIlH,EAcR,OAAO,EAcT,SAASoiD,GAAc98B,EAAI48B,EAAI38B,EAAI88B,GACjC,IAAIpwC,GAAS,EAEPqwC,EAAS,CACbC,GAAYj9B,EAAI48B,EAAI38B,GACpBg9B,GAAYj9B,EAAI48B,EAAIG,GACpBE,GAAYh9B,EAAI88B,EAAI/8B,GACpBi9B,GAAYh9B,EAAI88B,EAAIH,IAItB,OAAII,EAAO,KAAOA,EAAO,IAAMA,EAAO,KAAOA,EAAO,KAKlC,IAAdA,EAAO,IAAYE,GAAUl9B,EAAIC,EAAI28B,GAEvCjwC,GAAS,EACc,IAAdqwC,EAAO,IAAYE,GAAUl9B,EAAI+8B,EAAIH,GAE9CjwC,GAAS,EACc,IAAdqwC,EAAO,IAAYE,GAAUj9B,EAAID,EAAI+8B,GAE9CpwC,GAAS,EACc,IAAdqwC,EAAO,IAAYE,GAAUj9B,EAAI28B,EAAIG,KAE9CpwC,GAAS,GAGJA,GAWT,SAAS4iC,GAAU4N,GACjB,MAAO,CACL3jC,EAAG2jC,EAAW3jC,EACdnR,EAAG80C,EAAW90C,GAclB,SAAS40C,GAAYzgD,EAAG4gD,EAAG5hD,GACzB,IAAM6hD,GACHD,EAAE/0C,EAAI7L,EAAE6L,IAAM7M,EAAEge,EAAI4jC,EAAE5jC,IAAM4jC,EAAE5jC,EAAIhd,EAAEgd,IAAMhe,EAAE6M,EAAI+0C,EAAE/0C,GAErD,OAAyB,IAArBg1C,EACK,EAGFA,EAAmB,EAAI,EAAI,EAapC,SAASH,GAAU1gD,EAAG4gD,EAAG5hD,GACvB,OACE4hD,EAAE5jC,GAAKnX,KAAKsc,IAAIniB,EAAEgd,EAAGhe,EAAEge,IACvB4jC,EAAE5jC,GAAKnX,KAAK6b,IAAI1hB,EAAEgd,EAAGhe,EAAEge,IACvB4jC,EAAE/0C,GAAKhG,KAAKsc,IAAIniB,EAAE6L,EAAG7M,EAAE6M,IACvB+0C,EAAE/0C,GAAKhG,KAAK6b,IAAI1hB,EAAE6L,EAAG7M,EAAE6M,GAQZ,QACbi1C,UAxNF,SAAmBC,EAAiBvC,GAElC,IAAMwC,EAAexC,EAAYh+C,OAAS,EAI1C,OAAO2/C,GAAwB3B,EAHZzL,GAAUyL,EAAYwC,IACvBjO,GAAUgO,GAEuC,CACjEC,KAkNF9+B,IAtMF,SAAas8B,GACX,IAAMwC,EAAexC,EAAYh+C,OAAS,EAI1C,OAAO2/C,GAAwB3B,EAHZzL,GAAUyL,EAAYwC,IACrBjO,GAAUyL,EAAY,IAE2B,CACnEwC,EACA,KAgMFC,OAnLF,SAAgBzC,EAAa0C,GAE3B,IAAMC,EAAiBpO,GAAUyL,EAAY0C,IAGzCE,EAAmBF,EAAmB,EAEjB,IAArBA,IACFE,EAAmB5C,EAAYh+C,OAAS,GAG1C,IAAI6gD,EAAiBtO,GAAUyL,EAAY4C,IAE3C,QACEjB,GAAwB3B,EAAa2C,EAAgBE,EAAgB,CACnEH,EACAE,KAeGjB,GAAwB3B,EAAa2C,EAF5CE,EAAiBtO,GAAUyL,EALzB4C,EADEF,IAAqB1C,EAAYh+C,OAAS,EACzB,EAEA0gD,EAAmB,IAKoC,CAC1EA,EACAE,MC3EiBE,G,WAOnB,WAAY9jC,EAAWiR,GAAU,YAC/BnsB,KAAKi/C,WAAa/jC,EAClBlb,KAAKk/C,UAAY/yB,E,+CAWjB,IAAMgzB,EAAmBn/C,KAAKo/C,WAE9B,GAAyB,OAArBD,EACF,OAAO,KAGT,IAAME,EAAar/C,KAAKs/C,qBAAqBH,GAE7C,OAAIE,EACsBr/C,KAAKu/C,iBAC3BJ,EACAE,GAQG,O,iCAeP,OAHAr/C,KAAKw/C,UAAYvnC,EAAajY,KAAKi/C,WAAWjoC,QAAShX,KAAKk/C,WAC5Dl/C,KAAKy/C,YAAcz/C,KAAKi/C,WAAWj3B,cAAcwR,OAE5Cx5B,KAAKw/C,UAIYx/C,KAAK0/C,gCAENjC,UALZ,O,sDAuBT,IARA,IAAMtlC,EAAWnY,KAAKw/C,UAElBG,EAAgB,CAClBlC,UAAW,KACXmC,YAAa,KACb3gC,SAAUe,KAGHy9B,EAAY,EAAGA,EAAYtlC,EAASvB,KAAK1Y,OAAQu/C,IAAa,CACrE,IAAMoC,EAAwB7/C,KAAK8/C,sBAAsBrC,GAE3B,OAA1BoC,IAIAA,EAAsB5gC,SAAW0gC,EAAc1gC,WACjD0gC,EAAgBE,IAIpB,OAAOF,I,4CAWalC,GACpB,IAAMviC,EAAYlb,KAAKi/C,WAGjBroC,EAFW5W,KAAKw/C,UAEA5oC,KAAK6mC,GACrBrsB,EAASxa,EAAK2I,QAAQ6R,OAE5B,QAAe1mB,IAAX0mB,EACF,OAAO,KAGT,IAAqB,IAAjBxa,EAAKk0B,QACP,OAAO,KAST,IANA,IAAMiV,EAAU,CACdtC,YACAmC,YAAa,KACb3gC,SAAUe,KAGHpkB,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAQtC,IAAK,CACtC,IAAMsjC,EAAehoB,EAAStF,YAAYqf,cACxC/V,EAAUlE,QACVoa,EAAOx1B,IAEHokD,EAA+B9oC,EAASrF,gBAAgB8I,MAAMsE,SAClEigB,EACAl/B,KAAKy/C,aAGHO,EAA+BD,EAAQ9gC,WACzC8gC,EAAQH,YAAchkD,EACtBmkD,EAAQ9gC,SAAW+gC,GAIvB,OAAOD,I,2CAWYtC,GAMnB,IALA,IACMrsB,EADWpxB,KAAKw/C,UACE5oC,KAAK6mC,GAAWl+B,QAAQ6R,OAE1CiuB,EAAa,GAEVzjD,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAQtC,IAAK,CACtC,IAAMqkD,EAAYjB,EAAmBkB,mBAAmBtkD,EAAGw1B,EAAOlzB,QACxD8B,KAAKmgD,yBAAyB/uB,EAAOx1B,GAAIw1B,EAAO6uB,IApKtC,IAuKlBZ,EAAW36C,KAAK,CAAC9I,EAAGqkD,IAIxB,OAAOZ,I,uCAYQ5B,EAAW4B,GAE1B,IAAK,IAAIzjD,EAAI,EAAGA,EAAIyjD,EAAWnhD,OAAQtC,IACrC,GAAIoE,KAAKogD,4BAA4B3C,EAAW4B,EAAWzjD,IACzD,OAAO,IAAI4hD,GAAgBC,EAAW4B,EAAWzjD,IAKrD,OAAO,O,kDAYmB6hD,EAAWC,GACrC,IAAMxiC,EAAYlb,KAAKi/C,WAEjBroC,EADW5W,KAAKw/C,UACA5oC,KAAK6mC,GACrBrsB,EAASxa,EAAK2I,QAAQ6R,OAE5B,QAA4B1mB,IAAxBkM,EAAK2I,QAAQ6R,OAAjB,CAIA,IAAqB,IAAjBxa,EAAKk0B,QACP,OAAO,EAGT,IAAMuV,EAAUjvB,EAAOssB,EAAiB,IAClC4C,EAAUlvB,EAAOssB,EAAiB,IAElChgD,EAAIshD,EAAmBuB,2BAC3BF,EACAC,EACAplC,EAAUlE,SAGNta,EAAIsiD,EAAmBwB,gBAAgB9iD,GACvC1B,EAAIgE,KAAKygD,8BAA8B/iD,GAGvCgjD,GAAS1kD,EAAE,GAAKU,EAAE,GAAKV,EAAE,GAAKU,EAAE,IAAMA,EAAEikD,UAE9C,OAAID,EAAQ,GAAKA,EAAQhkD,EAAEikD,a,oDA0DCjjD,GAG5B,MAFU,CAACsC,KAAKy/C,YAAY/kC,EAAIhd,EAAE,GAAGgd,EAAG1a,KAAKy/C,YAAYl2C,EAAI7L,EAAE,GAAG6L,K,+CAc3C82C,EAASC,GAChC,IAAMplC,EAAYlb,KAAKi/C,WAEjB/9B,EAAKhK,EAAStF,YAAYqf,cAAc/V,EAAUlE,QAASqpC,GAC3Dl/B,EAAKjK,EAAStF,YAAYqf,cAAc/V,EAAUlE,QAASspC,GAC3DM,EAAS5gD,KAAKy/C,YAapB,OAT4Bl8C,KAAKC,KAC9B2d,EAAG5X,EAAI2X,EAAG3X,GAAKq3C,EAAOlmC,GACpByG,EAAGzG,EAAIwG,EAAGxG,GAAKkmC,EAAOr3C,EACvB4X,EAAGzG,EAAIwG,EAAG3X,EACV4X,EAAG5X,EAAI2X,EAAGxG,GAEKxD,EAASrF,gBAAgB8I,MAAMsE,SAASiC,EAAIC,M,kDAtE/Bk/B,EAASC,EAAStpC,GAClD,IAAMtZ,EAAI,GAWV,OARI2iD,EAAQ3lC,EAAI4lC,EAAQ5lC,GACtBhd,EAAEgH,KAAKwS,EAAStF,YAAYqf,cAAcja,EAASqpC,IACnD3iD,EAAEgH,KAAKwS,EAAStF,YAAYqf,cAAcja,EAASspC,MAEnD5iD,EAAEgH,KAAKwS,EAAStF,YAAYqf,cAAcja,EAASspC,IACnD5iD,EAAEgH,KAAKwS,EAAStF,YAAYqf,cAAcja,EAASqpC,KAG9C3iD,I,sCAYcA,GACrB,IAAMhB,EAAI,CAACgB,EAAE,GAAGgd,EAAIhd,EAAE,GAAGgd,EAAGhd,EAAE,GAAG6L,EAAI7L,EAAE,GAAG6L,GAI1C,OAFA7M,EAAEikD,UAAYzpC,EAASrF,gBAAgB8I,MAAMsE,SAASvhB,EAAE,GAAIA,EAAE,IAEvDhB,I,yCA0DiBmkD,EAAc3iD,GAStC,OANI2iD,EAAe3iD,EAAS,EACd2iD,EAAe,EAEf,M,KCrVH,YAASzvB,EAAQ0vB,GAE1BA,IAAgB1vB,EAAOlzB,OAAS,EAClCkzB,EAAO0vB,GAAajqB,MAAMnyB,KAAK0sB,EAAO,IAEtCA,EAAO0vB,GAAajqB,MAAMnyB,KAAK0sB,EAAO0vB,EAAc,KCgCxD,SAASC,GAAa7lC,EAAW8lC,GAC/B,IAAM7oC,EAAWF,EAAaiD,EAAUlE,QAAShX,KAAK7D,MAEtD,QAAiBuO,IAAbyN,EAAJ,CAIA,IAAM8oC,EAAeD,EAAWpB,YAC1BnC,EAAYuD,EAAWvD,UAGvB7mC,EAAOuB,EAASvB,KAAK6mC,GAErBrsB,EAASxa,EAAK2I,QAAQ6R,OAGxBA,EAAOlzB,QAAU,IAKjB+iD,IAAiB7vB,EAAOlzB,OAAS,GACnCkzB,EAAO6vB,EAAe,GAAGpqB,MAAM9oB,MAC/BqjB,EAAO6vB,EAAe,GAAGpqB,MAAMnyB,KAAK0sB,EAAO,KACjB,IAAjB6vB,GACT7vB,EAAOA,EAAOlzB,OAAS,GAAG24B,MAAM9oB,MAChCqjB,EAAOA,EAAOlzB,OAAS,GAAG24B,MAAMnyB,KAAK0sB,EAAO6vB,EAAe,MAE3D7vB,EAAO6vB,EAAe,GAAGpqB,MAAM9oB,MAC/BqjB,EAAO6vB,EAAe,GAAGpqB,MAAMnyB,KAAK0sB,EAAO6vB,EAAe,KAI5D7vB,EAAO7wB,OAAO0gD,EAAc,GAE5BrqC,EAAK0rB,aAAc,EACnB1rB,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EAGjB7zB,EAAStF,YAAYkX,YAAY5N,EAAUlE,WAY7C,SAASkqC,GAAahmC,EAAWimC,GAC/B,IAAMhpC,EAAWF,EAAaiD,EAAUlE,QAAShX,KAAK7D,MAEtD,QAAiBuO,IAAbyN,EAAJ,CAKA,IAAMvB,EAAOuB,EAASvB,KAAKuqC,EAAW1D,WAEhCqD,EAmCR,SAA4BK,GAM1B,IAJA,IAAMzD,EAAmByD,EAAWzD,iBAChCoD,EAAc9gC,IACZohC,EAAoB1D,EAAiBz2B,SAAS,GAE3CrrB,EAAI,EAAGA,EAAI8hD,EAAiBx/C,OAAQtC,IAAK,CAChD,IAAM4E,EAAQk9C,EAAiB9hD,GAEjB,IAAV4E,GAAeA,EAAQsgD,IACzBA,EAActgD,GAKd4gD,GAAqC,IAAhBN,IACvBA,EAAc,GAMhB,QAFAA,EAvDoBO,CAAmBF,GAEvC,GAAIL,IAAgB9gC,IAApB,CAIA,IAAMshC,EAAa,IAAI3D,GAAmBziC,EAAU8M,cAAc5Q,OAE5Dga,EAASxa,EAAK2I,QAAQ6R,OAG5BA,EAAO7wB,OAAOugD,EAAa,EAAGQ,GAG9BlwB,EAAO0vB,EAAc,GAAGjqB,MAAM9oB,MAC9BqjB,EAAO0vB,EAAc,GAAGjqB,MAAMnyB,KAAKwW,EAAU8M,cAAc5Q,OAE3DmqC,GAAQnwB,EAAQ0vB,GAEhBlqC,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EAGjBn0B,EAAK0rB,aAAc,EACnBprB,EAAStF,YAAYkX,YAAY5N,EAAUlE,WCxH9B,QACbwqC,4BPCa,SAAS3J,EAAI7gB,EAAaklB,GACvC,IAAMuF,EAAgB,CACpBtjC,MAAO,EACPyJ,KAAM,EACNowB,SAAU,EACVnwB,OAAQ,GAGJJ,EA0BR,SAAgBowB,EAAI7gB,EAAaklB,GAQ/B,IAPA,IAAMz0B,EAAM,CACV5qB,MAAO,EACP0gD,QAAS,EACTp/B,MAAO,GAEL3d,EAAQ,EAEH+I,EAAIytB,EAAY3X,IAAK9V,EAAIytB,EAAY3X,IAAM2X,EAAY5b,OAAQ7R,IACtE,IACE,IAAImR,EAAIsc,EAAY9X,KACpBxE,EAAIsc,EAAY9X,KAAO8X,EAAY7b,MACnCT,IACA,CAMAyiC,GAAqBjB,EALP,CACZxhC,IACAnR,KAGuCke,EAAKowB,EAAGr3C,IACjDA,IAIJ,OAAOinB,EAlDKi6B,CAAO7J,EAAI7gB,EAAaklB,GAEpC,OAAkB,IAAdz0B,EAAItJ,MACCsjC,GAGTA,EAActjC,MAAQsJ,EAAItJ,MAC1BsjC,EAAc75B,KAAOH,EAAI5qB,MAAQ4qB,EAAItJ,MACrCsjC,EAAczJ,SACZvwB,EAAI81B,QAAU91B,EAAItJ,MAAQsjC,EAAc75B,KAAO65B,EAAc75B,KAC/D65B,EAAc55B,OAAStkB,KAAKkd,KAAKghC,EAAczJ,UAExCyJ,IOpBPjE,mBACAmE,aCJa,SAASzF,EAAa0F,GACnC,IAAIC,EAAe,EACf/+C,EAAIo5C,EAAYh+C,OAAS,EAE7B0jD,EAAUA,GAAW,EAErB,IAAK,IAAIhmD,EAAI,EAAGA,EAAIsgD,EAAYh+C,OAAQtC,IACtCimD,IACG3F,EAAYp5C,GAAG4X,EAAIwhC,EAAYtgD,GAAG8e,IAClCwhC,EAAYp5C,GAAGyG,EAAI2yC,EAAYtgD,GAAG2N,GACrCzG,EAAIlH,EAGN,OAAO2H,KAAKC,IAAKq+C,EAAeD,EAAW,IDR3CjE,sBACAmE,qBACA9C,sBACA+C,eDFa,SAASjnC,EAAKknC,GAC3B,IAAM9mC,EAAYJ,EAAIvG,OAEtB,GAAIytC,GAAkC,OAAxBA,EAAOC,aAAuB,CAC1C,IAAMjB,EAAa,CACjBvD,UAAWuE,EAAOvE,UAClBmC,YAAaoC,EAAOC,cAGtBlB,GAAahlD,KAAKiE,KAAMkb,EAAW8lC,OAC9B,CACL,IACMG,EADqB,IAAInC,GAAmB9jC,EAAWlb,KAAK7D,MAC5B+lD,WAElCf,GACFD,GAAanlD,KAAKiE,KAAMkb,EAAWimC,KCZvC7D,mBACAiE,YEYI1oC,GAASL,EAAU,oCAGvBupC,GAKEI,GALFJ,eACAJ,GAIEQ,GAJFR,aACAH,GAGEW,GAHFX,4BACAM,GAEEK,GAFFL,kBACAnE,GACEwE,GADFxE,mBAWmByE,G,YACnB,aAAwB,MAAZnkD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,cACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cA4tDG,CACL2sC,cAAe,CACb9iC,QAAS,CACPI,MAAO,CACLorB,WAAW,EACXzU,QAAQ,KAIdgsB,QAAS,EACTC,mBAAoB,EACpBC,qBAAsB,EACtBC,0BAA2B,GAC3BC,mBAAmB,EACnBC,aAAc,UACd7mB,cAAe,EACf8mB,aAAc,EACdjY,aAAa,GA5uDXlf,UAAWsa,IALS,OAQtB,4BAAM9nC,EAAOy/B,KAERyD,iBAAkB,EAEvB,EAAKzE,UAAW,EAChB,EAAKmmB,WAAY,EACjB,EAAKC,YAAa,EAGlB,EAAKC,0BAA4B,EAAKA,0BAA0B3lD,KAA/B,SACjC,EAAK4lD,0BAA4B,EAAKA,0BAA0B5lD,KAA/B,SACjC,EAAK6lD,0BAA4B,EAAKA,0BAA0B7lD,KAA/B,SACjC,EAAKkjC,wBAA0B,EAAKA,wBAAwBljC,KAA7B,SAC/B,EAAK8lD,iCAAmC,EAAKA,iCAAiC9lD,KAAtC,SAGxC,EAAK+lD,qBAAuB,EAAKA,qBAAqB/lD,KAA1B,SAC5B,EAAKgmD,uBAAyB,EAAKA,uBAAuBhmD,KAA5B,SAE9B,EAAKimD,2BAA6B,EAAKA,2BAA2BjmD,KAAhC,SAGlC,EAAKkmD,0BAA4B,EAAKA,0BAA0BlmD,KAA/B,SACjC,EAAKmmD,+BAAiC,EAAKA,+BAA+BnmD,KAApC,SAGtC,EAAKomD,uBAAyB,EAAKA,uBAAuBpmD,KAA5B,SAE9B,EAAKytC,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KApC7C,E,kEAuCHvnB,GAInB,GAFEA,GAAaA,EAAU8M,eAAiB9M,EAAU8M,cAAc5Q,MAElE,CAQA,IAAMY,EAAkB,CACtB8yB,SAAS,EACTxU,QAAQ,EACRgM,aAAa,EACbhiC,WAAOoK,EACP6U,QAAS,CACP6R,OAAQ,KAaZ,OATApZ,EAAgBuH,QAAQuZ,QAAU,CAChCxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,GAGXhnB,EA1BLa,GAAO5X,MAAP,kDAC6CjB,KAAK7D,KADlD,8B,oCAqCU6a,EAASJ,EAAM+nB,GAC3B,IAAMgd,EAAkB/kC,GAAQA,EAAK2I,SAAW3I,EAAK2I,QAAQ6R,OAE7D,IAAKuqB,EACH,MAAM,IAAIx2C,MAAJ,8CACmCnF,KAAK7D,KADxC,qBAKR,SAAKw/C,IAAoC,IAAjB/kC,EAAKk0B,eAMLpgC,IAFA1K,KAAKyjD,iBAAiBzsC,EAASJ,EAAM+nB,K,wCAiB7C3nB,EAASJ,EAAM+nB,GAG/B,IAFA,IAAI1f,EAAWe,IAENpkB,EAAI,EAAGA,EAAIgb,EAAK2I,QAAQ6R,OAAOlzB,OAAQtC,IAAK,CACnD,IAAM8nD,EAAYxsC,EAASrF,gBAAgB8I,MAAMsE,SAC/CrI,EAAK2I,QAAQ6R,OAAOx1B,GACpB+iC,GAGF1f,EAAW1b,KAAK6b,IAAIH,EAAUykC,GAIhC,OAAIzkC,IAAae,KACP,EAGHf,I,8CAWejI,EAASJ,EAAM+nB,GACrC,IAAI1f,EAAWe,IAEf,IAAKpJ,EACH,OAAQ,EAOV,IAJA,IAAM+sC,EAAezsC,EAAStF,YAAYqf,cAAcja,EAAS2nB,GAE3DvN,EAASxa,EAAK2I,QAAQ6R,OAEnBx1B,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAQtC,IAAK,CACtC,IAAMsjC,EAAehoB,EAAStF,YAAYqf,cACxCja,EACAoa,EAAOx1B,IAGH8nD,EAAYxsC,EAASrF,gBAAgB8I,MAAMsE,SAC/CigB,EACAykB,GAGF1kC,EAAW1b,KAAK6b,IAAIH,EAAUykC,GAIhC,OAAIzkC,IAAae,KACP,EAGHf,I,wCAaS7H,EAAOJ,EAASJ,GAsBhC,IApBA,IAAIgtC,EAAY7K,EAEVlD,EAAe3+B,EAAStF,YAAY0U,SAAS7pB,IACjD,sBACA2a,EAAMV,SAEFo/B,EAAWD,EAAeA,EAAaC,SAAW,KAElD1kB,EAASxa,EAAK2I,QAAQ6R,OAKtBtU,EAAS,CACboC,KAAMkS,EAAO,GAAG1W,EAChBmG,MAAOuQ,EAAO,GAAG1W,EACjBga,OAAQtD,EAAO,GAAG7nB,EAClB8V,IAAK+R,EAAO,GAAG1W,GAGR9e,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAQtC,IACjCkhB,EAAOoC,KAAO3b,KAAK6b,IAAItC,EAAOoC,KAAMkS,EAAOx1B,GAAG8e,GAC9CoC,EAAO+D,MAAQtd,KAAKsc,IAAI/C,EAAO+D,MAAOuQ,EAAOx1B,GAAG8e,GAChDoC,EAAO4X,OAASnxB,KAAK6b,IAAItC,EAAO4X,OAAQtD,EAAOx1B,GAAG2N,GAClDuT,EAAOuC,IAAM9b,KAAKsc,IAAI/C,EAAOuC,IAAK+R,EAAOx1B,GAAG2N,GAG9C,IAAMs6C,EAAkB,CACtB3kC,KAAMpC,EAAOoC,KACbG,IAAKvC,EAAO4X,OACZvZ,MAAO5X,KAAKC,IAAIsZ,EAAO+D,MAAQ/D,EAAOoC,MACtC9D,OAAQ7X,KAAKC,IAAIsZ,EAAOuC,IAAMvC,EAAO4X,SAQvC,GAJA9d,EAAKitC,gBAAkBA,GAIlBzsC,EAAM9W,MAAO,CAEhB,IAAM04C,EAAS9hC,EAAStF,YAAYqnC,UAClCjiC,EACA6sC,EAAgB3kC,KAChB2kC,EAAgBxkC,IAChBwkC,EAAgB1oC,MAChB0oC,EAAgBzoC,QAIlBwoC,EAAapC,GAA4BzlD,KACvCiE,KACAg5C,EACA6K,EACAjtC,EAAK2I,QAAQ6R,QAGE,OAAb0kB,IAQFiD,EAAgB,CACdnxB,KAAMuxB,GACJ/hC,GACCwsC,EAAWh8B,KAAOxQ,EAAM6+B,WAAa7+B,EAAM4+B,OAE9CnuB,OAAQsxB,GACN/hC,GACCwsC,EAAW/7B,OAASzQ,EAAM6+B,WAAa7+B,EAAM4+B,SAMhD4N,IAAel1C,MAAMk1C,EAAWh8B,QAClChR,EAAKgtC,WAAaA,EAClBhtC,EAAKmiC,cAAgBA,GAMzB,IAEM6I,GAFqBxqC,EAAM4P,oBAAsB,IAC/B5P,EAAM2P,iBAAmB,GAG3CqyB,EAAOuI,GAAa/qC,EAAK2I,QAAQ6R,OAAQwwB,GAG1ClzC,MAAM0qC,KACTxiC,EAAKwiC,KAAOA,GAIdxiC,EAAK0rB,aAAc,I,qCASNxnB,GAAK,WACZI,EAAYJ,EAAIvG,OAGhBiC,EAAYyB,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEvD,GAAKqa,EAgBL,IAtBkB,IAUVY,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QACT04B,EAAS1vC,KAAK0V,cACdmgC,EAAe3+B,EAAStF,YAAY0U,SAAS7pB,IACjD,sBACA2a,EAAMV,SAEFo/B,EAAWD,EAAeA,EAAaC,SAAW,KAGlD7mC,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAChDlJ,EAAYL,GAAUE,eApBV,WAsBTv0B,GACP,IAAMgb,EAAOJ,EAAUI,KAAKhb,GAE5B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFpS,GAAKzpB,GAAS,SAAAA,GACZ,IACI4mB,EADAv1B,EAAQw1B,GAAWO,iBAAiBzf,GAexC,GAZIA,EAAK0f,OACH1f,EAAK2I,QAAQukC,wBACfxjD,EAAQovC,EAAOiT,aACf9sB,EAAY6Z,EAAOiT,eAEnBriD,EAAQw1B,GAAWO,iBAAiBzf,GACpCif,EAAYC,GAAWE,gBAGzBH,EAAYC,GAAWI,eAGrBtf,EAAK2I,QAAQ6R,OAAOlzB,OACtB,IAAK,IAAI4E,EAAI,EAAGA,EAAI8T,EAAK2I,QAAQ6R,OAAOlzB,OAAQ4E,IAAK,CACnD,IAAM+zB,EAAQ,IAAIjgB,EAAK2I,QAAQ6R,OAAOtuB,GAAG+zB,OAGrC/zB,IAFW8T,EAAK2I,QAAQ6R,OAEXlzB,OAAS,GAAM0Y,EAAKitC,iBAGnChtB,EAAMnyB,KAAKgrC,EAAO2S,cAAc9iC,QAAQI,OAE1C+R,GAAgBziB,EAAS+H,EAASJ,EAAK2I,QAAQ6R,OAAOtuB,GAAI+zB,EAAO,CAC/Dv2B,UAON,IAAMsJ,EAAU,CACdtJ,QACAuwB,KAAMgF,GAYR,IATI6Z,EAAOgT,mBAAsB9rC,EAAK0f,QAAU1f,EAAKitC,mBAEnDj6C,EAAQ6gB,aAAeilB,EAAO6S,mBAE1B,EAAK7sC,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAAQ6R,OAAQxnB,IAIrDgN,EAAKmtC,YAAa,CAEpBn6C,EAAQ6gB,aAAeilB,EAAO8S,qBAC9B,IAAMtzC,EAAS0H,EAAK2I,QAAQ6R,OAAO,GAE/B,EAAK1b,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAW,CAAChM,GAAStF,GAI9C,GAAIgN,EAAK0f,SAAW1f,EAAKitC,gBAAiB,CAExCj6C,EAAQ6gB,aAAeilB,EAAO6S,mBAE1B,EAAK7sC,cAAci1B,aACrBA,GACE17B,EACAiM,EACAw0B,EAAO2S,cAAc9iC,QACrB3V,GAIJ,IAAMo6C,EAAcptC,EAAK2I,QAAQ6R,OAAO,GAEpC,EAAK1b,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAW,CAAC8oC,GAAcp6C,GAcnD,IATyB,IAArBgN,EAAK0rB,aAAyB1rB,EAAK0f,SACjC1f,EAAKgtC,YAAchtC,EAAKmiC,eAAiBniC,EAAKwiC,KAChD,EAAKvO,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,IAKvCA,EAAKitC,kBAAoBjtC,EAAK2I,QAAQuZ,QAAQmrB,SAAU,CAGrDrtC,EAAK2I,QAAQuZ,QAAQM,WAGxBxiB,EAAK2I,QAAQuZ,QAAQpe,EACnB9D,EAAKitC,gBAAgB3kC,KAAOtI,EAAKitC,gBAAgB1oC,MACnDvE,EAAK2I,QAAQuZ,QAAQvvB,EACnBqN,EAAKitC,gBAAgBxkC,IAAMzI,EAAKitC,gBAAgBzoC,OAAS,GAG7D,IAAM+c,EAAOgU,EAAYpwC,KAAK,EAAM6a,GAEpC81B,GACEz9B,EACA+H,EACAJ,EAAK2I,QAAQuZ,QACbX,EACAvhB,EAAK2I,QAAQ6R,OACb2H,EACAz4B,EACAgwB,EACA,GACA,QAvHC10B,EAAI,EAAGA,EAAI4a,EAAUI,KAAK1Y,OAAQtC,IAAK,EAAvCA,GA6HT,SAASuwC,EAAYv1B,GAAM,IACjBgtC,EAAoChtC,EAApCgtC,WAAY7K,EAAwBniC,EAAxBmiC,cAAeK,EAASxiC,EAATwiC,KAE7BphB,EAAY,GAGlB,GAAI4rB,QAAkCl5C,IAApBk5C,EAAWh8B,KAAoB,CAE/C,IAAIs8B,EAAW,GAEE,OAAbpO,IACFoO,EAAW,MAEbttC,EAAKgjC,KAAOsK,EAGZ,IAAIC,EAAW,SAAH,OAAY/J,GACtBwJ,EAAWh8B,KAAK4tB,QAAQ,IADd,YAEP0O,GAEDE,EAAa,WAAH,OAAchK,GAC1BwJ,EAAW/7B,OAAO2tB,QAAQ,IADd,YAET0O,GAGL,GAAInL,QAAwCruC,IAAvBquC,EAAcnxB,KAAoB,CAGrDu8B,GAFgB,SAGJ/J,GAAkBrB,EAAcnxB,KAAK4tB,QAAQ,IACzD4O,GAJgB,SAKJhK,GAAkBrB,EAAclxB,OAAO2tB,QAAQ,IAI7Dxd,EAAUtzB,KAAKy/C,GACfnsB,EAAUtzB,KAAK0/C,GAIjB,GAAIhL,EAAM,CAIR,IAAInN,EAAS,MAAH,OAASniC,OAAOoiC,aAAa,MAElC90B,EAAM2P,iBAAoB3P,EAAM4P,qBACnCilB,EAAS,UAAH,OAAaniC,OAAOoiC,aAAa,OAIzC,IAAMmY,EAAW,SAAH,OAAYjK,GAAkBhB,EAAK5D,QAAQ,KAA3C,OAAiDvJ,GAG/DjU,EAAUtzB,KAAK2/C,GAGjB,OAAOrsB,EAGT,SAASe,EAAoBxZ,GAC3B,OAAOA,K,wCAIOzE,GAChB,IAAMI,EAAYJ,EAAIvG,OAEtBvU,KAAKskD,cAAcxpC,GACnB9a,KAAK+7B,UAAU7gB,GAEfy5B,GAAmB75B,K,2CAGAA,GACnB,IAAMI,EAAYJ,EAAIvG,OAChBytC,EAAShiD,KAAKukD,yBAAyBrpC,GAE7C,QAAIA,EAAU5G,MAAM4sB,eACHx2B,IAAXs3C,GAAwBA,EAAOC,aAAajjB,gBAG9C+iB,GAAehmD,KAAKiE,KAAM8a,EAAKknC,GAGjCrN,GAAmB75B,IAEZ,K,6CAMYA,EAAK3C,EAAUjJ,GAAmC,IAA3Bod,EAA2B,uDAAT,QACtDtV,EAAY8D,EAAIvG,OAAhByC,QACFR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAE7C,GAAI+S,EAAO8vB,eAETgF,GAAyBlpB,EAAK9a,KAAMmY,EAAUjJ,EAAQod,OAFxD,CAOA,IAAMojB,EAAS1vC,KAAK0V,cAEpBg6B,EAAO8U,WAAa,CAClB9pC,EAAGxL,EAAOwL,EACVnR,EAAG2F,EAAO3F,GAIZ,IAAK,IAAIk0C,EAAY,EAAGA,EAAYjnC,EAAUI,KAAK1Y,OAAQu/C,IAGzD,IAFA,IAAMrsB,EAAS5a,EAAUI,KAAK6mC,GAAWl+B,QAAQ6R,OAExC1zB,EAAI,EAAGA,EAAI0zB,EAAOlzB,OAAQR,IAC7B0zB,EAAO1zB,KAAOwR,IAChBwgC,EAAO5T,cAAgBp+B,EACvBgyC,EAAOkT,YAAcnF,GAK3Bz9C,KAAK8iD,YAAa,EAElB9iD,KAAKykD,gBAAgBztC,GAGrB29B,GAAmB75B,M,gDAUKA,GACxB,IAAMI,EAAYJ,EAAIvG,OACdyT,EAA2B9M,EAA3B8M,cAAehR,EAAYkE,EAAZlE,QACjBR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAEvCuzC,EAAS1vC,KAAK0V,cACdktC,EAAclT,EAAOkT,YAErBhsC,EAAOJ,EAAUI,KAAKgsC,GACtBjkB,EAAS3W,EAAcwR,OAG7Bx5B,KAAK0kD,kBAAkBxpC,GACvBlb,KAAK2kD,4BAA4B/tC,EAAMsE,GAGvC,IAAM+mC,EAAejiD,KAAKyjD,iBAAiBzsC,EAASJ,EAAM+nB,GACpDvN,EAASxa,EAAK2I,QAAQ6R,YAKT1mB,IAAjBu3C,IACCA,EAAajjB,gBACdijB,EAAe7wB,EAAOlzB,OAAS,IAE/BwxC,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAAI0W,EAAO6wB,GAAcvnC,EAC5Dg1B,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAAI6nB,EAAO6wB,GAAc14C,GAI9D2N,EAAStF,YAAYkX,YAAY9R,K,gDAUT8D,GACnB9a,KAAK4J,QAAQijB,gBAAgB5F,SAASnM,EAAIvG,OAAO+sB,UAItDthC,KAAK4kD,aAAa9pC,K,gDAUMA,GACxB9a,KAAK4kD,aAAa9pC,K,mCAGPA,GACX,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QAEFR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAGvCymD,EADS5iD,KAAK0V,cACOktC,YAErBhsC,EAAOJ,EAAUI,KAAKgsC,GAG5B5iD,KAAK0kD,kBAAkBxpC,GACvBlb,KAAK2kD,4BAA4B/tC,EAAMsE,GACvClb,KAAK6kD,oBAAoB3pC,EAAWtE,EAAK2I,QAAQ6R,QACjDpxB,KAAK6iD,WAAY,EAGjB3rC,EAAStF,YAAYkX,YAAY9R,K,8CAUX8D,GAAK,IACnB9D,EAAY8D,EAAIvG,OAAhByC,QAER,GAAKhX,KAAK6iD,UAAV,CAIA7iD,KAAK6iD,WAAY,EAEjB,IAAMnT,EAAS1vC,KAAK0V,cACdktC,EAAclT,EAAOkT,YAErBhsC,EADYqB,EAAajB,EAAShX,KAAK7D,MACtBya,KAAKgsC,GAE5B,IAAKd,GAAkBliC,IAAIhJ,EAAK2I,QAAQ6R,SAAWxa,EAAKmtC,YAAa,CACnE,IAAMe,EAAmBpV,EAAO5T,cAEhC97B,KAAK+kD,YAAY/tC,EAAS8tC,GAG5BnQ,GAAmB75B,M,gDAYKA,GACxB,IAAMI,EAAYJ,EAAIvG,OACd+sB,EAAoCpmB,EAApComB,QAAStZ,EAA2B9M,EAA3B8M,cAAehR,EAAYkE,EAAZlE,QAEhC,GAAKhX,KAAK4J,QAAQijB,gBAAgB5F,SAASqa,GAA3C,CAIA,IAAM3C,EAAS3W,EAAcwR,OAEvBkW,EAAS1vC,KAAK0V,cACdktC,EAAclT,EAAOkT,YAErBhsC,EADYqB,EAAajB,EAAShX,KAAK7D,MACtBya,KAAKgsC,GAEtBX,EAAejiD,KAAKyjD,iBAAiBzsC,EAASJ,EAAM+nB,GAE1D,IAAKmjB,GAAkBliC,IAAIhJ,EAAK2I,QAAQ6R,SAAWxa,EAAKmtC,YAAa,CACnE,IAAMe,EAAmBpV,EAAO5T,cAEhC97B,KAAK+kD,YAAY/tC,EAAS8tC,aACAp6C,IAAjBu3C,GACTjiD,KAAK+7B,UAAU7gB,GAGjBy5B,GAAmB75B,M,iDAYMA,GACzB,IAAMI,EAAYJ,EAAIvG,OACdyT,EAA2B9M,EAA3B8M,cAAehR,EAAYkE,EAAZlE,QAEjB2nB,EAAS3W,EAAcwR,OAEvBkW,EAAS1vC,KAAK0V,cACdktC,EAAclT,EAAOkT,YAErBhsC,EADYqB,EAAajB,EAAShX,KAAK7D,MACtBya,KAAKgsC,GAEtBX,EAAejiD,KAAKyjD,iBAAiBzsC,EAASJ,EAAM+nB,GAE1D,IAAKmjB,GAAkBliC,IAAIhJ,EAAK2I,QAAQ6R,SAAWxa,EAAKmtC,YAAa,CACnE,IAAMe,EAAmBpV,EAAO5T,cAEhC97B,KAAK+kD,YAAY/tC,EAAS8tC,aACAp6C,IAAjBu3C,GACTjiD,KAAK+7B,UAAU7gB,GAGjBy5B,GAAmB75B,K,sCAWL9D,GACd,GAAKhX,KAAK08B,SAAV,CAGA,IAAMlmB,EAAYyB,EAAajB,EAAShX,KAAK7D,MACvCuzC,EAAS1vC,KAAK0V,cACdkB,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAEnC,IACGd,GAAkBliC,IAAIhJ,EAAK2I,QAAQ6R,SACpCxa,EAAK2I,QAAQ6R,OAAOlzB,QAAU,EAC9B,CACA,IAAM4mD,EAAmBpV,EAAO5T,cAEhCllB,EAAKitC,gBAAkB,GACvB7jD,KAAK+kD,YAAY/tC,EAAS8tC,O,uDAWGhqC,GAAK,IAC5B9D,EAAY8D,EAAIvG,OAAhByC,QAERhX,KAAKglD,gBAAgBhuC,GAErB29B,GAAmB75B,K,qDAUUA,GAAK,IAC1B9D,EAAY8D,EAAIvG,OAAhByC,QAERhX,KAAKglD,gBAAgBhuC,GAErB29B,GAAmB75B,K,6CAUEA,GACrB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAqBkE,EAArBlE,QAASsqB,EAAYpmB,EAAZomB,QAEjB,GAAKthC,KAAK4J,QAAQijB,gBAAgB5F,SAASqa,GAA3C,CAIA,IAMIse,EANEppC,EAAYyB,EAAajB,EAAShX,KAAK7D,MAEvCuzC,EAAS1vC,KAAK0V,cACdkB,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAC7B9mB,EAAgB4T,EAAO5T,cACvB1K,EAASxa,EAAK2I,QAAQ6R,OAiB5B,GAbApxB,KAAK0kD,kBAAkBxpC,GAEvBtE,EAAK2I,QAAQukC,uBAAyBhC,GAAkBnD,OACtDvtB,EACA0K,GAEFllB,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EACjB3Z,EAAO0K,GAAephB,EAAIg1B,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAC7D0W,EAAO0K,GAAevyB,EAAImmC,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAE7Dq2C,EAAc5/C,KAAKilD,oBAAoBnpB,EAAe1K,GAElD0K,GAAiB,EAAG,CACtB,IAAMopB,EAAgB9zB,EAAOwuB,GAAa/oB,MAAM34B,OAAS,EACnDinD,EAAW/zB,EAAOwuB,GAAa/oB,MAAMquB,GAE3CC,EAASzqC,EAAIg1B,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAChDyqC,EAAS57C,EAAImmC,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAIlD2N,EAAStF,YAAYkX,YAAY9R,M,6CAUZ8D,GACrB,IASI8kC,EATE1kC,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QAEFR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAEvCuzC,EAAS1vC,KAAK0V,cACdkB,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAC7B9mB,EAAgB4T,EAAO5T,cACvB1K,EAASxa,EAAK2I,QAAQ6R,OAiB5B,GAbApxB,KAAK0kD,kBAAkBxpC,GAEvBtE,EAAK2I,QAAQukC,uBAAyBhC,GAAkBnD,OACtDvtB,EACA0K,GAEFllB,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EACjB3Z,EAAO0K,GAAephB,EAAIg1B,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAC7D0W,EAAO0K,GAAevyB,EAAImmC,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAE7Dq2C,EAAc5/C,KAAKilD,oBAAoBnpB,EAAe1K,GAElD0K,GAAiB,EAAG,CACtB,IAAMopB,EAAgB9zB,EAAOwuB,GAAa/oB,MAAM34B,OAAS,EACnDinD,EAAW/zB,EAAOwuB,GAAa/oB,MAAMquB,GAE3CC,EAASzqC,EAAIg1B,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAChDyqC,EAAS57C,EAAImmC,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAIlD2N,EAAStF,YAAYkX,YAAY9R,K,0CASf8kB,EAAe1K,GACjC,OAAsB,IAAlB0K,EACK1K,EAAOlzB,OAAS,EAGlB49B,EAAgB,I,2CAUJhhB,GACnB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QACFR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAE7C6D,KAAKolD,kBAAkBpuC,GAEvBhX,KAAKqlD,YAAYnqC,EAAW1E,GAC5BxW,KAAK+kD,YAAY/tC,GAEjBE,EAAStF,YAAYkX,YAAY9R,K,kCAavBkE,EAAW1E,GACrB,IAAMk5B,EAAS1vC,KAAK0V,cACdktC,EAAclT,EAAOkT,YACrBrjC,EAAU/I,EAAUI,KAAKgsC,GAAarjC,QACtC6R,EAAS7R,EAAQ6R,OAGvB,GAAI7R,EAAQukC,uBAAwB,CAClC,IAEIwB,EAFExpB,EAAgB4T,EAAO5T,cACvBypB,EAAoBn0B,EAAO0K,GAGjC,GAAsB,IAAlBA,EAGFwpB,EAAqBl0B,EAFAA,EAAOlzB,OAAS,QAIrConD,EAAqBl0B,EAAO0K,EAAgB,GAI9CypB,EAAkB7qC,EAAIg1B,EAAO8U,WAAW9pC,EACxC6qC,EAAkBh8C,EAAImmC,EAAO8U,WAAWj7C,EACxC+7C,EAAmBzuB,MAAM,GAAK0uB,EAE9BhmC,EAAQukC,wBAAyB,K,oCAYvBhpC,GACZ,IAIIwR,EAJEpR,EAAYJ,EAAIvG,OAChByD,EAAkBhY,KAAK2sC,qBAAqBzxB,GAC1ClE,EAAYkE,EAAZlE,QACF04B,EAAS1vC,KAAK0V,cAGhBoF,EAAIvZ,OAAS0Q,EAAOG,oBACtBka,EAAkB,QACTxR,EAAIvZ,OAAS0Q,EAAOU,qBAC7B2Z,EAAkB,SAEpBtsB,KAAKwlD,cAAcxuC,EAASsV,GAC5BtsB,KAAK0kD,kBAAkBxpC,GAEvBnD,EAAaf,EAAShX,KAAK7D,KAAM6b,GAEjC,IAAMxB,EAAYyB,EAAajB,EAAShX,KAAK7D,MAE7CuzC,EAAOkT,YAAcpsC,EAAUI,KAAK1Y,OAAS,EAE7C8B,KAAKylD,4BAA8BjvC,EAAUI,KAAK84B,EAAOkT,e,gCAUjD1nC,GAAW,IACX8M,EAA2B9M,EAA3B8M,cAAehR,EAAYkE,EAAZlE,QACjBR,EAAYyB,EAAajB,EAAShX,KAAK7D,MAGvCuzC,EAAS1vC,KAAK0V,cACdkB,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAEnC,IAAIhsC,EAAK2I,QAAQukC,uBAAjB,CAIA,IAAM4B,EAAgB,IAAI/H,GAAmB31B,EAAc5Q,OAGvDR,EAAK2I,QAAQ6R,OAAOlzB,QAEtB0Y,EAAK2I,QAAQ6R,OAAOse,EAAO5T,cAAgB,GAAGjF,MAAMnyB,KAClDsjB,EAAc5Q,OAKlBR,EAAK2I,QAAQ6R,OAAO1sB,KAAKghD,GAGzBhW,EAAO5T,eAAiB,EAGxB5kB,EAAStF,YAAYkX,YAAY9R,GACjChX,KAAK2lD,kBAAkB3uC,EAASJ,M,0CAYdsE,EAAWkW,GAAQ,WAC/Bse,EAAS1vC,KAAK0V,cACZsB,EAAYkE,EAAZlE,QACFsS,EAAaomB,EAAO2S,cAAc9iC,QAAQI,MAK5CyR,EAAOw0B,OAH6B,SAAA12C,GAAM,OAC5C,EAAK22C,6BAA6B7uC,EAAS9H,EAAQoa,OAGnDtpB,KAAK+7B,UAAU7gB,K,kCAYPlE,EAASirC,GACnB,IAAMzrC,EAAYyB,EAAajB,EAAShX,KAAK7D,MACvCuzC,EAAS1vC,KAAK0V,cACdkB,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAOnC,GALAhsC,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EACjBn0B,EAAK2I,QAAQukC,wBAAyB,OAGjBp5C,IAAjBu3C,EAA4B,CAC9B,IAAM7wB,EAASxa,EAAK2I,QAAQ6R,OAE5BA,EAAOse,EAAO5T,cAAgB,GAAGjF,MAAMnyB,KAAK0sB,EAAO,IAGjDpxB,KAAK8iD,aACP9iD,KAAK8iD,YAAa,EAClBlsC,EAAK0rB,aAAc,GAIrBoN,EAAO5T,cAAgB,EACvB4T,EAAOkT,aAAe,EACtBhsC,EAAKmtC,aAAc,EAEf/jD,KAAK08B,UACP18B,KAAK8lD,gBAAgB9uC,GAGvBE,EAAStF,YAAYkX,YAAY9R,GAEjChX,KAAK2lD,kBAAkB3uC,EAASJ,GAChC5W,KAAK+lD,mBAAmB/uC,EAASJ,K,uCAYlBI,EAASJ,EAAM+nB,GAC9B,QAAqBj0B,IAAjBkM,EAAK2I,cAAiD7U,IAAxBkM,EAAK2I,QAAQ6R,SAI1B,IAAjBxa,EAAKk0B,QAAT,CAIA,IAAK,IAAIlvC,EAAI,EAAGA,EAAIgb,EAAK2I,QAAQ6R,OAAOlzB,OAAQtC,IAAK,CACnD,IAAMsjC,EAAehoB,EAAStF,YAAYqf,cACxCja,EACAJ,EAAK2I,QAAQ6R,OAAOx1B,IAGtB,GAAIsb,EAASrF,gBAAgB8I,MAAMsE,SAASigB,EAAcP,GAAU,EAClE,OAAO/iC,EAKX,OAAIgb,EAAK2I,QAAQuZ,SACXmG,GAAuBroB,EAAK2I,QAAQuZ,QAAS6F,GACxC/nB,EAAK2I,QAAQuZ,aAFxB,K,+CAcuB5d,GAAW,IAC1B8M,EAA2B9M,EAA3B8M,cAAehR,EAAYkE,EAAZlE,QACjB2nB,EAAS3W,EAAcwR,OACvBhjB,EAAYyB,EAAajB,EAAShX,KAAK7D,MAE7C,GAAKqa,EAML,IAFA,IAAIyrC,EAEKxE,EAAY,EAAGA,EAAYjnC,EAAUI,KAAK1Y,OAAQu/C,IAMzD,QAAqB/yC,KALrBu3C,EAAejiD,KAAKyjD,iBAClBzsC,EACAR,EAAUI,KAAK6mC,GACf9e,IAGA,MAAO,CACLsjB,eACAxE,e,wCAaUviC,GAAW,IACnB8M,EAAyB9M,EAAzB8M,cAAe5Q,EAAU8D,EAAV9D,MAEjBs4B,EAAS1vC,KAAK0V,cAEpBg6B,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAAIsN,EAAc5Q,MAAMsD,EAC3Dg1B,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAAIye,EAAc5Q,MAAM7N,EAC3Dy2B,GAAU0P,EAAO2S,cAAc9iC,QAAQI,MAAOvI,K,kDAWpBR,EAAMsE,GAChC,GAAItE,EAAK2I,QAAQ6R,OAAOlzB,OAAS,EAC/B,OAAO,EAGT,IAAI4lD,EAGFA,EADE9jD,KAAK6iD,UACkB7iD,KAAKgmD,wBAAwBpvC,EAAMsE,GAEnClb,KAAKimD,yBAAyBrvC,EAAMsE,GAG/DtE,EAAK2I,QAAQukC,uBAAyBA,I,+CAYfltC,EAAMsE,GAC7B,IAAMw0B,EAAS1vC,KAAK0V,cACZsB,EAAYkE,EAAZlE,QACFsS,EAAaomB,EAAO2S,cAAc9iC,QAAQI,MAC1CyR,EAASxa,EAAK2I,QAAQ6R,OACxB0yB,GAAyB,EAqB7B,OAnBAltC,EAAKmtC,aAAc,EAES/jD,KAAKkmD,4CAC/BlvC,EACAoa,EAAO,GACP9H,KAKCw4B,GAAkBliC,IAAIwR,IACvBA,EAAOlzB,OAAS,GAEhB0Y,EAAKmtC,aAAc,EACnBD,GAAyB,GAEzBA,EAAyBhC,GAAkBtD,UAAUl1B,EAAY8H,GAG5D0yB,I,8CAWeltC,EAAMsE,GAC5B,IACMoO,EADStpB,KAAK0V,cACM2sC,cAAc9iC,QAAQI,MAC1CyR,EAASxa,EAAK2I,QAAQ6R,OACxB0yB,EAAyBhC,GAAkBtD,UAC7Cl1B,EACA8H,GAOF,OAJ+B,IAA3B0yB,IACFA,EAAyB9jD,KAAKmmD,yBAAyBvvC,EAAMsE,IAGxD4oC,I,+CAWgBltC,EAAMsE,GAC7B,IAAMw0B,EAAS1vC,KAAK0V,cACZsB,EAAYkE,EAAZlE,QACFsS,EAAaomB,EAAO2S,cAAc9iC,QAAQI,MAC1CyR,EAASxa,EAAK2I,QAAQ6R,OAQ5B,GAN4BpxB,KAAKkmD,4CAC/BlvC,EACAoa,EAAO,GACP9H,GAMA,OAFA1S,EAAKmtC,aAAc,GAEZ,EAGTntC,EAAKmtC,aAAc,EAGnB,IAAK,IAAInoD,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAS,EAAGtC,IACrC,GAAIoE,KAAKomD,8BAA8BpvC,EAASoa,EAAOx1B,GAAI0tB,GACzD,OAAO,EAIX,OAAO,I,kEAamCtS,EAASkK,EAAIC,GACvD,IAGIqhC,EAHE6D,EAAWnvC,EAAStF,YAAYqf,cAAcja,EAASkK,GACvDolC,EAAWpvC,EAAStF,YAAYqf,cAAcja,EAASmK,GAU7D,MANqC,UAAjCnhB,KAAKumD,wBACP/D,EAAuBxiD,KAAK0V,cAAc8sC,qBACA,UAAjCxiD,KAAKumD,0BACd/D,EAAuBxiD,KAAK0V,cAAc+sC,2BAGrCziD,KAAKwmD,0BACVxvC,EACAqvC,EACAC,EACA,IACA9D,K,oDAc0BxrC,EAASkK,EAAIC,GACzC,OAAOnhB,KAAKwmD,0BAA0BxvC,EAASkK,EAAIC,EAAI,O,mDAa5BnK,EAASkK,EAAIC,GACxC,OAAOnhB,KAAKwmD,0BAA0BxvC,EAASkK,EAAIC,EAAI,O,gDAgBvDnK,EACAkK,EACAC,GAGA,IAFAslC,EAEA,uDAFa,IACbnE,EACA,uDADUtiD,KAAK0V,cAAc4sC,QAE7B,MAAmB,MAAfmE,EACKvvC,EAASrF,gBAAgB8I,MAAMsE,SAASiC,EAAIC,GAAMmhC,EAGpDprC,EAASrF,gBAAgB8I,MAAMsE,SAASiC,EAAIC,GAAMmhC,I,oCAY7CtrC,GAAoC,IAA3BsV,EAA2B,uDAAT,QACvCtsB,KAAK08B,UAAW,EAChB18B,KAAKumD,wBAA0Bj6B,EAE/B7b,GAAM+wB,uBAAwB,EAC9B1V,GAAe9rB,KAAKgX,SAGpBA,EAAQgqB,iBAAiB/uB,EAAOC,WAAYlS,KAAK+iD,2BACjD/rC,EAAQgqB,iBAAiB/uB,EAAOK,WAAYtS,KAAKgjD,2BACjDhsC,EAAQgqB,iBACN/uB,EAAOO,mBACPxS,KAAKkjD,kCAIPlsC,EAAQgqB,iBAAiB/uB,EAAOI,WAAYrS,KAAKijD,2BACjDjsC,EAAQgqB,iBAAiB/uB,EAAOE,SAAUnS,KAAKsgC,yBAG/CtpB,EAAQgqB,iBACN/uB,EAAOS,YACP1S,KAAKgjD,2BAEPhsC,EAAQgqB,iBACN/uB,EAAOS,YACP1S,KAAKqjD,4BAGPrsC,EAAQgqB,iBAAiB/uB,EAAOY,WAAY7S,KAAKsjD,2BACjDtsC,EAAQgqB,iBAAiB/uB,EAAOW,UAAW5S,KAAKsgC,yBAChDtpB,EAAQgqB,iBACN/uB,EAAOkB,WACPnT,KAAKujD,gCAGPrsC,EAAStF,YAAYkX,YAAY9R,K,sCAWnBA,GACdhX,KAAK08B,UAAW,EAChBjsB,GAAM+wB,uBAAwB,EAC9BxhC,KAAKylD,4BAA8B,KACnCzlD,KAAKumD,wBAA0B,KAC/B/6B,GAAcxrB,KAAKgX,QAAShX,KAAKyrB,WAEjCzU,EAAQ+pB,oBACN9uB,EAAOC,WACPlS,KAAK+iD,2BAEP/rC,EAAQ+pB,oBACN9uB,EAAOK,WACPtS,KAAKgjD,2BAEPhsC,EAAQ+pB,oBACN9uB,EAAOO,mBACPxS,KAAKkjD,kCAEPlsC,EAAQ+pB,oBACN9uB,EAAOI,WACPrS,KAAKijD,2BAEPjsC,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUnS,KAAKsgC,yBAGlDtpB,EAAQ+pB,oBACN9uB,EAAOS,YACP1S,KAAKqjD,4BAEPrsC,EAAQ+pB,oBACN9uB,EAAOY,WACP7S,KAAKsjD,2BAEPtsC,EAAQ+pB,oBACN9uB,EAAOS,YACP1S,KAAKgjD,2BAEPhsC,EAAQ+pB,oBAAoB9uB,EAAOW,UAAW5S,KAAKsgC,yBAEnDppB,EAAStF,YAAYkX,YAAY9R,K,sCAWnBA,GACdvG,GAAM2Z,cAAe,EAErBpT,EAAQgqB,iBAAiB/uB,EAAOE,SAAUnS,KAAKmjD,sBAC/CnsC,EAAQgqB,iBAAiB/uB,EAAOI,WAAYrS,KAAKojD,wBACjDpsC,EAAQgqB,iBAAiB/uB,EAAOM,YAAavS,KAAKmjD,sBAElDnsC,EAAQgqB,iBAAiB/uB,EAAOW,UAAW5S,KAAKmjD,sBAChDnsC,EAAQgqB,iBAAiB/uB,EAAOY,WAAY7S,KAAKwjD,wBAEjDtsC,EAAStF,YAAYkX,YAAY9R,K,wCAWjBA,GAChBvG,GAAM2Z,cAAe,EAErBpT,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUnS,KAAKmjD,sBAClDnsC,EAAQ+pB,oBAAoB9uB,EAAOI,WAAYrS,KAAKojD,wBACpDpsC,EAAQ+pB,oBAAoB9uB,EAAOM,YAAavS,KAAKmjD,sBAErDnsC,EAAQ+pB,oBAAoB9uB,EAAOW,UAAW5S,KAAKmjD,sBACnDnsC,EAAQ+pB,oBAAoB9uB,EAAOY,WAAY7S,KAAKwjD,wBAEpDtsC,EAAStF,YAAYkX,YAAY9R,K,sCAGnBA,GACdhX,KAAK0mD,oBAAoB1vC,K,sCAGXA,GACdhX,KAAK0mD,oBAAoB1vC,K,uCAGVA,GACfhX,KAAK0mD,oBAAoB1vC,K,0CAGPA,GAClB,GAAIhX,KAAK08B,SAAU,CAEjB,IACMooB,EADS9kD,KAAK0V,cACYomB,cAEhC97B,KAAK+kD,YAAY/tC,EAAS8tC,GAC1B5tC,EAAStF,YAAYkX,YAAY9R,M,wCAUnBA,EAASgB,GAQzB5D,EAAa4C,EAPK/E,EAAO0B,qBACP,CAChBwY,SAAUnsB,KAAK7D,KACf6a,UACAgB,sB,yCAMehB,EAASgB,GAQ1B5D,EAAa4C,EAPK/E,EAAO2B,sBACP,CAChBuY,SAAUnsB,KAAK7D,KACf6a,UACAgB,sB,oCA6FUhB,GACZ,GAAKhX,KAAK08B,SAAV,CAGA,IAAMlmB,EAAYyB,EAAajB,EAAShX,KAAK7D,MAEvCuzC,EAAS1vC,KAAK0V,cAEdkB,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAEnChsC,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EACjBn0B,EAAK2I,QAAQukC,wBAAyB,EAGtCpU,EAAO5T,cAAgB,EACvB4T,EAAOkT,aAAe,EACtBhsC,EAAKmtC,aAAc,EAEnB7rC,EAAgBlB,EAAShX,KAAK7D,KAAMya,GAEpC5W,KAAK8lD,gBAAgB9uC,GAErBE,EAAStF,YAAYkX,YAAY9R,M,uCAUlB8D,GACf,IAAM40B,EAAS1vC,KAAK0V,cAEpB,GAAM1V,KAAK08B,UAAY18B,KAAKylD,4BAA5B,CAMA,IAAMzuC,EAAU8D,EAAIvG,OAAOyC,QACrBJ,EAAO5W,KAAKylD,4BAElB7uC,EAAK0f,QAAS,EACd1f,EAAKm0B,WAAY,EACjBn0B,EAAK2I,QAAQukC,wBAAyB,EAGtC,IAAM1yB,EAASxa,EAAK2I,QAAQ6R,OAE5BA,EAAOse,EAAO5T,cAAgB,GAAGjF,MAAMnyB,KAAK0sB,EAAO,IAGnDse,EAAO5T,cAAgB,EACvB4T,EAAOkT,aAAe,EACtBhsC,EAAKmtC,aAAc,EAEnB/jD,KAAK8lD,gBAAgB9uC,GAErBE,EAAStF,YAAYkX,YAAY9R,M,8BA/IjC,OAAOhX,KAAK0V,cAAc4sC,S,aAGhBzlD,GACV,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,sEAIJnF,KAAK0V,cAAc4sC,QAAUzlD,EAC7Bqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,yCAItC,OAAOhX,KAAK0V,cAAc6sC,oB,aAGL1lD,GACrB,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,iFAIJnF,KAAK0V,cAAc6sC,mBAAqB1lD,EACxCqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,2CAItC,OAAOhX,KAAK0V,cAAc8sC,sB,aAGH3lD,GACvB,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,mFAIJnF,KAAK0V,cAAc8sC,qBAAuB3lD,EAC1Cqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,wCAItC,OAAOhX,KAAK0V,cAAcgtC,mB,aAGN7lD,GACpB,GAAqB,kBAAVA,EACT,MAAM,IAAIsI,MACR,iFAIJnF,KAAK0V,cAAcgtC,kBAAoB7lD,EACvCqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,mCAItC,OAAOhX,KAAK0V,cAAcitC,c,aAGX9lD,GAQfmD,KAAK0V,cAAcitC,aAAe9lD,EAClCqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,a,GArpDGoqB,IAsvD7C,SAASuT,GAAmB75B,GAC1BA,EAAIipB,2BACJjpB,EAAI6nB,kBACJ7nB,EAAI4nB,iBCtxDN,IAAM7pB,GAASL,EAAU,+BASJmuC,G,YACnB,aAAwB,MAAZ1oD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,SACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAWwa,GACXvwB,cAAe,CACbi1B,aAAa,IANK,OAUtB,4BAAM1sC,EAAOy/B,KAERmN,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAZ7C,E,kEAeHvnB,GAInB,GAFEA,GAAaA,EAAU8M,eAAiB9M,EAAU8M,cAAc5Q,MAElE,CAJ8B,MAYb8D,EAAU8M,cAAc5Q,MAAjCsD,EAZsB,EAYtBA,EAAGnR,EAZmB,EAYnBA,EAEX,MAAO,CACLuhC,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACb/iB,QAAS,CACPI,MAAO,CACLjF,IACAnR,IACAwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,IACAnR,IACAwhC,WAAW,EACXzU,QAAQ,GAEVwC,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,KAjCpBnmB,GAAO5X,MAAP,kDAC6CjB,KAAK7D,KADlD,8B,oCA+CU6a,EAASJ,EAAM+nB,GAK3B,OAHE/nB,GAAQA,EAAK2I,SAAW3I,EAAK2I,QAAQI,OAAS/I,EAAK2I,QAAQK,KAWxC,IAAjBhJ,EAAKk0B,SAKPG,GAAgBj0B,EAASJ,EAAK2I,QAAQI,MAAO/I,EAAK2I,QAAQK,IAAK+e,GAC/D,IAbA9lB,GAAOH,KAAP,8CACyC1Y,KAAK7D,KAD9C,sBAIO,K,wCAaOib,EAAOJ,EAASJ,GAAM,MACOoxB,GAAgB5wB,GAArD2P,EAD8B,EAC9BA,gBAAiBmhB,EADa,EACbA,gBAGnBuG,GACH73B,EAAK2I,QAAQK,IAAIlF,EAAI9D,EAAK2I,QAAQI,MAAMjF,IAAMwtB,GAAmB,GAC9DwG,GACH93B,EAAK2I,QAAQK,IAAIrW,EAAIqN,EAAK2I,QAAQI,MAAMpW,IAAMwd,GAAmB,GAG9D7oB,EAASqF,KAAKkd,KAAKguB,EAAKA,EAAKC,EAAKA,GAGxC93B,EAAK1Y,OAASA,EACd0Y,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZI,EAAYJ,EAAIvG,OADJ,EAE2BvU,KAAK0V,cAA1C+U,EAFU,EAEVA,aAAckhB,EAFJ,EAEIA,mBAChBxzB,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAWL,IANA,IAAMlJ,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAC9CpiB,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QAXG,EAY2BgxB,GAAgB5wB,GAArD2P,EAZU,EAYVA,gBAAiBmhB,EAZP,EAYOA,gBAEnB5X,EAAYL,GAAUE,eAdV,WAgBTv0B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFpS,GAAKzpB,GAAS,SAAAA,GAEZ48B,GAAU58B,EAAS,EAAKyG,eAExB,IAAMpV,EAAQw1B,GAAWO,iBAAiBzf,GAG1Cma,GAAS9hB,EAAS+H,EAASJ,EAAK2I,QAAQI,MAAO/I,EAAK2I,QAAQK,IAAK,CAC/Dtf,UAIF,IAAM0rC,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAOvB,GAJI,EAAKj2B,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,IAG3Cp1B,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClC,IAAMuF,EAAS,CACbjkB,EAAGnX,KAAKsc,IAAIjJ,EAAK2I,QAAQI,MAAMjF,EAAG9D,EAAK2I,QAAQK,IAAIlF,IAKjDikB,EAAOjkB,IAAM9D,EAAK2I,QAAQI,MAAMjF,EAClCikB,EAAOp1B,EAAIqN,EAAK2I,QAAQI,MAAMpW,EAE9Bo1B,EAAOp1B,EAAIqN,EAAK2I,QAAQK,IAAIrW,EAG9BqN,EAAK2I,QAAQuZ,QAAQpe,EAAIikB,EAAOjkB,EAChC9D,EAAK2I,QAAQuZ,QAAQvvB,EAAIo1B,EAAOp1B,GAQT,IAArBqN,EAAK0rB,cACH1rB,EAAK1Y,OACP,EAAK2sC,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,IAI3C,IAAMuhB,EAiBV,SAAqBvhB,EAAMmQ,EAAiBmhB,GAE1C,IAAI+D,EAAS,KAERllB,GAAoBmhB,IACvB+D,EAAS,UAKX,OAFAr1B,EAAKgjC,KAAO3N,EAEZ,UAAUr1B,EAAK1Y,OAAOs3C,QAAQ,GAA9B,YAAoCvJ,GA3BrBE,CAAYv1B,EAAMmQ,EAAiBmhB,GAEhDwE,GACEz9B,EACA+H,EACAJ,EAAK2I,QAAQuZ,QACbX,EACAvhB,EAAK2I,QACLwZ,EACAz4B,EACAgwB,EArBc,IAuBd,OAvEG10B,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,GAyFT,SAASm9B,EAAoBxZ,GAC3B,IAAM8tB,EAAW,CACf3yB,GAAI6E,EAAQI,MAAMjF,EAAI6E,EAAQK,IAAIlF,GAAK,EACvCnR,GAAIgW,EAAQI,MAAMpW,EAAIgW,EAAQK,IAAIrW,GAAK,GAGzC,MAAO,CAACgW,EAAQI,MAAO0tB,EAAU9tB,EAAQK,U,GA3NPwhB,ICfzB,YAASpqB,EAAS0D,EAAGnR,EAAG4R,EAAOC,GAC5C,IAAKpE,EACH,MAAM,IAAI7R,MAAM,yDAGlBuV,EAAInX,KAAKoG,MAAM+Q,GACfnR,EAAIhG,KAAKoG,MAAMJ,GACf,IAIIqR,EAASgsC,EAAKC,EAJZ5vC,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GACxD8vC,EAAkB,GACpBtmD,EAAQ,EACNuZ,EAAY9C,EAAeG,MAAMiQ,eAGvC,GAAIpQ,EAAeG,MAAM9W,MACvB,IAAKsmD,EAAM,EAAGA,EAAMxrC,EAAQwrC,IAC1B,IAAKC,EAAS,EAAGA,EAAS1rC,EAAO0rC,IAAU,CAEzC,IAAME,EAAMhtC,EADZa,EAAsE,IAA1DgsC,EAAMr9C,GAAK0N,EAAeG,MAAMmD,SAAWssC,EAASnsC,KAE1DssC,EAAQjtC,EAAUa,EAAU,GAC5BqsC,EAAOltC,EAAUa,EAAU,GAC3BkK,EAAQ/K,EAAUa,EAAU,GAElCksC,EAAgBtmD,KAAWumD,EAC3BD,EAAgBtmD,KAAWwmD,EAC3BF,EAAgBtmD,KAAWymD,EAC3BH,EAAgBtmD,KAAWskB,EAKjC,OAAOgiC,GC3BHjuC,GAASL,EAAU,8BAUJ0uC,G,YACnB,aAAwB,MAAZjpD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,QACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAWya,GACXxwB,cAAe,CACbi1B,aAAa,IANK,OAUtB,4BAAM1sC,EAAOy/B,KAERmN,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAZ7C,E,kEAeHvnB,GAInB,GAFEA,GAAaA,EAAU8M,eAAiB9M,EAAU8M,cAAc5Q,MAUlE,MAAO,CACL0zB,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACb/iB,QAAS,CACPK,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,KAjBZzd,GAAO5X,MAAP,kDAC6CjB,KAAK7D,KADlD,8B,oCA+BU6a,EAASJ,EAAM+nB,GAC3B,IACMgd,EADe/kC,GAAQA,EAAK2I,SAAW3I,EAAK2I,QAAQK,IAS1D,GANK+7B,GACH9iC,GAAOH,KAAP,8CACyC1Y,KAAK7D,KAD9C,sBAKGw/C,IAAoC,IAAjB/kC,EAAKk0B,QAC3B,OAAO,EAGT,IAAMqc,EAAcjwC,EAAStF,YAAYqf,cACvCja,EACAJ,EAAK2I,QAAQK,KAGf,OAAO1I,EAASrF,gBAAgB8I,MAAMsE,SAASkoC,EAAaxoB,GAAU,I,wCAGtDvnB,EAAOJ,EAASJ,GAChC,IAAM8D,EAAInX,KAAKoG,MAAMiN,EAAK2I,QAAQK,IAAIlF,GAChCnR,EAAIhG,KAAKoG,MAAMiN,EAAK2I,QAAQK,IAAIrW,GAEhCsd,EAAQ,GAEVnM,GAAK,GAAKnR,GAAK,GAAKmR,EAAItD,EAAMmD,SAAWhR,EAAI6N,EAAM8I,OACrD2G,EAAMnM,EAAIA,EACVmM,EAAMtd,EAAIA,EAEN6N,EAAM9W,MACRumB,EAAMugC,aAAeC,GAAarwC,EAAS0D,EAAGnR,EAAG,EAAG,IAEpDsd,EAAMugC,aAAelwC,EAAStF,YAAY01C,gBACxCtwC,EACA0D,EACAnR,EACA,EACA,GAEFsd,EAAMgxB,GAAKhxB,EAAMugC,aAAa,GAC9BvgC,EAAM0gC,GAAK1gC,EAAMgxB,GAAKzgC,EAAM4+B,MAAQ5+B,EAAM6+B,UAC1CpvB,EAAM0wB,IAAM4B,GAAa/hC,EAAOyP,EAAMgxB,MAI1CjhC,EAAK0iC,YAAczyB,EACnBjQ,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZI,EAAYJ,EAAIvG,OACdkW,EAAiBzqB,KAAK0V,cAAtB+U,aACFtS,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EASL,IAJA,IAAMlJ,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAC9CpiB,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QACTwwC,EAAalwB,GAAUM,cAZX,WAcTh8B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGFpS,GAAKzpB,GAAS,SAAAA,GACZ,IAmBIkpB,EAAMtuB,EAnBJvJ,EAAQw1B,GAAWO,iBAAiBzf,GAEtC,EAAKlB,cAAci1B,aAErBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAAS,CAC5CkL,eACAnqB,WAKqB,IAArBsW,EAAK0rB,cACH1rB,EAAK0iC,YACP,EAAKzO,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,IAhBpB,MAsBqBA,EAAK0iC,YAAzC5+B,EAtBe,EAsBfA,EAAGnR,EAtBY,EAsBZA,EAAG69C,EAtBS,EAsBTA,aAAcvP,EAtBL,EAsBKA,GAAI0P,EAtBT,EAsBSA,GAAIhQ,EAtBb,EAsBaA,IAEpC,GAAI78B,GAAK,GAAKnR,GAAK,GAAKmR,EAAItD,EAAMmD,SAAWhR,EAAI6N,EAAM8I,KAAM,CAC3DiY,EAAO,GAAH,OAAMzd,EAAN,aAAYnR,GAEZ6N,EAAM9W,MACRuJ,EAAM,MAAH,OAASu9C,EAAa,GAAtB,eAA+BA,EAAa,GAA5C,eACDA,EAAa,KAIfv9C,EAAM,OAAH,OAAUguC,EAAV,gBAAoB7tC,WAAWu9C,EAAG/R,QAAQ,KACzC+B,IACF1tC,GAAO,SAAJ,OAAaG,WAAWutC,EAAI/B,QAAQ,OAK3C,IAAM7W,EAAS,CAEbjkB,EAAG9D,EAAK2I,QAAQK,IAAIlF,EAAI,EACxBnR,EAAGqN,EAAK2I,QAAQK,IAAIrW,EAAI,GAEpB2vB,EAAahiB,EAAStF,YAAYqf,cACtC/V,EAAUlE,QACV2nB,GAGFxF,GACElqB,EACApF,EACAqvB,EAAWxe,EACXwe,EAAW3vB,EAAIi+C,EAAa,EAC5BlnD,GAEF64B,GAAYlqB,EAASkpB,EAAMe,EAAWxe,EAAGwe,EAAW3vB,EAAGjJ,QAhEpD1E,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,O,GAtH0BwlC,ICAjCvoB,GAASL,EAAU,qCAUJivC,G,YACnB,aAAwB,MAAZxpD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,eACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbi1B,aAAa,GAIflf,UAAW0a,IATS,OAYtB,4BAAMloC,EAAOy/B,KAERmN,2BAA6BJ,GAAS,EAAKhI,kBAAmB,KAd7C,E,kEAiBHvnB,GAInB,GAFEA,GAAaA,EAAU8M,eAAiB9M,EAAU8M,cAAc5Q,MAUlE,MAAO,CACL0zB,SAAS,EACTxU,QAAQ,EACRh2B,WAAOoK,EACP43B,aAAa,EACb/iB,QAAS,CACPI,MAAO,CACLjF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEV1W,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,GAEVtB,gBAAiB9Z,EAAU+Z,SAASM,SACpCuD,QAAS,CACPxC,QAAQ,EACR8C,UAAU,EACVmJ,oBAAoB,EACpB7L,oBAAoB,EACpBkJ,qBAAqB,EACrBZ,gBAAgB,KAhCpBnmB,GAAO5X,MAAP,kDAC6CjB,KAAK7D,KADlD,8B,oCAsCU6a,EAASJ,EAAM+nB,EAAQrS,GACnC,IAEMqvB,EADJ/kC,GAAQA,EAAK2I,SAAW3I,EAAK2I,QAAQI,OAAS/I,EAAK2I,QAAQK,IAS7D,GANK+7B,GACH9iC,GAAOH,KAAP,8CACyC1Y,KAAK7D,KAD9C,sBAKGw/C,IAAoC,IAAjB/kC,EAAKk0B,QAC3B,OAAO,EAGT,IAAM7rB,EAA+B,UAApBqN,EAA8B,GAAK,GAC9CqP,EAAczkB,EAAStF,YAAYqf,cACvCja,EACAJ,EAAK2I,QAAQI,OAETic,EAAY1kB,EAAStF,YAAYqf,cACrCja,EACAJ,EAAK2I,QAAQK,KAGTuU,EAAO,CACXjV,KAAM3b,KAAK6b,IAAIuc,EAAYjhB,EAAGkhB,EAAUlhB,GACxC2E,IAAK9b,KAAK6b,IAAIuc,EAAYpyB,EAAGqyB,EAAUryB,GACvC4R,MAAO5X,KAAKC,IAAIm4B,EAAYjhB,EAAIkhB,EAAUlhB,GAC1CU,OAAQ7X,KAAKC,IAAIm4B,EAAYpyB,EAAIqyB,EAAUryB,IAQ7C,OALwB2N,EAASrF,gBAAgBsiB,KAAKwQ,gBACpDxQ,EACAwK,GAGuB1f,I,wCAGT7H,EAAOJ,EAASJ,GAChC,IAGMk/B,GAFJ5+B,EAAStF,YAAY0U,SAAS7pB,IAAI,sBAAuB2a,EAAMV,UAC/D,IAC4Bo/B,SACxBR,EAAetN,GAAgB5wB,GAE/ByP,EAmJV,SAAyBzP,EAAOJ,EAASuI,EAASu2B,EAAUR,GAE1D,IAiBIyD,EAjBE2O,EAAiBC,GACrBpoC,EAAQI,MACRJ,EAAQK,KAaJgoC,EAoCR,SAAkC/P,EAAIgQ,GAQpC,IAPA,IAAIpgC,EAAM,EACNqwB,EAAa,EACb35B,EAAQ,EACR3d,EAAQ,EACR4e,EAAMy4B,EAAKA,EAAG,GAAK,KACnBh4B,EAAMg4B,EAAKA,EAAG,GAAK,KAEdtuC,EAAIs+C,EAAUxoC,IAAK9V,EAAIs+C,EAAUxoC,IAAMwoC,EAAUzsC,OAAQ7R,IAChE,IAAK,IAAImR,EAAImtC,EAAU3oC,KAAMxE,EAAImtC,EAAU3oC,KAAO2oC,EAAU1sC,MAAOT,IACjE+M,GAAOowB,EAAGr3C,GACVs3C,GAAcD,EAAGr3C,GAASq3C,EAAGr3C,GAC7B4e,EAAM7b,KAAK6b,IAAIA,EAAKy4B,EAAGr3C,IACvBqf,EAAMtc,KAAKsc,IAAIA,EAAKg4B,EAAGr3C,IACvB2d,IACA3d,IAIJ,GAAc,IAAV2d,EACF,MAAO,CACLA,QACAyJ,KAAM,EACNowB,SAAU,EACVnwB,OAAQ,EACRzI,IAAK,EACLS,IAAK,GAIT,IAAM+H,EAAOH,EAAMtJ,EACb65B,EAAWF,EAAa35B,EAAQyJ,EAAOA,EAE7C,MAAO,CACLzJ,QACAyJ,OACAowB,WACAnwB,OAAQtkB,KAAKkd,KAAKu3B,GAClB54B,MACAS,OA3EoBioC,CATP5wC,EAAStF,YAAYqnC,UAClCjiC,EACA0wC,EAAexoC,KACfwoC,EAAeroC,IACfqoC,EAAevsC,MACfusC,EAAetsC,QAIsCssC,GAItC,OAAb5R,IACFiD,EAAgB,CACdnxB,KAAMuxB,GAAa/hC,EAAOwwC,EAAchgC,MAAM,IAAS,EACvDC,OAAQsxB,GAAa/hC,EAAOwwC,EAAc//B,QAAQ,IAAS,IAU/D,MAAO,CACLuxB,KALAsO,EAAevsC,OACdm6B,EAAapN,iBAAmB,IAChCwf,EAAetsC,QAAUk6B,EAAavuB,iBAAmB,KAG5C,EACd5I,MAAOypC,EAAczpC,OAAS,EAC9ByJ,KAAMggC,EAAchgC,MAAQ,EAC5BowB,SAAU4P,EAAc5P,UAAY,EACpCnwB,OAAQ+/B,EAAc//B,QAAU,EAChCzI,IAAKwoC,EAAcxoC,KAAO,EAC1BS,IAAK+nC,EAAc/nC,KAAO,EAC1Bk5B,iBA7LcM,CACZjiC,EACAJ,EACAJ,EAAK2I,QACLu2B,EACAR,GAGF1+B,EAAK0iC,YAAczyB,EACnBjQ,EAAK0rB,aAAc,I,qCAGNxnB,GAAK,WACZ3C,EAAWF,EAAa6C,EAAI8wB,cAAe5rC,KAAK7D,MAEtD,GAAKgc,EAAL,CAIA,IAAM+C,EAAYJ,EAAIvG,OACd6C,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QACTsZ,EAAYL,GAAUE,eATV,EAU2BnwB,KAAK0V,cAA1C+U,EAVU,EAUVA,aAAckhB,EAVJ,EAUIA,mBAChB18B,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAXpC,EAY2BwO,GAAgB5wB,GAArD2P,EAZU,EAYVA,gBAAiBmhB,EAZP,EAYOA,gBAQnB4N,GAJJ5+B,EAAStF,YAAY0U,SAAS7pB,IAAI,sBAAuB2a,EAAMV,UAC/D,IAG4Bo/B,SACxB0D,EAAkBzyB,GAAmBmhB,EAE3CxP,GAAKzpB,GAAS,SAAAA,GAEZ,IAAK,IAAIrT,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,CAC7C,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QAAT,CAKA,IAAMxqC,EAAQw1B,GAAWO,iBAAiBzf,GACpCo1B,EAAgB,CACpB1rC,QACAmqB,eACAkM,oBAAqBgV,GAgCvB,GA7BAE,GAAU58B,EAAS,EAAKyG,eAGxB4mB,GACErtB,EACA+H,EACAJ,EAAK2I,QAAQI,MACb/I,EAAK2I,QAAQK,IACb,CACEtf,SAEF,QACAsW,EAAK2I,QAAQyV,iBAGX,EAAKtf,cAAci1B,aACrBA,GAAY17B,EAASiM,EAAWtE,EAAK2I,QAASysB,IAIvB,IAArBp1B,EAAK0rB,cACH1rB,EAAK0iC,YACP,EAAKzO,2BAA2BzzB,EAAOJ,EAASJ,GAEhD,EAAK6rB,kBAAkBrrB,EAAOJ,EAASJ,KAKtCA,EAAK2I,QAAQuZ,QAAQM,SAAU,CAClC,IAAMqgB,EAAgBvB,GACpBh9B,EAAU+Z,SACVre,EAAK2I,SAGPjjB,OAAOotB,OAAO9S,EAAK2I,QAAQuZ,QAAS2gB,GAGtC,IAEMC,EAAiBC,GACrB1qC,EACAmI,EAAM9W,MACNsW,EAAK0iC,YACLxD,EACA0D,EACA,EAAK9jC,eAGPkB,EAAKgjC,KAAOC,GAAS/D,EAAU,EAAKpgC,cAAcokC,qBAElDpN,GACEz9B,EACA+H,EACAJ,EAAK2I,QAAQuZ,QACb4gB,EACA9iC,EAAK2I,SAlBqB,SAAAA,GAAO,OAgKTT,EA/JCS,EAAQI,MA+JIZ,EA/JGQ,EAAQK,IA+JA,EACnB+nC,GACnC7oC,EACAC,GAFMG,EADgD,EAChDA,KAAMG,EAD0C,EAC1CA,IAAKlE,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,OAKnB,CACL,CAEEV,EAAGwE,EAAO/D,EAAQ,EAClB5R,EAAG8V,GAEL,CAEE3E,EAAGwE,EACH3V,EAAG8V,EAAMjE,EAAS,GAEpB,CAEEV,EAAGwE,EAAO/D,EAAQ,EAClB5R,EAAG8V,EAAMjE,GAEX,CAEEV,EAAGwE,EAAO/D,EACV5R,EAAG8V,EAAMjE,EAAS,IAzBxB,IAAkC0D,EAAaC,EAAW,EAChDG,EAAMG,EAAKlE,EAAOC,IA7IlB9a,EACAgwB,EACA,IACA,a,GA7NoC8Q,IA4O9C,SAASumB,GAA8B7oC,EAAaC,GAClD,MAAO,CACLG,KAAM3b,KAAK6b,IAAIN,EAAYpE,EAAGqE,EAAUrE,GACxC2E,IAAK9b,KAAK6b,IAAIN,EAAYvV,EAAGwV,EAAUxV,GACvC4R,MAAO5X,KAAKC,IAAIsb,EAAYpE,EAAIqE,EAAUrE,GAC1CU,OAAQ7X,KAAKC,IAAIsb,EAAYvV,EAAIwV,EAAUxV,IAmK/C,SAASswC,GAAS/D,EAAUgE,GAC1B,MAAoB,OAAbhE,IAA6C,IAAxBgE,EAAgC,KAAO,GAerE,SAASH,GACP1qC,EACA8qC,EAFF,EAIEjE,EACA0D,GAEA,IAJEJ,EAIF,EAJEA,KAAMxxB,EAIR,EAJQA,KAAMC,EAId,EAJcA,OAAQzI,EAItB,EAJsBA,IAAKS,EAI3B,EAJ2BA,IAAKk5B,EAIhC,EAJgCA,cAGhCnvC,EACA,uDADU,GAEJowC,EAAapwC,EAAQowC,aAAc,EACnChiB,EAAY,GAEZiiB,EAAa,GAEnB,IAAKF,EAAc,CACjB,IAAMG,EAA0BnB,GAAwC,IAAvBA,EAAcnxB,KACzDgyB,EAAOC,GAAS/D,EAAUlsC,EAAQkwC,qBAEpCK,EAAa,SAAH,OAAYC,GAAkBxyB,EAAK4tB,QAAQ,IAA3C,YAAkDoE,GAC1DS,EAAe,YAAH,OAAeD,GAC/BvyB,EAAO2tB,QAAQ,IADC,YAEboE,GAGL,GAAIM,EAAyB,CAc3B,IAbA,IAEMI,EAAgB,GAAH,OAFH,UAEG,OAAgBF,GACjCrB,EAAcnxB,KAAK4tB,QAAQ,KAEvB+E,EAAkB,GAAH,OALL,UAKK,OAAgBH,GACnCrB,EAAclxB,OAAO2tB,QAAQ,KAGzBgF,EAAqBj3C,KAAK4b,MAC9BlQ,EAAQupB,YAAR,UAAuB6hB,EAAvB,UAA4Cl/B,OAGvClM,EAAQupB,YAAY2hB,GAAYh/B,MAAQq/B,GAC7CL,GAAc,IAGhBF,EAAWv1C,KAAX,UAAmBy1C,GAAnB,OAAgCG,IAChCL,EAAWv1C,KAAX,UAAmB21C,EAAnB,gBAAuCE,SAEvCN,EAAWv1C,KAAX,UAAmBy1C,EAAnB,gBAAqCE,IAGvC,GAAIL,EAAY,CAOd,IANA,IAAIS,EAAY,QAAH,OAAWr7B,EAAX,YAAkBw6B,GACzBc,EAAY,QAAH,OAAW76B,EAAX,YAAkB+5B,GAC3BY,EAAqBN,EACvB32C,KAAK4b,MAAMlQ,EAAQupB,YAAR,UAAuB6hB,EAAvB,UAA4Cl/B,OACvD5X,KAAK4b,MAAMlQ,EAAQupB,YAAR,UAAuB2hB,EAAvB,UAA0Ch/B,OAElDlM,EAAQupB,YAAYiiB,GAAWt/B,MAAQq/B,GAC5CC,GAAa,IAGfR,EAAWv1C,KAAX,UAAmB+1C,GAAnB,OAA+BC,KAOnC,OAHA1iB,EAAUtzB,KAvFZ,SAAqB00C,EAAMI,GAEzB,IAAMvN,EAASuN,EAAe,aACpB1vC,OAAOoiC,aAAa,MADA,aAEpBpiC,OAAOoiC,aAAa,MAE9B,sBAAgBkO,GAAkBhB,EAAK5D,QAAQ,KAA/C,OAAqDvJ,GAiFtC0O,CAAYvB,EAAMI,IACjCS,EAAWh0C,SAAQ,SAAAyU,GAAC,OAAIsd,EAAUtzB,KAAKgW,MAEhCsd,E,ICtfY+vB,G,YACnB,aAAwB,MAAZ9pD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,aACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbsyC,QAAS,GACTC,QAAS,GACTC,WAAW,EACXC,MAAM,EACNnb,uBAEFvhB,UAAW2a,IAXS,OActB,4BAAMnoC,EAAOy/B,KACR0qB,mBAAqB,EAAKC,YAAYjrD,KAAjB,SAC1B,EAAKkrD,oBAAsB,EAAKD,YAAYjrD,KAAjB,SAhBL,E,kEAmBH8d,GACnB,IAAMw0B,EAAS1vC,KAAK0V,cAEpB,GAAKg6B,EAAOuY,QAAZ,CAKA,IAAMjwC,EAAkB,CACtB8yB,SAAS,EACTxU,QAAQ,EACR6B,KAAMuX,EAAOuY,QACb3nD,WAAOoK,EACP6U,QAAS,CACPK,IAAK,CACHlF,EAAGQ,EAAU8M,cAAc5Q,MAAMsD,EACjCnR,EAAG2R,EAAU8M,cAAc5Q,MAAM7N,EACjCwhC,WAAW,EACXzU,QAAQ,EACR0I,gBAAgB,KAMhBU,EAAY,CAChBxgB,KAAM,EACNG,IAAK,EACLlE,MAAOD,EAAU9D,MAAM+D,MACvBC,OAAQF,EAAU9D,MAAMgE,QAK1B,GACGlE,EAASrF,gBAAgB8I,MAAMikB,WAC9B5mB,EAAgBuH,QAAQK,IACxB8f,GAHJ,CAUA,IAAImhB,EAAenR,EAAOsY,QAAQrjD,QAAQ+qC,EAAOuY,SAcjD,OAVApH,GAFkBnR,EAAOwY,UAAY,GAAK,IAItBxY,EAAOsY,QAAQ9pD,OACjC2iD,EAAenR,EAAOyY,KAAO,GAAK,EACzBtH,EAAe,IACxBA,EAAenR,EAAOyY,KAAOzY,EAAOsY,QAAQ9pD,QAAU,GAGxDwxC,EAAOuY,QAAUvY,EAAOsY,QAAQnH,GAEzB7oC,M,oCAGKhB,EAASJ,EAAM+nB,GAC3B,IAAqB,IAAjB/nB,EAAKk0B,QACP,OAAO,EAGT,GAAKl0B,EAAK2I,QAAQK,IAAIoX,YAAtB,CAIA,IAAM2N,EAAkBztB,EAASrF,gBAAgBsiB,KAAKwQ,gBACpD/tB,EAAK2I,QAAQK,IAAIoX,YACjB2H,GAEI4pB,EAAoBtpB,GAAuBroB,EAAK2I,QAAQK,IAAK+e,GAEnE,OAAOgG,EAAkB,IAAM4jB,K,kFAOlBztC,GACb,IAAMI,EAAYJ,EAAIvG,OAChBm7B,EAAS1vC,KAAK0V,cAGdyC,EAAWF,EAAaiD,EAAUlE,QAAShX,KAAK7D,MAEtD,GAAKgc,EAOL,IAFA,IAAMlJ,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAZpC,WAcT59B,GACP,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3B,IAAqB,IAAjBgb,EAAKk0B,QACP,iBAGF,IAAMxqC,EAAQw1B,GAAWO,iBAAiBzf,GAE1C8hB,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAASygC,GAEnB,IAAMxW,EAAahiB,EAAStF,YAAYqf,cACtC/V,EAAUlE,QACVJ,EAAK2I,QAAQK,KAUfhJ,EAAK2I,QAAQK,IAAIoX,YAAcmC,GAC7BlqB,EACA2H,EAAKuhB,KACLe,EAAWxe,EACXwe,EAAW3vB,EAAI,GACfjJ,EAZc,CACdq4B,UAAW,CACTje,GAAG,EACHnR,GAAG,SApBF3N,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,EAAtCA,K,kCAoCCkf,GACV,IAEIlE,EAFEsE,EAAYJ,EAAIvG,OACdyC,EAA2BkE,EAA3BlE,QAASgR,EAAkB9M,EAAlB8M,cAGjB,SAAS0lB,EAAyB92B,EAAM42B,EAAaC,IAChC,IAAfA,EACFv1B,EAAgBlB,EAAShX,KAAK7D,KAAMya,GAEpCA,EAAKuhB,KAAOqV,EAGd52B,EAAK0f,QAAS,EACdpf,EAAStF,YAAYkX,YAAY9R,GAGnC,IAAM04B,EAAS1vC,KAAK0V,cACdipB,EAAS3W,EAAcwR,OACvBrhB,EAAWF,EAAajB,EAAShX,KAAK7D,MAG5C,GAAKgc,EAIL,IAAK,IAAIvc,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAExC,GADAgb,EAAOuB,EAASvB,KAAKhb,GACjBoE,KAAKwkC,cAAcxtB,EAASJ,EAAM+nB,GAWpC,OAVA/nB,EAAK0f,QAAS,EACdpf,EAAStF,YAAYkX,YAAY9R,GAGjC04B,EAAO1C,mBAAmBp2B,EAAMsE,EAAWwyB,GAE3C5yB,EAAIipB,2BACJjpB,EAAI4nB,sBACJ5nB,EAAI6nB,sB,GA7LgCvB,IA+MtC4L,GAAqB,SAACp2B,EAAMsE,EAAWwyB,GAE3CA,EAAyB92B,EAAM+2B,OAAO,6BC7NlCxN,IAFS3nB,EAAU,mBAEE7C,GAAU,iBAShB6yC,G,YACnB,aAAwB,MAAZvqD,EAAY,uDAAJ,GAAI,mBAQtB,4BAAMA,EAPe,CACnB9B,KAAM,QACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,GACfooB,OAAQ,CAAC,wBAKN5C,kBAAoB,EAAKqF,OAAOnjC,KAAZ,SAVH,E,oDAoBjB0d,GAAK,IACFpF,EAAkByqB,GAAlBzqB,cACFwF,EAAYJ,EAAIvG,OAFZ,GAGM2G,EAAUlE,QACAkE,EAAU9D,OAA5B8I,EAJE,EAIFA,KAAM3F,EAJJ,EAIIA,QAJJ,EAKOW,EAAU8M,cAAc5Q,MAAjCsD,EALE,EAKFA,EAAGnR,EALD,EAKCA,EAEX,KAAImR,EAAI,GAAKA,EAAIH,GAAWhR,EAAI,GAAKA,EAAI2W,GAAzC,CAIA,IACM5F,EAAe2F,GADNvK,EAAcsJ,OACUkB,EAAM3F,EAASG,EAAGnR,GAZ/C,EAcsCvJ,KAAK2gC,eAA7Cza,EAdE,EAcFA,WAAY/M,EAdV,EAcUA,WAAYqB,EAdtB,EAcsBA,YAGhCH,GACEC,EACA4L,EAAWnM,UACXZ,EAAWjD,mBACXqE,EACAC,GAGFtD,EAAStF,YAAYkX,YAAYhO,EAAIvG,OAAOyC,c,GA9CTopB,ICLjCvnB,GAASL,EAAU,4BAEnB2nB,GAAqBxqB,GAAU,gBAShB8yC,G,YACnB,aAAwB,MAAZxqD,EAAY,uDAAJ,GAAI,mBAQtB,4BAAMA,EAPe,CACnB9B,KAAM,iBACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CAAE2qB,oBAAoB,GACrCvC,OAAQ,CAAC,wBAKN5C,kBAAoB,EAAKqF,OAAOnjC,KAAZ,SAVH,E,4DAqBT0d,GAAK,IA+Bd4tC,EA9BIhzC,EAA2ByqB,GAA3BzqB,cAAeqM,EAAYoe,GAAZpe,QACjB7G,EAAYJ,EAAIvG,OACdyC,EAAmBkE,EAAnBlE,QAASI,EAAU8D,EAAV9D,MACTxF,EAAgBsF,EAAhBtF,YACFoN,EAAStJ,EAAcsJ,OACrBkB,EAAkB9I,EAAlB8I,KAAM3F,EAAYnD,EAAZmD,QACR+6B,EAAe/xC,KAAKsc,IACxBzI,EAAM2P,gBACN3P,EAAM4P,oBAKA/N,EAFWhB,EAAajB,EAAS,SACZJ,KAAK,GAC1BqC,SAdU,EAqBd8I,EAAQmE,WAAWlP,GAJrBkP,EAjBgB,EAiBhBA,WACA/M,EAlBgB,EAkBhBA,WACAM,EAnBgB,EAmBhBA,oBACAP,EApBgB,EAoBhBA,oBAGIsB,EACJxa,KAAK0gC,YAAYxlB,IAAclb,KAAK0V,cAAc2qB,mBAE9CsoB,EAA2B/2C,EAAY0U,SAAS7pB,IACpD,mBACA2a,EAAMV,SAKR,GAAIiyC,EAA0B,CAC5B,IAAMC,EAAoBD,EAAyBzlC,qBAEnDwlC,EAAgB1oD,KAAK6oD,kBACnBpvC,EACAmvC,EACA3vC,EACA+F,EACAs2B,QAGFz8B,GAAOH,KAAP,mFAIAgwC,EAAgB,CAEd,CACEjlC,aAAchK,EACdqvC,cAAe9pC,IAcrB,GATAhf,KAAK2gC,eAAiB,CACpBza,aACA/M,aACAM,sBACAP,sBACAsB,cACAkuC,iBAGEhzC,EAAcgQ,aAAc,CAG9B,IAFA,IAAMqjC,EAAoC,GAEjCntD,EAAI,EAAGA,EAAI8sD,EAAcxqD,OAAQtC,IAAK,KACrC6nB,EAAiBilC,EAAc9sD,GAA/B6nB,aAQFmX,EAP4B7Y,EAAQoE,yBACxChN,EACAsK,EACAvD,EACA3F,GAGkDR,UAAUpL,QAE9Do6C,EAAkCrkD,KAAKk2B,GAGzC56B,KAAK2gC,eAAeooB,kCAAoCA,K,6BAWrDjuC,GAAK,IACFiH,EAAYoe,GAAZpe,QACF7G,EAAYJ,EAAIvG,OAEhB6C,GADU8D,EAAUlE,QACZkE,EAAU9D,OAChB8I,EAAkB9I,EAAlB8I,KAAM3F,EAAYnD,EAAZmD,QALJ,EAMOW,EAAU8M,cAAc5Q,MAAjCsD,EANE,EAMFA,EAAGnR,EAND,EAMCA,EAEX,KAAImR,EAAI,GAAKA,EAAIH,GAAWhR,EAAI,GAAKA,EAAI2W,GAAzC,CAMA,IAdU,MAYyClgB,KAAK2gC,eAAhDxnB,EAZE,EAYFA,WAAYuvC,EAZV,EAYUA,cAAeluC,EAZzB,EAYyBA,YAE1B5e,EAAI,EAAGA,EAAI8sD,EAAcxqD,OAAQtC,IAAK,OACL8sD,EAAc9sD,GAA9C6nB,EADqC,EACrCA,aAYRpJ,GAXqB4F,GAFwB,EACvB6oC,cACwB5oC,EAAM3F,EAASG,EAAGnR,GAG9BwY,EAAQoE,yBACxChN,EACAsK,EACAvD,EACA3F,GAM0BR,UAC1BZ,EAAWjD,mBACXqE,EACAC,GAIJtD,EAAStF,YAAYkX,YAAYhO,EAAIvG,OAAOyC,Y,wCAiB5CyC,EACAmvC,EACA3vC,EACA+F,EACAs2B,GAYA,IAVA,IAAM0T,EAAahqC,EAASs2B,EACtBoT,EAAgB,CAEpB,CACEjlC,aAAchK,EACdqvC,cAAe9pC,IAKVpjB,EAAI6d,EAAsB,EAAG7d,EAAIqd,EAAS/a,OAAQtC,IAAK,CAC9D,IAAMktD,EAAgB9oD,KAAKipD,kBACzBhwC,EAASrd,GACTgtD,EACAI,EACA1T,GAGF,IAAKwT,EACH,MAGFJ,EAAchkD,KAAK,CACjB+e,aAAc7nB,EACdktD,kBAKJ,IAAK,IAAIltD,EAAI6d,EAAsB,EAAG7d,GAAK,EAAGA,IAAK,CACjD,IAAMktD,EAAgB9oD,KAAKipD,kBACzBhwC,EAASrd,GACTgtD,EACAI,EACA1T,GAGF,IAAKwT,EACH,MAGFJ,EAAchkD,KAAK,CACjB+e,aAAc7nB,EACdktD,kBAIJ,OAAOJ,I,wCAcShyC,EAASkyC,EAAmBI,EAAY1T,GACxD,IAAMpjB,EAAahb,EAAStF,YAAY0U,SAAS7pB,IAC/C,mBACAia,GAGF,GAAKwb,EAAL,CAQA,IAAMjP,EAAMiP,EAAWhP,qBAEjBjE,EAAW1b,KAAKkd,KACpBld,KAAKib,IAAIyE,EAAI,GAAK2lC,EAAkB,GAAI,GACtCrlD,KAAKib,IAAIyE,EAAI,GAAK2lC,EAAkB,GAAI,GACxCrlD,KAAKib,IAAIyE,EAAI,GAAK2lC,EAAkB,GAAI,IAG5C,KAAI3pC,EAAW+pC,GAKf,OAAOzlD,KAAK4b,MACV5b,KAAKkd,KAAKld,KAAKib,IAAIwqC,EAAY,GAAKzlD,KAAKib,IAAIS,EAAU,IAAMq2B,QArB7Dz8B,GAAOH,KAAP,sFACiFhC,EADjF,Q,mCAyBSoE,GAKX,IALgB,MACsB9a,KAAK2gC,eAAnCxnB,EADQ,EACRA,WAAYuvC,EADJ,EACIA,cACd9iC,EAAa,GACXlQ,EAA2ByqB,GAA3BzqB,cAAe2S,EAAY8X,GAAZ9X,QAEdzsB,EAAI,EAAGA,EAAI8sD,EAAcxqD,OAAQtC,IAAK,CAW7C,IAX6C,IACrC6nB,EAAiBilC,EAAc9sD,GAA/B6nB,aACFyC,EAAa/M,EAAWnD,YAAYyN,GAIpC7jB,EADa,IAAIoa,IAAIkM,EAAWnM,WACVtN,SAEtBwN,EAAqB,GACvBnP,GAAO,GAEHA,GAAM,CACZ,IAAMD,EAAOjL,EAASiL,QAEtBC,EAAOD,EAAKC,OAGVmP,EAAmBvV,KAAKmG,EAAKhO,OAMjC,GAFAqpB,EAAWjM,mBAAqBA,EAE5BvE,EAAcgQ,aAAc,KAGxBkV,EAFwC56B,KAAK2gC,eAA3CooB,kCAEoDntD,GAEtDsmB,EADa/I,EAAWnD,YAAYyN,GACV1J,UAEhC6L,EAAWlhB,KAAK,CACd+e,eACApjB,KAAM2hB,GAAwB4Y,EAAmB1Y,MAKnDxM,EAAcgQ,cAChB2C,EAAQc,UAAUnpB,KAAKgX,QAAS4O,GAGlC9D,GAA6B9hB,KAAKgX,a,GA1TUopB,ICb1CvnB,GAASL,EAAU,2CAeV,SAAS0wC,GAAWpuC,EAAKC,GAAe,IAC7ChB,EAAmDgB,EAAnDhB,UAAWK,EAAwCW,EAAxCX,aAAcygB,EAA0B9f,EAA1B8f,sBAEjC,GAA8B,8BAA1BA,EAAJ,CAQA,IAAMsuB,EAiCR,SAA0BruC,EAAKC,GAS7B,IAT4C,IACpChB,EAAsBgB,EAAtBhB,UAAWqX,EAAWrW,EAAXqW,OAEXha,EAAU0D,EAAIvG,OAAd6C,MACFyM,EAAOzM,EAAM+D,MACb+E,EAAO9I,EAAMgE,OAEb+tC,EAAQ,GAELvtD,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAQtC,IAAK,CACtC,IAAM+e,EAAQyW,EAAOx1B,GAEjB8e,EAAInX,KAAK4b,MAAMxE,EAAMD,GACrBnR,EAAIhG,KAAK4b,MAAMxE,EAAMpR,GAGzBmR,EAAImlB,GAAKnlB,EAAG,EAAGmJ,EAAO,GACtBta,EAAIs2B,GAAKt2B,EAAG,EAAG2W,EAAO,GAEtB,IAAMkpC,EAAWD,EAAMA,EAAMjrD,OAAS,GAGlCkrD,GAAY1uC,IAAM0uC,EAAS1uC,GAAKnR,IAAM6/C,EAAS7/C,GAInD4/C,EAAMzkD,KAAK,CACTgW,IACAnR,IACAoZ,QAAS5I,EAAUxQ,EAAIsa,EAAOnJ,KAIlC,OAAOyuC,EAlEOE,CAAiBvuC,EAAKC,GAE9BuuC,EA0ER,SAAuCH,EAAO/uC,GAI5C,IAHA,IAAImvC,GAAY,EACZC,GAAa,EAER5tD,EAAI,EAAGA,EAAIutD,EAAMjrD,OAAQtC,IAAK,CASrC,GARautD,EAAMvtD,GAEV+mB,UAAYvI,EACnBovC,GAAa,EAEbD,GAAY,GAGTA,IAAcC,EACjB,MAIJ,GAAIA,EACF,MAAO,CAAEC,oBAAoB,EAAM3jC,UAAW,sBACzC,GAAIyjC,EACT,MAAO,CAAEE,oBAAoB,EAAM3jC,UAAW,uBAGhD,MAAO,CAAE2jC,oBAAoB,GAlGJC,CAA8BP,EAAO/uC,GAE9D,GAAIkvC,EAAiBG,mBACgB,uBAA/BH,EAAiBxjC,WACnBjN,GAAOH,KAAK,wCACZixC,GAAmB7uC,EAAKC,IACgB,wBAA/BuuC,EAAiBxjC,YAC1BjN,GAAOH,KAAK,6CACZkxC,GAAoB9uC,EAAKC,QAN7B,CAaA,IAAM8uC,EAAkB,IAAIC,WAAW/vC,EAAU7b,SAmanD,SAAyCirD,EAAO/uC,GAE9C,IAAI2vC,EAAUZ,EAAM,GAAGxmC,UAAYvI,EAE7BwL,EAAa,GAEnBA,EAAWlhB,KAAK,CACdslD,UAAWD,EACXZ,MAAO,KAKT,IAFA,IAAIc,EAAiB,EAEZruD,EAAI,EAAGA,EAAIutD,EAAMjrD,OAAQtC,IAAK,CACrC,IAAMgiB,EAAOurC,EAAMvtD,GAEfmuD,GACFnkC,EAAWqkC,GAAgBd,MAAMzkD,KAAKkZ,GAElCA,EAAK+E,UAAYvI,IAGnB6vC,IACAF,GAAWA,EACXnkC,EAAWlhB,KAAK,CACdslD,UAAU,EACVb,MAAO,KAETvjC,EAAWqkC,GAAgBd,MAAMzkD,KAAKykD,EAAMvtD,EAAI,IAChDgqB,EAAWqkC,GAAgBd,MAAMzkD,KAAKkZ,MAGxCgI,EAAWqkC,GAAgBd,MAAMzkD,KAAKkZ,GAElCA,EAAK+E,UAAYvI,IAEnB6vC,IACAF,GAAWA,EACXnkC,EAAWlhB,KAAK,CACdslD,UAAU,EACVb,MAAO,KAETvjC,EAAWqkC,GAAgBd,MAAMzkD,KAAKykD,EAAMvtD,EAAI,IAChDgqB,EAAWqkC,GAAgBd,MAAMzkD,KAAKkZ,KAU5C,OAHAgI,EAAW7X,MACX6X,EAAWyI,QAEJzI,GAvdYskC,CAAgCf,EAAO/uC,GAE/CnU,SAAQ,SAAA6f,IA6FrB,SACEA,EACA/L,EACA8vC,EACAzvC,EACAU,GACA,MACsCA,EAAIvG,OAAO6C,MAAlCyM,EADf,EACQ1I,MAAqB+E,EAD7B,EACqB9E,OAEb+tC,EAAoBrjC,EAApBqjC,MAAOa,EAAalkC,EAAbkkC,SACTG,EAAiBH,EAAW,EAAI,EAGhCvvC,EAAgB,SAAA2vC,GAAU,OAAIA,EAAW7gD,EAAIsa,EAAOumC,EAAW1vC,GAC/D2vC,EAAmC,SAAAlwC,GAAU,MAAK,CACtDO,EAAGP,EAAa0J,EAChBta,EAAGhG,KAAK4b,MAAMhF,EAAa0J,KAGzBmmC,EACFnxC,GAAOH,KAAK,yBAEZG,GAAOH,KAAK,4BAiBd,IAjCA,MAsMF,SAAuBywC,GAGrB,IAFA,IAAMmB,EAAY,GAET1uD,EAAI,EAAGA,EAAIutD,EAAMjrD,OAAS,EAAGtC,IAEpC0uD,EAAU5lD,KAAKykD,EAAMvtD,IAErB0uD,EAAU5lD,KAAV,MAAA4lD,EAAS,IAASC,GAA0BpB,EAAMvtD,GAAIutD,EAAMvtD,EAAI,MAIlE0uD,EAAU5lD,KAAKykD,EAAMA,EAAMjrD,OAAS,IAOpC,IAHA,IAAMssD,EAAW,GACXC,EAAY,GAET7uD,EAAI,EAAGA,EAAI0uD,EAAUpsD,OAAS,EAAGtC,IAAK,OACrB8uD,GACtBJ,EAAU1uD,GACV0uD,EAAU1uD,EAAI,IAFRsjB,EADqC,EACrCA,KAAM2B,EAD+B,EAC/BA,MAKd2pC,EAAS9lD,KAAKwa,GACdurC,EAAU/lD,KAAKmc,GAGjB,MAAO,CAAEypC,YAAWE,WAAUC,aA/MaE,CAAcxB,GAAjDmB,EAnBR,EAmBQA,UAAWE,EAnBnB,EAmBmBA,SAAUC,EAnB7B,EAmB6BA,UAIvBG,EAAmBN,EAAU,GAE7BtzB,EAAc,CAClBvb,KAAMmvC,EAAiBlwC,EACvBiB,KAAMivC,EAAiBlwC,EACvBgB,KAAMkvC,EAAiBrhD,EACvBqS,KAAMgvC,EAAiBrhD,GAIhB3N,EAAI,EAAGA,EAAIiuD,EAAgB3rD,OAAQtC,IAC1C,GAAIme,EAAUne,KAAOwe,EAAc,CACjC,IAAMywC,EAAQR,EAAiCzuD,GAE/CkvD,GAAkB9zB,EAAa6zB,GAC/BhB,EAAgBjuD,GAAK,OAErBiuD,EAAgBjuD,GAAK,EAMzB,IAAK,IAAIA,EAAI,EAAGA,EAAI0uD,EAAUpsD,OAAQtC,IAAK,CACzC,IAAMivD,EAAQP,EAAU1uD,GAExBiuD,EAAgBpvC,EAAcowC,IAAU,EACxCC,GAAkB9zB,EAAa6zB,IA8GnC,SAAyB7zB,EAAa9W,EAAM2D,GAI1CmT,EAAYrb,KAAOpY,KAAK6b,IAAI4X,EAAYrb,KAFzB,EAEwCkI,GACvDmT,EAAYvb,KAAOlY,KAAKsc,IAAImX,EAAYvb,KAHzB,EAGwC,GACvDub,EAAYpb,KAAOrY,KAAK6b,IAAI4X,EAAYpb,KAJzB,EAIwCsE,GACvD8W,EAAYtb,KAAOnY,KAAKsc,IAAImX,EAAYtb,KALzB,EAKwC,GAlHvDqvC,CAAgB/zB,EAAa9W,EAAM2D,GArDnC,IAuDQpI,EAA2Bub,EAA3Bvb,KAAME,EAAqBqb,EAArBrb,KAAMD,EAAesb,EAAftb,KAAME,EAASob,EAATpb,KAG1B,SAASxf,EAAOse,EAAGnR,GAKjB,KAAImR,GAAKiB,GAAQjB,EAAIe,GAAQlS,GAAKqS,GAAQrS,EAAImS,GAI9C,OAAOmuC,EAAgBtgD,EAAIsa,EAAOnJ,GAOpC,IAJA,IAAIswC,EAAW,EACXC,EAAY,EAGPrvD,EAAI,EAAGA,EAAI4uD,EAAStsD,OAAQtC,IAAK,CAExC,IAAMsvD,EAAYV,EAAS5uD,GACTiuD,EAAgBpvC,EAAcywC,MAE9Bf,GAAkBvmC,GAAesnC,EAAWhrC,EAAM2D,KAClEmnC,GAAYG,GAAcD,EAAW,EAAGrB,EAAiBztD,EAAQynB,IAInE,IAAMunC,EAAaX,EAAU7uD,GACViuD,EAAgBpvC,EAAc2wC,MAGhCjB,GACfvmC,GAAewnC,EAAYlrC,EAAM2D,KAEjConC,GAAaE,GAAcC,EAAY,EAAGvB,EAAiBztD,EAAQynB,IAIvE,GAAiB,IAAbmnC,GAAgC,IAAdC,EAGpB,OAQF,IALA,IAAMI,EAAerB,EAAW5vC,EAAe,EAGzCkxC,EAAYN,EAAWC,EAAY,EAAI,EAEpCrvD,EAAI,EAAGA,EAAIiuD,EAAgB3rD,OAAQtC,IACtCiuD,EAAgBjuD,KAAO0vD,IACzBvxC,EAAUne,GAAKyvD,GAInB,GAAIA,IAAiBjxC,EAEnB,IAAK,IAAIxe,EAAI,EAAGA,EAAI0uD,EAAUpsD,OAAQtC,IACpCme,EAAUU,EAAc6vC,EAAU1uD,KAAOwe,OAI3C,IAAK,IAAIxe,EAAI,EAAGA,EAAI0uD,EAAUpsD,OAAQtC,IAAK,CACzC,IAAMue,EAAaM,EAAc6vC,EAAU1uD,IAEvCme,EAAUI,KAAgBC,IAC5BL,EAAUI,GAAc,IA7N5BoxC,CAAiBzlC,EAAW/L,EAAW8vC,EAAiBzvC,EAAcU,YA5BtEjC,GAAO5X,MAAP,0FACqF45B,IAqQzF,SAASiwB,GAAkB9zB,EAAa6zB,GAAO,IACrCnwC,EAASmwC,EAATnwC,EAAGnR,EAAMshD,EAANthD,EAEPmR,EAAIsc,EAAYvb,OAClBub,EAAYvb,KAAOf,GAEjBA,EAAIsc,EAAYrb,OAClBqb,EAAYrb,KAAOjB,GAEjBnR,EAAIytB,EAAYtb,OAClBsb,EAAYtb,KAAOnS,GAEjBA,EAAIytB,EAAYpb,OAClBob,EAAYpb,KAAOrS,GA8BvB,SAAS4hD,GAAcN,EAAOS,EAAWzB,EAAiBztD,EAAQynB,GAKhE,IAJA,IAEMjH,EAFS4uC,GAAUpvD,EAAQ,CAACyuD,EAAMnwC,EAAGmwC,EAAMthD,IAE1BqT,QAEdlf,EAAI,EAAGA,EAAIkf,EAAQ1e,OAAQR,IAAK,CACvC,IAAM+tD,EAAW7uC,EAAQlf,GAEzBmsD,EAAgB4B,EAAS,GAAK5nC,EAAO4nC,EAAS,IAAMH,EAGtD,OAAO1uC,EAAQ1e,OAgDjB,SAASwsD,GAAiCgB,EAAWC,GACnD,IAAM73B,EAAY,CAChBpZ,EAAGixC,EAAcjxC,EAAIgxC,EAAUhxC,EAC/BnR,EAAGoiD,EAAcpiD,EAAImiD,EAAUniD,GAiBjC,OAAqB,IAAjBuqB,EAAUpZ,GAA4B,IAAhBoZ,EAAUvqB,EAC3B,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,GAC7CsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,IAEvB,IAAhBuqB,EAAUpZ,GAA2B,IAAhBoZ,EAAUvqB,EACjC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,GACzCsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,IAEnB,IAAhBuqB,EAAUpZ,GAA2B,IAAhBoZ,EAAUvqB,EACjC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,GAC7CsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,IAEvB,IAAhBuqB,EAAUpZ,GAA2B,IAAhBoZ,EAAUvqB,EACjC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAGnR,EAAGmiD,EAAUniD,EAAI,GACzCsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAGnR,EAAGmiD,EAAUniD,EAAI,IAEnB,IAAhBuqB,EAAUpZ,IAA4B,IAAjBoZ,EAAUvqB,EACjC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,GAC7CsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,IAEvB,IAAhBuqB,EAAUpZ,IAA4B,IAAjBoZ,EAAUvqB,EACjC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,GACzCsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,KAElB,IAAjBuqB,EAAUpZ,IAA6B,IAAjBoZ,EAAUvqB,EAClC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,GAC7CsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAI,EAAGnR,EAAGmiD,EAAUniD,EAAI,KAEtB,IAAjBuqB,EAAUpZ,GAA4B,IAAhBoZ,EAAUvqB,EAClC,CACL2V,KAAM,CAAExE,EAAGgxC,EAAUhxC,EAAGnR,EAAGmiD,EAAUniD,EAAI,GACzCsX,MAAO,CAAEnG,EAAGgxC,EAAUhxC,EAAGnR,EAAGmiD,EAAUniD,EAAI,SAI9CsP,GAAO5X,MAAP,sDAEEyqD,EACAC,EACA73B,GChcW,SAAS83B,GAAiBjxC,EAAOkxC,GAK9C,IAJA,IAAMnxC,EAAIC,EAAM,GACVpR,EAAIoR,EAAM,GACZmxC,GAAS,EAEJlwD,EAAI,EAAGkH,EAAI+oD,EAAG3tD,OAAS,EAAGtC,EAAIiwD,EAAG3tD,OAAQ4E,EAAIlH,IAAK,CACzD,IAAMmwD,EAAKF,EAAGjwD,GAAG,GACXowD,EAAKH,EAAGjwD,GAAG,GAEXqwD,EAAKJ,EAAG/oD,GAAG,GACXopD,EAAKL,EAAG/oD,GAAG,GAGfkpD,EAAKziD,GAAM2iD,EAAK3iD,GAAKmR,GAAMuxC,EAAKF,IAAOxiD,EAAIyiD,IAAQE,EAAKF,GAAMD,IAG9DD,GAAUA,GAId,OAAOA,ECvBT,IAAMjzC,GAASL,EAAU,oDAUzB,SAAS2zC,GAAcrxC,EAAKC,GAA8B,IAAf+wC,IAAe,yDAChD16B,EAAkCrW,EAAlCqW,OAAQyJ,EAA0B9f,EAA1B8f,sBAEhB,GAA8B,8BAA1BA,EAAJ,CAHwD,IAWhDzjB,EAAU0D,EAAIvG,OAAd6C,MACF2I,EAAWqR,EAAO7rB,KAAI,SAAAmZ,GAAC,MAAI,CAACA,EAAEhE,EAAGgE,EAAEnV,MAZe,EAazBuW,GAA4BC,EAAU3I,GAbb,YAajD4D,EAbiD,KAaxCC,EAbwC,KAexD6wC,EACIjwC,GACEf,EACAC,GACA,SAAAJ,GAAK,OAAIixC,GAAiB,CAACjxC,EAAMD,EAAGC,EAAMpR,GAAIwW,KAC9C/E,EACAC,GAEFa,GACEhB,EACAC,GACA,SAAAJ,GAAK,OAAIixC,GAAiB,CAACjxC,EAAMD,EAAGC,EAAMpR,GAAIwW,KAC9C/E,EACAC,QAxBJpC,GAAO5X,MAAP,mGAC8F45B,IAkC3F,SAAS+uB,GAAoB9uC,EAAKC,GACvCoxC,GAAcrxC,EAAKC,GAAe,GAU7B,SAASqxC,GAAqBtxC,EAAKC,GACxCoxC,GAAcrxC,EAAKC,GAAe,GC9DpC,IAAMlC,GAASL,EAAU,qDASzB,SAAS6zC,GAAevxC,EAAKC,GAA8B,IAAf+wC,IAAe,yDACjD16B,EAAkCrW,EAAlCqW,OAAQyJ,EAA0B9f,EAA1B8f,sBAEhB,GAA8B,+BAA1BA,EAAJ,CAQA,IAMQzjB,EANU0D,EAAIvG,OAMd6C,MAjBiD,EAmB1B0I,GADdsR,EAAO7rB,KAAI,SAAAmZ,GAAC,MAAI,CAACA,EAAEhE,EAAGgE,EAAEnV,MAC4B6N,GAnBZ,YAmBlD4D,EAnBkD,KAmBzCC,EAnByC,KAqBzD6wC,EACIjwC,GAAiBf,EAAKC,GAAe,kBAAM,IAAMC,EAASC,GAC1DJ,GAAwBC,EAAKC,EAAeC,EAASC,QAnBvDpC,GAAO5X,MAAP,qGACgG45B,IA4B7F,SAASyxB,GAAqBxxC,EAAKC,GACxCsxC,GAAevxC,EAAKC,GAAe,GAU9B,SAASwxC,GAAsBzxC,EAAKC,GACzCsxC,GAAevxC,EAAKC,GAAe,GCpDrC,IAAMlC,GAASL,EAAU,mDAUzB,SAASg0C,GAAa1xC,EAAKC,GAA8B,IAAf+wC,IAAe,yDAC/C16B,EAAkCrW,EAAlCqW,OAAQyJ,EAA0B9f,EAA1B8f,sBAEhB,GAA8B,8BAA1BA,EAAJ,CAHuD,IAc/CzjB,EAAU0D,EAAIvG,OAAd6C,MACF2I,EAAWqR,EAAO7rB,KAAI,SAAAmZ,GAAC,MAAI,CAACA,EAAEhE,EAAGgE,EAAEnV,MAfc,EAgBxBuW,GAA4BC,EAAU3I,GAhBd,YAgBhD4D,EAhBgD,KAgBvCC,EAhBuC,KAkBvD6wC,EACI7vC,GACEnB,EACAC,GACA,SAAAJ,GAAK,OAAIixC,GAAiB,CAACjxC,EAAMD,EAAGC,EAAMpR,GAAIwW,KAC9C/E,EACAC,GAEFiB,GACEpB,EACAC,GACA,SAAAJ,GAAK,OAAIixC,GAAiB,CAACjxC,EAAMD,EAAGC,EAAMpR,GAAIwW,KAC9C/E,EACAC,QA3BJpC,GAAO5X,MAAP,mGAC8F45B,IAqC3F,SAAS8uB,GAAmB7uC,EAAKC,GACtCyxC,GAAa1xC,EAAKC,GAAe,GAU5B,SAAS0xC,GAAoB3xC,EAAKC,GACvCyxC,GAAa1xC,EAAKC,GAAe,GClEnC,IAAMlC,GAASL,EAAU,oDAUzB,SAASk0C,GAAc5xC,EAAKC,GAA8B,IAAf+wC,IAAe,yDAChD16B,EAAkCrW,EAAlCqW,OAAQyJ,EAA0B9f,EAA1B8f,sBAEhB,GAA8B,+BAA1BA,EAAJ,CAHwD,IAWhDzjB,EAAU0D,EAAIvG,OAAd6C,MAXgD,EAazB0I,GADdsR,EAAO7rB,KAAI,SAAAmZ,GAAC,MAAI,CAACA,EAAEhE,EAAGgE,EAAEnV,MAC4B6N,GAbb,YAajD4D,EAbiD,KAaxCC,EAbwC,KAexD6wC,EACI7vC,GAAgBnB,EAAKC,GAAe,kBAAM,IAAMC,EAASC,GACzDc,GAAuBjB,EAAKC,EAAeC,EAASC,QAbtDpC,GAAO5X,MAAP,qGACgG45B,IAsB7F,SAAS8xB,GAAoB7xC,EAAKC,GACvC2xC,GAAc5xC,EAAKC,GAAe,GAU7B,SAAS6xC,GAAqB9xC,EAAKC,GACxC2xC,GAAc5xC,EAAKC,GAAe,GC9CpC,IAAMlC,GAASL,EAAU,2CASzB,SAASq0C,GAAW/xC,EAAKC,GAA8B,IAAf+wC,IAAe,yDAC7CjxB,EAA0B9f,EAA1B8f,sBAER,GAA8B,4BAA1BA,EAAJ,CAQA,IAAM3f,EAAYJ,EAAIvG,OAX+B,EAYtB+K,GAA2BxE,GAZL,YAY9CE,EAZ8C,KAYrCC,EAZqC,KAa/Cwa,EAAU5W,GACd3D,EAAUqE,QAAQI,MAClBzE,EAAUqE,QAAQK,KAGpBksC,EACI7vC,GACEnB,EACAC,GACA,SAAAJ,GAAK,OAAIo9B,GAAetiB,EAAS9a,KACjCK,EACAC,GAEFiB,GACEpB,EACAC,GACA,SAAAJ,GAAK,OAAIo9B,GAAetiB,EAAS9a,KACjCK,EACAC,QA3BJpC,GAAO5X,MAAP,8FACyF45B,IAqCtF,SAASiyB,GAAiBhyC,EAAKC,GACpC8xC,GAAW/xC,EAAKC,GAAe,GAU1B,SAASgyC,GAAkBjyC,EAAKC,GACrC8xC,GAAW/xC,EAAKC,GAAe,GChEjC,IAAMlC,GAASL,EAAU,kDAUzB,SAASw0C,GAAYlyC,EAAKC,GAA8B,IAAf+wC,IAAe,yDAC9CjxB,EAA0B9f,EAA1B8f,sBAER,GAA8B,4BAA1BA,EAAJ,CAQA,IAAM3f,EAAYJ,EAAIvG,OAXgC,EAYvB+K,GAA2BxE,GAZJ,YAY/CE,EAZ+C,KAYtCC,EAZsC,KAahDwa,EAAU5W,GACd3D,EAAUqE,QAAQI,MAClBzE,EAAUqE,QAAQK,KAGpBksC,EACIjwC,GACEf,EACAC,GACA,SAAAJ,GAAK,OAAIo9B,GAAetiB,EAAS9a,KACjCK,EACAC,GAEFa,GACEhB,EACAC,GACA,SAAAJ,GAAK,OAAIo9B,GAAetiB,EAAS9a,KACjCK,EACAC,QA3BJpC,GAAO5X,MAAP,+FAC0F45B,IAqCvF,SAASoyB,GAAkBnyC,EAAKC,GACrCiyC,GAAYlyC,EAAKC,GAAe,GAU3B,SAASmyC,GAAmBpyC,EAAKC,GACtCiyC,GAAYlyC,EAAKC,GAAe,G,ICpDboyC,G,YAEnB,aAAwB,IAAZlvD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,mBACNyhC,WAAY,CACVwvB,YAAazD,GACb0D,aAAcZ,GACda,cAAelB,GACfmB,aAAc3D,IAEhBvrB,QAAS,CACP+uB,YAAa/lB,GACbgmB,aAAc9lB,GACd+lB,cAAehmB,GACfimB,aAAcnmB,IAEhBvJ,gBAAiB,cACjB9S,0BAA2B,CAAC,QAAS,SACrCU,UAAW4b,GACXvJ,OAAQ,CAAC,8BAlBW,iCAqBhB7/B,EAAOy/B,I,mBAvBiCD,ICA7B+vB,G,YAEnB,aAAwB,IAAZvvD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,oBACNyhC,WAAY,CACVwvB,YAAaT,GACbU,aAAcT,GACdU,cAAef,GACfgB,aAAcjB,IAEhBjuB,QAAS,CACP+uB,YAAa3lB,GACb4lB,aAAc1lB,GACd2lB,cAAe5lB,GACf6lB,aAAc/lB,IAEhB3J,gBAAiB,cACjB9S,0BAA2B,CAAC,QAAS,SACrC+S,OAAQ,CAAC,+BAjBW,iCAoBhB7/B,EAAOy/B,I,mBAtBkCD,ICA9BgwB,G,YAEnB,aAAwB,IAAZxvD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,iBACNyhC,WAAY,CACVwvB,YAAaN,GACbO,aAAcN,GACdO,cAAeJ,GACfK,aAAcN,IAEhB5uB,QAAS,CACP+uB,YAAavlB,GACbwlB,aAActlB,GACdulB,cAAexlB,GACfylB,aAAc3lB,IAEhB/J,gBAAiB,cACjB9S,0BAA2B,CAAC,QAAS,SACrCU,UAAWoc,GACX/J,OAAQ,CAAC,4BAlBW,iCAqBhB7/B,EAAOy/B,I,mBAvB+BD,ICV3BiwB,G,YAEnB,aAAwB,IAAZzvD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,qBACNyhC,WAAY,CACV+vB,WAAYzE,IAEd7qB,QAAS,CACPsvB,WAAYtmB,IAEdxJ,gBAAiB,aACjB9S,0BAA2B,CAAC,QAAS,SACrCU,UAAW4b,GACXvJ,OAAQ,CAAC,8BAZW,iCAehB7/B,EAAOy/B,I,mBAjBmCD,ICT9CmwB,GAAwB,UAExBC,GAA0B,GAC1BC,GAAwB,GACxBC,GAA6B,GAEnC,SAASC,GAAoBh3C,GAC3B,IAAKA,EACH,OAAO42C,GAET,IAAMziC,EAAOjU,EAAStF,YAAYuF,kBAAkBH,GAASmU,KAE7D,IAAKA,EACH,MAAM,IAAIhmB,MAAM,uDAGlB,OAAOgmB,EAgET,IAUe8iC,GAVY,CACzBC,oBA9DF,SAA6BC,GAA8B,IAArBn3C,EAAqB,4DAAXtM,EAC9C,IAAKyjD,EACH,MAAM,IAAIhpD,MAAM,wCAElB,IAAMgmB,EAAO6iC,GAAoBh3C,GAEjC62C,GAAwB1iC,GAAQgjC,GAyDhCC,oBAtDF,SAA6Bp3C,GAC3B,IAAMmU,EAAO6iC,GAAoBh3C,GAEjC,OACE62C,GAAwB1iC,IACxB0iC,GAAwBD,KAkD1BS,kBA9CF,SAA2BF,GAA8B,IAArBn3C,EAAqB,4DAAXtM,EAC5C,IAAKyjD,EACH,MAAM,IAAIhpD,MAAM,wCAElB,IAAMgmB,EAAO6iC,GAAoBh3C,GAEjC82C,GAAsB3iC,GAAQgjC,GAyC9BG,kBAtCF,SAA2Bt3C,GACzB,IAAMmU,EAAO6iC,GAAoBh3C,GAEjC,OACE82C,GAAsB3iC,IAAS2iC,GAAsBF,KAmCvDW,uBA/BF,SAAgCJ,GAA8B,IAArBn3C,EAAqB,4DAAXtM,EACjD,IAAKyjD,EACH,MAAM,IAAIhpD,MAAM,wCAElB,IAAMgmB,EAAO6iC,GAAoBh3C,GAEjC+2C,GAA2B5iC,GAAQgjC,GA0BnCK,uBAvBF,SAAgCx3C,GAC9B,IAAMmU,EAAO6iC,GAAoBh3C,GAEjC,OACE+2C,GAA2B5iC,IAC3B4iC,GAA2BH,KAmB7Ba,eAfF,SAAwBz3C,GACtB,IAAMmU,EAAO6iC,GAAoBh3C,UAE1B62C,GAAwB1iC,UACxB2iC,GAAsB3iC,UACtB4iC,GAA2B5iC,KC7DfujC,G,YACnB,aAAwB,MAAZzwD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,aACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAW4a,IAJS,OAOtB,4BAAMpoC,EAAOy/B,KAERixB,aAAe,EAAKC,gBAAgBxxD,KAArB,SACpB,EAAK69B,mBAAqB,EAAK0zB,aAC/B,EAAKxzB,kBAAoB,EAAKwzB,aAC9B,EAAKzzB,kBAAoB,EAAKyzB,aAC9B,EAAK5zB,uBAAyB,EAAK4zB,aAbb,E,6DAgBR7zC,GACd,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QAGR8D,EAAIipB,2BALe,IAQX8qB,EAA2B7uD,KAAK4J,QAAhCilD,uBAER,GAAKA,EAAL,CAKA,IAAMC,EAAgB93C,EAIhB+3C,EAHuB73C,EAAStF,YAAYuF,kBAChD23C,GAEyC13C,MAAMV,QAC3Cs4C,EAAmB93C,EAAStF,YAAY0U,SAAS7pB,IACrD,mBACAsyD,GAGF,GAAKC,EAAL,CAKA,IAGM/8B,EAAeO,GAHItX,EAAU8M,cAAc5Q,MAK/C43C,GAIsBH,EAAuBI,oBAG/BhpD,SAAQ,SAASipD,GAE/B,GAAIA,IAAkBJ,EAAtB,CAIA,IAAIK,EAAcvrD,OAAOwrD,UACrBC,GAAmB,EAEjBC,EAAsBr3C,EAAai3C,EAAe,SAExD,QAA4BxkD,IAAxB4kD,EAAJ,CAIA,IAAM91C,EAAY81C,EAAoB14C,KAAK,GAiC3C,GA9BA4C,EAAUP,SAAShT,SAAQ,SAASyQ,EAASlW,GAC3C,IAAM0xB,EAAahb,EAAStF,YAAY0U,SAAS7pB,IAC/C,mBACAia,GAIF,GACGwb,GACAA,EAAWhP,sBACXgP,EAAWC,YACXD,EAAWE,cAJd,CASA,IAAMm9B,EAAgB19B,GAAiBK,EAAWhP,sBAC5C0jC,EAAM/0B,GAAiBK,EAAWC,YAElCq9B,EADS39B,GAAiBK,EAAWE,eACrBC,QAAQgB,MAAMuzB,EAAIv0B,SAClCpT,EAAW1b,KAAKC,IACpBgsD,EAAOn9B,QAAQE,IAAIg9B,GAAiBC,EAAOn9B,QAAQE,IAAIN,IAGrDhT,EAAWkwC,IACbA,EAAclwC,EACdowC,EAAkB7uD,OAIlB6uD,IAAoB71C,EAAUC,sBAMX,IAArB41C,QACwC3kD,IAAxC8O,EAAUP,SAASo2C,GACnB,CACA,IAAMI,EAAsBxB,GAAmBG,oBAC7Cc,GAEIQ,EAAoBzB,GAAmBK,kBAC3CY,GAEIS,EAAsB1B,GAAmBO,uBAC7CU,GAGEO,GACFA,EAAoBP,KAKS,IAA3B11C,EAAUo2C,aACH14C,EAAStF,YAAYi+C,UAC5Br2C,EAAUP,SAASo2C,IAGZn4C,EAAStF,YAAY+U,kBAC5BnN,EAAUP,SAASo2C,KAIhBzhD,MACL,SAASwJ,GACP,IAAM6d,EAAW/d,EAAStF,YAAYsjB,YAAYg6B,GAElD11C,EAAUC,oBAAsB41C,EAChCn4C,EAAStF,YAAYk+C,aAAaZ,EAAe93C,EAAO6d,GACpDy6B,GACFA,EAAkBR,EAAe93C,MAGrC,SAASnW,GACP,IAAMyV,EAAU8C,EAAUP,SAASo2C,GAE/BM,GACFA,EAAoBT,EAAex4C,EAASzV,kB,GA5Jdw8B,ICNvBsyB,G,YACnB,aAAwB,IAAZ9xD,EAAY,uDAAJ,GAAI,6CAMhBA,EALe,CACnB9B,KAAM,uBACN4uB,0BAA2B,CAAC,gB,+DAMdjQ,GAChB,IAAMI,EAAYJ,EAAIvG,OAEtB2C,EAAStF,YAAYo+C,YAAY90C,EAAUlE,a,GAbOymB,ICajCwyB,G,YACnB,aAAwB,MAAZhyD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,YACNyhC,WAAY,CACV14B,QAAS24B,GACTqyB,QAASC,IAEXtyB,gBAAiB,UACjB9S,0BAA2B,CAAC,QAAS,SACrCU,UAAWya,IATS,OAYtB,4BAAMjoC,EAAOy/B,KAERxC,kBAAoB,EAAKk1B,qBAAqBhzD,KAA1B,SACzB,EAAKi+B,iBAAmB,EAAKg1B,wBAAwBjzD,KAA7B,SAExB,EAAK+9B,kBAAoB,EAAKi1B,qBAAqBhzD,KAA1B,SACzB,EAAKk+B,gBAAkB,EAAK+0B,wBAAwBjzD,KAA7B,SAEvB,EAAKkzD,cAAgB,GApBC,E,kEAuBHx1C,GACnB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QAERhX,KAAKswD,cAAgBp1C,EACrBhE,EAAStF,YAAYkX,YAAY9R,K,8CAGX8D,GACtB,IACQ9D,EADU8D,EAAIvG,OACdyC,QAERhX,KAAKswD,cAAgB,GACrBp5C,EAAStF,YAAYkX,YAAY9R,K,qCAGpB8D,GACR9a,KAAKswD,cAActoC,eAKtBlN,GACAA,EAAIvG,QACJ21B,QAAQ5tC,OAAO0J,KAAKhG,KAAKswD,cAActoC,eAAe9pB,UAEtD4c,EAAIvG,OAAOyT,cAAgBhoB,KAAKswD,cAActoC,cAC9ChoB,KAAK86B,oBAAoBhgB,Q,GAnDY2iB,IA8D3C,SAASI,GAAgB/iB,GACvB,IAAM40B,EAAS1vC,KAAK0V,cACd9D,EAAcsF,EAAStF,YACvBsJ,EAAYJ,EAAIvG,OACdyC,EAAiDkE,EAAjDlE,QAASI,EAAwC8D,EAAxC9D,MAAO4Q,EAAiC9M,EAAjC8M,cAAe0T,EAAkBxgB,EAAlBwgB,cAEjCzsB,EAAUwsB,GAAcC,EAAclC,QAEtCl5B,EAAQw1B,GAAWM,iBACnBoxB,EAAalwB,GAAUM,cAEvBld,EAAInX,KAAKoG,MAAMqe,EAAc5Q,MAAMsD,GACnCnR,EAAIhG,KAAKoG,MAAMqe,EAAc5Q,MAAM7N,GAErCmR,EAAI,GAAKnR,EAAI,GAAKmR,GAAKtD,EAAMmD,SAAWhR,GAAK6N,EAAM8I,MAIvDwY,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAASygC,GAEnB,IACI0X,EACAv9C,EAFEsuB,EAAO,GAAH,OAAMzd,EAAN,aAAYnR,GAItB,GAAI6N,EAAM9W,MACR8mD,EAAeC,GAAarwC,EAAS0D,EAAGnR,EAAG,EAAG,GAC9CM,EAAM,MAAH,OAASu9C,EAAa,GAAtB,eAA+BA,EAAa,GAA5C,eACDA,EAAa,GADZ,eAEIA,EAAa,QACf,CAEL,IAAMvP,GADNuP,EAAex1C,EAAY01C,gBAAgBtwC,EAAS0D,EAAGnR,EAAG,EAAG,IACrC,GAClBg+C,EAAK1P,EAAKzgC,EAAM4+B,MAAQ5+B,EAAM6+B,UAC9BsB,EAAM4B,GAAa/hC,EAAOygC,GAGhChuC,EAAM,OAAH,OAAUguC,EAAV,gBAAoB7tC,WAAWu9C,EAAG/R,QAAQ,KACzC+B,IACF1tC,GAAO,SAAJ,OAAaG,WAAWutC,EAAI/B,QAAQ,MAK3C,IAAMtc,EAAa,CACjBxe,EAAGsN,EAAcwR,OAAO9e,EAAI,EAC5BnR,EAAGye,EAAcwR,OAAOjwB,EAAI,GAG9B4vB,GACElqB,EACApF,EACAqvB,EAAWxe,EACXwe,EAAW3vB,EAAIi+C,EAAa,EAC5BlnD,GAEF64B,GAAYlqB,EAASkpB,EAAMe,EAAWxe,EAAGwe,EAAW3vB,EAAGjJ,MAU3D,SAAS6vD,GAAgBr1C,GACvB,IAAM40B,EAAS1vC,KAAK0V,cACd9D,EAAcsF,EAAStF,YACvBsJ,EAAYJ,EAAIvG,OAEpByC,EAKEkE,EALFlE,QACAI,EAIE8D,EAJF9D,MACA4Q,EAGE9M,EAHF8M,cACA0T,EAEExgB,EAFFwgB,cACA60B,EACEr1C,EADFq1C,aAGIthD,EAAUwsB,GAAcC,EAAclC,QACtCl5B,EAAQw1B,GAAWM,iBAErBo6B,EAAaxoC,EAAcgb,KAAKz5B,EAAI+tB,GAAUM,cAAgB,EAE9D24B,IACFC,EAAaxoC,EAAcgb,KAAKz5B,EAA8B,EAA1B+tB,GAAUM,eAEhD,IAAM64B,EAAa7+C,EAAYsxB,YAC7BlsB,EACAgR,EAAcgb,KAAKtoB,EACnB81C,GAIAC,EAAW/1C,EAAI,GACf+1C,EAAWlnD,EAAI,GACfknD,EAAW/1C,GAAKtD,EAAMmD,SACtBk2C,EAAWlnD,GAAK6N,EAAM8I,MAKxBwY,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAASygC,GAEnB,IAMI0X,EANEvR,EAAejkC,EAAY0U,SAAS7pB,IACxC,sBACA2a,EAAMV,SAEFo/B,EAAWD,GAAgBA,EAAaC,SAG1C3d,EAAO,GAEX,GAAI/gB,EAAM9W,MACR8mD,EAAeC,GAAarwC,EAASy5C,EAAW/1C,EAAG+1C,EAAWlnD,EAAG,EAAG,GACpE4uB,EAAO,MAAH,OAASivB,EAAa,GAAtB,eAA+BA,EAAa,GAA5C,eACFA,EAAa,QAEV,CAQL,IAAMvP,GAPNuP,EAAex1C,EAAY01C,gBACzBtwC,EACAy5C,EAAW/1C,EACX+1C,EAAWlnD,EACX,EACA,IAEsB,GAClBg+C,EAAK1P,EAAKzgC,EAAM4+B,MAAQ5+B,EAAM6+B,UAE9Bya,EAAyB1mD,WAAWu9C,EAAG/R,QAAQ,IAErD,GAAiB,OAAbM,EACF3d,GAAQ,OAAJ,OAAWu4B,QACV,GAAiB,OAAb5a,EAAmB,CAC5B3d,GAAQu4B,EACR,IAAMnZ,EAAM4B,GAAa/hC,EAAOygC,GAE5BN,IACFpf,GAAQ,SAAJ,OAAanuB,WAAWutC,EAAI/B,QAAQ,WAG1Crd,GAAQu4B,EAKZ,IAAMx3B,EAAatnB,EAAYqf,cAAcja,EAASy5C,GAGlDn7B,EAAc,CAChB5a,EAAG,GACHnR,IAAK+tB,GAAUM,cAAgB,IAAM,GAKjCzc,EAAQmd,GAAarpB,EAASkpB,EADpB,GAGZo4B,IACFj7B,EAAc,CACZ5a,GAAIS,EAAQ,EACZ5R,GAAI+tB,GAAUM,cAAgB,GAAK,KAIvCiE,GAAW5sB,EAAS+H,EAASkiB,EAXR,EAWkC,CAAE54B,SAAS,UAClE64B,GACElqB,EACAkpB,EACAe,EAAWxe,EAAI4a,EAAY5a,EAC3Bwe,EAAW3vB,EAAI+rB,EAAY/rB,EAC3BjJ,M,ICpPeqwD,G,YACnB,aAAwB,MAAZ1yD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,SACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAW6a,IAJS,OAOtB,4BAAMroC,EAAOy/B,KAERkzB,qBAAuB,EAAKC,sBAAsBzzD,KAA3B,SAC5B,EAAK0zD,sBAAwB,EAAKD,sBAAsBzzD,KAA3B,SAVP,E,mEAaF0d,GACpB,IAAM6jB,EAAS7jB,EAAIvG,OAAOyT,cAAcwR,OAClCxiB,EAAU8D,EAAIvG,OAAOyC,QAE3BvG,GAAM0Z,MAAMlkB,SAAQ,SAAS6kB,GAC3B,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAEzCqa,GAEFA,EAAUI,KAAK3Q,SAAQ,SAAS2Q,GAEE,mBAAvBkU,EAAK0Z,eACZ1Z,EAAK0Z,cAAcxtB,EAASJ,EAAM+nB,KAElCzmB,EAAgBlB,EAAS8T,EAAK3uB,KAAMya,GACpCM,EAAStF,YAAYkX,YAAY9R,UAQzC,OAFqB,M,GAnCeymB,ICAhCkgB,GAAuBwE,GAAvBxE,mBAWaoT,G,YACnB,aAAwB,MAAZ9yD,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,sBACN60D,mBAAoB,cACpBjmC,0BAA2B,CAAC,QAAS,QAAS,aAC9C+S,OAAQ,CAAC,8BACTpoB,cAmrCG,CACL2sC,cAAe,CACb9iC,QAAS,CACPI,MAAO,CACLorB,WAAW,EACXzU,QAAQ,KAId26B,WAAY,EACZrO,YAAa,KACbsO,UAAWp7B,GAAWM,iBACtB+6B,WAAYr7B,GAAWI,eAWvBk7B,mBAAmB,EACnBC,0BAA0B,EAC1BC,qBAAsB,GACtBC,wBAAyB,KA5sCvB9lC,UAAWua,IAPS,OAUtB,4BAAM/nC,EAAOy/B,KAERQ,mBAAoB,EACzB,EAAKiD,iBAAkB,EACvB,EAAK6vB,mBAAqB,EAAKrzB,qBAAqBqzB,mBAEpD,EAAKQ,SAAU,EAGf,EAAKC,sBAAwB,EAAKA,sBAAsBr0D,KAA3B,SAC7B,EAAKs0D,uBAAyB,EAAKA,uBAAuBt0D,KAA5B,SAC9B,EAAKu0D,wBAA0B,EAAKA,wBAAwBv0D,KAA7B,SArBT,E,4DAwBT0d,GACb,IAAMI,EAAYJ,EAAIvG,OAEtB,GAAuC,OAAnCvU,KAAK0V,cAAcktC,YACrB,OAAO,EAGT,IAAM5rC,EAAUkE,EAAUlE,QACpB04B,EAAS1vC,KAAK0V,cAKpB,IAHkBuC,EAAajB,EAAShX,KAAKgxD,oBACtBp6C,KAAK84B,EAAOkT,aAGjC,OAAO,EAGT,GAAI5iD,KAAKwxD,QAAS,CAChB,IAAMviD,EAAUiM,EAAUwgB,cAAclC,OAAOC,WAAW,MACpD7vB,EAAU,CACdtJ,MAAON,KAAK0V,cAAcw7C,UAC1BrgC,KAAM,KACNpG,aAAczqB,KAAK4xD,iBAGrBjnB,GACE17B,EACAiM,EACAlb,KAAK0V,cAAc2sC,cAAc9iC,QACjC3V,QAEO5J,KAAK0V,cAAc07C,oBAAsBpxD,KAAK6xD,iBACvD7xD,KAAK8xD,mBAAmBh3C,K,0CAIRA,GAClB,IAAMI,EAAYJ,EAAIvG,OAEtBvU,KAAK+xD,oBAAoB72C,GACzBhE,EAAStF,YAAYkX,YAAY5N,EAAUlE,W,wCAG3B8D,GAChB,IAAMI,EAAYJ,EAAIvG,OAEtBvU,KAAK+xD,oBAAoB72C,GACzBhE,EAAStF,YAAYkX,YAAY5N,EAAUlE,W,4CAGvB8D,GAGpB,OAFA9a,KAAKgyD,qBAAqBl3C,IAEnB,I,2CASYA,GACnB,GAAK9a,KAAK4J,QAAQijB,gBAAgB5F,SAASnM,EAAIvG,OAAO+sB,SAMtD,OAFAthC,KAAKgyD,qBAAqBl3C,IAEnB,I,8CAUeA,GACtB,IAAM40B,EAAS1vC,KAAK0V,cAEpB,GAAK1V,KAAKwxD,QAAV,CAIA,IAAMt2C,EAAYJ,EAAIvG,OAChBiC,EAAYyB,EAAaiD,EAAUlE,QAAShX,KAAKgxD,oBAEvD,GAAKx6C,EAAL,CAIA,IAAM4a,EAAS5a,EAAUI,KAAK84B,EAAOkT,aAAarjC,QAAQ6R,OAG1DpxB,KAAK0kD,kBAAkBxpC,GACvBlb,KAAKiyD,QAAQ/2C,EAAWkW,GAGxBla,EAAStF,YAAYkX,YAAY5N,EAAUlE,a,4CASvB8D,GACpB9a,KAAKkyD,WAAWp3C,K,6CASKA,GACrB9a,KAAKkyD,WAAWp3C,GAEhB9a,KAAKmyD,kBAAkBr3C,GACvB9a,KAAK6xD,iBAAkB,I,iCAGd/2C,GACT,IAAMI,EAAYJ,EAAIvG,OAChByC,EAAUkE,EAAUlE,QACpB04B,EAAS1vC,KAAK0V,cAEpB1V,KAAKwxD,SAAU,EAEf/gD,GAAM+wB,uBAAwB,EAE9BxhC,KAAK0kD,kBAAkBxpC,GACvBlb,KAAKoyD,oBAAoBl3C,GAEzBw0B,EAAO2iB,eAAgB,EAEvBryD,KAAKsyD,kBAAkBt7C,GAGvBE,EAAStF,YAAYkX,YAAY5N,EAAUlE,SAgjC/C,SAA4B8D,GAC1BA,EAAIipB,2BACJjpB,EAAI6nB,kBACJ7nB,EAAI4nB,iBAjjCFiS,CAAmB75B,K,yCAUFA,GACjB,IASI6jB,EATEzjB,EAAYJ,EAAIvG,OAChByC,EAAUkE,EAAUlE,QACpB/H,EAAUiM,EAAUwgB,cAAclC,OAAOC,WAAW,MAGpD7iB,EADYqB,EAAajB,EAAShX,KAAKgxD,oBACtBp6C,KAAK5W,KAAK0V,cAAcktC,aAE/C5iD,KAAK6xD,iBAAkB,EAInB7xD,KAAK0V,cAAc28C,eACrB1zB,EAAS3+B,KAAK0V,cAAc2sC,cAAc9iC,QAAQI,MAClD3f,KAAK0V,cAAc28C,eAAgB,GAEnC1zB,EAASluB,GAAM6Z,mBAGjB,IACIioC,EADoBlmC,GAAkBrV,EAAShX,KAAKgxD,oBACrBwB,wBACjCx7C,EACAJ,EACA+nB,GAMF,GAHA3+B,KAAK0V,cAAc2sC,cAAc9iC,QAAQI,MAAMjF,EAAIikB,EAAOjkB,EAC1D1a,KAAK0V,cAAc2sC,cAAc9iC,QAAQI,MAAMpW,EAAIo1B,EAAOp1B,EAEtDvJ,KAAK0V,cAAc27C,yBAA0B,CAC/C,IAAMoB,EAAkBF,EAExBA,EAAevyD,KAAK0yD,yBAAyBx3C,EAAWq3C,GAItDE,EACAzyD,KAAK0V,cAAc67C,wBAA0BgB,IAE7CtjD,EAAQ0jD,YAAc3yD,KAAK0V,cAAc47C,sBAI7C,IAAM1nD,EAAU,CACdinB,KAAM,KACNvwB,MAAON,KAAK0V,cAAcy7C,WAC1B1mC,aAAc8nC,GAGhB5nB,GACE17B,EACAiM,EACAlb,KAAK0V,cAAc2sC,cAAc9iC,QACjC3V,GAGE5J,KAAK0V,cAAc27C,2BACrBpiD,EAAQ0jD,YAAc,K,uCAWT73C,GACf9a,KAAKmyD,kBAAkBr3C,K,sCAUTA,GACd9a,KAAKmyD,kBAAkBr3C,K,sCAUTA,GACd9a,KAAKmyD,kBAAkBr3C,K,uCAURA,GACf9a,KAAKmyD,kBAAkBr3C,K,0CAULI,GAClB,IAAMw0B,EAAS1vC,KAAK0V,cACdsB,EAAUkE,EAAUlE,QACpBmoC,EAAmBn/C,KAAK4yD,iCAC5B57C,EACAkE,QAGuBxQ,IAArBy0C,IAIJzP,EAAOkT,YAAczD,EACrBrzB,GAAe9U,M,4CAWKA,EAASymC,GAC7B,IACM7mC,EADYqB,EAAajB,EAAShX,KAAKgxD,oBACtBp6C,KACR5W,KAAK0V,cAEbktC,YAAcnF,EAErB,IAAK,IAAI7hD,EAAI,EAAGA,EAAIgb,EAAK1Y,OAAQtC,IAE7Bgb,EAAKhb,GAAG06B,OADN16B,IAAM6hD,I,2CAgBO3iC,GACnB,IAAMI,EAAYJ,EAAIvG,OAChBm7B,EAAS1vC,KAAK0V,cACdsB,EAAUkE,EAAUlE,QAEC,OAAvB04B,EAAOkT,cACT5iD,KAAK+xD,oBAAoB72C,GAEE,OAAvBw0B,EAAOkT,eAKb5iD,KAAKwxD,SAAU,EAGf/gD,GAAM+wB,uBAAwB,EAE9BxhC,KAAK6yD,mBAAmB33C,GACxBlb,KAAK0kD,kBAAkBxpC,GAEvBlb,KAAK8yD,sBAAsB97C,EAAS04B,EAAOkT,aAC3C5iD,KAAK+yD,gBAAgB/7C,GAErBE,EAAStF,YAAYkX,YAAY5N,EAAUlE,Y,8BAYrCkE,EAAWkW,GACjB,IAAMse,EAAS1vC,KAAK0V,cAEpB1V,KAAKgzD,YAAc,CACjBh8C,QAASkE,EAAUlE,QACnBI,MAAO8D,EAAU9D,MACjBkS,WAAYpO,EAAU8M,cAAc5Q,MACpCga,SACA6hC,SAAUjzD,KAAKkzD,eACfjC,WAAYvhB,EAAOuhB,WACnBkC,WAAY5vD,KAAKsc,IAAI7f,KAAKkzD,eAAoC,EAApBxjB,EAAOuhB,aAInD,IAAMmC,EAAgBpzD,KAAKqzD,oBAIC3oD,IAAxB0oD,EAAcE,QAChBtzD,KAAKuzD,kBAAkBH,GAGvBpzD,KAAKwzD,yB,qCAeP,IAJa,MAC4BxzD,KAAKgzD,YAAtC5hC,EADK,EACLA,OAAQ9H,EADH,EACGA,WAAY2pC,EADf,EACeA,SACtBG,EAAgB,GAEbx3D,EAAI,EAAGA,EAAIw1B,EAAOlzB,OAAQtC,IAAK,CACtC,IAAM63D,EAAmBv8C,EAASrF,gBAAgB8I,MAAMsE,SACtDmS,EAAOx1B,GACP0tB,GAGEmqC,EAAmBR,IAKvBjzD,KAAK0zD,eAAe93D,EAAG63D,QACK/oD,IAAxB0oD,EAAcE,OAChBF,EAAcE,MAAQ13D,EACtBw3D,EAAcO,KAAO/3D,GAErBw3D,EAAcO,KAAO/3D,GAIzB,OAAOw3D,I,qCAWMx3D,EAAG63D,GAAkB,MACczzD,KAAKgzD,YAA7C5hC,EAD0B,EAC1BA,OAAQ9H,EADkB,EAClBA,WAAY2pC,EADM,EACNA,SAAU77C,EADJ,EACIA,MAChClI,EAASkiB,EAAOx1B,GAEhBg4D,GACA1kD,EAAOwL,EAAI4O,EAAW5O,GAAK+4C,EAD3BG,GAEA1kD,EAAO3F,EAAI+f,EAAW/f,GAAKkqD,EAG3B7V,EAAW,CACfljC,EAAG4O,EAAW5O,EAAIu4C,EAAWW,EAC7BrqD,EAAG+f,EAAW/f,EAAI0pD,EAAWW,GAG/B5zB,GAAU4d,EAAUxmC,GAEpBlI,EAAOwL,EAAIkjC,EAASljC,EACpBxL,EAAO3F,EAAIq0C,EAASr0C,EAGpB,IAAMsqD,EAAkB7zD,KAAKf,YAAY60D,wBACvCl4D,EACAw1B,EAAOlzB,QAGTkzB,EAAOyiC,GAAiBh9B,MAAM9oB,MAC9BqjB,EAAOyiC,GAAiBh9B,MAAMnyB,KAAKwK,K,wCAWnBkkD,GAIhB,IAHA,IAAMW,EAAwB/zD,KAAKg0D,uBAAuBZ,GACtDa,EAAmB,EAEdr4D,EAAI,EAAGA,EAAIm4D,EAAsB71D,OAAQtC,IAAK,CACrD,IAAMklD,EAAciT,EAAsBn4D,GAAK,EAAIq4D,EAEnDj0D,KAAKk0D,sBAAsBpT,GAC3BmT,O,6CAamBb,GAIrB,IAJoC,MACLpzD,KAAKgzD,YAA5B5hC,EAD4B,EAC5BA,OAAQ+hC,EADoB,EACpBA,WACVY,EAAwB,GAErBn4D,EAAIw3D,EAAcE,MAAO13D,GAAKw3D,EAAcO,KAAM/3D,IACzDoE,KAAKm0D,cAAcv4D,EAAGw1B,EAAQ2iC,EAAuBZ,GAGvD,IAAMiB,EAAiBp0D,KAAKf,YAAYo1D,oBACtCjB,EAAcO,KACdviC,EAAOlzB,QAIT,GAAIk2D,IAAmBhB,EAAcE,MAAO,CAC1CtzD,KAAKm0D,cACHC,EACAhjC,EACA2iC,EACAZ,GAGF,IAAMmB,EAAmBt0D,KAAKf,YAAY60D,wBACxCV,EAAcE,MACdliC,EAAOlzB,QAGLo2D,IAAqBF,GACvBp0D,KAAKm0D,cACHG,EACAljC,EACA2iC,EACAZ,GAKN,OAAOY,I,oCAaKn4D,EAAGw1B,EAAQ2iC,EAAuBZ,GAC9C,IAAMoB,EAAkBv0D,KAAKf,YAAYo1D,oBACvCz4D,EACAw1B,EAAOlzB,QAGoBgZ,EAASrF,gBAAgB8I,MAAMsE,SAC1DmS,EAAOx1B,GACPw1B,EAAOmjC,IAGkBpB,GACzBY,EAAsBrvD,KAAK9I,K,4CAYTklD,GAAa,IACzB1vB,EAAWpxB,KAAKgzD,YAAhB5hC,OAEFojC,EAAgB1T,EAAc,EAC9Bb,EAAYjgD,KAAKf,YAAYw1D,gCACjC3T,EACA1vB,EAAOlzB,QAEHw2D,EAAiB10D,KAAK20D,mBAC1B7T,EACA0T,EACAvU,GAEIqB,EAAa,IAAI3D,GAAmB+W,GAE1CtjC,EAAO7wB,OAAOugD,EAAa,EAAGQ,GAG9BlwB,EAAOojC,GAAe39B,MAAM9oB,MAC5BqjB,EAAOojC,GAAe39B,MAAMnyB,KAAK0sB,EAAO0vB,IAExCqB,GAAcZ,QAAQnwB,EAAQ0vB,K,4CAc9B,KAHmB9gD,KAAKgzD,YAAhB5hC,OAGGlzB,QAAU,GAArB,CAIA,IAAM02D,EAAa50D,KAAK60D,wBAExB70D,KAAK80D,mBAAmBF,M,8CAgBxB,IALsB,MACS50D,KAAKgzD,YAA5B5hC,EADc,EACdA,OAAQ6/B,EADM,EACNA,WACV2D,EAAa,GACf12D,EAASkzB,EAAOlzB,OAEXtC,EAAI,EAAGA,EAAIsC,EAAQtC,IAAK,CAC/B,IAAM24D,EAAkBv0D,KAAKf,YAAYo1D,oBACvCz4D,EACAw1B,EAAOlzB,QAQT,GAL6BgZ,EAASrF,gBAAgB8I,MAAMsE,SAC1DmS,EAAOx1B,GACPw1B,EAAOmjC,IAGkBtD,EAAY,CACrC,IAAM8D,EAAO,CAACn5D,EAAG24D,GAEjBK,EAAWlwD,KAAKqwD,GAGN,IAANn5D,IACFsC,GAAU,GAIZtC,KAIJ,OAAOg5D,I,yCAWUA,GAGjB,IAFA,IAAII,EAAuB,EAElBp5D,EAAI,EAAGA,EAAIg5D,EAAW12D,OAAQtC,IAAK,CAC1C,IAAMm5D,EAAO/0D,KAAKf,YAAYg2D,kBAC5BL,EAAWh5D,GACXo5D,GAGFh1D,KAAKk1D,gBAAgBH,GACrBC,IAIF,IAAMG,EAAgBn1D,KAAK60D,wBAEvBM,EAAcj3D,QAChB8B,KAAK80D,mBAAmBK,K,sCAWZC,GAAY,MACAp1D,KAAKgzD,YAAvB5hC,EADkB,EAClBA,OAAQha,EADU,EACVA,MAGVi+C,EAAW,CACf36C,GAAI0W,EAAOgkC,EAAW,IAAI16C,EAAI0W,EAAOgkC,EAAW,IAAI16C,GAAK,EACzDnR,GAAI6nB,EAAOgkC,EAAW,IAAI7rD,EAAI6nB,EAAOgkC,EAAW,IAAI7rD,GAAK,GAG3Dy2B,GAAUq1B,EAAUj+C,GAGpBga,EAAOgkC,EAAW,IAAI16C,EAAI26C,EAAS36C,EACnC0W,EAAOgkC,EAAW,IAAI7rD,EAAI8rD,EAAS9rD,EAGnC,IAAM+rD,EAAuBt1D,KAAKf,YAAYo1D,oBAC5Ce,EAAW,GACXhkC,EAAOlzB,QAGTkzB,EAAOgkC,EAAW,IAAIv+B,MAAM9oB,MAC5BqjB,EAAOgkC,EAAW,IAAIv+B,MAAMnyB,KAAK0sB,EAAOkkC,IAGxClkC,EAAO7wB,OAAO60D,EAAW,GAAI,K,yCAWZl6C,GACjB,IAAMlE,EAAUkE,EAAUlE,QACpB04B,EAAS1vC,KAAK0V,cACd+nC,EAAY/N,EAAOkT,YACnBjkB,EAASzjB,EAAU8M,cAAc5Q,MAGjCR,EADYqB,EAAajB,EAAShX,KAAKgxD,oBACtBp6C,KAAK6mC,GAEtB8X,EAAkBlpC,GAAkBrV,EAAShX,KAAKgxD,oBAEpDwE,EAAcD,EAAgBE,kBAAkBz+C,EAASJ,EAAM+nB,GAC/D4zB,EAAegD,EAAgB/C,wBACjCx7C,EACAJ,EACA+nB,GAIE+Q,EAAO2hB,2BACTmE,EAAcx1D,KAAK01D,wBAAwBx6C,EAAWs6C,GACtDjD,EAAevyD,KAAK0yD,yBAAyBx3C,EAAWq3C,IAG1DvyD,KAAKkzD,eAAiBsC,EACtBx1D,KAAK4xD,gBAAkBW,I,wCAUPr3C,GAChB,IAAMw0B,EAAS1vC,KAAK0V,cAEpBg6B,EAAO2S,cAAc9iC,QAAQI,MAAMjF,EAAIQ,EAAU8M,cAAc5Q,MAAMsD,EACrEg1B,EAAO2S,cAAc9iC,QAAQI,MAAMpW,EAAI2R,EAAU8M,cAAc5Q,MAAM7N,EACrEy2B,GAAU0P,EAAO2S,cAAc9iC,QAAQI,MAAOzE,EAAU9D,S,sCAW1CJ,GACdhX,KAAKsyD,kBAAkBt7C,GAGvBA,EAAQgqB,iBAAiB/uB,EAAOE,SAAUnS,KAAKyxD,uBAC/Cz6C,EAAQgqB,iBAAiB/uB,EAAOM,YAAavS,KAAKyxD,uBAClDz6C,EAAQgqB,iBAAiB/uB,EAAOI,WAAYrS,KAAK2xD,yBAEjD36C,EAAQgqB,iBAAiB/uB,EAAOW,UAAW5S,KAAK0xD,wBAChD16C,EAAQgqB,iBAAiB/uB,EAAO0jD,UAAW31D,KAAK0xD,wBAChD16C,EAAQgqB,iBAAiB/uB,EAAOY,WAAY7S,KAAK2xD,yBAEjDz6C,EAAStF,YAAYkX,YAAY9R,K,wCAWjBA,GAChBA,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUnS,KAAKyxD,uBAClDz6C,EAAQ+pB,oBAAoB9uB,EAAOM,YAAavS,KAAKyxD,uBACrDz6C,EAAQ+pB,oBACN9uB,EAAOI,WACPrS,KAAK2xD,yBAGP36C,EAAQ+pB,oBAAoB9uB,EAAOW,UAAW5S,KAAK0xD,wBACnD16C,EAAQ+pB,oBAAoB9uB,EAAO0jD,UAAW31D,KAAK0xD,wBACnD16C,EAAQ+pB,oBACN9uB,EAAOY,WACP7S,KAAK2xD,yBAGPz6C,EAAStF,YAAYkX,YAAY9R,K,0CAUfkE,GAClB,IAAMw0B,EAAS1vC,KAAK0V,cAEHuC,EADDiD,EAAUlE,QACahX,KAAKgxD,oBACtBp6C,KAAK84B,EAAOkT,aAE7BtgB,aAAc,I,wCAWHxnB,GAChB,IAAM40B,EAAS1vC,KAAK0V,cACdyC,EAAWF,EAAajY,KAAKgX,QAAShX,KAAKgxD,oBAIjD,GAFAthB,EAAOkT,YAAc,KAEjBzqC,EACF,IAAK,IAAIvc,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IACxCuc,EAASvB,KAAKhb,GAAG06B,QAAS,EAI9B9K,GAAcxrB,KAAKgX,QAAShX,KAAKyrB,WAEjCvU,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,+CAqCfkE,EAAWq3C,GAClC,OAAOvyD,KAAK41D,mBAAmB16C,EAAWq3C,GAAc,K,8CAalCr3C,EAAWs6C,GACjC,OAAOx1D,KAAK41D,mBAAmB16C,EAAWs6C,GAAa,K,yCActCt6C,EAAW8D,GAA8B,IAAtB2kC,EAAsB,wDACpD3sC,EAAUkE,EAAUlE,QACpBI,EAAQ8D,EAAU9D,MAClBs4B,EAAS1vC,KAAK0V,cAEdc,EAAYyB,EAAajB,EAAShX,KAAKgxD,oBACvCp6C,EAAOJ,EAAUI,KAAK84B,EAAOkT,aAE/BiT,EAAe,EAEnB,GAAIlS,EAAc,CAChB,IAAM3oC,EAAU9D,EAAStF,YAAYqf,cAAcja,EAAS,CAC1D0D,EAAG,EACHnR,EAAG,IAEC0R,EAAc/D,EAAStF,YAAYqf,cAAcja,EAAS,CAC9D0D,EAAGtD,EAAM+D,MACT5R,EAAG6N,EAAMgE,SAEL06C,GACH76C,EAAYP,EAAIM,EAAQN,IAAMO,EAAY1R,EAAIyR,EAAQzR,GAEzDssD,EAAeC,GAAc1+C,EAAM+D,MAAQ/D,EAAMgE,QAGnD,IAAMg+B,EAAOxiC,EAAKwiC,KAAOyc,EACnBzwC,EAAY7hB,KAAKib,IAAI46B,EAAO71C,KAAKiuB,GAAI,IAE3C,OAAOjuB,KAAK6b,IAAIJ,EAAQoG,K,uDAYOpO,EAASkE,GACxC,IAAM+oC,EAAW53B,GAAkBrV,EAAShX,KAAKgxD,oBAC3Cx6C,EAAYyB,EAAajB,EAAShX,KAAKgxD,oBAE7C,GAAKx6C,EAAL,CAYA,IARA,IAAMI,EAAOJ,EAAUI,KACjBm/C,EAAc76C,EAAU8M,cAAc5Q,MAEtC2oC,EAAU,CACd9gC,SAAUe,IACVy9B,UAAW,MAGJ7hD,EAAI,EAAGA,EAAIgb,EAAK1Y,OAAQtC,IAAK,CACpC,IAAMo6D,EAAoB/R,EAASwR,kBACjCz+C,EACAJ,EAAKhb,GACLm6D,IAGyB,IAAvBC,IAIAA,EAAoBjW,EAAQ9gC,WAC9B8gC,EAAQ9gC,SAAW+2C,EACnBjW,EAAQtC,UAAY7hD,IAIxB,OAAOmkD,EAAQtC,a,yCAkEEqD,EAAa0T,EAAevU,GAAW,IAepDyU,EAfoD,EACR10D,KAAKgzD,YAA7C5hC,EADgD,EAChDA,OAAQ6hC,EADwC,EACxCA,SAAU3pC,EAD8B,EAC9BA,WAAYlS,EADkB,EAClBA,MAIhCi+C,EAAW,CACf36C,GAAI0W,EAAOojC,GAAe95C,EAAI0W,EAAO6uB,GAAWvlC,GAAK,EACrDnR,GAAI6nB,EAAOojC,GAAejrD,EAAI6nB,EAAO6uB,GAAW12C,GAAK,GAGjD0sD,EAAqB/+C,EAASrF,gBAAgB8I,MAAMsE,SACxDqK,EACA+rC,GAKF,GAAIY,EAAqBhD,EAAU,CACjC,IAAMW,EAAsB,CAC1Bl5C,GAAI26C,EAAS36C,EAAI4O,EAAW5O,GAAKu7C,EACjC1sD,GAAI8rD,EAAS9rD,EAAI+f,EAAW/f,GAAK0sD,GAGnCvB,EAAiB,CACfh6C,EAAG4O,EAAW5O,EAAIu4C,EAAWW,EAAoBl5C,EACjDnR,EAAG+f,EAAW/f,EAAI0pD,EAAWW,EAAoBrqD,QAGnDmrD,EAAiBW,EAKnB,OAFAr1B,GAAU00B,EAAgBt9C,GAEnBs9C,I,iCAQP,OAAO10D,KAAK0V,cAAcu7C,Y,aAGbp0D,GACb,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,iFAIJnF,KAAK0V,cAAcu7C,WAAap0D,I,iCAIhC,OAAOmD,KAAK0V,cAAcy9C,Y,aAGbt2D,GACb,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,iFAIJnF,KAAK0V,cAAcy9C,WAAat2D,I,wCAIhC,OAAOmD,KAAK0V,cAAc07C,mB,aAGNv0D,GACpB,GAAqB,kBAAVA,EACT,MAAM,IAAIsI,MACR,yFAIJnF,KAAK0V,cAAc07C,kBAAoBv0D,EACvCqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,+CAItC,OAAOhX,KAAK0V,cAAc27C,0B,aAGCx0D,GAC3B,GAAqB,kBAAVA,EACT,MAAM,IAAIsI,MACR,gGAIJnF,KAAK0V,cAAc27C,yBAA2Bx0D,EAC9Cqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,2CAItC,OAAOhX,KAAK0V,cAAc47C,sB,aAGHz0D,GACvB,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,2FAKJtI,EAAQ0G,KAAKsc,IAAItc,KAAK6b,IAAIviB,EAAO,GAAM,GAEvCmD,KAAK0V,cAAc47C,qBAAuBz0D,EAC1Cqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,W,8CAItC,OAAOhX,KAAK0V,cAAc67C,yB,aAGA10D,GAC1B,GAAqB,iBAAVA,EACT,MAAM,IAAIsI,MACR,8FAKJtI,EAAQ0G,KAAKsc,IAAIhjB,EAAO,GAExBmD,KAAK0V,cAAc67C,wBAA0B10D,EAC7Cqa,EAAStF,YAAYkX,YAAY9oB,KAAKgX,Y,yCAnUf+9C,EAAMC,GAC7B,IAAMkB,EAAgB,CACpBnB,EAAK,GAAKC,EACVD,EAAK,GAAKC,GAQZ,OAJIkB,EAAc,GAAK,IACrBA,EAAc,GAAK,GAGdA,I,0CA+HkBt6D,EAAGsC,GAC5B,OAAItC,IAAMsC,EAAS,EACV,EAGFtC,EAAI,I,8CAYkBA,EAAGsC,GAChC,OAAU,IAANtC,EACKsC,EAAS,EAGXtC,EAAI,I,sDAa0BklD,EAAa5iD,GAClD,OAAI4iD,IAAgB5iD,EACX,EAIF4iD,M,GAhiC0CrjB,I,ICXhC04B,G,YACnB,aAAwB,MAAZl4D,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,UACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACb0gD,YAAa,IACbC,mBAAoB,GAEtB5qC,UAAW8a,IARS,OAWtB,4BAAMtoC,EAAOy/B,KAER44B,gBAAa5rD,EAClB,EAAK6rD,iBAAc7rD,EAGnB,EAAKmlB,eAAiB,EAAK2mC,2BAA2Bp5D,KAAhC,SACtB,EAAKwyB,gBAAkB,EAAK4mC,2BAA2Bp5D,KAAhC,SACvB,EAAKq5D,iBAAmB,EAAKC,4BAA4Bt5D,KAAjC,SAGxB,EAAK29B,uBAAyB,EAAK47B,oBAAoBv5D,KAAzB,SAC9B,EAAK89B,kBAAoB,EAAK07B,uBAAuBx5D,KAA5B,SACzB,EAAKi+B,iBAAmB,EAAKw7B,uBAAuBz5D,KAA5B,SACxB,EAAK05D,qBAAuB,EAAKD,uBAAuBz5D,KAA5B,SAE5B,EAAK49B,sBAAwB,EAAK27B,oBAAoBv5D,KAAzB,SAC7B,EAAK+9B,kBAAoB,EAAKy7B,uBAAuBx5D,KAA5B,SACzB,EAAKk+B,gBAAkB,EAAKu7B,uBAAuBz5D,KAA5B,SAEvB,EAAK69B,mBAAqB,EAAK47B,uBAAuBz5D,KAA5B,SAE1B,EAAK25D,iBAAmB,EAAKC,uBAAuB55D,KAA5B,SAjCF,E,iEAoCJ0d,GAAK,WAEvB9a,KAAKi3D,qBACLj3D,KAAKk3D,mBAAmBp8C,GAExBtf,OAAO+nC,uBAAsB,kBAAM,EAAKyzB,uBAAuBl8C,MAE/DgR,GAAehR,EAAIvG,OAAOyC,SAE1B8D,EAAI4nB,iBACJ5nB,EAAI6nB,oB,6CAGiB7nB,GACrB9a,KAAKg3D,uBAAuBl8C,GAE5BA,EAAI4nB,iBACJ5nB,EAAI6nB,oB,6CAGiB7nB,GACrB,IAAM9D,EAAU8D,EAAIvG,OAAOyC,QAG3BwU,GAAcxrB,KAAKgX,QAAShX,KAAKyrB,WAEjCzU,EAAQmgD,cAAc,gBAAgBr1D,MAAMs1D,QAAU,OACtDp3D,KAAKi3D,uB,6CAGgBn8C,GACrB,IAAM9D,EAAU8D,EAAIvG,OAAOyC,QACrBqgD,EAAgBrgD,EAAQmgD,cAAc,gBAM5C,GAJKE,GACHr3D,KAAKw2D,2BAA2Bx/C,QAGVtM,IAApB1K,KAAKs2D,WAAT,CAMA,IAAM98B,EAASxiB,EAAQmgD,cAAc,4BAC/BloD,EAAUwsB,GAAc47B,GAGxBC,EAAiBpgD,EAAStF,YAAYqf,cAC1CnW,EAAIvG,OAAOyC,QACX8D,EAAIvG,OAAOyT,cAAc5Q,OAIrBg/C,EAAc7yD,KAAK6b,IACvBpf,KAAK0V,cAAc0gD,YACnB58B,EAAOre,MACPqe,EAAOpe,QAEHi7C,EAAqBr2D,KAAK0V,cAAc2gD,mBAE9CgB,EAAcl8C,MAAQi7C,EACtBiB,EAAcj8C,OAASg7C,EAGvBkB,EAAe58C,EAAInX,KAAKsc,IACtBy3C,EAAe58C,EACd,GAAM07C,EAAeC,GAExBiB,EAAe58C,EAAInX,KAAK6b,IACtBk4C,EAAe58C,EACf8e,EAAOre,MAAS,GAAMi7C,EAAeC,GAEvCiB,EAAe/tD,EAAIhG,KAAKsc,IACtBy3C,EAAe/tD,EACd,GAAM6sD,EAAeC,GAExBiB,EAAe/tD,EAAIhG,KAAK6b,IACtBk4C,EAAe/tD,EACfiwB,EAAOpe,OAAU,GAAMg7C,EAAeC,GAGxC,IAAMkB,EAAW,CACf78C,EAAG48C,EAAe58C,EAAI27C,EAAqB,GAAMD,EACjD7sD,EAAG+tD,EAAe/tD,EAAI8sD,EAAqB,GAAMD,GAGnDmB,EAAS78C,EAAInX,KAAKsc,IAAI03C,EAAS78C,EAAG,GAClC68C,EAAShuD,EAAIhG,KAAKsc,IAAI03C,EAAShuD,EAAG,GAElC0F,EAAQuoD,UACNx3D,KAAKs2D,WACLiB,EAAS78C,EACT68C,EAAShuD,EACT6sD,EACAA,EACA,EACA,EACAA,EACAA,GAIF,IAAMqB,EAAc38C,EAAIvG,OAAOg8C,aAAe,IAAM,EAC9CmH,EAAkB,CACtBr4C,IAAK9b,KAAKsc,IAAIy3C,EAAe/tD,EAAI,GAAM6sD,EAAcqB,EAAa,GAClEv4C,KAAM3b,KAAKsc,IAAIy3C,EAAe58C,EAAI,GAAM07C,EAAa,IAIjDuB,EAAeN,EAAcO,wBAGnCF,EAAgBr4C,IAAM9b,KAAK6b,IACzBs4C,EAAgBr4C,IAChBma,EAAOpe,OAASu8C,EAAav8C,QAE/Bs8C,EAAgBx4C,KAAO3b,KAAK6b,IAC1Bs4C,EAAgBx4C,KAChBsa,EAAOre,MAAQw8C,EAAax8C,OAE9Bk8C,EAAcv1D,MAAMud,IAApB,UAA6Bq4C,EAAgBr4C,IAA7C,MACAg4C,EAAcv1D,MAAMod,KAApB,UAA8Bw4C,EAAgBx4C,KAA9C,MACAm4C,EAAcv1D,MAAMs1D,QAAU,W,yCAWbt8C,GACjB,IAAM9D,EAAU8D,EAAIvG,OAAOyC,QACvBC,EAAiB6D,EAAIvG,OAAO0C,oBAETvM,IAAnBuM,IACFA,EAAiBC,EAAStF,YAAYuF,kBAAkBH,IAG1D,IAAMq/C,EAAqBr2D,KAAK0V,cAAc2gD,mBACxCwB,EAAa5gD,EAAeuiB,OAC5BpiB,EAAQH,EAAeG,MAGxBpX,KAAKu2D,cACRv2D,KAAKu2D,YAAc30D,SAASk2D,cAAc,OAC1C93D,KAAKu2D,YAAYp7C,MAAQ08C,EAAW18C,MAAQk7C,EAC5Cr2D,KAAKu2D,YAAYn7C,OAASy8C,EAAWz8C,OAASi7C,EAC9Cn/C,EAAStF,YAAYlM,OAAO1F,KAAKu2D,YAAat/C,EAAerN,UAG/D,IAAMmuD,EAAqB7gD,EAAStF,YAAYuF,kBAC9CnX,KAAKu2D,aAEDthC,EAAW/d,EAAStF,YAAYsjB,YAAYje,EAAeD,SAEjEhX,KAAKs2D,WAAayB,EAAmBv+B,OACrCx5B,KAAKs2D,WAAWn7C,MAAQ08C,EAAW18C,MAAQk7C,EAC3Cr2D,KAAKs2D,WAAWl7C,OAASy8C,EAAWz8C,OAASi7C,EAE7C0B,EAAmB9iC,SAAW34B,OAAOotB,OAAO,GAAIuL,GAGhDA,EAASI,OAASghC,EAClBn/C,EAAStF,YAAYk+C,aAAa9vD,KAAKu2D,YAAan/C,GACpDF,EAAStF,YAAYomD,YAAYh4D,KAAKu2D,YAAathC,K,gDAU1BvqB,IAArB1K,KAAKu2D,cACPr/C,EAAStF,YAAYvM,QAAQrF,KAAKs2D,YAClCt2D,KAAKu2D,iBAAc7rD,EACnB1K,KAAKs2D,gBAAa5rD,K,iDAaKsM,GAEzB,GAA8C,OAA1CA,EAAQmgD,cAAc,gBAA0B,CAElD,IAAME,EAAgBz1D,SAASk2D,cAAc,UAI7CT,EAAcY,UAAU5gD,IAAI,eAC5BggD,EAAcl8C,MAAQnb,KAAK0V,cAAc0gD,YACzCiB,EAAcj8C,OAASpb,KAAK0V,cAAc0gD,YAC1CiB,EAAcv1D,MAAM87C,SAAW,WAC/ByZ,EAAcv1D,MAAMs1D,QAAU,OAC9BpgD,EAAQkhD,YAAYb,M,kDAUIrgD,GAC1B,IAAMqgD,EAAgBrgD,EAAQmgD,cAAc,gBAExCE,GACFrgD,EAAQmhD,YAAYd,O,GAlQe55B,ICApB26B,G,YACnB,aAAgC,MAApB1iD,EAAoB,uDAAJ,GAAI,YAC9B,IAKMioB,EAAuBrhC,OAAOotB,OALd,CACpBvtB,KAAM,UACNuZ,cAAe,GACfooB,OAAQ,CAAC,gCAE+CpoB,GAN5B,OAQ9B,4BAAMioB,KAEDA,qBAAuBA,EAVE,E,6DAahB3mB,GACdhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACfhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACQE,EAAStF,YAAYuF,kBAAkBH,GAE3CI,OACjBF,EAAStF,YAAYkX,YAAY9R,K,qCAItB8D,GACb,IAAMI,EAAYJ,EAAIvG,OACd0C,EAAmDiE,EAAnDjE,eAAgBG,EAAmC8D,EAAnC9D,MAAO6d,EAA4B/Z,EAA5B+Z,SAAUyG,EAAkBxgB,EAAlBwgB,cAEzC,GAAKxgB,GAAcjE,GAAmBG,EAAtC,CAIA,IAAMkhD,EAAuBphD,EAAStF,YAAY0U,SAAS7pB,IACzD,qBACA2a,EAAMV,SAGR,GACG4hD,GACAA,EAAqBC,UACrBD,EAAqBC,SAASr6D,OAHjC,CAQA,IAAMs6D,EACIvjC,EAASwjC,cAAczxC,oBAAsB,EADjDwxC,EAECvjC,EAASwjC,cAAc1xC,iBAAmB,EAE3CvH,EACJjc,KAAKC,IAAIyxB,EAASwjC,cAAcC,KAAKh+C,EAAIua,EAASwjC,cAAcE,KAAKj+C,GACrE89C,EACI/4C,EACJlc,KAAKC,IAAIyxB,EAASwjC,cAAcC,KAAKnvD,EAAI0rB,EAASwjC,cAAcE,KAAKpvD,GACrEivD,EAEFF,EAAqBC,SAAStyD,SAAQ,SAAA2yD,GACpC,IAAwB,IAApBA,EAAQ9tB,QAAZ,CAIA,IAAM+tB,EAAcj3D,SAASk2D,cAAc,UAE3Ce,EAAY19C,MAAQqE,EACpBq5C,EAAYz9C,OAASqE,EAErB,IAAMq5C,EAAeD,EAAYp/B,WAAW,MAE5Cq/B,EAAavoC,UAAYqoC,EAAQroC,WAAa,QAEzB,MAAjBqoC,EAAQr3D,OACVu3D,EAAazgC,SAAS,EAAG,EAAGwgC,EAAY19C,MAAO09C,EAAYz9C,QAC3D09C,EAAaC,yBAA2B,OAK1C,IAFA,IAAIn9D,EAAI,EAEC2N,EAAI,EAAGA,EAAIqvD,EAAQ14C,KAAM3W,IAChC,IAAK,IAAImR,EAAI,EAAGA,EAAIk+C,EAAQr+C,QAASG,IAC/Bk+C,EAAQ7+C,UAAUne,KAAO,GAC3Bk9D,EAAazgC,SAAS3d,EAAGnR,EAAG,EAAG,GAMrC,IAAMyvD,GACHtqD,MAAM1E,WAAW4uD,EAAQl+C,KAAOxQ,SAAS0uD,EAAQl+C,GAAKk+C,EAAQl+C,EAAI,EAC/Du+C,GACHvqD,MAAM1E,WAAW4uD,EAAQrvD,KAAOW,SAAS0uD,EAAQrvD,GAAKqvD,EAAQrvD,EAAI,EAGrEmyB,EAAc87B,UAAUqB,EAAaG,EAAUC,a,GAlGZx7B,ICN1B0gB,GALK,CAClB+a,qBCOa,SAASrsB,GAoBtB,IAnBA,IAAMssB,EAAOtnC,GAAiBgb,GAK1BsR,EAAc,GACZib,EAAeD,EAAKz+C,EAAI,EAAI,IAAM,IAClC2+C,EAAeF,EAAK5vD,EAAI,EAAI,IAAM,IAClC+vD,EAAeH,EAAKI,EAAI,EAAI,IAAM,IAGlC/1D,EAAM,IAAI0T,EAASrF,gBAAgBkgB,QACvCxuB,KAAKC,IAAI21D,EAAKz+C,GACdnX,KAAKC,IAAI21D,EAAK5vD,GACdhG,KAAKC,IAAI21D,EAAKI,IAKP39D,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAI4H,EAAIkX,EAHE,MAGSlX,EAAIkX,EAAIlX,EAAI+F,GAAK/F,EAAIkX,EAAIlX,EAAI+1D,EAC9Cpb,GAAeib,EACf51D,EAAIkX,EAAI,OACH,GAAIlX,EAAI+F,EANL,MAMgB/F,EAAI+F,EAAI/F,EAAIkX,GAAKlX,EAAI+F,EAAI/F,EAAI+1D,EACrDpb,GAAekb,EACf71D,EAAI+F,EAAI,OACH,GAAI/F,EAAI+1D,EATL,MASgB/1D,EAAI+1D,EAAI/1D,EAAIkX,GAAKlX,EAAI+1D,EAAI/1D,EAAI+F,EACrD40C,GAAemb,EACf91D,EAAI+1D,EAAI,OACH,GAAI/1D,EAAIkX,EAZL,MAYgBlX,EAAI+F,EAZpB,MAY+B/F,EAAIkX,IAAMlX,EAAI+F,EACrD40C,GAAeib,EAAeC,EAC9B71D,EAAIkX,EAAI,EACRlX,EAAI+F,EAAI,OACH,GAAI/F,EAAIkX,EAhBL,MAgBgBlX,EAAI+1D,EAhBpB,MAgB+B/1D,EAAIkX,IAAMlX,EAAI+1D,EACrDpb,GAAeib,EAAeE,EAC9B91D,EAAIkX,EAAI,EACRlX,EAAI+1D,EAAI,MACH,MAAI/1D,EAAI+F,EApBL,MAoBgB/F,EAAI+1D,EApBpB,MAoB+B/1D,EAAI+F,IAAM/F,EAAI+1D,GAKrD,MAJApb,GAAekb,EAAeC,EAC9B91D,EAAI+F,EAAI,EACR/F,EAAI+1D,EAAI,EAMZ,OAAOpb,GDrDPqb,wBEGa,SAASC,GACtB,IAAIC,EAAWD,EAAkB/4D,QAAQ,IAAK,KAS9C,OAFAg5D,GADAA,GADAA,GADAA,GADAA,GADAA,EAAWA,EAASh5D,QAAQ,IAAK,MACbA,QAAQ,IAAK,MACbA,QAAQ,IAAK,MACbA,QAAQ,IAAK,MACbA,QAAQ,IAAK,MACbi5D,gBCCDC,G,YACnB,aAAwB,IAAZ37D,EAAY,uDAAJ,GAAI,6CAShBA,EARe,CACnB9B,KAAM,qBACNuZ,cAAe,CACbmkD,gBAAgB,GAElB/7B,OAAQ,CAAC,kC,6DAMG9mB,GACdhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACfhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACf,IAAMpF,EAAcsF,EAAStF,YACNA,EAAYuF,kBAAkBH,GAElCI,OACjBxF,EAAYkX,YAAY9R,K,qCAIb8D,GACb,IAAMI,EAAYJ,EAAIvG,OAChBtF,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAChDxiB,EAAUkE,EAAUlE,QACpBgxC,EAAU8R,GAAsB9iD,GAEtC,GAAKgxC,EAAL,CAGA,IAAMrpB,EAASo7B,GAA8B/iD,EAASgxC,GAChD1nD,EAAQw1B,GAAWI,eAEnB8jC,EAAa,CACjB36C,IAAKiZ,GAAarpB,EAAS+4C,EAAQ3oC,IAAK,GACxCH,KAAMoZ,GAAarpB,EAAS+4C,EAAQ9oC,KAAM,GAC1C2B,MAAOyX,GAAarpB,EAAS+4C,EAAQnnC,MAAO,GAC5C6T,OAAQ4D,GAAarpB,EAAS+4C,EAAQtzB,OAAQ,GAC9CtZ,OAAQkd,GAAarpB,EAAS,IAAK,IAGrCgrD,GAAgBhrD,EAAS+4C,EAASrpB,EAAQq7B,EAAY15D,GAClDN,KAAK0V,cAAcmkD,gBACrBK,GAAoBjrD,EAAS+4C,EAASrpB,EAAQq7B,EAAY15D,Q,GApDZm9B,IAyD9Cw8B,GAAkB,SAAChrD,EAAS+4C,EAASrpB,EAAQq7B,EAAY15D,GAC7D64B,GACElqB,EACA+4C,EAAQ3oC,IACRsf,EAAOtf,IAAI3E,EAAIs/C,EAAW36C,IAAM,EAChCsf,EAAOtf,IAAI9V,EACXjJ,GAEF64B,GACElqB,EACA+4C,EAAQ9oC,KACRyf,EAAOzf,KAAKxE,EAAIs/C,EAAW96C,KAAO,EAClCyf,EAAOzf,KAAK3V,EACZjJ,IAIE45D,GAAsB,SAACjrD,EAAS+4C,EAASrpB,EAAQq7B,EAAY15D,GACjE64B,GACElqB,EACA+4C,EAAQnnC,MACR8d,EAAO9d,MAAMnG,EAAIs/C,EAAWn5C,MAC5B8d,EAAO9d,MAAMtX,EACbjJ,GAEF64B,GACElqB,EACA+4C,EAAQtzB,OACRiK,EAAOjK,OAAOha,EAAIs/C,EAAWtlC,OAAS,EACtCiK,EAAOjK,OAAOnrB,EAAIywD,EAAW5+C,OAC7B9a,IAIEw5D,GAAwB,SAAA9iD,GAC5B,IAAMpF,EAAcsF,EAAStF,YACvBqF,EAAiBrF,EAAYuF,kBAAkBH,GAC/Ckb,EAAatgB,EAAY0U,SAAS7pB,IACtC,mBACAwa,EAAeG,MAAMV,SAGvB,GAAKwb,GAAeA,EAAWC,YAAeD,EAAWE,cAAzD,CAIA,IAAMw0B,EAAMzI,GAAY+a,qBAAqBhnC,EAAWC,YAClD00B,EAAS1I,GAAY+a,qBAAqBhnC,EAAWE,eACrD+nC,EAAchc,GAAYqb,wBAAwB5S,GAGxD,MAAO,CACLvnC,IAHqB8+B,GAAYqb,wBAAwB3S,GAIzDnyB,OAAQmyB,EACR3nC,KAAMi7C,EACNt5C,MAAO+lC,KAILmT,GAAgC,SAAA/iD,GACpC,IAAMC,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAkB9D,MAAO,CACLqI,IAlBUnI,EAAStF,YAAYqf,cAAcja,EAAS,CACtD0D,EAAGzD,EAAeG,MAAM+D,MAAQ,EAChC5R,EAAG,IAiBHmrB,OAfaxd,EAAStF,YAAYqf,cAAcja,EAAS,CACzD0D,EAAGzD,EAAeG,MAAM+D,MAAQ,EAChC5R,EAAG0N,EAAeG,MAAMgE,OAAS,KAcjC8D,KAZWhI,EAAStF,YAAYqf,cAAcja,EAAS,CACvD0D,EAAG,EACHnR,EAAG0N,EAAeG,MAAMgE,OAAS,IAWjCyF,MATY3J,EAAStF,YAAYqf,cAAcja,EAAS,CACxD0D,EAAGzD,EAAeG,MAAM+D,MAAQ,GAChC5R,EAAG0N,EAAeG,MAAMgE,OAAS,MC1IhBg/C,G,YACnB,aAAwB,MAAZn8D,EAAY,uDAAJ,GAAI,mBAStB,4BAAMA,EARe,CACnB9B,KAAM,gBACN4uB,0BAA2B,CAAC,cAC5BrV,cAAe,CACbgZ,cAAe,OAOd2rC,uBAAyB,EAAKjmB,cAAch3C,KAAnB,SAZR,E,2DAeV0d,GACZ,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAsBkE,EAAtBlE,QAASie,EAAa/Z,EAAb+Z,SAEjB,GAAI/Z,EAAUo/C,cAAgBt6D,KAAK0V,cAAcgZ,cAAe,CAC9D,IAAM4G,EAAct1B,KAAKu6D,gBAAgBr/C,GAEzClb,KAAKw6D,kBAAkBvlC,EAAUK,GACjCpe,EAAStF,YAAYomD,YAAYhhD,EAASie,M,sCAI9B/Z,GAAW,IACjB+Z,EAAiC/Z,EAAjC+Z,SAAU7d,EAAuB8D,EAAvB9D,MAAOirB,EAAgBnnB,EAAhBmnB,YAErBo4B,EAAaxlC,EAASI,MACtBqlC,EAAczlC,EAASI,MAQ3B,OANIje,EAAM2P,gBAAkB3P,EAAM4P,mBAChCyzC,GAAcrjD,EAAM4P,mBAAqB5P,EAAM2P,gBACtC3P,EAAM4P,mBAAqB5P,EAAM2P,kBAC1C2zC,GAAetjD,EAAM2P,gBAAkB3P,EAAM4P,oBAGxC,CACLtM,EAAG2nB,EAAYW,KAAKtoB,EAAI+/C,EACxBlxD,EAAG84B,EAAYW,KAAKz5B,EAAImxD,K,wCAIVzlC,EAAUK,GAC1BL,EAASK,YAAY5a,GAAK4a,EAAY5a,EACtCua,EAASK,YAAY/rB,GAAK+rB,EAAY/rB,M,GAhDKk0B,ICC1Bk9B,G,YACnB,aAAwB,MAAZ18D,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,MACN4uB,0BAA2B,CAAC,QAAS,SACrCU,UAAW+a,IAJS,OAOtB,4BAAMvoC,EAAOy/B,KAGRxC,kBAAoB,EAAKkZ,cAAch3C,KAAnB,SAEzB,EAAK+9B,kBAAoB,EAAKiZ,cAAch3C,KAAnB,SAZH,E,2DAeV0d,GACZ,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAsBkE,EAAtBlE,QAASie,EAAa/Z,EAAb+Z,SAEXK,EAAct1B,KAAKu6D,gBAAgBr/C,GAEzClb,KAAKw6D,kBAAkBvlC,EAAUK,GACjCpe,EAAStF,YAAYomD,YAAYhhD,EAASie,K,sCAG5B/Z,GAAW,IACjB+Z,EAAiC/Z,EAAjC+Z,SAAU7d,EAAuB8D,EAAvB9D,MAAOirB,EAAgBnnB,EAAhBmnB,YAErBo4B,EAAaxlC,EAASI,MACtBqlC,EAAczlC,EAASI,MAQ3B,OANIje,EAAM2P,gBAAkB3P,EAAM4P,mBAChCyzC,GAAcrjD,EAAM4P,mBAAqB5P,EAAM2P,gBACtC3P,EAAM4P,mBAAqB5P,EAAM2P,kBAC1C2zC,GAAetjD,EAAM2P,gBAAkB3P,EAAM4P,oBAGxC,CACLtM,EAAG2nB,EAAYW,KAAKtoB,EAAI+/C,EACxBlxD,EAAG84B,EAAYW,KAAKz5B,EAAImxD,K,wCAIVzlC,EAAUK,GAC1BL,EAASK,YAAY5a,GAAK4a,EAAY5a,EACtCua,EAASK,YAAY/rB,GAAK+rB,EAAY/rB,M,GA9CLk0B,I,oBCKtB,YAASxuB,EAASiM,EAAWg0C,EAAe0L,GACzD,IAAMhpD,EAAcsF,EAAStF,YACvBipD,EAAcjpD,EAAYuF,kBAAkB+3C,GAAe93C,MAC3D0jD,EAAiBlpD,EAAYuF,kBAAkByjD,GAAkBxjD,MAGvE,GAAKyjD,GAAgBC,EAArB,CAIA,IAAMloC,EAAmBhhB,EAAY0U,SAAS7pB,IAC5C,mBACAo+D,EAAYnkD,SAERmc,EAAsBjhB,EAAY0U,SAAS7pB,IAC/C,mBACAq+D,EAAepkD,SAIjB,GACGkc,GACAC,GACAD,EAAiBT,YACjBS,EAAiBR,eACjBQ,EAAiB1P,sBACjB2P,EAAoBV,YACpBU,EAAoBT,eACpBS,EAAoB3P,sBAOrB0P,EAAiBmoC,sBACjBloC,EAAoBkoC,oBAFtB,CAOAnoC,EAAiBT,WAAaN,GAAiBe,EAAiBT,YAChES,EAAiBR,cAAgBP,GAC/Be,EAAiBR,eAEnBQ,EAAiB1P,qBAAuB2O,GACtCe,EAAiB1P,sBAEnB2P,EAAoBV,WAAaN,GAC/BgB,EAAoBV,YAEtBU,EAAoBT,cAAgBP,GAClCgB,EAAoBT,eAEtBS,EAAoB3P,qBAAuB2O,GACzCgB,EAAoB3P,sBAItB,IAAMkQ,EAAeR,EAAiBT,WACnCE,QACAgB,MAAMT,EAAiBR,eACpBqB,EAAkBZ,EAAoBV,WACzCE,QACAgB,MAAMR,EAAoBT,eACzB4oC,EAAiB5nC,EAAa6nC,QAAQxnC,GAG1C,MADAunC,EAAiBz3D,KAAKC,IAAIw3D,IACL,IAArB,CAKA,IAAME,ECxEO,SAAStoC,EAAkBC,GACxC,IAAMzB,EAASuB,GAAuBC,EAAkBC,GAExD,GAAKzB,EAIL,MAAO,CACLzR,MAAOqS,GAAgCZ,EAAOzR,MAAOiT,GACrDhT,IAAKoS,GAAgCZ,EAAOxR,IAAKgT,ID+D7BuoC,CACpBvoC,EACAC,GAGF,GAAKqoC,EAAL,CAIA,IAAM56D,EAAQw1B,GAAWM,iBAGzBnnB,EAAQyqB,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEpChB,GAAKzpB,GAAS,SAAAA,GACZ8hB,GACE9hB,EACAiM,EAAUlE,QACVkkD,EAAcv7C,MACdu7C,EAAct7C,IACd,CAAEtf,kBEpGKioC,GAAO,SAAAzkC,GAAE,OAAI,IAAIoN,SAAQ,SAAAC,GAAO,OAAI1K,WAAW0K,EAASrN,OAY9D,SAASs3D,GAAiCpkD,GAC/C,IACE,IAAMC,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAE9D,OAAKC,EAAeG,MAKbH,EAJEsxB,GAAK,KAAK36B,MAAK,kBAAMwtD,GAAiCpkD,MAK/D,MAAOqkD,GAEP,OAAO,MAII9yB,IC9BT1vB,GAASL,EAAU,4BAeJ8iD,G,YACnB,aAAwB,MAAZr9D,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,iBACN2hC,OAAQ,CAAC,+BACTpoB,cAAe,CACb6lD,SAAUC,KALQ,OAStB,4BAAMv9D,EAAOy/B,KAER69B,SAAW,KAChB,EAAK1M,uBAAyB,KAZR,E,6DAeF73C,G,iIAAsC,GAA3B63C,E,EAAAA,uBACzB0M,EAAWv7D,KAAK0V,cAAc6lD,S,oBACPH,GAAiCpkD,I,kBAEtCukD,GAAa1M,E,uBAGnCh2C,GAAOH,KAAP,2BACsB1Y,KAAK7D,KAD3B,0E,0BAMF6D,KAAKu7D,SAAWA,EAChBv7D,KAAK6uD,uBAAyBA,EAE9B7uD,KAAKq4D,iBAAiBrhD,G,yFAGPA,GACfhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACQE,EAAStF,YAAYuF,kBAAkBH,GAE3CI,OACjBF,EAAStF,YAAYkX,YAAY9R,K,qCAItB8D,GAAK,WACZI,EAAYJ,EAAIvG,OAGtB,GAAKvU,KAAKu7D,UAAav7D,KAAK6uD,uBAA5B,CAKA,IAAM3kC,EAAkBlqB,KAAK6uD,uBAAuBI,oBAC9ChgD,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAEtDtiB,EAAStF,YAAY6pD,2BACnBvgD,EAAUjE,eACVhI,GAEFib,EAAgBjkB,SAAQ,SAAAy1D,GAElBA,IAA4B5gD,EAAI8wB,eAKpC,EAAK2vB,SACHtsD,EACAiM,EACAJ,EAAI8wB,cACJ8vB,W,GA1EwCj+B,ICZjC,YAACk+B,EAAIz6C,EAAIC,GACtB,IAAMy6C,EAAMr4D,KAAKkd,KAAKld,KAAKib,IAAIm9C,EAAGjhD,EAAIwG,EAAGxG,EAAG,GAAKnX,KAAKib,IAAIm9C,EAAGpyD,EAAI2X,EAAG3X,EAAG,IACjEsyD,EAAMt4D,KAAKkd,KAAKld,KAAKib,IAAIm9C,EAAGjhD,EAAIyG,EAAGzG,EAAG,GAAKnX,KAAKib,IAAIm9C,EAAGpyD,EAAI4X,EAAG5X,EAAG,IACjEuyD,EAAMv4D,KAAKkd,KAAKld,KAAKib,IAAI0C,EAAGxG,EAAIyG,EAAGzG,EAAG,GAAKnX,KAAKib,IAAI0C,EAAG3X,EAAI4X,EAAG5X,EAAG,IAavE,MAAO,CACL8nB,MARE,IAHD9tB,KAAKioC,MACHjoC,KAAKib,IAAIo9C,EAAK,GAAKr4D,KAAKib,IAAIq9C,EAAK,GAAKt4D,KAAKib,IAAIs9C,EAAK,KAAO,EAAIF,EAAMC,IAGxEt4D,KAAKiuB,GAQLsC,WAJC5S,EAAGxG,EAAIihD,EAAGjhD,IAAMyG,EAAG5X,EAAIoyD,EAAGpyD,IAAM2X,EAAG3X,EAAIoyD,EAAGpyD,IAAM4X,EAAGzG,EAAIihD,EAAGjhD,KCZ1CqhD,G,YACnB,aAAwB,IAAZ99D,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,SACNyhC,WAAY,CACV14B,QAAS24B,GACTm+B,WAAYC,GACZC,SAAUC,IAEZt+B,gBAAiB,UACjB9S,0BAA2B,CAAC,QAAS,SACrCU,UAAWgb,IAVS,iCAahBxoC,EAAOy/B,I,oEAGQ5iB,GACrB9a,KAAKg1B,gBAAkBla,EAAIvG,OAAO0gB,SAASM,W,wCAG3Bza,GAChB9a,KAAKo8D,aAAathD,K,wCAGFA,GAChB9a,KAAKo8D,aAAathD,K,4CAGEA,GACpB9a,KAAKg1B,gBAAkBla,EAAIvG,OAAO0gB,SAASM,W,mCAGhCza,GACXA,EAAIvG,OAAO0gB,SAASD,gBAAkBh1B,KAAKg1B,gBAC3Ch1B,KAAK86B,oBAAoBhgB,GACzB5D,EAAStF,YAAYomD,YAAYl9C,EAAIvG,OAAOyC,QAAS8D,EAAIvG,OAAO0gB,c,GApC5BwI,IAwCxC,SAASI,GAAgB/iB,GACvB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAsBkE,EAAtBlE,QAASie,EAAa/Z,EAAb+Z,SACXD,EAAkBC,EAASD,gBAC7BC,EAASD,gBACT,EAGEb,EAAOnd,EAAQ4gD,sBAAsB5gD,GACtBmE,EAAgCnE,EAA7Cme,YAAkC/Z,EAAWpE,EAAzBoe,aAEvBla,EAAU44B,cACb54B,EAAU44B,YAAc54B,EAAU8M,eAEpC,IAAMq0C,EAAgB,CACpB3hD,EAAGQ,EAAU44B,YAAYwoB,OAAO5hD,EAChCnR,EAAG2R,EAAU44B,YAAYwoB,OAAO/yD,GAE1B8rB,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,YACTinC,EAAe,CACnB7hD,EAAGyZ,EAAKjV,KAAO/D,EAAQ,EAAIma,EAAY5a,EAAI2a,EAC3C9rB,EAAG4qB,EAAK9U,IAAMjE,EAAS,EAAIka,EAAY/rB,EAAI8rB,GAGvCrN,EAAgB,CACpBtN,EAAGQ,EAAU8M,cAAcs0C,OAAO5hD,EAClCnR,EAAG2R,EAAU8M,cAAcs0C,OAAO/yD,GAG9BizD,EAAYC,GAChBF,EACAF,EACAr0C,GAGEw0C,EAAU1oC,UAAY,IACxB0oC,EAAUnrC,OAASmrC,EAAUnrC,OAG/B4D,EAASM,SAAWP,EAAkBwnC,EAAUnrC,MAGlD,IC/FIqrC,GD+FET,GAAqB,SAAAnhD,GACzB,IAAMI,EAAYJ,EAAIvG,OACd0gB,EAA0B/Z,EAA1B+Z,SAAUoN,EAAgBnnB,EAAhBmnB,YAElBpN,EAASM,UAAY8M,EAAYW,KAAKtoB,EAAIua,EAASI,OAG/C8mC,GAAmB,SAAArhD,GACvB,IAAMI,EAAYJ,EAAIvG,OACd0gB,EAA0B/Z,EAA1B+Z,SAAUoN,EAAgBnnB,EAAhBmnB,YAElBpN,EAASM,UAAY8M,EAAYW,KAAKz5B,EAAI0rB,EAASI,OE/FhCsnC,G,YACnB,aAAwB,IAAZ1+D,EAAY,uDAAJ,GAAI,6CAMhBA,EALe,CACnB9B,KAAM,cACN4uB,0BAA2B,CAAC,kB,iEAMZjQ,GAClB,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAgCkE,EAAhClE,QAASie,EAAuB/Z,EAAvB+Z,SAAUM,EAAara,EAAbqa,SAE3BN,EAASM,UAAYA,EACrBre,EAAStF,YAAYomD,YAAYhhD,EAASie,O,GAfDwI,ICHvC5kB,GAASL,EAAU,0BAUJokD,G,YACnB,aAAwB,IAAZ3+D,EAAY,uDAAJ,GAAI,6CAUhBA,EATe,CACnB9B,KAAM,eACNuZ,cAAe,CACbmnD,gBAAiB,KACjBC,gBAAiB,IAEnBh/B,OAAQ,CAAC,kC,6DAMG9mB,GACdhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACfhX,KAAKq4D,iBAAiBrhD,K,uCAGPA,GACQE,EAAStF,YAAYuF,kBAAkBH,GAE3CI,OACjBF,EAAStF,YAAYkX,YAAY9R,K,qCAItB8D,GACb,IAAMI,EAAYJ,EAAIvG,OAEhBtF,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAC9CpiB,EAA6B8D,EAA7B9D,MAAO6d,EAAsB/Z,EAAtB+Z,SAAUje,EAAYkE,EAAZlE,QAErB+P,EAAkB3P,EAAM2P,gBACxBmhB,EAAkB9wB,EAAM4P,mBACtBkL,EAAahb,EAAStF,YAAY0U,SAAS7pB,IAC/C,mBACA2a,EAAMV,SAWR,GARIwb,IACFnL,EACEmL,EAAWnL,iBAAmBmL,EAAW+V,qBAC3CC,EACEhW,EAAWlL,oBAAsBkL,EAAWiW,sBAI3CphB,GAAoBmhB,EAAzB,CAQA,IAAM60B,EAAa,CACjB5hD,MAAOlM,EAAQuqB,OAAOre,MACtBC,OAAQnM,EAAQuqB,OAAOpe,QAInB4hD,EAAyB,GAAOj2C,EAAmBkO,EAASI,MAC5D4nC,EAA2B,GAAO/0B,EAAmBjT,EAASI,MAG9D6nC,EAAeC,GAAmBJ,EAAY,IAAM,KACpDK,EAAeD,GAAmBJ,EAAY,IAAM,KAE1D,GACGA,EAAW5hD,OACX4hD,EAAW3hD,QACX8hD,GACAE,EAJH,CASA,IAAM98D,EAAQw1B,GAAWI,eACnB5F,EAAYL,GAAUE,eAEtBktC,EAAkB/gE,OAAOotB,OAC7B,GACA,CACEwzC,eACAE,eACAE,kBAAmBN,EACnBO,oBAAqBN,EACrBO,aAAc,CACZ79C,MAAO,CACLjF,EAAG0iD,EAAaniD,YAAYP,EAC5BnR,EAAG6zD,EAAapiD,QAAQzR,GAE1BqW,IAAK,CACHlF,EAAG0iD,EAAaniD,YAAYP,EAC5BnR,EAAG6zD,EAAaniD,YAAY1R,IAGhCk0D,eAAgB,CACd99C,MAAO,CACLjF,EAAGwiD,EAAaliD,QAAQN,EACxBnR,EAAG2zD,EAAajiD,YAAY1R,GAE9BqW,IAAK,CACHlF,EAAGwiD,EAAajiD,YAAYP,EAC5BnR,EAAG2zD,EAAajiD,YAAY1R,IAGhCjJ,QACAgwB,aAEFtwB,KAAK0V,eAGPgjB,GAAKzpB,GAAS,SAAAA,GACZ48B,GAAU58B,EAASouD,GAGnBtsC,GACE9hB,EACA+H,EACAqmD,EAAgBG,aAAa79C,MAC7B09C,EAAgBG,aAAa59C,IAC7B,CACEtf,MAAO+8D,EAAgB/8D,MACvBgwB,UAAW+sC,EAAgB/sC,WAE7B,UAEFotC,GAA8BzuD,EAAS+H,EAASqmD,GAGhDtsC,GACE9hB,EACA+H,EACAqmD,EAAgBI,eAAe99C,MAC/B09C,EAAgBI,eAAe79C,IAC/B,CACEtf,MAAO+8D,EAAgB/8D,MACvBgwB,UAAW+sC,EAAgB/sC,WAE7B,UAEFqtC,GAAgC1uD,EAAS+H,EAASqmD,YA9FlDxkD,GAAOH,KAAP,2EACsE1Y,KAAK7D,KAD3E,0B,GApDwCshC,IA8JxC0/B,GAAqB,SACzBJ,EACAa,EACAC,GAEA,IAAMC,EAAaF,EAAsBr6D,KAAK6b,IAAI,IAAM29C,EAAW5hD,OAC7D4iD,EAAaF,EAAoBt6D,KAAK6b,IAAI,IAAM29C,EAAW3hD,QAC3D4iD,EAAe,CACnB9+C,KAAM4+C,EACNz+C,IAAK0+C,EACL5iD,MAAO4hD,EAAW5hD,MAAQ,EAAI2iD,EAC9B1iD,OAAQ2hD,EAAW3hD,OAAS,EAAI2iD,GAGlC,MAAO,CACL/iD,QAAS,CACPN,EAAGsjD,EAAa9+C,KAChB3V,EAAGy0D,EAAa3+C,KAElBpE,YAAa,CACXP,EAAGsjD,EAAa9+C,KAAO8+C,EAAa7iD,MACpC5R,EAAGy0D,EAAa3+C,IAAM2+C,EAAa5iD,UAWnCsiD,GAAgC,SAACzuD,EAAS+H,EAASqmD,GAGvD,IAFA,IAAIzhE,EAAI,EAGNyhE,EAAgBG,aAAa79C,MAAMpW,EACjC3N,EAAIyhE,EAAgBC,mBACtBD,EAAgBD,aAAaniD,YAAY1R,GACzC,KACQjJ,EAAqB+8D,EAArB/8D,MAAOgwB,EAAc+sC,EAAd/sC,UACTie,EAAa,CACjB7zB,EAAG2iD,EAAgBG,aAAa79C,MAAMjF,EACtCnR,EACE8zD,EAAgBG,aAAa79C,MAAMpW,EACnC3N,EAAIyhE,EAAgBC,mBAGlB9uB,EAAW,CACf9zB,EAAG,EACHnR,EACE8zD,EAAgBG,aAAa79C,MAAMpW,EACnC3N,EAAIyhE,EAAgBC,mBAItB9uB,EAAS9zB,EADP9e,EAAI,GAAM,EAEVyhE,EAAgBG,aAAa79C,MAAMjF,EAAI2iD,EAAgBP,gBAGvDO,EAAgBG,aAAa79C,MAAMjF,EAAI2iD,EAAgBR,gBAG3D9rC,GACE9hB,EACA+H,EACAu3B,EACAC,EACA,CACEluC,QACAgwB,aAEF,UAGF10B,MAUE+hE,GAAkC,SAAC1uD,EAAS+H,EAASqmD,GAGzD,IAFA,IAAIzhE,EAAI,EAGNyhE,EAAgBI,eAAe99C,MAAMjF,EACnC9e,EAAIyhE,EAAgBE,qBACtBF,EAAgBH,aAAajiD,YAAYP,GACzC,KACQpa,EAAqB+8D,EAArB/8D,MAAOgwB,EAAc+sC,EAAd/sC,UACTie,EAAa,CACjB7zB,EACE2iD,EAAgBI,eAAe99C,MAAMjF,EACrC9e,EAAIyhE,EAAgBE,oBACtBh0D,EAAG8zD,EAAgBI,eAAe99C,MAAMpW,GAGpCilC,EAAW,CACf9zB,EACE2iD,EAAgBI,eAAe99C,MAAMjF,EACrC9e,EAAIyhE,EAAgBE,oBACtBh0D,EAAG,GAIHilC,EAASjlC,EADP3N,EAAI,GAAM,EAEVyhE,EAAgBI,eAAe99C,MAAMpW,EACrC8zD,EAAgBP,gBAGhBO,EAAgBI,eAAe99C,MAAMpW,EACrC8zD,EAAgBR,gBAGpB9rC,GACE9hB,EACA+H,EACAu3B,EACAC,EACA,CACEluC,QACAgwB,aAEF,UAGF10B,MF9SEqiE,GAA0B,CAC9B/4D,QAAS,EACTg5D,GAAI,CACFC,EAAG,EACHC,GAAI,EACJl5D,QAAS,GAEXm5D,QAAS,CACPn5D,QAAS,GAEXo5D,MAAO,CACLF,GAAI,EACJG,GAAI,EACJC,GAAI,EACJt5D,QAAS,GAEXu5D,OAAQ,CACNv5D,QAAS,GAEXw5D,OAAQ,CACNx5D,QAAS,IAgBb,SAASy5D,KACP,IAIIC,EAJEC,EAAKp9D,UAAUC,UACjBo9D,EACFD,EAAGl+D,MAAM,iEACT,GAGF,MAAI,WAAWmF,KAAKg5D,EAAE,KACpBF,EAAM,kBAAkB70D,KAAK80D,IAAO,GAEpC,aAAaD,EAAI,IAAM,KAGZ,WAATE,EAAE,IAEQ,QADZF,EAAMC,EAAGl+D,MAAM,wBAENi+D,EACJjwD,MAAM,GACNlJ,KAAK,KACL/E,QAAQ,MAAO,UAItBo+D,EAAIA,EAAE,GAAK,CAACA,EAAE,GAAIA,EAAE,IAAM,CAACr9D,UAAUs9D,QAASt9D,UAAUu9D,WAAY,MACxB,QAAvCJ,EAAMC,EAAGl+D,MAAM,qBAClBm+D,EAAEv+D,OAAO,EAAG,EAAGq+D,EAAI,IAGdE,EAAEr5D,KAAK,MAsBhB,SAASw5D,KACP,OAAIvC,IAIGwC,KAUT,SAASA,KACP,IACM1tD,EADamtD,KACKh5D,MAAM,KACxBw5D,EAAc3tD,EAAK,GACnB4tD,EAAiB5tD,EAAK,GACtB6tD,EAAcpB,GAAwBkB,GAE5C,OAAKE,EAIAA,EAAYD,GAIVC,EAAYD,GAHVC,EAAYn6D,QAJZ+4D,GAAwB/4D,QG9GnC,IAAMo6D,GAAc,CAClBC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNC,GAAc,CAClBH,YAAa,EACbC,UAAW,EACXC,SAAU,GAGRE,GAAiB,CACnBJ,YAAa,EACbC,UAAW,EACXC,SAAU,GAGRG,IAAQ,EACNC,GAAY,GAuElB,SAASC,KACFF,IAILn5D,YAAW,WACTs5D,OACCF,IAGL,SAASG,GAAYC,GACnB,IAAMruD,EAAcsF,EAAStF,YAEvBrQ,EAAO0+D,EAAe1+D,KAE5Bm+D,GAAYn+D,KAEZq+D,IAAQ,EACR,IAAMlpD,EAAUupD,EAAevpD,QACzBk5B,EAAeqwB,EAAerwB,aAC9BswB,EAAeD,EAAeC,aAG9BC,EAAkBvuD,EAAYwuD,WAAWC,mBAAmB3pD,GAElE,GAAIypD,EAGFA,EAAgBG,QAAQ1yD,MACtB,SAASwJ,GACPsoD,GAAYn+D,KAGZquC,EAAax4B,GACb0oD,QAEF,SAAS7+D,GACPy+D,GAAYn+D,KAEZ2+D,EAAaj/D,GACb6+D,YAfN,CAgCA,IAAMS,EAVN,SAAmCN,GACjC,MAA4B,aAAxBA,EAAe1+D,MACT,EACyB,gBAAxB0+D,EAAe1+D,KACjB,EAC0B,cAAxB0+D,EAAe1+D,KACjB,OADF,EAKQi/D,CAA0BP,KAIP,IAAhCA,EAAerQ,aACRh+C,EAAYi+C,UAAUn5C,EAAS,CACtC6pD,WACAh/D,KAAM0+D,EAAe1+D,OAGdqQ,EAAY+U,kBAAkBjQ,EAAS,CAC9C6pD,WACAh/D,KAAM0+D,EAAe1+D,QAKlBqM,MACL,SAASwJ,GACPsoD,GAAYn+D,KAEZquC,EAAax4B,GACb0oD,QAEF,SAAS7+D,GACPy+D,GAAYn+D,KAEZ2+D,EAAaj/D,GACb6+D,SAKN,SAASC,KAEP,IAAM9B,EAA0BgB,KAEhCU,GAAiB,CACfJ,YAAah8D,KAAKsc,IAAIo+C,EAAyB,GAC/CuB,UAAWj8D,KAAKsc,IAAIo+C,EAA0B,EAAG,GACjDwB,SAAUl8D,KAAKsc,IAAIo+C,EAA0B,EAAG,IAOlD,IAJA,IAEMwC,EAAiBxC,GADrByB,GAAYH,YAAcG,GAAYF,UAAYE,GAAYD,UAGvD7jE,EAAI,EAAGA,EAAI6kE,EAAgB7kE,IAAK,CACvC,IAAMqkE,EAAiBS,KAEnBT,GACFD,GAAYC,IAKlB,SAASS,KACP,OACEpB,GAAYC,YAAYrhE,QACxBwhE,GAAYH,YAAcI,GAAeJ,YAElCD,GAAYC,YAAYlxC,QAI/BixC,GAAYE,UAAUthE,QACtBwhE,GAAYF,UAAYG,GAAeH,UAEhCF,GAAYE,UAAUnxC,QAI7BixC,GAAYG,SAASvhE,QACrBwhE,GAAYD,SAAWE,GAAeF,SAE/BH,GAAYG,SAASpxC,SAI3BixC,GAAYC,YAAYrhE,QACxBohE,GAAYE,UAAUthE,QACtBohE,GAAYG,SAASvhE,SAEtB0hE,IAAQ,IAGH,GAOM,QACbe,WA5NF,SACE3pD,EACAN,EACAnV,EACAquD,EACAhgB,EACAswB,EACAU,GAEA,IAAKtB,GAAY7hE,eAAe8D,GAC9B,MAAM,IAAI4D,MACR,mEAIJ,GAAK6R,GAAYN,EAAjB,CAKA,IAAMupD,EAAiB,CACrB1+D,OACAmV,UACAk5C,eACAhgB,eACAswB,gBAIIC,EAAkBjpD,EAAStF,YAAYwuD,WAAWC,mBACtD3pD,GAGEypD,EACFA,EAAgBG,QAAQ1yD,MACtB,SAASwJ,GACPw4B,EAAax4B,MAEf,SAASnW,GACPi/D,EAAaj/D,OAOf2/D,EAEFtB,GAAY/9D,GAAM0C,QAAQg8D,GAG1BX,GAAY/9D,GAAMmD,KAAKu7D,GAIzBL,IAAQ,KAsKRiB,kBAnKF,SAA2Bt/D,GAEzB,IAAK+9D,GAAY7hE,eAAe8D,GAC9B,MAAM,IAAI4D,MACR,mEAIJm6D,GAAY/9D,GAAQ,IA4JpBw+D,iBACAe,eARF,WACE,OAAOxB,KChOM,YAAStoD,EAASq4C,GAC/B,IAAMl3C,EAAWF,EAAajB,EAAS,SAEvC,GAAKmB,GAAaA,EAASvB,MAASuB,EAASvB,KAAK1Y,OAAlD,CAIA,IAEI6iE,EAFEnvD,EAAcsF,EAAStF,YAI7B,GAAIuG,EAASvB,KAAK1Y,OAAS,EAAG,CAC5B,IAAM8iE,EAAoB/oD,EAAajB,EAAS,iBAG9CgqD,GACAA,EAAkBpqD,MAClBoqD,EAAkBpqD,KAAK1Y,SAEvB6iE,EAAgBC,EAAkBpqD,KAAK,IAI3C,IAAM4C,EAAYrB,EAASvB,KAAK,GAG5By4C,EAAkB,IACpBA,GAAmB71C,EAAUP,SAAS/a,QAGxC,IAAMuxD,EAAsBxB,GAAmBG,oBAAoBp3C,GAC7D04C,EAAoBzB,GAAmBK,kBAAkBt3C,GACzD24C,EAAsB1B,GAAmBO,uBAC7Cx3C,GAqCF,GAAIq4C,IAAoB71C,EAAUC,oBAAlC,CAIIg2C,GACFA,EAAoBz4C,GAGtB,IAAMkE,EAAY,CAChBm0C,kBACAv7B,UAAWu7B,EAAkB71C,EAAUC,qBAGzCD,EAAUC,oBAAsB41C,EAChC,IAAM4R,EAAaznD,EAAUP,SAASo2C,IAiBjBnlB,QAAQ1wB,EAAUo2C,cAKtBh+C,EAAYi+C,UAAUoR,GAEtBrvD,EAAY+U,kBAAkBs6C,IAGlCrzD,MA3Eb,SAAsBwJ,GACpB,GAAIoC,EAAUC,sBAAwB41C,EAAtC,CAMA,IAEEz9C,EAAYuF,kBAAkBH,GAC9B,MAAO/V,GACP,OAGE8/D,GACFA,EAActnD,oBAAsB41C,EACpC0R,EAAcG,OAAOlqD,EAASmB,EAASvB,OAEvChF,EAAYk+C,aAAa94C,EAASI,GAGhCs4C,GACFA,EAAkB14C,EAASI,OAI/B,SAAsBnW,GACpB,IAAMyV,EAAU8C,EAAUP,SAASo2C,GAE/BM,GACFA,EAAoB34C,EAASN,EAASzV,MA+C1CkgE,GAAmBpB,gBAEnB3rD,EAAa4C,EAAS/E,EAAO+B,aAAckH,MCnH9B,YAASlE,EAAS6L,GAA4C,IAApCslC,EAAoC,wDAAtBiZ,IAAsB,yDACrEjpD,EAAWF,EAAajB,EAAS,SAEvC,GAAKmB,GAAaA,EAASvB,MAASuB,EAASvB,KAAK1Y,OAAlD,CAIA,IAAMsb,EAAYrB,EAASvB,KAAK,GAE3B4C,EAAUgxB,UACbhxB,EAAUgxB,QAAU,IAGtB,IAAI6kB,EAAkB71C,EAAUC,oBAAsBoJ,EAEtD,GAAIslC,EAAM,CACR,IAAMkZ,EAAW7nD,EAAUP,SAAS/a,OAEpCmxD,GAAmBgS,OAEnBhS,EAAkBxvB,GAAKwvB,EAAiB,EAAG71C,EAAUP,SAAS/a,OAAS,GAGzE,GAAIkjE,EACFE,GAActqD,EAASq4C,OAClB,CACL,IAAMkS,EAAe,CACnB/gE,MAAO6uD,GAGT71C,EAAUgxB,QAAQ9lC,KAAK68D,GACvBC,GAAsBhoD,EAAW+nD,EAAcvqD,MAenD,SAASwqD,GAAsBhoD,EAAW+nD,EAAcvqD,GACtD,GAAIwC,EAAUgxB,QAAQ,KAAO+2B,EAAc,CACzC,GAAI/nD,EAAUC,sBAAwB8nD,EAAa/gE,MAOjD,OANAgZ,EAAUgxB,QAAQjqC,OAAOiZ,EAAUgxB,QAAQ7lC,QAAQ48D,GAAe,QAE9D/nD,EAAUgxB,QAAQtsC,OAAS,GAC7BsjE,GAAsBhoD,EAAWA,EAAUgxB,QAAQ,GAAIxzB,IAsB3DA,EAAQgqB,iBACN9pB,EAAStF,YAAYK,OAAOwvD,WAjBN,SAAlBC,EAA2BptD,GACjBkF,EAAUP,SAAStU,QAAQ2P,EAAMC,OAAO6C,MAAMV,WAE9C6qD,EAAa/gE,QACzBgZ,EAAUgxB,QAAQjqC,OAAOiZ,EAAUgxB,QAAQ7lC,QAAQ48D,GAAe,GAClEvqD,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOwvD,UAC5BC,GAGEloD,EAAUgxB,QAAQtsC,OAAS,GAC7BsjE,GAAsBhoD,EAAWA,EAAUgxB,QAAQ,GAAIxzB,OAU7DsqD,GAActqD,EAASuqD,EAAa/gE,Q,ICpFnBmhE,G,YACnB,aAAwB,IAAZ1jE,EAAY,uDAAJ,GAAI,6CAWhBA,EAVe,CACnB9B,KAAM,wBACN4uB,0BAA2B,CAAC,cAC5BrV,cAAe,CACbyyC,MAAM,EACNiZ,eAAe,EACf50B,QAAQ,M,gEAOK1xB,GAAK,MACiBA,EAAIvG,OAAxBsO,EADG,EACdiR,UAAmB9c,EADL,EACKA,QADL,EAEkBhX,KAAK0V,cAArCyyC,EAFc,EAEdA,KAAMiZ,EAFQ,EAERA,cAAe50B,EAFP,EAEOA,OAG7Bo1B,GAAO5qD,EAFWw1B,GAAU3pB,EAASA,EAEVslC,EAAMiZ,O,GApBkB3jC,ICXjDokC,GAAqB,GAc3B,SAASC,GAAenrD,EAAUK,GAChC,IAAK6qD,GAAmBlrD,GACtB,MAAO,GAGT,IACMorD,EADcF,GAAmBlrD,GACLuU,MAChC,SAAA82C,GAAgB,OAAIA,EAAiBhrD,UAAYA,KAGnD,OAAK+qD,EAIEA,EAAcn4D,QAHZ,GAkBX,SAASq4D,GAAetrD,EAAUK,EAASpN,GACzC,GAAKi4D,GAAmBlrD,GAAxB,CAWA,IACMnW,EADcqhE,GAAmBlrD,GACburD,WACxB,SAAAF,GAAgB,OAAIA,EAAiBhrD,UAAYA,KAGnD,IAAe,IAAXxW,EACFqhE,GAAmBlrD,GAAUjS,KAAK,CAChCsS,UACApN,gBAEG,CACL,IAAMu4D,EAAiBN,GAAmBlrD,GAAUnW,GAAOoJ,SAAW,GAEtEi4D,GAAmBlrD,GAAUnW,GAAOoJ,QAAUtN,OAAOotB,OACnDy4C,EACAv4D,SAzBFi4D,GAAmBlrD,GAAY,CAC7B,CACEK,UACApN,Y,ICnCaw4D,G,YACnB,aAAwB,MAAZnkE,EAAY,uDAAJ,GAAI,mBAWtB,4BAAMA,EAVe,CACnB9B,KAAM,wBACN4uB,0BAA2B,CAAC,cAC5BrV,cAAe,CACbyyC,MAAM,EACNiZ,eAAe,EACf1yC,cAAe,OAKd2rC,uBAAyB,EAAKjmB,cAAch3C,KAAnB,SAZR,E,2DAeV0d,GACZ,IAAMI,EAAYJ,EAAIvG,OAEtB,GAAI2G,EAAUo/C,cAAgBt6D,KAAK0V,cAAcgZ,cAAe,KACtD1X,EAAyBkE,EAAzBlE,QAASqrB,EAAgBnnB,EAAhBmnB,YAD6C,EAE9BriC,KAAK0V,cAA7ByyC,EAFsD,EAEtDA,KAAMiZ,EAFgD,EAEhDA,cACRx3D,EAAUk4D,GAAe9hE,KAAK7D,KAAM6a,GAEpCqrD,EAAiBriE,KAAKsiE,kBAAkBtrD,GACxCurD,EAASviE,KAAKwiE,WAAWxrD,EAASqrB,EAAYW,KAAKz5B,GAEzD,IAAK84D,EACH,OAGF,GAAI9+D,KAAKC,IAAI++D,IAAWF,EAAgB,CACtC,IAAMI,EAAqBl/D,KAAKoG,MAAM44D,EAASF,GAE/CT,GAAO5qD,EAASyrD,EAAoBta,EAAMiZ,GAE1Cx3D,EAAQ24D,OAASA,EAASF,OAE1Bz4D,EAAQ24D,OAASA,EAGnBN,GAAejiE,KAAK7D,KAAM6a,EAASpN,M,iCAI5BoN,EAAS0rD,GAIlB,OAHgBZ,GAAe9hE,KAAK7D,KAAM6a,GACnBurD,QAAU,GAEjBG,I,wCAGA1rD,GAChB,IAAMmB,EAAWF,EAAajB,EAAS,SAEvC,GAAKmB,GAAaA,EAASvB,MAASuB,EAASvB,KAAK1Y,OAAlD,CAIA,IAAMsb,EAAYrB,EAASvB,KAAK,GAIhC,OAH6B5W,KAAK0V,cAA1BitD,kBAKNp/D,KAAKsc,IAAI,EAAG7I,EAAQ4rD,aAAer/D,KAAKsc,IAAIrG,EAAUP,SAAS/a,OAAQ,S,GAjEtBu/B,ICClColC,G,YACnB,aAAwB,MAAZ5kE,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,cACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbyyC,MAAM,EACNiZ,eAAe,GAEjB31C,UAAWib,IARS,OAWtB,4BAAMzoC,EAAOy/B,KAERvC,kBAAoB,EAAKiZ,cAAch3C,KAAnB,SACzB,EAAK89B,kBAAoB,EAAKkZ,cAAch3C,KAAnB,SAdH,E,2DAiBV0d,GACZ,IAAMI,EAAYJ,EAAIvG,OACdyC,EAAyBkE,EAAzBlE,QAASqrB,EAAgBnnB,EAAhBmnB,YAFA,EAGeriC,KAAK0V,cAA7ByyC,EAHS,EAGTA,KAAMiZ,EAHG,EAGHA,cACRx3D,EAAUk4D,GAAe9hE,KAAK7D,KAAM6a,GAEpCqrD,EAAiBriE,KAAKsiE,kBAAkBtrD,GACxCurD,EAASviE,KAAKwiE,WAAWxrD,EAASqrB,EAAYW,KAAKz5B,GAEzD,GAAK84D,EAAL,CAIA,GAAI9+D,KAAKC,IAAI++D,IAAWF,EAAgB,CACtC,IAAMI,EAAqBl/D,KAAKoG,MAAM44D,EAASF,GAE/CT,GAAO5qD,EAASyrD,EAAoBta,EAAMiZ,GAE1Cx3D,EAAQ24D,OAASA,EAASF,OAE1Bz4D,EAAQ24D,OAASA,EAGnBN,GAAejiE,KAAK7D,KAAM6a,EAASpN,M,iCAG1BoN,EAAS0rD,GAIlB,OAHgBZ,GAAe9hE,KAAK7D,KAAM6a,GACnBurD,QAAU,GAEjBG,I,wCAGA1rD,GAChB,IAAMmB,EAAWF,EAAajB,EAAS,SAEvC,GAAKmB,GAAaA,EAASvB,MAASuB,EAASvB,KAAK1Y,OAAlD,CAIA,IAAMsb,EAAYrB,EAASvB,KAAK,GAIhC,OAH6B5W,KAAK0V,cAA1BitD,kBAKNp/D,KAAKsc,IAAI,EAAG7I,EAAQ4rD,aAAer/D,KAAKsc,IAAIrG,EAAUP,SAAS/a,OAAQ,S,GAhEhCu/B,ICA9B,YAASzmB,EAAS0D,EAAGnR,EAAG4R,EAAOC,GAC5C,IAAKpE,EACH,MAAM,IAAI7R,MAAM,yDAGlBuV,EAAInX,KAAKoG,MAAM+Q,GACfnR,EAAIhG,KAAKoG,MAAMJ,GACf,IAKIqR,EAASgsC,EAAKC,EAJZzvC,EADiBF,EAAStF,YAAYuF,kBAAkBH,GACjCI,MACvB0rD,EAAY,GACdtiE,EAAQ,EACNuZ,EAAY3C,EAAMiQ,eAGxB,GAAIjQ,EAAM9W,MACR,IAAKsmD,EAAM,EAAGA,EAAMxrC,EAAQwrC,IAC1B,IAAKC,EAAS,EAAGA,EAAS1rC,EAAO0rC,IAAU,CAEzC,IAAME,EAAMhtC,EADZa,EAAuD,IAA3CgsC,EAAMr9C,GAAK6N,EAAMmD,SAAWssC,EAASnsC,KAE3CssC,EAAQjtC,EAAUa,EAAU,GAC5BqsC,EAAOltC,EAAUa,EAAU,GAEjCkoD,EAAUtiE,KAAW,MAASumD,EAAM,MAASC,EAAQ,MAASC,OAIlE,IAAKL,EAAM,EAAGA,EAAMxrC,EAAQwrC,IAC1B,IAAKC,EAAS,EAAGA,EAAS1rC,EAAO0rC,IAC/BjsC,GAAWgsC,EAAMr9C,GAAK6N,EAAMmD,SAAWssC,EAASnsC,GAChDooD,EAAUtiE,KAAWuZ,EAAUa,GAAWxD,EAAM4+B,MAAQ5+B,EAAM6+B,UAKpE,OAAO6sB,GC/BYC,G,YAEnB,aAAwB,MAAZ9kE,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,aACN4uB,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbstD,eAAgB,IAElBv3C,UAAWkb,IAPS,OAUtB,4BAAM1oC,EAAOy/B,KACRnD,gBAOL,EAAKQ,uBAAyB,EAAKP,sBAAsBp9B,KAA3B,SAG9B,EAAK89B,kBAAoB,EAAKP,qBAAqBv9B,KAA1B,SAGzB,EAAKi+B,iBAAmB,EAAKX,eAAet9B,KAApB,SAOxB,EAAK49B,sBAAwB,EAAKR,sBAAsBp9B,KAA3B,SAG7B,EAAK69B,mBAAqB,EAAKT,sBAAsBp9B,KAA3B,SAG1B,EAAK+9B,kBAAoB,EAAKR,qBAAqBv9B,KAA1B,SAGzB,EAAKg+B,kBAAoB,EAAKT,qBAAqBv9B,KAA1B,SAGzB,EAAKk+B,gBAAkB,EAAKZ,eAAet9B,KAApB,SA3CD,E,4DAqDT0d,GAAK,WACZI,EAAYJ,EAAIvG,OACdyC,EAAYkE,EAAZlE,QACF1W,EAAQw1B,GAAWO,iBAAiB,CAAEC,QAAQ,IAC9CrnB,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAEtDd,GAAKzpB,GAAS,SAAAA,GACZqtB,GAASrtB,EAAS+H,EAAS,EAAKuI,QAAQI,MAAO,EAAKJ,QAAQK,IAAK,CAC/Dtf,e,4CAYgBwa,GACpB,IACM9D,EAAU8D,EAAIvG,OAAOyC,QACrBI,EAAQ0D,EAAIvG,OAAOyT,cAAc5Q,MAWvC,OATIqjB,GAAez6B,KAAKuf,QAAQI,OAC9B3f,KAAKuf,QAAQI,MAAQvI,GAErBpX,KAAKuf,QAAQK,IAAMxI,EACnBpX,KAAK06B,eAAe5f,IAGtB5D,EAAStF,YAAYkX,YAAY9R,IAXZ,I,2CAwBF8D,GACnB,IAAM9D,EAAU8D,EAAIvG,OAAOyC,QACrBI,EAAQ0D,EAAIvG,OAAOyT,cAAc5Q,MAEvCpX,KAAKuf,QAAQK,IAAMxI,EACnBF,EAAStF,YAAYkX,YAAY9R,K,qCAWpB8D,GAEX2f,GAAez6B,KAAKuf,QAAQI,QAC5B8a,GAAez6B,KAAKuf,QAAQK,OAK9B9E,EAAIvG,OAAOgL,QAAUvf,KAAKuf,QAC1B0jD,GAAiBnoD,EAAK9a,KAAK0V,eAC3B1V,KAAKu6B,mB,sCAWLv6B,KAAKuf,QAAU,CACbI,MAAO,GACPC,IAAK,Q,GA3IiC6d,IAwJtChD,GAAiB,SAAA96B,GAAG,OACI,IAA5BrD,OAAO0J,KAAKrG,GAAKzB,QAAgByB,EAAIV,cAAgB3C,QAYjD2mE,GAAmB,SAASnoD,EAAK40B,GACrC,IAAMx0B,EAAYJ,EAAIvG,OACd6C,EAAmB8D,EAAnB9D,MAAOJ,EAAYkE,EAAZlE,QAF8B,EAGA8D,EAAIvG,OAAOgL,QAAzCgvB,EAH8B,EAGrC5uB,MAAwB6uB,EAHa,EAGlB5uB,IAGvBV,EAAO3b,KAAK6b,IAAImvB,EAAW7zB,EAAG8zB,EAAS9zB,GACvC2E,EAAM9b,KAAK6b,IAAImvB,EAAWhlC,EAAGilC,EAASjlC,GACtC4R,EAAQ5X,KAAKC,IAAI+qC,EAAW7zB,EAAI8zB,EAAS9zB,GACzCU,EAAS7X,KAAKC,IAAI+qC,EAAWhlC,EAAIilC,EAASjlC,GAG9C2V,EAAO2gB,GAAK3gB,EAAM,EAAG9H,EAAM+D,OAC3BkE,EAAMwgB,GAAKxgB,EAAK,EAAGjI,EAAMgE,QACzBD,EAAQ5X,KAAK4b,MAAM5b,KAAK6b,IAAIjE,EAAO5X,KAAKC,IAAI4T,EAAM+D,MAAQ+D,KAC1D9D,EAAS7X,KAAK4b,MAAM5b,KAAK6b,IAAIhE,EAAQ7X,KAAKC,IAAI4T,EAAMgE,OAASiE,KAG7D,IAAM6jD,EAAqBC,GAAansD,EAASkI,EAAMG,EAAKlE,EAAOC,GAG7DgoD,EAAaC,GACjBH,EACA9rD,EAAMksD,cACNlsD,EAAMmsD,eAIFtuC,EAAW/Z,EAAU+Z,cAEGvqB,IAA1BglC,EAAOszB,iBACTtzB,EAAOszB,eAAiB,IAG1B/tC,EAASuuC,IAAIC,YAAclgE,KAAKsc,IAC9Btc,KAAKC,IAAI4/D,EAAWvjD,IAAMujD,EAAWhkD,KACrCswB,EAAOszB,gBAET/tC,EAASuuC,IAAIE,aAAeN,EAAWx7C,KAEvC1Q,EAAStF,YAAYomD,YAAYhhD,EAASie,GAC1C/d,EAAStF,YAAYkX,YAAY9R,IAa7BqsD,GAAuB,SAASM,EAAgBC,EAAWC,GAC/D,IAAMC,EAAYH,EAAezlE,OAC7BkhB,EAAMykD,EACNhkD,EAAM+jD,EACNn8C,EAAM,EAEV,GAAIq8C,EAAY,EACd,MAAO,CACL1kD,MACAS,MACA+H,MAAOg8C,EAAYC,GAAa,GAIpC,IAAK,IAAIrjE,EAAQ,EAAGA,EAAQsjE,EAAWtjE,IAAS,CAC9C,IAAMujE,EAAMJ,EAAenjE,GAE3B4e,EAAM7b,KAAK6b,IAAIA,EAAK2kD,GACpBlkD,EAAMtc,KAAKsc,IAAIA,EAAKkkD,GACpBt8C,GAAOs8C,EAGT,MAAO,CACL3kD,MACAS,MACA+H,KAAMH,EAAMq8C,ICzPKE,G,YACnB,aAAwB,IAAZ/lE,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,OACNyhC,WAAY,CAAEqmC,0BACdl5C,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACbyoC,YAAa,GAEf1yB,UAAWmb,IARS,iCAWhB3oC,EAAOy/B,I,+DAGG5iB,GAChB9a,KAAK86B,oBAAoBhgB,GACzB5D,EAAStF,YAAYomD,YAAYl9C,EAAIvG,OAAOyC,QAAS8D,EAAIvG,OAAO0gB,Y,wCAGhDna,GAEhBA,EAAIipB,2BACJ/jC,KAAK86B,oBAAoBhgB,GACzB5D,EAAStF,YAAYomD,YAAYl9C,EAAIvG,OAAOyC,QAAS8D,EAAIvG,OAAO0gB,c,GAxB9BwI,IAsCtC,SAASwmC,GAAsBnpD,GAAK,IAC1BqjC,EAAgBn+C,KAAK0V,cAArByoC,YACFjjC,EAAYJ,EAAIvG,OAShBswB,GANJ3pB,EAAU9D,MAAMmsD,cAAgBroD,EAAU9D,MAAM4+B,MAChD96B,EAAU9D,MAAM6+B,WAEhB/6B,EAAU9D,MAAMksD,cAAgBpoD,EAAU9D,MAAM4+B,MAChD96B,EAAU9D,MAAM6+B,YAEqB,KAEjCiuB,EAAShpD,EAAUmnB,YAAYW,KAAKtoB,EAAImqB,EACxC09B,EAASrnD,EAAUmnB,YAAYW,KAAKz5B,EAAIs7B,EAE1B,IAAhBsZ,GACFjjC,EAAU+Z,SAASuuC,IAAIC,aAAeS,EACtChpD,EAAU+Z,SAASuuC,IAAIE,cAAgBnB,IAEvCrnD,EAAU+Z,SAASuuC,IAAIC,aAAelB,EACtCrnD,EAAU+Z,SAASuuC,IAAIE,cAAgBQ,GC5D5B,gBAASjvC,EAAUkvC,EAAOC,GAAa,IAC5CC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAGZC,EADYhhE,KAAKb,IAAIuyB,EAASI,OAAS9xB,KAAKb,IADtC,KAEeyhE,EACrB9uC,EAAQ9xB,KAAKib,IAHP,IAGgB+lD,GAU5B,OAPEtvC,EAASI,MADPgvC,GAAYhvC,EAAQgvC,EACLA,EACRC,GAAYjvC,EAAQivC,EACZA,EAEAjvC,EAGZJ,GCnBM,IACbuvC,uBACAC,aCAa,SAASp2C,EAAOq2C,GAAqB,IAC1CxqC,EAA2BwqC,EAA3BxqC,MAAOC,EAAoBuqC,EAApBvqC,MAAO5E,EAAamvC,EAAbnvC,SAOtB,GAJAlH,EAAM3T,GAAKwf,GAAS,EAAI,EACxB7L,EAAM9kB,GAAK4wB,GAAS,EAAI,EAGP,IAAb5E,EAAgB,CAClB,IAAMlE,EAASkE,EAAWhyB,KAAKiuB,GAAM,IAE/BmzC,EAAOphE,KAAKguB,IAAIF,GAChBuzC,EAAOrhE,KAAKkuB,IAAIJ,GAEhBwzC,EAAOx2C,EAAM3T,EAAIiqD,EAAOt2C,EAAM9kB,EAAIq7D,EAClCE,EAAOz2C,EAAM3T,EAAIkqD,EAAOv2C,EAAM9kB,EAAIo7D,EAExCt2C,EAAM3T,EAAImqD,EACVx2C,EAAM9kB,EAAIu7D,EAGZ,OAAOz2C,IClBY02C,G,YACnB,aAAwB,IAAZ9mE,EAAY,uDAAJ,GAAI,6CAWhBA,EAVe,CACnB9B,KAAM,iBACN4uB,0BAA2B,CAAC,cAC5BrV,cAAe,CACb4uD,SAAU,IACVD,SAAU,GACV73B,QAAQ,M,gEAOK1xB,GAAK,MACeA,EAAIvG,OAAjCyC,EADc,EACdA,QAASie,EADK,EACLA,SAAU+vC,EADL,EACKA,MADL,EAEiBhlE,KAAK0V,cAApC82B,EAFc,EAEdA,OAAQ63B,EAFM,EAENA,SAAUC,EAFJ,EAEIA,SAGpBW,EAAkBT,GAAoBvvC,EAF9BuX,EAASw4B,EAAQ,GAAKA,EAAQ,EAEiB,CAC3DX,WACAC,aAGFptD,EAAStF,YAAYomD,YAAYhhD,EAASiuD,O,GAzBExnC,ICNxCgnC,GAAsCS,GAAtCT,aAAcD,GAAwBU,GAAxBV,oBAUDW,G,YACnB,aAAwB,IAAZlnE,EAAY,uDAAJ,GAAI,YACtB,IAAMy/B,EAAe,CACnBvhC,KAAM,OACNyhC,WAAY,CACV14B,QAAS24B,GACTzD,UAAWgrC,GACXC,aAAcC,IAEhBznC,gBAAiB,UACjB9S,0BAA2B,CAAC,QAAS,SACrCrV,cAAe,CACb82B,QAAQ,EACR+4B,yBAAyB,EACzBjB,SAAU,IACVD,SAAU,IAEZ54C,UAAWob,IAhBS,iCAmBhB5oC,EAAOy/B,I,+DAGG5iB,GAChBshD,GAAargE,KAAKiE,KAAM8a,K,wCAGRA,GAChBshD,GAAargE,KAAKiE,KAAM8a,O,GA5BU2iB,IAgChC2+B,GAAe,SAASthD,GAG5B,IAFeA,EAAIvG,OAAO8tB,YAAYW,KAAKz5B,EAGzC,OAAO,EAGTvJ,KAAK86B,oBAAoBhgB,EAAK9a,KAAK0V,eACnCwB,EAAStF,YAAYomD,YAAYl9C,EAAIvG,OAAOyC,QAAS8D,EAAIvG,OAAO0gB,WAWlE,SAAS4I,GAAgB/iB,GAAK,MACW9a,KAAK0V,cAApC82B,EADoB,EACpBA,OAAQ63B,EADY,EACZA,SAAUC,EADE,EACFA,SACpB/B,EAASznD,EAAIvG,OAAO8tB,YAAYW,KAAKz5B,EACrC46D,EAAQ33B,GAAU+1B,EAAS,IAAMA,EAAS,IAHpB,EAIEznD,EAAIvG,OAA1ByC,EAJoB,EAIpBA,QAASie,EAJW,EAIXA,SAJW,EAKa,CACvCna,EAAIvG,OAAOu/B,YAAY9Q,KAAKtoB,EAC5BI,EAAIvG,OAAOu/B,YAAY9Q,KAAKz5B,EAC5BuR,EAAIvG,OAAOu/B,YAAY18B,MAAMsD,EAC7BI,EAAIvG,OAAOu/B,YAAY18B,MAAM7N,GAJxBqlC,EALqB,KAKbC,EALa,KAKL22B,EALK,KAKGC,EALH,KAatBR,EAAkBT,GAAoBvvC,EAAUkvC,EAAO,CAC3DE,WACAC,aAGFptD,EAAStF,YAAYomD,YAAYhhD,EAASiuD,GAI1C,IAAMS,EAAYxuD,EAAStF,YAAYsxB,YAAYlsB,EAAS43B,EAAQC,GAKhExgB,EAAQ,CACV3T,EAAG8qD,EAASE,EAAUhrD,EACtBnR,EAAGk8D,EAASC,EAAUn8D,GAIxB8kB,EAAQo2C,GAAap2C,EAAO42C,GAG5BhwC,EAASK,YAAY5a,GAAK2T,EAAM3T,EAChCua,EAASK,YAAY/rB,GAAK8kB,EAAM9kB,EAGlC,SAAS67D,GAAkBtqD,GAAK,MAM1B9a,KAAK0V,cAJP82B,EAF4B,EAE5BA,OACA+4B,EAH4B,EAG5BA,wBACAlB,EAJ4B,EAI5BA,SACAC,EAL4B,EAK5BA,SAEI/B,EAASznD,EAAIvG,OAAO8tB,YAAYW,KAAKz5B,EACrC46D,EAAQ33B,GAAU+1B,EAAS,IAAMA,EAAS,IAC1CnrD,EAAQ0D,EAAIvG,OAAO6C,MACnB6d,EAAWna,EAAIvG,OAAO0gB,SAVE,EAWL,CACvBna,EAAIvG,OAAOu/B,YAAY18B,MAAMsD,EAC7BI,EAAIvG,OAAOu/B,YAAY18B,MAAM7N,GAFxBqlC,EAXuB,KAWfC,EAXe,KAoBxBo2B,EAAkBT,GAAoBvvC,EAAUkvC,EAAO,CAC3DE,WACAC,aAIIj2C,EAAQ,CACZ3T,EAAG,EACHnR,EAAG,GAQL,GAAI46D,EAAQ,EAENc,EAAgB5vC,MALc,IAQ5B9xB,KAAKC,IAAIyhE,EAAgB3vC,YAAY5a,GAPtB,IAQjBuqD,EAAgB3vC,YAAY5a,EAAI,EAEhC2T,EAAM3T,EAAIuqD,EAAgB3vC,YAAY5a,EAZrB,EAiBfnX,KAAKC,IAAIyhE,EAAgB3vC,YAAY/rB,GAftB,IAgBjB07D,EAAgB3vC,YAAY/rB,EAAI,EAEhC8kB,EAAM9kB,EAAI07D,EAAgB3vC,YAAY/rB,EApBrB,OAuBhB,CAMDg8D,GACFvlC,GAAUllB,EAAIvG,OAAOu/B,YAAY18B,MAAOA,GAK1C,IAAIuuD,EAAqB,CACvBjrD,EAAGtD,EAAM+D,MAAQ,EAAIyzB,EACrBrlC,EAAG6N,EAAMgE,OAAS,EAAIyzB,GAIxB82B,EAAqBlB,GAAakB,EAAoBV,GAItD,IAAMW,EAAoB,CACxBlrD,EAAGuqD,EAAgB3vC,YAAY5a,EAAIirD,EAAmBjrD,EACtDnR,EAAG07D,EAAgB3vC,YAAY/rB,EAAIo8D,EAAmBp8D,GAKpDhG,KAAKC,IAAIoiE,EAAkBlrD,GAlDV,IAmDnBuqD,EAAgB3vC,YAAY5a,EAAIirD,EAAmBjrD,EAGnD2T,EAAM3T,EAAIkrD,EAAkBlrD,EAxDT,EA6DjBnX,KAAKC,IAAIoiE,EAAkBr8D,GA3DV,IA4DnB07D,EAAgB3vC,YAAY/rB,EAAIo8D,EAAmBp8D,EAGnD8kB,EAAM9kB,EAAIq8D,EAAkBr8D,EAjET,EAsEvB07D,EAAgB3vC,YAAY5a,GAAK2T,EAAM3T,EACvCuqD,EAAgB3vC,YAAY/rB,GAAK8kB,EAAM9kB,EAGzC,SAAS+7D,GAAqBxqD,GAAK,MACM9a,KAAK0V,cAApC82B,EADyB,EACzBA,OAAQ63B,EADiB,EACjBA,SAAUC,EADO,EACPA,SACpB/B,EAASznD,EAAIvG,OAAO8tB,YAAYW,KAAKz5B,EACrC46D,EAAQ33B,GAAU+1B,EAAS,IAAMA,EAAS,IAC1CttC,EAAWna,EAAIvG,OAAO0gB,SAG5BuvC,GAAoBvvC,EAAUkvC,EAAO,CACnCE,WACAC,a,IC1NIG,GAAiBS,GAAjBT,aAWaoB,G,YACnB,aAAwB,IAAZ5nE,EAAY,uDAAJ,GAAI,6CAWhBA,EAVe,CACnB9B,KAAM,iBAEN4uB,0BAA2B,CAAC,cAC5BrV,cAAe,CACb4uD,SAAU,IACVD,SAAU,O,gEAOGvpD,GAAK,MACqBA,EAAIvG,OAAvCyC,EADc,EACdA,QAASie,EADK,EACLA,SAAU6wC,EADL,EACKA,YADL,EAEqC,CACzDhrD,EAAIvG,OAAOu/B,YAAY9Q,KAAKtoB,EAC5BI,EAAIvG,OAAOu/B,YAAY9Q,KAAKz5B,EAC5BuR,EAAIvG,OAAOu/B,YAAY18B,MAAMsD,EAC7BI,EAAIvG,OAAOu/B,YAAY18B,MAAM7N,GAJxBw8D,EAFe,KAEHC,EAFG,KAESC,EAFT,KAEsBC,EAFtB,OAQSlmE,KAAK0V,cAA5B2uD,EARc,EAQdA,SAAUC,EARI,EAQJA,SAGlBrvC,EAASI,OAASywC,EAAc7wC,EAASI,MACrCgvC,GAAYpvC,EAASI,MAAQgvC,EAC/BpvC,EAASI,MAAQgvC,EACRC,GAAYrvC,EAASI,MAAQivC,IACtCrvC,EAASI,MAAQivC,GAGnBptD,EAAStF,YAAYomD,YAAYhhD,EAASie,GAI1C,IAAMywC,EAAYxuD,EAAStF,YAAYsxB,YACrClsB,EACA+uD,EACAC,GAEE33C,EAAQ,CACV3T,EAAGurD,EAAcP,EAAUhrD,EAC3BnR,EAAG28D,EAAcR,EAAUn8D,GAG7B8kB,EAAQo2C,GAAap2C,EAAO4G,GAC5BA,EAASK,YAAY5a,GAAK2T,EAAM3T,EAChCua,EAASK,YAAY/rB,GAAK8kB,EAAM9kB,EAChC2N,EAAStF,YAAYomD,YAAYhhD,EAASie,O,GAlDEwI,ICPjC,YAASrM,GAMtB,MAAO,CACL4R,KANWmjC,GAAM/0C,EAAO4R,MAOxB5rB,MANY+uD,GAAM/0C,EAAOha,OAOzBklD,OANa6J,GAAM/0C,EAAOkrC,QAO1B9iC,OANa2sC,GAAM/0C,EAAOoI,UAkB9B,SAAS2sC,KAAqB,6DAAJ,GACxB,MAAO,CACLzrD,EAF0B,EAAbA,EAGbnR,EAH0B,EAAVA,GCxBpB,IAGI68D,GAHEvtD,GAASL,EAAU,sCAErB6tD,IAAe,EAEbC,GAAa,IAEnB,SAASC,GAAgBjyD,GACvB,GAA6B,iBAAlBA,EAAMgtB,QACf,OAAOhtB,EAAMgtB,QAGf,OAAQhtB,EAAMkyD,OAEZ,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAGX,OAAO,EAGT,SAASC,KACPJ,IAAe,EAGjB,SAASK,GAAiBhgE,GACxB,IAAMsQ,EAAUtQ,EAAEklC,cACZ30B,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAE9D,GAAKC,EAAeG,MAApB,CAIA,IAAMgrB,EAAYnwB,EAAOO,mBAEnBshC,EAAc,CAClB9Q,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,GACjD0Q,MAAOF,EAAStF,YAAYsxB,YAAYlsB,EAAStQ,EAAEkgE,MAAOlgE,EAAEmgE,OAC5DvK,OAAQ,CACN5hD,EAAGhU,EAAEogE,QACLv9D,EAAG7C,EAAEqgE,UAITjzB,EAAYta,OAAStiB,EAAStF,YAAYqf,cACxCja,EACA88B,EAAY18B,OAGd,IAAM4vD,EAAaC,GAAWnzB,GAE9Bj7B,GAAOnW,IAAI,mBAAoB6jE,GAAgB7/D,IAiB/C0N,EAAa4C,EAASorB,EAhBJ,CAChB9tB,MAAO5N,EACP46B,QAASilC,GAAgB7/D,GACzBuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,cACAkzB,aACAh/C,cAAe8rB,EACfzR,YAAa,CACX3nB,EAAG,EACHnR,EAAG,GAELhI,KAAM6gC,KAMV,SAAS8kC,GAAUxgE,GACjB,IAAMsQ,EAAUtQ,EAAEklC,cACZ30B,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAE9D,GAAKC,EAAeG,MAApB,CAIAgvD,GAAsB3/D,WAAWggE,GAAqBH,IAGtDtvD,EAAQ+pB,oBAAoB,YAAaomC,IAEzC,IAAMrzB,EAAc,CAClB9Q,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,GACjD0Q,MAAOF,EAAStF,YAAYsxB,YAAYlsB,EAAStQ,EAAEkgE,MAAOlgE,EAAEmgE,OAC5DvK,OAAQ,CACN5hD,EAAGhU,EAAEogE,QACLv9D,EAAG7C,EAAEqgE,UAITjzB,EAAYta,OAAStiB,EAAStF,YAAYqf,cACxCja,EACA88B,EAAY18B,OAGd,IAAI4vD,EAAaC,GAAWnzB,GAEtB54B,EAAY,CAChB5G,MAAO5N,EACP46B,QAASilC,GAAgB7/D,GACzBuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,cACAkzB,aACAh/C,cAAe8rB,EACfzR,YAAa,CACX3nB,EAAG,EACHnR,EAAG,GAELhI,KAAM0Q,EAAOC,YAGSkC,EACtB8G,EAAUlE,QACV/E,EAAOC,WACPgJ,KAKAA,EAAU3Z,KAAO0Q,EAAOG,oBACxBgC,EAAa8G,EAAUlE,QAAS/E,EAAOG,oBAAqB8I,IAqI9DtZ,SAASo/B,iBAAiB,YAAaomC,GACvCxlE,SAASo/B,iBAAiB,WAtE1B,SAASqmC,EAAU3gE,GAEjBC,aAAay/D,IAEb,IAAIhkC,EAAYnwB,EAAOE,SAEnBk0D,KACFjkC,EAAYnwB,EAAOM,aAIrB,IAAMyV,EAAgB,CACpBgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,GACjD0Q,MAAOF,EAAStF,YAAYsxB,YAAYlsB,EAAStQ,EAAEkgE,MAAOlgE,EAAEmgE,OAC5DvK,OAAQ,CACN5hD,EAAGhU,EAAEogE,QACLv9D,EAAG7C,EAAEqgE,UAIT/+C,EAAcwR,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,EAAc5Q,OAIhB,IAAMirB,EAAc,CAClBW,KAAM9rB,EAASrF,gBAAgB8I,MAAM2sD,SACnCt/C,EAAcgb,KACdgkC,EAAWhkC,MAEb5rB,MAAOF,EAASrF,gBAAgB8I,MAAM2sD,SACpCt/C,EAAc5Q,MACd4vD,EAAW5vD,OAEbklD,OAAQplD,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,EAAcs0C,OACd0K,EAAW1K,QAEb9iC,OAAQtiB,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,EAAcwR,OACdwtC,EAAWxtC,SAIf3gB,GAAOnW,IAAI,cAAe6jE,GAAgB7/D,IAC1C,IAAMwU,EAAY,CAChB5G,MAAO5N,EACP46B,QAASilC,GAAgB7/D,GACzBuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,cACAkzB,aACAh/C,gBACAqa,cACA9gC,KAAM6gC,GAGRhuB,EAAa8G,EAAUlE,QAASorB,EAAWlnB,GAE3CtZ,SAASm/B,oBAAoB,YAAaqmC,GAC1CxlE,SAASm/B,oBAAoB,UAAWsmC,GAExCrwD,EAAQgqB,iBAAiB,YAAammC,IAEtCd,IAAe,KA/HjB,SAASe,EAAY1gE,GAEnB,IAAM07B,EAAYnwB,EAAOI,WACnB2V,EAAgB,CACpBgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,GACjD0Q,MAAOF,EAAStF,YAAYsxB,YAAYlsB,EAAStQ,EAAEkgE,MAAOlgE,EAAEmgE,OAC5DvK,OAAQ,CACN5hD,EAAGhU,EAAEogE,QACLv9D,EAAG7C,EAAEqgE,UAIT/+C,EAAcwR,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,EAAc5Q,OAIhB,IAAMirB,EAAc,CAClBW,KAAM9rB,EAASrF,gBAAgB8I,MAAM2sD,SACnCt/C,EAAcgb,KACdgkC,EAAWhkC,MAEb5rB,MAAOF,EAASrF,gBAAgB8I,MAAM2sD,SACpCt/C,EAAc5Q,MACd4vD,EAAW5vD,OAEbklD,OAAQplD,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,EAAcs0C,OACd0K,EAAW1K,QAEb9iC,OAAQtiB,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,EAAcwR,OACdwtC,EAAWxtC,SAIf3gB,GAAOnW,IAAI,gBAAiB6jE,GAAgB7/D,IAC5C,IAAMwU,EAAY,CAChBomB,QAASilC,GAAgB7/D,GACzBuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,cACAkzB,aACAh/C,gBACAqa,cACA9gC,KAAM6gC,EACNlB,QAASx6B,EAAEw6B,QACXqmC,QAAS7gE,EAAE6gE,QACXC,SAAU9gE,EAAE8gE,UAGdpzD,EAAa8G,EAAUlE,QAASorB,EAAWlnB,GAG3C8rD,EAAaC,GAAWj/C,IA8E5B,SAASm/C,GAAUzgE,GACjB,IAAMsQ,EAAUtQ,EAAEklC,cACZ30B,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAE9D,GAAKC,EAAeG,MAApB,CAIA,IAAMgrB,EAAYnwB,EAAOK,WAEnBwhC,EAAc,CAClB9Q,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,GACjD0Q,MAAOF,EAAStF,YAAYsxB,YAAYlsB,EAAStQ,EAAEkgE,MAAOlgE,EAAEmgE,OAC5DvK,OAAQ,CACN5hD,EAAGhU,EAAEogE,QACLv9D,EAAG7C,EAAEqgE,UAITjzB,EAAYta,OAAStiB,EAAStF,YAAYqf,cACxCja,EACA88B,EAAY18B,OAGd,IAAI4vD,EAAaC,GAAWnzB,GAGtB9rB,EAAgB,CACpBgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,GACjD0Q,MAAOF,EAAStF,YAAYsxB,YAAYlsB,EAAStQ,EAAEkgE,MAAOlgE,EAAEmgE,OAC5DvK,OAAQ,CACN5hD,EAAGhU,EAAEogE,QACLv9D,EAAG7C,EAAEqgE,UAIT/+C,EAAcwR,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,EAAc5Q,OAIhB,IAAMirB,EAAc,CAClBW,KAAM9rB,EAASrF,gBAAgB8I,MAAM2sD,SACnCt/C,EAAcgb,KACdgkC,EAAWhkC,MAEb5rB,MAAOF,EAASrF,gBAAgB8I,MAAM2sD,SACpCt/C,EAAc5Q,MACd4vD,EAAW5vD,OAEbklD,OAAQplD,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,EAAcs0C,OACd0K,EAAW1K,QAEb9iC,OAAQtiB,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,EAAcwR,OACdwtC,EAAWxtC,SAefplB,EAAa4C,EAASorB,EAXJ,CAChBnN,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,cACAkzB,aACAh/C,gBACAqa,cACA9gC,KAAM6gC,IAMR4kC,EAAaC,GAAWj/C,IAG1B,SAAS3iB,GAAQ2R,GACfA,EAAQ+pB,oBAAoB,YAAammC,IACzClwD,EAAQ+pB,oBAAoB,YAAaomC,IACzCnwD,EAAQ+pB,oBAAoB,WAAY2lC,IAY3B,QACbhhE,OAVF,SAAgBsR,GAEd3R,GAAQ2R,GAERA,EAAQgqB,iBAAiB,YAAakmC,IACtClwD,EAAQgqB,iBAAiB,YAAammC,IACtCnwD,EAAQgqB,iBAAiB,WAAY0lC,KAKrCrhE,YCrWa,YAASiP,GACtB,IAAImzD,EAAQ,EACVzC,EAAQ,EACR0C,EAAS,EACTC,EAAS,EA8CX,MA3CI,WAAYrzD,IACd0wD,EAAQ1wD,EAAMC,QAEZ,eAAgBD,IAClB0wD,GAAS1wD,EAAMszD,WAAa,KAE1B,gBAAiBtzD,IACnB0wD,GAAS1wD,EAAMuzD,YAAc,KAE3B,gBAAiBvzD,IACnBmzD,GAASnzD,EAAMwzD,YAAc,KAG/BJ,EAjCiB,GAiCRD,EACTE,EAlCiB,GAkCR3C,EAEL,WAAY1wD,IACdqzD,EAASrzD,EAAMiuD,QAEb,WAAYjuD,IACdozD,EAASpzD,EAAM4vD,SAGZwD,GAAUC,IAAWrzD,EAAMyzD,YACN,IAApBzzD,EAAMyzD,WAERL,GA7Cc,GA8CdC,GA9Cc,KAiDdD,GAhDc,IAiDdC,GAjDc,MAsDdD,IAAWD,IACbA,EAAQC,EAAS,GAAK,EAAI,GAExBC,IAAW3C,IACbA,EAAQ2C,EAAS,GAAK,EAAI,GAGrB,CACLF,QACAzC,QACA0C,SACAC,WCnDJ,SAASK,GAAkBltD,GACzB,IAAM9D,EAAU8D,EAAI8wB,cACd30B,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAE9D,GAAKC,EAAeG,SAOhB0D,EAAIynD,QAAU,GAAKznD,EAAIynD,OAAS,GAApC,CAIAznD,EAAI4nB,iBAf0B,IAiBtBkkC,EAAiB9rD,EAAjB8rD,MAAOC,EAAU/rD,EAAV+rD,MACToB,EAAiB/wD,EAAStF,YAAYsxB,YAC1ClsB,EACA4vD,EACAC,GArB4B,EAuBWqB,GAAeptD,GAAhD2sD,EAvBsB,EAuBtBA,MAAOzC,EAvBe,EAuBfA,MAAO0C,EAvBQ,EAuBRA,OAAQC,EAvBA,EAuBAA,OACxB7zC,EAAYkxC,EAAQ,GAAK,EAAI,EAE7BmD,EAAiB,CACrBnxD,UACAie,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CzC,OAAQuG,EACR1D,MAAOH,EAAeG,MACtB0c,YACA2zC,QACAzC,QACA0C,SACAC,SACAf,QACAC,QACArB,OAAQyC,EAAevtD,EACvB+qD,OAAQwC,EAAe1+D,GAGzB6K,EAAa4C,EAAS/E,EAAOQ,YAAa01D,IAwB5C,SAAS9iE,GAAQ2R,GACfA,EAAQ+pB,oBAAoB,QAASinC,GAAmB,CAAEI,SAAS,IAGtD,IC7EXC,GAAqBC,GD6EV,IACb5iE,OAlBF,SAAgBsR,GACd3R,GAAQ2R,GACRA,EAAQgqB,iBAAiB,QAASgnC,GAAmB,CAAEI,SAAS,KAiBhE/iE,YCrFIkjE,GAAiB,IACrBC,GAAc,CACZ7mC,MAAO,EACPC,MAAO,GAKX,SAAS6mC,GAAUlnE,EAAMmF,GACvB,IAAMgjC,EAAM7lC,KAAK6lC,MAEjB,GAAInoC,IAAS8mE,GAAqB,CAChC,GAAI3+B,EAAM4+B,IAAuBC,GAK/B,OAJA7hE,EAAEg8B,iBACFh8B,EAAEi8B,kBACFj8B,EAAEq9B,4BAEK,EAGTskC,GAAsB9mE,EAGxB+mE,GAAsB5+B,EAMxB,IAAMg/B,GAAiBD,GAAUrrE,KAAK,KAAMorE,GAAY7mC,OAClDgnC,GAAiBF,GAAUrrE,KAAK,KAAMorE,GAAY5mC,OAExD,SAASgnC,GAAa5xD,EAAS6xD,EAAWv8C,GACxC,IAAMw8C,EAAax8C,EAAkBo8C,GAAiBC,GAEtDE,EAAU5iE,SAAQ,SAAS8iE,GACzB/xD,EAAQgqB,iBAAiB+nC,EAAWD,EAAY,CAAEV,SAAS,OAI/D,SAASY,GAAahyD,EAAS6xD,EAAWv8C,GACxC,IAAMw8C,EAAax8C,EAAkBo8C,GAAiBC,GAEtDE,EAAU5iE,SAAQ,SAAS8iE,GACzB/xD,EAAQ+pB,oBAAoBgoC,EAAWD,MAI3C,IAAMG,GAAc,CAAC,YAAa,WAC5BC,GAAc,CAAC,aAAc,YAEnC,SAAS7jE,GAAQ2R,GACfgyD,GAAahyD,EAASiyD,GAAaT,GAAY7mC,OAC/CqnC,GAAahyD,EAASkyD,GAAaV,GAAY5mC,OASlC,IC3DXkS,GACF9rB,GACAg/C,GACA3kC,GACAnnB,GACAiuD,GACAC,GACAC,GAMAC,GD8Ca,IACb5jE,OAPF,SAAgBsR,GACd3R,GAAQ2R,GACR4xD,GAAa5xD,EAASiyD,GAAaT,GAAY7mC,OAC/CinC,GAAa5xD,EAASkyD,GAAaV,GAAY5mC,QAK/Cv8B,YCpDEkkE,GAAY,EACdC,GAAe,EACfC,IAAmB,EACnBC,IAAU,EAGNC,GAAa,IACjBC,GAAmB,EAEfjzD,GAAW,aAEjB,SAASkzD,GAAQnjE,GACf,IAAMsQ,EAAUtQ,EAAEklC,eAAiBllC,EAAEojE,SAASl+B,cACxC30B,EAAiBC,EAAStF,YAAYuF,kBAAkBH,GAE9D,GAAKC,EAAeG,MAApB,CAIA,IAAIgrB,EAAW0jC,EAAaiE,EAA0Bx0C,EActD,OAXA7uB,EAAEg8B,kBAICh8B,EAAEsjE,UAAYtjE,EAAEsjE,SAAS9rE,OAAS,GAClCwI,EAAEujE,SAAWvjE,EAAEujE,QAAQ/rE,OAAS,KAEjCwrE,IAAU,EACV/iE,aAAayiE,KAGP1iE,EAAEnF,MACR,IAAK,MACHmoE,IAAU,EACV/iE,aAAayiE,KAGbphD,GAAgB,CACdgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEsjE,SAAS,IAC5D5yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEsjE,SAAS,GAAGpD,MACdlgE,EAAEsjE,SAAS,GAAGnD,OAEhBvK,OAAQ,CACN5hD,EAAGhU,EAAEsjE,SAAS,GAAGlD,QACjBv9D,EAAG7C,EAAEsjE,SAAS,GAAGjD,WAGPvtC,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,GAAc5Q,OAGhBgrB,EAAYnwB,EAAOiB,IACnBgI,GAAY,CACV5G,MAAO5N,EACPuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACAgR,iBACAzmB,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,IACjC,MAEF,IAAK,YACHwuD,IAAU,EACV/iE,aAAayiE,KAGbphD,GAAgB,CACdgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEsjE,SAAS,IAC5D5yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEsjE,SAAS,GAAGpD,MACdlgE,EAAEsjE,SAAS,GAAGnD,OAEhBvK,OAAQ,CACN5hD,EAAGhU,EAAEsjE,SAAS,GAAGlD,QACjBv9D,EAAG7C,EAAEsjE,SAAS,GAAGjD,WAGPvtC,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,GAAc5Q,OAGhBgrB,EAAYnwB,EAAOkB,WACnB+H,GAAY,CACV5G,MAAO5N,EACPuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACAgR,iBACAzmB,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,IACjC,MAEF,IAAK,aACHwuD,IAAU,EACV/iE,aAAayiE,IAEbG,GAAY,EACZ,MAEF,IAAK,YAIH,GAHAG,IAAU,EACV/iE,aAAayiE,KAEY,IAArBK,GAA2B,CAC7BF,GAAY7iE,EAAE2uB,MACdo0C,IAAmB,EACnB,MAGF3D,GAAep/D,EAAE2uB,MAAQk0C,IAAaA,IAEtCz1B,GAAc,CACZ9Q,KAAMt8B,EAAEirB,OACRva,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEirB,OAAOjX,EACThU,EAAEirB,OAAOpoB,KAGDiwB,OAAStiB,EAAStF,YAAYqf,cACxCja,EACA88B,GAAY18B,OAGdgrB,EAAYnwB,EAAOc,YACnBmI,GAAY,CACV5G,MAAO5N,EACPotC,eACA7e,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA8c,UAAWptB,EAAE2uB,MAAQ,EAAI,GAAK,EAC9BywC,cACAvkE,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,IAEjCquD,GAAY7iE,EAAE2uB,MACd,MAEF,IAAK,aACHk0C,GAAY,EAEZ5iE,aAAayiE,IAEbziE,aAAawiE,IACbA,GAAkB1iE,YAAW,YAC3BqtC,GAAc,CACZ9Q,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEujE,QAAQ,IAC3D7yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEujE,QAAQ,GAAGrD,MACblgE,EAAEujE,QAAQ,GAAGpD,OAEfvK,OAAQ,CACN5hD,EAAGhU,EAAEujE,QAAQ,GAAGnD,QAChBv9D,EAAG7C,EAAEujE,QAAQ,GAAGlD,WAGRvtC,OAAStiB,EAAStF,YAAYqf,cACxCja,EACA88B,GAAY18B,OAGdgrB,EAAYnwB,EAAOS,YACfhM,EAAEujE,QAAQ/rE,OAAS,IACrBkkC,EAAYnwB,EAAOmB,mBAGrB8H,GAAY,CACV5G,MAAO5N,EACPuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,eACA9rB,cAAe8rB,GACfvyC,KAAM6gC,EACNmuB,cAAc,IAKQ,IAFAn8C,EAAa4C,EAASorB,EAAWlnB,MAQvDknB,EAAYnwB,EAAOU,mBACfjM,EAAEujE,QAAQ/rE,OAAS,IACrBkkC,EAAYnwB,EAAOoB,0BAGrB6H,GAAU3Z,KAAO6gC,EACjBhuB,EAAa4C,EAASorB,EAAWlnB,KAInC8rD,GAAaC,GAAWnzB,MACvB,IAEH41B,IAAU,EACVL,GAAoB,EACpBD,GAAe3iE,YAAW,WACnBijE,MAIL1hD,GAAgB,CACdgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEujE,QAAQ,IAC3D7yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEujE,QAAQ,GAAGrD,MACblgE,EAAEujE,QAAQ,GAAGpD,OAEfvK,OAAQ,CACN5hD,EAAGhU,EAAEujE,QAAQ,GAAGnD,QAChBv9D,EAAG7C,EAAEujE,QAAQ,GAAGlD,WAGNvtC,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACA88B,GAAY18B,OAGdgrB,EAAYnwB,EAAOgB,YACnBiI,GAAY,CACV5G,MAAO5N,EACPuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACAgR,iBACAzmB,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,OAGhCyuD,IACH,MAEF,IAAK,WACHJ,GAAY,EAEZG,IAAU,EACV/iE,aAAayiE,IAEb3iE,YAAW,YACTqtC,GAAc,CACZ9Q,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEwjE,eAAe,IAClE9yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEwjE,eAAe,GAAGtD,MACpBlgE,EAAEwjE,eAAe,GAAGrD,OAEtBvK,OAAQ,CACN5hD,EAAGhU,EAAEwjE,eAAe,GAAGpD,QACvBv9D,EAAG7C,EAAEwjE,eAAe,GAAGnD,WAGfvtC,OAAStiB,EAAStF,YAAYqf,cACxCja,EACA88B,GAAY18B,OAGdgrB,EAAYnwB,EAAOW,UAEnBsI,GAAY,CACV5G,MAAO5N,EACPuuB,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,eACA9rB,cAAe8rB,GACfvyC,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,MAChC,IACH,MAEF,IAAK,UAKH6uD,EAAQ,CACNrvD,EAAGhU,EAAEw9D,OAASoF,GAAU5uD,EACxBnR,EAAG7C,EAAE67D,OAAS+G,GAAU//D,GAG1B+/D,GAAY,CACV5uD,EAAGhU,EAAEw9D,OACL36D,EAAG7C,EAAE67D,SAIPv6C,GAAgB,CACdgb,KAAM,CACJtoB,EAAGssD,GAAWhkC,KAAKtoB,EAAIqvD,EAAMrvD,EAC7BnR,EAAGy9D,GAAWhkC,KAAKz5B,EAAIwgE,EAAMxgE,GAE/B6N,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAgwD,GAAWhkC,KAAKtoB,EAAIqvD,EAAMrvD,EAC1BssD,GAAWhkC,KAAKz5B,EAAIwgE,EAAMxgE,GAE5B+yD,OAAQ,CACN5hD,EAAGssD,GAAW1K,OAAO5hD,EAAIqvD,EAAMrvD,EAC/BnR,EAAGy9D,GAAW1K,OAAO/yD,EAAIwgE,EAAMxgE,KAGrBiwB,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,GAAc5Q,OAIhBirB,GAAc,CACZW,KAAM9rB,EAASrF,gBAAgB8I,MAAM2sD,SACnCt/C,GAAcgb,KACdgkC,GAAWhkC,MAEb5rB,MAAOF,EAASrF,gBAAgB8I,MAAM2sD,SACpCt/C,GAAc5Q,MACd4vD,GAAW5vD,OAEbklD,OAAQplD,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,GAAcs0C,OACd0K,GAAW1K,QAEb9iC,OAAQtiB,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,GAAcwR,OACdwtC,GAAWxtC,UAIf6vC,IAAqB9lE,KAAKkd,KACxB4hB,GAAYW,KAAKtoB,EAAI2nB,GAAYW,KAAKtoB,EACpC2nB,GAAYW,KAAKz5B,EAAI84B,GAAYW,KAAKz5B,IAGlBqgE,KAEtBF,IAAU,EACV/iE,aAAayiE,KAGfhnC,EAAYnwB,EAAOY,WACfnM,EAAEsjE,SAAS9rE,OAAS,IACtBkkC,EAAYnwB,EAAOqB,kBAGrB4H,GAAY,CACV+Z,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,eACAkzB,cACAh/C,iBACAqa,eACAi4B,YAAa5zD,EAAEsjE,SAAS9rE,OACxBqD,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,IAEjC8rD,GAAaC,GAAWj/C,IACxB,MAEF,IAAK,WACHshD,GAAY,CACV5uD,EAAGhU,EAAEw9D,OACL36D,EAAG7C,EAAE67D,SAGPv6C,GAAgB,CACdgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEsjE,SAAS,IAC5D5yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEsjE,SAAS,GAAGpD,MACdlgE,EAAEsjE,SAAS,GAAGnD,OAEhBvK,OAAQ,CACN5hD,EAAGhU,EAAEsjE,SAAS,GAAGlD,QACjBv9D,EAAG7C,EAAEsjE,SAAS,GAAGjD,WAGPvtC,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,GAAc5Q,OAEhB4vD,GAAaC,GAAWj/C,IACxB,MAEF,IAAK,SAMH,GALA0hD,IAAU,EACV/iE,aAAayiE,KAIRpC,GACH,OAAO,GAGTh/C,GAAgB,CACdgb,KAAM9rB,EAASrF,gBAAgB8I,MAAMgsD,YAAYjgE,EAAEsjE,SAAS,IAC5D5yD,MAAOF,EAAStF,YAAYsxB,YAC1BlsB,EACAtQ,EAAEsjE,SAAS,GAAGpD,MACdlgE,EAAEsjE,SAAS,GAAGnD,OAEhBvK,OAAQ,CACN5hD,EAAGhU,EAAEsjE,SAAS,GAAGlD,QACjBv9D,EAAG7C,EAAEsjE,SAAS,GAAGjD,WAGPvtC,OAAStiB,EAAStF,YAAYqf,cAC1Cja,EACAgR,GAAc5Q,OAIhBirB,GAAc,CACZW,KAAM9rB,EAASrF,gBAAgB8I,MAAM2sD,SACnCt/C,GAAcgb,KACdgkC,GAAWhkC,MAEb5rB,MAAOF,EAASrF,gBAAgB8I,MAAM2sD,SACpCt/C,GAAc5Q,MACd4vD,GAAW5vD,OAEbklD,OAAQplD,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,GAAcs0C,OACd0K,GAAW1K,QAEb9iC,OAAQtiB,EAASrF,gBAAgB8I,MAAM2sD,SACrCt/C,GAAcwR,OACdwtC,GAAWxtC,SAIf4I,EAAYnwB,EAAOa,eAEnBoI,GAAY,CACV5G,MAAO5N,EAAEojE,SACT70C,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACA88B,eACAkzB,cACAh/C,iBACAqa,eACA9gC,KAAM6gC,EACNmuB,cAAc,GAGhBn8C,EAAa4C,EAASorB,EAAWlnB,IAIP,IAFNxU,EAAEsjE,SAAS9rE,OAASwI,EAAEyjE,gBAAgBjsE,SAGxDurE,IAAmB,GAErB,MAEF,IAAK,aACHC,IAAU,EACV/iE,aAAayiE,IAEb7zC,EAAW7uB,EAAE6uB,SAAWi0C,GAExBA,GAAe9iE,EAAE6uB,SAEjB6M,EAAYnwB,EAAOe,aACnBkI,GAAY,CACV5G,MAAO5N,EAAEojE,SACT70C,SAAU/d,EAAStF,YAAYsjB,YAAYle,GAC3CI,MAAOH,EAAeG,MACtBJ,UACAue,WACAh0B,KAAM6gC,GAERhuB,EAAa4C,EAASorB,EAAWlnB,IAIrC,OAAO,GAiET,SAAS7V,GAAQ2R,GACfozD,GAAkB/kE,QAAQ2R,GAEN,CAAC,aAAc,YAEvB/Q,SAAQ,SAAAm8B,GAClBprB,EAAQ+pB,oBAAoBqB,EAAWynC,OAGzC,IACMQ,EADUvI,GAAenrD,GAAUK,GACtBszD,OAEfD,GACFA,EAAGhiE,IACD,wEACAwhE,IAMN,IAKeU,GALI,CACjB7kE,OApFF,SAAgBsR,GACd3R,GAAQ2R,GACR,IAAMlF,EAASoF,EAASpF,OAElB04D,EAAgB,CACpBC,WAAY34D,EAAO44D,uBACf54D,EAAO64D,kBACP74D,EAAO84D,YAGPP,EAAK,IAAIv4D,EAAO+4D,QAAQ7zD,EAASwzD,GAEjCM,EAAa,CACjBd,SAAU,EACVl2C,UAAWhiB,EAAOi5D,cAClBC,UAAW,GAGPC,EAAM,IAAIn5D,EAAOo5D,IAAIJ,GACrBK,EAAQ,IAAIr5D,EAAOs5D,MAAM,CAC7BJ,UAAW,IAEP3wC,EAAS,IAAIvoB,EAAOu5D,OAAO,CAC/BL,UAAW,IAGbG,EAAMG,cAAcL,GACpBE,EAAMG,cAAcjxC,GACpBA,EAAOixC,cAAcL,GAErB,IAAMM,EAAY,IAAIz5D,EAAO05D,IAAI,CAC/Bl3D,MAAO,YACPm3D,KAAM,EACNC,SAAU,KACVV,UAAW,GACXW,aAAc,KAGhBJ,EAAUD,cAAcL,GAGxBZ,EAAGhzD,IAAI,CAACk0D,EAAWN,EAAK5wC,EAAQ8wC,IAChCd,EAAGniE,GACD,wEACA2hE,IAGFO,GAAkB1kE,OAAOsR,GAEL,CAAC,aAAc,YAEvB/Q,SAAQ,SAAAm8B,GAClBprB,EAAQgqB,iBAAiBoB,EAAWynC,GAAS,CAAEzB,SAAS,OAG1D,IAAMx+D,EAAUk4D,GAAenrD,GAAUK,GAEzCpN,EAAQ0gE,OAASD,EAEjBpI,GAAetrD,GAAUK,EAASpN,IA0BlCvE,YC1lBI86B,GAAqBxqB,GAAU,gBAEtB,SAASi2D,GACtB9wD,EACA3B,EACA+M,EACA3Q,EACAs2D,IAgEK,SAAoB/wD,EAAKgxD,EAAgBD,GAAkB,IACxDn2D,EAAkByqB,GAAlBzqB,cACFwF,EAAYJ,EAAIvG,OAChBtF,EAAUwsB,GAAcvgB,EAAUwgB,cAAclC,QAEhDuyC,EAAgB70D,EAAStF,YAAYqf,cAAc/V,EAAUlE,QAAS,CAC1E0D,EAAG,EACHnR,EAAG,IAGCyiE,EAAiB90D,EAAStF,YAAYqf,cAAc/V,EAAUlE,QAAS,CAC3E0D,EAAGQ,EAAU9D,MAAM+D,MACnB5R,EAAG,IAGC0iE,EAAoB/0D,EAAStF,YAAYqf,cAC7C/V,EAAUlE,QACV,CACE0D,EAAGQ,EAAU9D,MAAM+D,MACnB5R,EAAG2R,EAAU9D,MAAMgE,SAIjB8wD,EAAyBh1D,EAASrF,gBAAgB8I,MAAMsE,SAC5D8sD,EACAC,GAEIG,EAA0Bj1D,EAASrF,gBAAgB8I,MAAMsE,SAC7D+sD,EACAC,GAGIzyC,EAASte,EAAUwgB,cAAclC,OACjCvE,EAAW/Z,EAAU+Z,SAErBm3C,EAAgCn9D,EAAQo9D,sBACxCC,EAAsBr9D,EAAQ0jD,YAEpC1jD,EAAQo9D,uBAAwB,EAChCp9D,EAAQ0jD,YAAckZ,EAClBn2D,EAAc2P,UACd3P,EAAc4P,kBAElBinD,GAAuBt9D,EAASuqB,EAAQvE,GAExC,IAAMu3C,EAyBR,SAAsCtxD,GAAW,IACvC+Z,EAAoB/Z,EAApB+Z,SAAU7d,EAAU8D,EAAV9D,MAEdqjD,EAAaxlC,EAASI,MACtBqlC,EAAczlC,EAASI,MAEvBje,EAAM2P,gBAAkB3P,EAAM4P,mBAChCyzC,GAAcrjD,EAAM4P,mBAAqB5P,EAAM2P,gBACtC3P,EAAM4P,mBAAqB5P,EAAM2P,kBAC1C2zC,GAAetjD,EAAM2P,gBAAkB3P,EAAM4P,oBAG/C,MAAO,CACLtM,EAAGua,EAASK,YAAY5a,EAAI+/C,EAC5BlxD,EAAG0rB,EAASK,YAAY/rB,EAAImxD,GAvCI+R,CAA6BvxD,GAE/DjM,EAAQuoD,UACNsU,EACAtyC,EAAOre,MAAQ,EAAI+wD,EAAyB,EAAIM,EAA0B9xD,EAC1E8e,EAAOpe,OAAS,EACd+wD,EAA0B,EAC1BK,EAA0BjjE,EAC5B2iE,EACAC,GAGFl9D,EAAQ0jD,YAAc2Z,EACtBr9D,EAAQo9D,sBAAwBD,EAEhCM,GAA4Bz9D,GAxH5BgW,CAAWnK,EAaN,SAA2BA,EAAK3B,EAAY+M,GAAY,IACrDzV,EAAU0vB,GAAV1vB,MAEA2G,EADU0D,EAAIvG,OACd6C,MACFyM,EAAOzM,EAAM+D,MACb+E,EAAO9I,EAAMgE,OACXhF,EAAmB+C,EAAnB/C,eACF2D,EAAYmM,EAAWnM,UACvB4yD,EAAgBl8D,EAAMmI,eAAeO,EAAWhD,eAChDy2D,EAAgBhrE,SAASk2D,cAAc,UAE7C8U,EAAczxD,MAAQ0I,EACtB+oD,EAAcxxD,OAAS8E,EAQvB,IANA,IAAM2sD,EAAMpxC,GAAcmxC,GAGpBE,EAAY,IAAIC,UAAUlpD,EAAM3D,GAChCtJ,EAAOk2D,EAAUl2D,KAEdhb,EAAI,EAAGA,EAAIme,EAAU7b,OAAQtC,IAAK,CACzC,IAAMwe,EAAeL,EAAUne,GAE/B,GAAqB,IAAjBwe,IAAuBhE,EAAegE,GAAe,CACvD,IAAM9Z,EAAQqsE,EAAc5yD,EAAUne,IAGtCgb,EAAK,EAAIhb,GAAK0E,EAAM,GACpBsW,EAAK,EAAIhb,EAAI,GAAK0E,EAAM,GACxBsW,EAAK,EAAIhb,EAAI,GAAK0E,EAAM,GACxBsW,EAAK,EAAIhb,EAAI,GAAK0E,EAAM,IAO5B,OAFAusE,EAAIG,aAAaF,EAAW,EAAG,GAExBF,EApDgBK,CAAkBnyD,EAAK3B,EAAY+M,GAE1B2lD,GCdlC,IAAM1rC,GAAqBxqB,GAAU,gBAEtB,SAASu3D,GACtBpyD,EACA3B,EACA+M,EACA3Q,EACAs2D,IAsBK,SACL/wD,EACAqyD,EACAh3D,GAEA,IADA01D,IACA,yDACQn2D,EAAyByqB,GAAzBzqB,cAAejF,EAAU0vB,GAAV1vB,MACjByK,EAAYJ,EAAIvG,OACdyC,EAA2BkE,EAA3BlE,QAAS0kB,EAAkBxgB,EAAlBwgB,cAEXpL,EAAY5a,EAAc+P,cAAgB,EAE1CxW,EAAUwsB,GAAcC,EAAclC,QACtCmzC,EAAgBl8D,EAAMmI,eAAezC,GAErCi3D,EAAgBn+D,EAAQ0jD,YAE9B1jD,EAAQ0jD,YAAckZ,EAClBn2D,EAAc6P,aACd7P,EAAc8P,qBAGlBkT,GAAKzpB,GAAS,SAAAA,GACZ,IAAK,IAAIrT,EAAI,EAAGA,EAAIuxE,EAAQjvE,OAAQtC,IAClC,GAAIuxE,EAAQvxE,GAAI,CACd,IAAM0E,EAAQqsE,EAAc/wE,GAE5ByxE,GACEp+D,EACA+H,EACAm2D,EAAQvxE,GACR,CACE0E,MAAO,QAAF,OAAUA,EAAM,GAAhB,aAAuBA,EAAM,GAA7B,aAAoCA,EAAM,GAA1C,WACLgwB,aAEF,cAMRrhB,EAAQ0jD,YAAcya,EArDtBpoD,CAAclK,EAmET,SAAoBA,EAAK3B,EAAY+M,EAAYoK,GACtD,IAAMpV,EAAYJ,EAAIvG,OACdyC,EAA6BkE,EAA7BlE,QAASI,EAAoB8D,EAApB9D,MAAO6d,EAAa/Z,EAAb+Z,SAClBpR,EAAOzM,EAAM+D,MACb+E,EAAO9I,EAAMgE,OAEnBkV,EAAYA,GAAa,EANwC,IAQzDla,EAAmB+C,EAAnB/C,eAEF2D,EAAYmM,EAAWnM,UACvB7D,EAAqBiD,EAAWjD,mBAChCo3D,EAAe,GAErBpnD,EAAWjM,mBAAmBhU,SAAQ,SAAAmU,IACnBhE,EAAegE,KAG9BkzD,EAAalzD,GAAgB,OAI5BkzD,EAAap3D,KAChBo3D,EAAap3D,GAAsB,IAUrC,IAPA,IAKMq3D,EAgGR,SAA0Bt4C,EAAU3E,GAClC,IAAMk9C,EAAgBl9C,EAAY,EAC9Bm9C,EAAQx4C,EAASM,SAErBk4C,GAASlqE,KAAKiuB,GAAK,IAEnB,IAAMk8C,EAAWnqE,KAAKguB,IAAIk8C,GACpBE,EAAWpqE,KAAKkuB,IAAIg8C,GAEpBG,EAAc,CAACF,EAAUC,GACzBE,EAAc,EAAEF,EAAUD,GAE1B9xE,EAAI,CACR8e,EAAG8yD,EAAgBI,EAAY,GAC/BrkE,EAAGikE,EAAgBI,EAAY,IAG3B9qE,EAAI,CACR4X,EAAG8yD,EAAgBK,EAAY,GAC/BtkE,EAAGikE,EAAgBK,EAAY,IAG7B54C,EAASiF,QACXt+B,EAAE8e,IAAM,EACR9e,EAAE2N,IAAM,GAGN0rB,EAASkF,QACXr3B,EAAE4X,IAAM,EACR5X,EAAEyG,IAAM,GAGV,MAAO,CACL3N,IACAkH,KAlIagrE,CAAiB74C,EAAU3E,GAEjC10B,EAAI,EAAGA,EAAIme,EAAU7b,OAAQtC,IAAK,CACzC,IAAMwe,EAAeL,EAAUne,GAE/B,GAAqB,IAAjBwe,EAMJ,IAFiBhE,EAAegE,GAEhC,CAIA,IAAM2zD,EApBiD,CACvDrzD,GADwCP,EAoBQve,GAnBhCioB,EAChBta,EAAGhG,KAAK4b,MAAMhF,EAAa0J,IAmBrBm1B,EAASg1B,GAA6BD,EAAO7tD,EAAM2D,QAGtCnZ,IAAfsuC,EAAO35B,KAAqBtF,EAAUi/B,EAAO35B,OAASjF,GACxD6zD,GAAeX,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAKzC7iE,IAAlBsuC,EAAOtkB,QACP3a,EAAUi/B,EAAOtkB,UAAYta,GAE7B8zD,GAAkBZ,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAI5C7iE,IAAhBsuC,EAAO95B,MAAsBnF,EAAUi/B,EAAO95B,QAAU9E,GAC1D+zD,GAAgBb,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAK3C7iE,IAAjBsuC,EAAOn4B,OACP9G,EAAUi/B,EAAOn4B,SAAWzG,GAE5Bg0D,GAAiBd,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAK1C7iE,IAAnBsuC,EAAOh+B,SACPjB,EAAUi/B,EAAOh+B,WAAaZ,GAC9BL,EAAUi/B,EAAO35B,OAASjF,GAC1BL,EAAUi/B,EAAO95B,QAAU9E,GAE3Bi0D,GAAkBf,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAK1C7iE,IAApBsuC,EAAOxkB,UACPza,EAAUi/B,EAAOxkB,YAAcpa,GAC/BL,EAAUi/B,EAAO35B,OAASjF,GAC1BL,EAAUi/B,EAAOn4B,SAAWzG,GAE5Bk0D,GAAmBhB,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAKzC7iE,IAAtBsuC,EAAOvkB,YACP1a,EAAUi/B,EAAOvkB,cAAgBra,GACjCL,EAAUi/B,EAAOtkB,UAAYta,GAC7BL,EAAUi/B,EAAO95B,QAAU9E,GAE3Bm0D,GAAqBjB,EAAalzD,GAAepD,EAAS+2D,EAAOR,QAK1C7iE,IAAvBsuC,EAAO/9B,aACPlB,EAAUi/B,EAAO/9B,eAAiBb,GAClCL,EAAUi/B,EAAOtkB,UAAYta,GAC7BL,EAAUi/B,EAAOn4B,SAAWzG,GAE5Bo0D,GAAsBlB,EAAalzD,GAAepD,EAAS+2D,EAAOR,IAtF5B,IAAApzD,EA0F1C,OAAOmzD,EA9LSmB,CACd3zD,EACA3B,EACA+M,EAJwBia,GAAlBzqB,cAKQ+P,cAGYtM,EAAWhD,cAAe01D,GAkPxD,SAASmC,GAA6BD,EAAO7tD,EAAM2D,GACjD,IAAM1J,EAAa4zD,EAAMxkE,EAAIsa,EAAOkqD,EAAMrzD,EACpCmwC,EAAQ,GAER6jB,EAAgBX,EAAMxkE,EAAI,GAAK,EAC/BolE,EAAmBZ,EAAMxkE,EAAI,EAAI2W,EACjC0uD,EAAiBb,EAAMrzD,EAAI,GAAK,EAChCm0D,EAAkBd,EAAMrzD,EAAI,EAAImJ,EAkCtC,OAhCI6qD,IACF7jB,EAAMxrC,IAAMlF,EAAa0J,EAErBgrD,IACFhkB,EAAMr2B,SAAWq2B,EAAMxrC,IAAM,GAG3BuvD,IACF/jB,EAAM7vC,QAAU6vC,EAAMxrC,IAAM,IAI5BsvD,IACF9jB,EAAMn2B,OAASva,EAAa0J,EAExBgrD,IACFhkB,EAAM5vC,YAAc4vC,EAAMn2B,OAAS,GAGjCk6C,IACF/jB,EAAMp2B,WAAao2B,EAAMn2B,OAAS,IAIlCk6C,IACF/jB,EAAM3rC,KAAO/E,EAAa,GAGxB00D,IACFhkB,EAAMhqC,MAAQ1G,EAAa,GAGtB0wC,EAaT,SAASwjB,GAAkBS,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IAEnE5tD,GAAQsR,EADY/Z,EAAStF,YAA3Bqf,eACoBja,EAAS+2D,GAErCpuD,EAAMjF,GAAK6yD,EAAOzqE,EAAE4X,EACpBiF,EAAMpW,GAAKgkE,EAAOzqE,EAAEyG,EAEpB,IAAMqW,EAAM,CACVlF,EAAGiF,EAAMjF,EACTnR,EAAGoW,EAAMpW,GAGXqW,EAAIlF,GAAkB,EAAb6yD,EAAO3xE,EAAE8e,EAClBkF,EAAIrW,GAAkB,EAAbgkE,EAAO3xE,EAAE2N,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAcG,SAAS0uD,GACdQ,EACA93D,EACA+2D,EACAR,GACA,IAEM5tD,GAAQsR,EADY/Z,EAAStF,YAA3Bqf,eACoBja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAI,EAAGnR,EAAGwkE,EAAMxkE,IAEhEoW,EAAMjF,GAAK6yD,EAAOzqE,EAAE4X,EACpBiF,EAAMpW,GAAKgkE,EAAOzqE,EAAEyG,EAEpB,IAAMqW,EAAM,CACVlF,EAAGiF,EAAMjF,EACTnR,EAAGoW,EAAMpW,GAGXqW,EAAIlF,GAAkB,EAAb6yD,EAAO3xE,EAAE8e,EAClBkF,EAAIrW,GAAkB,EAAbgkE,EAAO3xE,EAAE2N,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAcJ,SAAS2uD,GAAqBO,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IAEtE5tD,GAAQsR,EADY/Z,EAAStF,YAA3Bqf,eACoBja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAGnR,EAAGwkE,EAAMxkE,EAAI,IAEhEoW,EAAMjF,GAAK6yD,EAAOzqE,EAAE4X,EACpBiF,EAAMpW,GAAKgkE,EAAOzqE,EAAEyG,EAEpB,IAAMqW,EAAM,CACVlF,EAAGiF,EAAMjF,EACTnR,EAAGoW,EAAMpW,GAGXqW,EAAIlF,GAAkB,EAAb6yD,EAAO3xE,EAAE8e,EAClBkF,EAAIrW,GAAkB,EAAbgkE,EAAO3xE,EAAE2N,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAcJ,SAAS4uD,GAAsBM,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IAEvE5tD,GAAQsR,EADY/Z,EAAStF,YAA3Bqf,eACoBja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAI,EAAGnR,EAAGwkE,EAAMxkE,EAAI,IAEpEoW,EAAMjF,GAAK6yD,EAAOzqE,EAAE4X,EACpBiF,EAAMpW,GAAKgkE,EAAOzqE,EAAEyG,EAEpB,IAAMqW,EAAM,CACVlF,EAAGiF,EAAMjF,EACTnR,EAAGoW,EAAMpW,GAGXqW,EAAIlF,GAAkB,EAAb6yD,EAAO3xE,EAAE8e,EAClBkF,EAAIrW,GAAkB,EAAbgkE,EAAO3xE,EAAE2N,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAeJ,SAASquD,GAAea,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IAC9Dt8C,EAAkB/Z,EAAStF,YAA3Bqf,cACFtR,EAAQsR,EAAcja,EAAS+2D,GAC/BnuD,EAAMqR,EAAcja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAI,EAAGnR,EAAGwkE,EAAMxkE,IAG9DoW,EAAMjF,GAAK6yD,EAAOzqE,EAAE4X,EACpBiF,EAAMpW,GAAKgkE,EAAOzqE,EAAEyG,EAEpBqW,EAAIlF,GAAK6yD,EAAOzqE,EAAE4X,EAClBkF,EAAIrW,GAAKgkE,EAAOzqE,EAAEyG,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAcJ,SAASsuD,GAAkBY,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IACjEt8C,EAAkB/Z,EAAStF,YAA3Bqf,cACFtR,EAAQsR,EAAcja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAGnR,EAAGwkE,EAAMxkE,EAAI,IAC1DqW,EAAMqR,EAAcja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAI,EAAGnR,EAAGwkE,EAAMxkE,EAAI,IAGlEoW,EAAMjF,GAAK6yD,EAAOzqE,EAAE4X,EACpBiF,EAAMpW,GAAKgkE,EAAOzqE,EAAEyG,EAEpBqW,EAAIlF,GAAK6yD,EAAOzqE,EAAE4X,EAClBkF,EAAIrW,GAAKgkE,EAAOzqE,EAAEyG,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAcJ,SAASuuD,GAAgBW,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IAC/Dt8C,EAAkB/Z,EAAStF,YAA3Bqf,cACFtR,EAAQsR,EAAcja,EAAS+2D,GAC/BnuD,EAAMqR,EAAcja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAGnR,EAAGwkE,EAAMxkE,EAAI,IAI9DoW,EAAMjF,GAAK6yD,EAAO3xE,EAAE8e,EACpBiF,EAAMpW,GAAKgkE,EAAO3xE,EAAE2N,EAEpBqW,EAAIlF,GAAK6yD,EAAO3xE,EAAE8e,EAClBkF,EAAIrW,GAAKgkE,EAAO3xE,EAAE2N,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QAcJ,SAASwuD,GAAiBU,EAAwB93D,EAAS+2D,EAAOR,GAAQ,IAChEt8C,EAAkB/Z,EAAStF,YAA3Bqf,cACFtR,EAAQsR,EAAcja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAI,EAAGnR,EAAGwkE,EAAMxkE,IAC1DqW,EAAMqR,EAAcja,EAAS,CAAE0D,EAAGqzD,EAAMrzD,EAAI,EAAGnR,EAAGwkE,EAAMxkE,EAAI,IAIlEoW,EAAMjF,GAAK6yD,EAAO3xE,EAAE8e,EACpBiF,EAAMpW,GAAKgkE,EAAO3xE,EAAE2N,EAEpBqW,EAAIlF,GAAK6yD,EAAO3xE,EAAE8e,EAClBkF,EAAIrW,GAAKgkE,EAAO3xE,EAAE2N,EAElBulE,EAAuBpqE,KAAK,CAC1Bib,QACAC,QChiBJ,IAAMugB,GAAqBxqB,GAAU,gBAYtB,SAASo5D,GACtBj0D,EACA3B,EACA5D,EACA2Q,EACA2lD,IA8BF,SAA0BA,GAAkB,IAClCn2D,EAAkByqB,GAAlBzqB,cAER,OACEA,EAAcuP,aACZ4mD,GAAgD,IAA5Bn2D,EAAc2P,YAChCwmD,GAAwD,IAApCn2D,EAAc4P,oBAlCpC0pD,CAAiBnD,IACnBD,GACE9wD,EACA3B,EACA+M,EACA3Q,EACAs2D,GAuCN,SAA6BA,GAAkB,IACrCn2D,EAAkByqB,GAAlBzqB,cAER,OACEA,EAAcsP,gBACZ6mD,GAAmD,IAA/Bn2D,EAAc6P,eAChCsmD,GAA2D,IAAvCn2D,EAAc8P,sBAzCpCypD,CAAoBpD,IACtBqB,GACEpyD,EACA3B,EACA+M,EACA3Q,EACAs2D,GCpCN,IAAM1rC,GAAqBxqB,GAAU,gBAStB,YAASmF,GACtB,IACM9D,EADY8D,EAAIvG,OACIyC,QAClBtB,EAA2ByqB,GAA3BzqB,cAHmB,EAGQyqB,GAAZpe,QAMXlM,YAAYmB,GAHtBkC,EANyB,EAMzBA,oBACArD,EAPyB,EAOzBA,YACA4D,EARyB,EAQzBA,oBAGG5D,IAIDH,EAAcwP,+BAuDpB,SACEpK,EACAjF,EACAqD,EACAO,GAEA,IAAK,IAAI7d,EAAI,EAAGA,EAAIia,EAAY3X,OAAQtC,IAAK,CAC3C,IAAMud,EAAatD,EAAYja,GAE/B,GAAIA,IAAMsd,GAAwBC,EAAlC,CAIA,IAAM+M,EAAa/M,EAAWnD,YAAYyD,GAEtCyM,GACF6oD,GAAmBj0D,EAAK3B,EAAYvd,EAAGsqB,GAAY,KAtErDgpD,CACEp0D,EACAjF,EACAqD,EACAO,GAsBN,SACEqB,EACAjF,EACAqD,EACAO,GAEA,IAAMN,EAAatD,EAAYqD,GAE/B,IAAKC,EACH,OAGF,IAAM+M,EAAa/M,EAAWnD,YAAYyD,GAEtCyM,GACF6oD,GAAmBj0D,EAAK3B,EAAYD,EAAqBgN,GAAY,GAjCvEipD,CACEr0D,EACAjF,EACAqD,EACAO,KCnCJ,IAAM0mB,GAAqBxqB,GAAU,gBAE/By5D,GAAkB,SAASt0D,GAC/B,IACM9D,EADY8D,EAAIvG,OACIyC,QAGpBq4D,EAAgB5+D,GAAM0Z,MAAMjM,QAChC,SAAA4M,GAAI,OACFA,EAAK9T,UAAYA,IACF,WAAd8T,EAAK/tB,MACU,YAAd+tB,EAAK/tB,MACS,YAAd+tB,EAAK/tB,SAILuyE,EAAiBr3D,EAAajB,EAAS,SAEvCu4D,EAA4BpvC,GAAmBzqB,cAGnD45D,IACCC,EAA0BtqD,YACzBsqD,EAA0BvqD,gBAE5BwqD,GAAiC10D,GAGnCu0D,EAAcppE,SAAQ,SAAA6kB,GAChBA,EAAK0Q,gBACP1Q,EAAK0Q,eAAe1gB,OAmBX,GAdA,SAAS9D,GACtBA,EAAQgqB,iBACN9pB,EAAStF,YAAYK,OAAOyiC,eAC5B06B,KAWW,GAPC,SAASp4D,GACvBA,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOyiC,eAC5B06B,KC9CW,YAASlvC,EAAauvC,EAAgB30D,GACnD,GAAIrK,GAAM2Z,aACR,OAAO,EAIT,IAAMpT,EAAU8D,EAAIvG,OAAOyC,QACvBmT,EAAQ1Z,GAAM0Z,MAAMjM,QAAO,SAAA4M,GAAI,OACjCA,EAAKC,0BAA0B9D,SAASiZ,MAa1C,GANA/V,GAHAA,EAAQoX,GAAyBvqB,EAASmT,EAAO+V,IAGnChiB,QAAO,SAAA4M,GAAI,MAAoC,mBAAzBA,EAAK2kD,MAErCh/D,GAAM+wB,wBACRrX,EAAQsX,GAAqCtX,IAG1B,IAAjBA,EAAMjsB,OACR,OAAO,EAGTisB,EAAM,GAAGslD,GAAgB30D,ICZZ,YAAS9D,EAASmT,EAAOwU,GAAmC,IAA3BrS,EAA2B,uDAAT,QAC1DojD,EACgB,UAApBpjD,EAA8B7b,GAAM8Z,eAAiB9Z,GAAM+Z,eAE7D,OAAOL,EAAMjM,QAAO,SAAA4M,GAGlB,IAFA,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAEpCP,EAAI,EAAGA,EAAI4a,EAAUI,KAAK1Y,OAAQtC,IACzC,QAMQ8O,IALNy0B,GACEnoB,EACAR,EAAUI,KAAKhb,GAAG2jB,QAClBof,EACA+wC,GAGF,OAAO,EAIX,OAAO,MC1BI,YAAS14D,EAASmT,GAC/B,OAAOA,EAAMjM,QACX,SAAA4M,GAAI,OACFA,EAAK9T,UAAYA,IACF,WAAd8T,EAAK/tB,MAAmC,YAAd+tB,EAAK/tB,UCFvB,YAASia,EAASmT,GAC/B,OAAOA,EAAMjM,QAAO,SAAA4M,GAClB,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAE7C,OAAOqa,GAAaA,EAAUI,KAAK1Y,OAAS,MCGjC,YAAS4c,GACtB,IAAIrK,GAAM2Z,aAAV,CAIA,IAAMlP,EAAYJ,EAAIvG,OAChByC,EAAU8D,EAAIvG,OAAOyC,QACrB2nB,EAAS7jB,EAAIvG,OAAOyT,cAAcwR,OAGlCm2C,EAAwBC,GAC5B54D,EACA+K,GAAQ8I,cAKNglD,EAAcF,EAAsBzxD,QACtC,SAAA4M,GAAI,MACY,WAAdA,EAAK/tB,MACL4K,MAAMsB,QAAQ6hB,EAAKlhB,QAAQijB,kBAC3B/B,EAAKlhB,QAAQijB,gBAAgB5F,SAAS/L,EAAUomB,UAChDxW,EAAKlhB,QAAQmlB,iBAQjB,GALIte,GAAM+wB,wBACRquC,EAAcpuC,GAAqCouC,IAIjDA,EAAY3xE,OAAS,EAAG,CAI1B,IAAM4xE,EAA8BD,EAAY3kD,MAC9C,SAAAJ,GAAI,MAAyC,mBAA9BA,EAAK8lC,wBAGtB,GAAIkf,EAKF,GAJsBA,EAA4Blf,qBAChD91C,GAIA,OAKN,IAAIrK,GAAM+wB,sBAAV,CAMA,IAAMuuC,EAAkBC,GACtBh5D,EACA24D,GAIIM,EAAqCC,GACzCl5D,EACA+4D,EACApxC,EACA,SAGF,GAAIsxC,EAAmC/xE,OAAS,EAAhD,CACE,IAAMiyE,EAA+BF,EAAmC,GAClEz5D,EAAYyB,EAAajB,EAASm5D,EAA6Bh0E,MAFpB,EAIxB+nC,GACvBltB,EACAR,EACA25D,EAA6Bh0E,KAC7BwiC,GAJMzvB,EAJyC,EAIzCA,OAAQ0H,EAJiC,EAIjCA,KAOhBu5D,EAA6B96B,uBAC3Bv6B,EACAlE,EACA1H,EACA,aAfJ,CAsBA,IAAMkhE,EAAoCT,EAAsBzxD,QAC9D,SAAA4M,GACE,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAS7C,OAPEqa,GACAA,EAAUI,MACVkU,EAAK0Z,eACLhuB,EAAUI,KAAK8L,MAAK,SAAA9L,GAAI,OACtBkU,EAAK0Z,cAAcxtB,EAASJ,EAAM+nB,EAAQ,eAOlD,GAAIyxC,EAAkClyE,OAAS,EAA/C,CACE,IAAMmyE,EAAqBD,EAAkC,GAEvDE,EADYr4D,EAAajB,EAASq5D,EAAmBl0E,MAChBya,KAAKsU,MAAK,SAAAtU,GAAI,OACvDy5D,EAAmB7rC,cAAcxtB,EAASJ,EAAM+nB,MAGlD0xC,EAAmBE,qBACjBz1D,EACAw1D,EACA,cAQJ,GAAIT,EAAY3xE,OAAS,EAAG,CAI1B,IAAM4xE,EAA8BD,EAAY3kD,MAC9C,SAAAJ,GAAI,MAA0C,mBAA/BA,EAAKkQ,yBAGtB,GAAI80C,EAKF,GAJsBA,EAA4B90C,sBAChDlgB,GAIA,YCtJFjC,GAASL,EAAU,uCCFV,YAASsC,GACtB,IAAIrK,GAAM2Z,aAAV,CAD2B,MAKEtP,EAAIvG,OAC3BiuB,EAAanB,GANQ,EAKnBrqB,QALmB,EAKVsqB,QACkC,SAEnD,GAAKkB,EAAL,CAIA,GAAuD,mBAA5CA,EAAWguC,6BAGpB,GAFsBhuC,EAAWguC,6BAA6B11D,GAG5D,OAIArK,GAAM+wB,wBAKNgB,EAAW4S,kBACb5S,EAAW4S,kBAAkBt6B,EAAK,SACzB0nB,aAAsBpB,IDvBpB,SAAStmB,EAAKgQ,GAC3BjS,GAAOnW,IAAI,qBAEXoY,EAAI4nB,iBACJ5nB,EAAI6nB,kBACJ,IAAMznB,EAAYJ,EAAIvG,OAChByC,EAAUkE,EAAUlE,QACpBgB,EAAkB8S,EAAK6hB,qBAAqBzxB,GAE7ClD,IAKLD,EAAaf,EAAS8T,EAAK3uB,KAAM6b,GAEjCd,EAAStF,YAAYkX,YAAY9R,IAGiB,IAAhD1a,OAAO0J,KAAKgS,EAAgBuH,SAASrhB,OACjC+lC,GACA2I,IAGJ1xB,EACA4P,EAAK3uB,KACL6b,EACAA,EAAgBuH,QAAQK,IACxBkL,EAAKlhB,QACL,SACA,WACE,IAAMw4B,EAAYnwB,EAAO2B,sBACnBsH,EAAY,CAChBiR,SAAUrB,EAAK3uB,KACf6a,UACAgB,mBAGF5D,EAAa4C,EAASorB,EAAWlnB,OCdnCk6B,CAAkBt6B,EAAK0nB,OCxBZ,YAAS1nB,GACtB,IAAIrK,GAAM2Z,aAAV,CAIA,IAAID,EACEjP,EAAYJ,EAAIvG,OAChByC,EAAUkE,EAAUlE,QAgB1B,GANAmT,GANAA,GADAA,EAAQoX,GAAyBvqB,EAAS+K,GAAQ8I,eACpC3M,QACZ,SAAA4M,GAAI,OACFnjB,MAAMsB,QAAQ6hB,EAAKlhB,QAAQijB,kBAC3B/B,EAAKlhB,QAAQijB,gBAAgB5F,SAAS/L,EAAUomB,UAChDxW,EAAKlhB,QAAQmlB,kBAEH7Q,QAAO,SAAA4M,GAAI,MAAsC,mBAA3BA,EAAKqQ,qBAErC1qB,GAAM+wB,wBACRrX,EAAQsX,GAAqCtX,IAG1B,IAAjBA,EAAMjsB,OAISisB,EAAM,GAEdgR,kBAAkBrgB,KCxBhB,YAASA,GACtB,IAAIrK,GAAM2Z,eAAgB3Z,GAAM+wB,sBAAhC,CAIA,IAAIrX,EALuB,EAMQrP,EAAIvG,OAA/ByC,EANmB,EAMnBA,QAASgR,EANU,EAMVA,cAGjBvX,GAAM6Z,mBAAqBtC,EAAc5Q,MAOzC,IAAMy4D,GAFN1lD,EAAQylD,GAA8B54D,EAAS+K,GAAQ8I,eAE7B3M,QACxB,SAAA4M,GAAI,MAAkB,WAAdA,EAAK/tB,MAAqB+tB,EAAKlhB,QAAQmlB,iBAG7CsV,GAAmB,EAGnBwrC,EAAY3xE,OAAS,IACvBmmC,EAAmBwrC,EAAYntD,MAAK,SAAAoI,GAAI,OAAIA,EAAKoT,sBAGnD/T,EAAQ6lD,GAA2Bh5D,EAASmT,GAM5C,IAAK,IAAIrtB,EAAI,EAAGA,EAAIqtB,EAAMjsB,OAAQpB,IAAK,CACrC,IAAMguB,EAAOX,EAAMrtB,GAEmB,mBAA3BguB,EAAKsQ,oBACdiJ,EAAmBvZ,EAAKsQ,kBAAkBtgB,IAAQupB,IAK7B,IAArBA,GACFntB,EAAStF,YAAYkX,YAAY9R,KCnD/By5D,GAAaC,GAAsBtzE,KACvC,KACA,QACA,sBAGIspE,GAAmBgK,GAAsBtzE,KAC7C,KACA,QACA,uBAGIuzE,GAAUD,GAAsBtzE,KAAK,KAAM,QAAS,mBAEpDwzE,GAAaF,GAAsBtzE,KACvC,KACA,aACA,sBCwBa,GAtBA,SAAS4Z,GACtBA,EAAQgqB,iBAAiB/uB,EAAOM,YAAak+D,IAC7Cz5D,EAAQgqB,iBAAiB/uB,EAAOC,WAAYg1D,IAC5ClwD,EAAQgqB,iBAAiB/uB,EAAOG,oBAAqBy+D,IACrD75D,EAAQgqB,iBAAiB/uB,EAAOO,mBAAoBk0D,IACpD1vD,EAAQgqB,iBAAiB/uB,EAAOI,WAAYy+D,IAC5C95D,EAAQgqB,iBAAiB/uB,EAAOK,WAAY60D,IAC5CnwD,EAAQgqB,iBAAiB/uB,EAAOE,SAAUw+D,IAC1C35D,EAAQgqB,iBAAiB/uB,EAAOQ,YAAam+D,KAchC,GAXC,SAAS55D,GACvBA,EAAQ+pB,oBAAoB9uB,EAAOM,YAAak+D,IAChDz5D,EAAQ+pB,oBAAoB9uB,EAAOC,WAAYg1D,IAC/ClwD,EAAQ+pB,oBAAoB9uB,EAAOG,oBAAqBy+D,IACxD75D,EAAQ+pB,oBAAoB9uB,EAAOO,mBAAoBk0D,IACvD1vD,EAAQ+pB,oBAAoB9uB,EAAOI,WAAYy+D,IAC/C95D,EAAQ+pB,oBAAoB9uB,EAAOK,WAAY60D,IAC/CnwD,EAAQ+pB,oBAAoB9uB,EAAOE,SAAUw+D,IAC7C35D,EAAQ+pB,oBAAoB9uB,EAAOQ,YAAam+D,KCzC5CG,GAAa,SAASj2D,GAC1B,GAAIrK,GAAM2Z,aACR,OAAO,EAGT,IAAMpT,EAAU8D,EAAIvG,OAAOyC,QAErBmT,EAAQ1Z,GAAM0Z,MAAMjM,QACxB,SAAA4M,GAAI,OACFA,EAAK9T,UAAYA,IACF,WAAd8T,EAAK/tB,MACU,YAAd+tB,EAAK/tB,MACS,YAAd+tB,EAAK/tB,SAGX,GAAqB,IAAjBotB,EAAMjsB,OACR,OAAO,EAGTisB,EAAMlkB,SAAQ,SAAA6kB,GACRA,EAAKisC,kBACPjsC,EAAKisC,iBAAiBj8C,OAgBb,GAXA,SAAS9D,GACtBA,EAAQgqB,iBAAiB9pB,EAAStF,YAAYK,OAAOwvD,UAAWsP,KAUnD,GAPC,SAAS/5D,GACvBA,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOwvD,UAC5BsP,KChCW,YAASj2D,GACtB,GAAIrK,GAAM2Z,aACR,OAAO,EAFkB,MAMMtP,EAAIvG,OAA7ByC,EANmB,EAMnBA,QAASsjD,EANU,EAMVA,YACbnwC,EAAQ1Z,GAAM0Z,MAAMjM,QAAO,SAAA4M,GAAI,OACjCA,EAAKC,0BAA0B9D,SAAS,iBAgB1C,GAVAkD,GAFAA,EAAQoX,GAAyBvqB,EAASmT,EAAO,eAEnCjM,QACZ,SAAA4M,GAAI,MACqC,mBAAhCA,EAAKuvC,wBACZC,IAAgBxvC,EAAKpV,cAAcgZ,iBAGnCje,GAAM+wB,wBACRrX,EAAQsX,GAAqCtX,IAG1B,IAAjBA,EAAMjsB,OACR,OAAO,EAGUisB,EAAM,GAEdkwC,uBAAuBv/C,ICtB9BjC,GAASL,EAAU,uCCNV,YAASsC,GACtB,IAAIrK,GAAM2Z,eAAgB3Z,GAAM+wB,sBAAhC,CAIA,IACMgB,EAAanB,GADHvmB,EAAIvG,OAAOyC,QACe,KAAM,SAG5CwrB,GAAcA,EAAW4S,kBAC3B5S,EAAW4S,kBAAkBt6B,EAAK,SACzB0nB,aAAsBpB,IDHpB,SAAStmB,EAAKgQ,GAC3BjS,GAAOnW,IAAI,qBAEXoY,EAAI4nB,iBACJ5nB,EAAI6nB,kBAEJ,IAAMquC,EAAiBl2D,EAAIvG,OACrByC,EAAUg6D,EAAeh6D,QACzBgB,EAAkB8S,EAAK6hB,qBAAqBqkC,GAElD,GAAKh5D,EAAL,CAOA,GAHAD,EAAaf,EAAS8T,EAAK3uB,KAAM6b,GAIiB,IAAhD1b,OAAO0J,KAAKgS,EAAgBuH,SAASrhB,QACrC8yE,EAAezvE,OAAS0Q,EAAOiB,IAsB/B,OAnBA8E,EAAgBse,QAAS,EACzBte,EAAgBuH,QAAQK,IAAI0W,QAAS,EACrCte,EAAgBuH,QAAQK,IAAImrB,WAAY,EACxC/yB,EAAgBsqB,aAAc,GAG5B7xB,GAAMia,4BACNI,EAAKlhB,QAAQ8gB,6BAIbkY,GAAuBouC,EAAgBh5D,EAAgBuH,UAGvDrH,EAAgBlB,EAAS8T,EAAK3uB,KAAM6b,QAGtCd,EAAStF,YAAYkX,YAAY9R,GAKnCE,EAAStF,YAAYkX,YAAY9R,GAEjC41B,GACEokC,EACAlmD,EAAK3uB,KACL6b,EACAA,EAAgBuH,QAAQK,IACxBkL,EAAKlhB,QACL,SACA,WACE,IAAMw4B,EAAYnwB,EAAO2B,sBACnBsH,EAAY,CAChBiR,SAAUrB,EAAK3uB,KACf6a,UACAgB,mBAGF5D,EAAa4C,EAASorB,EAAWlnB,OCzDnCk6B,CAAkBt6B,EAAK0nB,KClBZ,YAASrqB,GACtB,GAAKA,EAIL,IAAK,IAAIvc,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IAAK,CAC7C,IAAMgb,EAAOuB,EAASvB,KAAKhb,GAE3Bgb,EAAK0f,QAAS,EACT1f,EAAK2I,SAIV0xD,GAAqBr6D,EAAK2I,WAI9B,SAAS0xD,GAAqB1xD,GAC5BjjB,OAAO0J,KAAKuZ,GAAStZ,SAAQ,SAAS9J,GACrBojB,EAAQpjB,GAEhBm6B,QAAS,KCRL,gBAASxb,GACtB,IAAIrK,GAAM2Z,eAAgB3Z,GAAM+wB,sBAAhC,CAIA,IAAIrX,EAEEnT,EAAU8D,EAAIvG,OAAOyC,QACrB2nB,EAAS7jB,EAAIvG,OAAOyT,cAAcwR,OAExCrP,EAAQoX,GAAyBvqB,EAAS+K,GAAQiJ,cAOlD,IAAMkmD,GANN/mD,EAAQ6lD,GAA2Bh5D,EAASmT,IAMLjM,QAAO,SAAA4M,GAG5C,IAFA,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAEpCP,EAAI,EAAGA,EAAI4a,EAAUI,KAAK1Y,OAAQtC,IACzC,QAMQ8O,IALNy0B,GACEnoB,EACAR,EAAUI,KAAKhb,GAAG2jB,QAClBof,EAnBmB,IAuBrB,OAAO,EAIX,OAAO,KAKT,GAAIuyC,EAAyBhzE,OAAS,EAAG,CAGvC,IAAMiyE,EAA+Be,EAAyB,GACxD16D,EAAYyB,EAAajB,EAASm5D,EAA6Bh0E,MAC/Dg1E,EAAiB36D,EAAUI,KAAKsU,MACpC,SAAAhvB,GAAC,YAMOwO,IALNy0B,GACEnoB,EACA9a,EAAEqjB,QACFof,EA1CmB,OAgEzB,OAjBAnoB,EAAUI,KAAK0f,QAAS,EACxB66C,EAAe76C,QAAS,EACxBpf,EAAStF,YAAYkX,YAAY9R,GAEjCitB,GACEnpB,EAAIvG,OACJ47D,EAA6Bh0E,KAC7Bqa,EAAUI,KACVu6D,EACAhB,EAA6BvmE,QAC7B,SACA,kBAAMwnE,GAA2B56D,MAEnCsE,EAAIipB,gCACJjpB,EAAI4nB,iBAON,IAAM2uC,EAAiBlnD,EAAMjM,QAAO,SAAA4M,GAClC,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAO7C,OALEqa,GACAA,EAAUI,MACVkU,EAAK0Z,eACLhuB,EAAUI,KAAK8L,MAAK,SAAA9L,GAAI,OAAIkU,EAAK0Z,cAAcxtB,EAASJ,EAAM+nB,SAOlE,GAAI0yC,EAAenzE,OAAS,EAAG,CAE7B,IAAMmyE,EAAqBgB,EAAe,GACpC76D,EAAYyB,EAAajB,EAASq5D,EAAmBl0E,MACrDm0E,EAA2B95D,EAAUI,KAAKsU,MAAK,SAAAtU,GAAI,OACvDy5D,EAAmB7rC,cAAcxtB,EAASJ,EAAM+nB,MAqBlD,OAjBA2xC,EAAyBh6C,QAAS,EAClCpf,EAAStF,YAAYkX,YAAY9R,GAEjCotB,GACEtpB,EAAIvG,OACJ87D,EAAmBl0E,KACnBm0E,EACA,KACAD,EAAmBzmE,QACnB,SACA,kBAAMwnE,GAA2B56D,MAGnCsE,EAAIipB,gCACJjpB,EAAI4nB,iBAWN,IAAM4uC,EAAiB/vC,GACrBvqB,EACA+K,GAAQiJ,cASV,OANIsmD,EAAepzE,OAAS,GAAKozE,EAAe,GAAGC,yBACjDD,EAAe,GAAGC,yBAAyBz2D,GAE3C02D,GAAiB12D,IAGZ,ICxIM,YAASA,GACtB,IAAIrK,GAAM2Z,aAAV,CAIA,IAAMlP,EAAYJ,EAAIvG,OAChByC,EAAUkE,EAAUlE,QACpB2nB,EAASzjB,EAAU44B,YAAYta,OAE/Bm2C,EAAwBC,GAC5B54D,EACA+K,GAAQiJ,cAGN6kD,EAAcF,EAAsBzxD,QACtC,SAAA4M,GAAI,MAAkB,WAAdA,EAAK/tB,MAAqB+tB,EAAKlhB,QAAQulB,iBAQjD,GALI1e,GAAM+wB,wBACRquC,EAAcpuC,GAAqCouC,IAIjDA,EAAY3xE,OAAS,EAAG,CAI1B,IAAM4xE,EAA8BD,EAAY3kD,MAC9C,SAAAJ,GAAI,MAA0C,mBAA/BA,EAAKgmC,yBAGtB,GAAIgf,EAKF,GAJsBA,EAA4Bhf,sBAChDh2C,GAIA,OAKN,IAAIrK,GAAM+wB,sBAAV,CAIA,IAAMuuC,EAAkBC,GACtBh5D,EACA24D,GAIIM,EAAqCC,GACzCl5D,EACA+4D,EACApxC,EACA,SAKF,GAAIsxC,EAAmC/xE,OAAS,EAAhD,CAGE,IAAMiyE,EAA+BF,EAAmC,GAClEz5D,EAAYyB,EAAajB,EAASm5D,EAA6Bh0E,MAJpB,EAMxB+nC,GACvBltB,EACAR,EACA25D,EAA6Bh0E,KAC7BwiC,EACA,SALMzvB,EANyC,EAMzCA,OAAQ0H,EANiC,EAMjCA,KAQhBu5D,EAA6B96B,uBAC3Bv6B,EACAlE,EACA1H,EACA,aAlBJ,CAyBA,IAAMuiE,EAAoC1B,EAAgB7xD,QAAO,SAAA4M,GAC/D,IAAMtU,EAAYyB,EAAajB,EAAS8T,EAAK3uB,MAS7C,OAPEqa,GACAA,EAAUI,MACVkU,EAAK0Z,eACLhuB,EAAUI,KAAK8L,MAAK,SAAA9L,GAAI,OACtBkU,EAAK0Z,cAAcxtB,EAASJ,EAAM+nB,EAAQ,eAQhD,GAAI8yC,EAAkCvzE,OAAS,EAA/C,CAEE,IAAMmyE,EAAqBoB,EAAkC,GAEvDnB,EADYr4D,EAAajB,EAASq5D,EAAmBl0E,MAChBya,KAAKsU,MAAK,SAAAtU,GAAI,OACvDy5D,EAAmB7rC,cAAcxtB,EAASJ,EAAM+nB,MAGlD0xC,EAAmBE,qBACjBz1D,EACAw1D,EACA,cAOJ,GAAIT,EAAY3xE,OAAS,EAAG,CAI1B,IAAM4xE,EAA8BD,EAAY3kD,MAC9C,SAAAJ,GAAI,MAA2C,mBAAhCA,EAAKiQ,0BAGtB,GAAI+0C,EAKF,GAJsBA,EAA4B/0C,uBAChDjgB,GAIA,YCxIFywD,GAAYmF,GAAsBtzE,KACtC,KACA,YACA,qBAKIs0E,GAAYhB,GAAsBtzE,KACtC,KACA,QACA,qBAEIu0E,GAAWjB,GAAsBtzE,KAAK,KAAM,QAAS,oBACrDw0E,GAAalB,GAAsBtzE,KACvC,KACA,aACA,sBAEIy0E,GAAanB,GAAsBtzE,KACvC,KACA,QACA,sBAEI00E,GAAcpB,GAAsBtzE,KACxC,KACA,cACA,uBC2Ba,GA9BA,SAAS4Z,GACtBA,EAAQgqB,iBAAiB/uB,EAAOiB,IAAK6+D,IACrC/6D,EAAQgqB,iBAAiB/uB,EAAOS,YAAas/D,GAAY,CAAE5J,SAAS,IACpEpxD,EAAQgqB,iBAAiB/uB,EAAOY,WAAY6+D,GAAW,CAAEtJ,SAAS,IAClEpxD,EAAQgqB,iBAAiB/uB,EAAOW,UAAW++D,IAG3C36D,EAAQgqB,iBAAiB/uB,EAAOU,mBAAoB6+D,IACpDx6D,EAAQgqB,iBAAiB/uB,EAAOgB,YAAa4+D,IAC7C76D,EAAQgqB,iBAAiB/uB,EAAOkB,WAAYo4D,IAC5Cv0D,EAAQgqB,iBAAiB/uB,EAAOc,YAAa6+D,IAC7C56D,EAAQgqB,iBAAiB/uB,EAAOe,aAAc8+D,IAC9C96D,EAAQgqB,iBAAiB/uB,EAAOqB,iBAAkB2+D,KAkBrC,GAfC,SAASj7D,GACvBA,EAAQ+pB,oBAAoB9uB,EAAOiB,IAAK6+D,IACxC/6D,EAAQ+pB,oBAAoB9uB,EAAOS,YAAas/D,IAChDh7D,EAAQ+pB,oBAAoB9uB,EAAOY,WAAY6+D,IAC/C16D,EAAQ+pB,oBAAoB9uB,EAAOW,UAAW++D,IAG9C36D,EAAQ+pB,oBAAoB9uB,EAAOU,mBAAoB6+D,IACvDx6D,EAAQ+pB,oBAAoB9uB,EAAOgB,YAAa4+D,IAChD76D,EAAQ+pB,oBAAoB9uB,EAAOkB,WAAYo4D,IAC/Cv0D,EAAQ+pB,oBAAoB9uB,EAAOc,YAAa6+D,IAChD56D,EAAQ+pB,oBAAoB9uB,EAAOe,aAAc8+D,IACjD96D,EAAQ+pB,oBAAoB9uB,EAAOqB,iBAAkB2+D,KCrDjDp5D,GAASL,EAAU,WAcnB05D,GAAoB,SAASl7D,EAASm7D,EAASl0E,GAInD,IAAM6sB,EAAO,IAAIqnD,EAAQl0E,GACSouB,GAAkBrV,EAAS8T,EAAK3uB,MAGhE0c,GAAOH,KAAK,kDAAmDoS,EAAK3uB,OAKtE2uB,EAAK9T,QAAUA,EACfyV,GAAMhc,MAAM0Z,MAAMzlB,KAAKomB,KAcnBsnD,GAAU,SAASD,EAASl0E,GAChCo0E,GAAiBF,EAASl0E,GAC1BwuB,GAAMhc,MAAMyZ,gBAAgBjkB,SAAQ,SAAA+Q,GAClCk7D,GAAkBl7D,EAASm7D,EAASl0E,OAelCo0E,GAAmB,SAASF,EAASl0E,GAGzC,GAF0B0X,GAAU,uBAA5BD,cAEWmU,sBAAnB,CAIA,IAAMiB,EAAO,IAAIqnD,EAAQl0E,QAEgByM,IAAvC+hB,GAAMhc,MAAMuZ,YAAYc,EAAK3uB,MAG7B0c,GAAOH,KAAK,qCAAsCoS,EAAK3uB,MAKzDswB,GAAMhc,MAAMuZ,YAAYc,EAAK3uB,MAAQ,CACnC2uB,KAAMqnD,EACNl0E,QACA2wB,eAAgB,MC/Dd/V,GAASL,EAAU,+BA6BV,YAAS85D,GACtBz5D,GAAOnW,IAAI,yBACX,IAAMuU,EAAiBq7D,EAAkB/9D,OAAOyC,QAGhDu7D,GAAoCt7D,GACpCu7D,GAA+Bv7D,GANU,IAQjCvB,EAAkBC,GAAU,uBAA5BD,cAGJA,EAAciU,eAChB8oD,GAAoB/sE,OAAOuR,GAC3By7D,GAAmBhtE,OAAOuR,GAC1B07D,GAAgC17D,IAI9BvB,EAAckU,eAChBgpD,GAAoBltE,OAAOuR,GAC3B47D,GAAgC57D,IAIlC67D,GAAmB77D,IAUf67D,GAAqB,SAAS77D,GAClCwV,GAAMhc,MAAMyZ,gBAAgBxlB,KAAKuS,GAC7BwV,GAAM3wB,SAeZ,SAA+Bmb,GAC7B,IAAMnb,EAAU2wB,GAAM3wB,QAEtBQ,OAAO0J,KAAKlK,GAASmK,SAAQ,SAAS9I,GACe,mBAAxCrB,EAAQqB,GAAK41E,wBACtBj3E,EAAQqB,GAAK41E,uBAAuB97D,MAnBtC+7D,CAAsB/7D,GA+B1B,SAAkCA,GAGhC,IAF0BtB,GAAU,uBAA5BD,cAEWmU,sBACjB,OAGFvtB,OAAO0J,KAAKymB,GAAMhc,MAAMuZ,aAAa/jB,SAAQ,SAAS9I,GAAK,MACjCsvB,GAAMhc,MAAMuZ,YAAY7sB,GAAxC2tB,EADiD,EACjDA,KAAM7sB,EAD2C,EAC3CA,MAEdi0E,GAAkBj7D,EAAgB6T,EAAM7sB,MAvC1Cg1E,CAAyBh8D,GAmD3B,SAAkCA,GAGhC,IAF0BtB,GAAU,uBAA5BD,cAEWmU,sBACjB,OAGF,IAAMqpD,EAAiB,CACrB58C,OAAQpK,GACRk8C,QAASz7C,GACTjpB,QAAS6pB,GACT4lD,SAAU/lD,IAGZX,GAAMhc,MAAMwZ,wBAAwBhkB,SAAQ,SAAAmoB,GAC1C,IAAMruB,EAAOquB,EAAaruB,KAAK4O,MAAM,GAErC5O,EAAKkE,QAAQgT,GACbi8D,EAAe9kD,EAAarxB,MAAMsH,MAAM,KAAMtE,MApEhDqzE,CAAyBn8D,IC3E3B,IAAM4B,GAASL,EAAU,kCAsBV,YAAS66D,GACtBx6D,GAAOnW,IAAI,0BACX,IAAMuU,EAAiBo8D,EAAmB9+D,OAAOyC,QACzCtB,EAAkBC,GAAU,uBAA5BD,cAGR68D,GAAqCt7D,GACrCu7D,GAAgCv7D,GAG5BvB,EAAciU,eAChB8oD,GAAoBptE,QAAQ4R,GAC5By7D,GAAmBrtE,QAAQ4R,GAC3B07D,GAAiC17D,IAI/BvB,EAAckU,eAChBgpD,GAAoBvtE,QAAQ4R,GAC5B47D,GAAiC57D,IAInCq8D,GAA0Br8D,GAC1Bs8D,GAAsBt8D,GACtBu8D,GAAoBv8D,IAUhBq8D,GAA4B,SAASr8D,GAGzCwV,GAAMhc,MAAM0Z,MAAQsC,GAAMhc,MAAM0Z,MAAMjM,QACpC,SAAA4M,GAAI,OAAIA,EAAK9T,UAAYC,MAWvBs8D,GAAwB,SAASt8D,GACjCwV,GAAM3wB,SAkCZ,SAAgCmb,GAC9B,IAAMnb,EAAU2wB,GAAM3wB,QAEtBQ,OAAO0J,KAAKlK,GAASmK,SAAQ,SAAS9I,GACqB,mBAA9CrB,EAAQqB,GAAKs2E,8BACtB33E,EAAQqB,GAAKs2E,6BAA6Bx8D,MAtC5Cy8D,CAAuBz8D,GAGzB,IAAM08D,EAAoBlnD,GAAMhc,MAAMyZ,gBAAgBg4C,WACpD,SAAAlrD,GAAO,OAAIA,IAAYC,KAGrB08D,GAAqB,EACvBlnD,GAAMhc,MAAMyZ,gBAAgB3pB,OAAOozE,EAAmB,GAEtD96D,GAAOH,KAAK,6BAWV86D,GAAsB,SAASx8D,GACnCi3C,GAAmBQ,eAAez3C,IC5GpC,IASI48D,GAJEvuE,GAAU,WACd7J,OAAOulC,oBAAoB,SAAU8yC,IAAiB,IAKxD,SAASA,KAEFD,KACHA,GAAgBntE,YAAW,WACzBmtE,GAAgB,KAChBE,OAGC,KAIA,IAAMA,GAA4B,WACvCrjE,GAAMyZ,gBAAgBjkB,SAAQ,SAAA+Q,GAC5BE,EAAStF,YAAYmiE,OAAO/8D,OAIjB,GA7BA,WACb3R,KACA7J,OAAOwlC,iBAAiB,SAAU6yC,IAAiB,ICatC,cAAoC,IAA3B9uD,EAA2B,uDAAJ,GAC7CivD,KACAC,KAEA,IAAMz2C,EAA4B7nB,GAAU,uBAExChO,MAAMsB,QAAQ8b,GAChBA,EAAqB9e,SAAQ,SAAAiuE,GAAsB,IACzC3oD,EAA8B2oD,EAA9B3oD,WAAY7V,EAAkBw+D,EAAlBx+D,cAEdra,EAASsa,GAAU4V,GAErBlwB,IACFA,EAAOqa,cAAgBpZ,OAAOotB,OAC5B,GACAruB,EAAOqa,cACPA,OAMN8nB,EAA0B9nB,cAAgBpZ,OAAOotB,OAC/C,GACA8T,EAA0B9nB,cAC1BqP,GAIAyY,EAA0B9nB,cAAcqU,qBAC1CoqD,MAWJ,SAASH,MAsBT,WACE,IAAMpiE,EAAcsF,EAAStF,YACvBwiE,EAAsBxiE,EAAYK,OAAOoiE,gBACzCC,EAAuB1iE,EAAYK,OAAOsiE,iBAEhD3iE,EAAY4iE,OAAOzzC,oBACjBqzC,EACAK,IAEF7iE,EAAY4iE,OAAOzzC,oBACjBuzC,EACAI,IA/BFC,GAEA,IAAM/iE,EAAcsF,EAAStF,YACvBwiE,EAAsBxiE,EAAYK,OAAOoiE,gBACzCC,EAAuB1iE,EAAYK,OAAOsiE,iBAEhD3iE,EAAY4iE,OAAOxzC,iBAAiBozC,EAAqBK,IACzD7iE,EAAY4iE,OAAOxzC,iBACjBszC,EACAI,IAyCJ,SAAST,KACP,IAAMn4E,EAAU2wB,GAAM3wB,QAEtBQ,OAAO0J,KAAKlK,GAASmK,SAAQ,SAAS9I,GACW,mBAApCrB,EAAQqB,GAAK6oB,oBACtBlqB,EAAQqB,GAAK6oB,wBC3GnB,IAUI4uD,GAVE/7D,GAASL,EAAU,4BAEnB7B,GAAW,gBACXk+D,GAAc,WAEhBn/D,GAAgB,CAClBo/D,oBAAqB90D,IACrB+0D,sBAAsB,GAIlBC,GAAqB,GAE3B,SAASC,GAAMC,EAAQC,GAGrBD,EAAS3xE,KAAKoG,MAAMurE,IAAW,EAG/B,IAAM51E,EAAM,GACRrD,GAHJk5E,EAAU5xE,KAAKoG,MAAMwrE,IAAY,GAGfD,EAAS,EAE3B,GAAIj5E,GAAK,EACP,OAAOqD,EAGT,KAAOrD,KACLqD,EAAIrD,GAAKk5E,IAGX,OAAO71E,EAGT,IAAMugB,GAAM,SAASvgB,GACnB,OAAOiE,KAAKsc,IAAIxb,MAAM,KAAM/E,IAGxB8f,GAAM,SAAS9f,GACnB,OAAOiE,KAAK6b,IAAI/a,MAAM,KAAM/E,IAuB9B,SAASmgE,GAASzoD,GAEhB,IAAMwC,EAAYvB,EAAajB,EAAS,SAExC,GAAKwC,GAAcA,EAAU5C,MAAS4C,EAAU5C,KAAK1Y,OAArD,CAIA,IAAMkH,EAAQoU,EAAU5C,KAAK,GAGvBw+D,EAAoBn9D,EAAajB,EAASL,IAEhD,GAAKy+D,EAAL,CAIA,IAAMC,EAAgBD,EAAkBx+D,KAAK,IAAM,GAWnD,GAPGy+D,EAAcC,kBACdD,EAAcC,iBAAiBp3E,SAEhCm3E,EAAc3xE,SAAU,IAII,IAA1B2xE,EAAc3xE,QAsClB,GArBA0xE,EAAkBx+D,KAAK,GAAG0+D,iBAAiBj9B,MAAK,SAAC35B,EAAGC,GAAJ,OAAUD,EAAIC,KACjC02D,EAAcC,iBAAiB3mE,QAEvC1I,SAAQ,SAASwd,GACpC,IAAM/M,EAAUtR,EAAM6T,SAASwK,GAE1B/M,IAImBQ,EAAStF,YAAYwuD,WAAWC,mBACtD3pD,IAIA6+D,EAAe9xD,OAMd4xD,EAAcC,iBAAiBp3E,OAApC,CAKKwX,GAAcq/D,sBACjB5T,GAAmBN,kBAAkBgU,IA2DvC,IAvDA,IAKIn+D,EACA8+D,EANEC,EAhGR,SAAsBn2E,EAAKob,GAGzB,IAAM7e,EAAI,GACJwN,EAAI,GAUV,OARA/J,EAAI2G,SAAQ,SAASlD,GACfA,EAAI2X,EACN7e,EAAE6I,KAAK3B,GACEA,EAAI2X,GACbrR,EAAE3E,KAAK3B,MAIJ,CACL+8B,IAAKxgC,EAAIqF,QAAQkb,GAAIhkB,IACrBkkC,KAAMzgC,EAAIqF,QAAQya,GAAI/V,KAgFRqsE,CACdL,EAAcC,iBACdlwE,EAAMqU,qBAqCFk2C,EAAsB1B,GAAmBO,uBAC7Cx3C,GAWE2+D,EAAaF,EAAQ31C,IACrB81C,EAAcH,EAAQ11C,KACpB81C,EAAqB,GAGzBF,GAAc,GACdC,EAAcP,EAAcC,iBAAiBp3E,QAC7C,CACA,IAAM2iD,EAAez7C,EAAMqU,oBAQrBq8D,IANJj1B,EAAew0B,EAAcC,iBAAiBK,GAC9CjgE,GAAco/D,sBAK4Ba,GAAc,EACpDI,IAJJV,EAAcC,iBAAiBM,GAAe/0B,EAC9CnrC,GAAco/D,sBAIOc,EAAcP,EAAcC,iBAAiBp3E,OAEpE,IAAK63E,IAAqBD,EACxB,MAGEA,IACFN,EAAmBH,EAAcC,iBAAiBK,KAClDj/D,EAAUtR,EAAM6T,SAASu8D,GACzBK,EAAmBnxE,KAAKgS,IAGtBq/D,IACFP,EAAmBH,EAAcC,iBAAiBM,KAClDl/D,EAAUtR,EAAM6T,SAASu8D,GACzBK,EAAmBnxE,KAAKgS,IAhKH,2BAoKzB,YAA0Bm/D,EAAmB/nE,UAA7C,+CAAwD,KAA7CkoE,EAA6C,QACtD7U,GAAmBR,WACjB3pD,EACAg/D,EACAnB,IArFiB,EAuFjBjlC,EACAswB,GACA,IA5KqB,kFAkLzBiB,GAAmBpB,kBAhJnB,SAASwV,EAAe9xD,GACtB,IAAMjjB,EAAQ60E,EAAcC,iBAAiB3wE,QAAQ8e,GAEjDjjB,GAAS,GAEX60E,EAAcC,iBAAiB/0E,OAAOC,EAAO,GA8CjD,SAASovC,EAAax4B,GACpByB,GAAOnW,IAAI,oBAAqB0U,EAAMV,SACtC,IAAM+M,EAAere,EAAM6T,SAAStU,QAAQyS,EAAMV,SAElD6+D,EAAe9xD,GAEfrP,EAAa4C,EAAS/E,EAAOgC,4BAA6B,CACxD+C,UACAN,QAASU,EAAMV,QACfu/D,WAAYxyD,EACZ4xD,gBACAjwE,UAMEiwE,EAAcC,kBACdD,EAAcC,iBAAiBp3E,OAAS,GAG1CkW,EAAa4C,EAAS/E,EAAOiC,oBAAqB,CAChD8C,UACAq+D,gBACAjwE,UAUN,SAAS86D,EAAaj/D,GACpB4X,GAAOnW,IAAI,uBAAwBzB,GAC/B0uD,GACFA,EAAoB34C,EAASN,EAASzV,EAAO,kBA2DnD,SAASi1E,GAAyBl/D,GAChC,OAAO,SAAStQ,GACd,IAKI8S,EALE0B,EAAYxU,EAAE6N,OAOpB,IAEEiF,EAAYvB,EAAajB,EAAS,SAClC,MAAO/V,GACP,OAGF,GAAKuY,GAAcA,EAAU5C,MAAS4C,EAAU5C,KAAK1Y,OAArD,CAIA,IACMulB,EADQjK,EAAU5C,KAAK,GACFqC,SAAStU,QAAQuW,EAAUxE,SAItD,KAAI+M,EAAe,GAAnB,CAIA,IAAM2xD,EAAoBn9D,EAAajB,EAASL,IAG7Cy+D,GACAA,EAAkBx+D,MAClBw+D,EAAkBx+D,KAAK1Y,QAK1Bk3E,EAAkBx+D,KAAK,GAAG0+D,iBAAiB5wE,KAAK+e,MAIpD,SAAS0yD,GAAezvE,GAGtBC,aAAaiuE,IACbA,GAAuBnuE,YAAW,WAChC,IAAMuQ,EAAUtQ,EAAE1I,OAIlB,IACEyhE,GAASzoD,GACT,MAAO/V,GACP,UAED+zE,IAwGL,IAOeK,GAPO,CACpB3vE,OAtGF,SAAgBsR,GAEiBiB,EAAajB,EAASL,IAE9BC,KAAO,GAG9B,IAAM4C,EAAYvB,EAAajB,EAAS,SAExC,GAAKwC,GAAcA,EAAU5C,MAAS4C,EAAU5C,KAAK1Y,OAArD,CAIA,IAAMkH,EAAQoU,EAAU5C,KAAK,GAG7B,IAA2B,IAAvBxR,EAAMwqD,aAAV,CASA,IAAMwlB,EAAoB,CACxBE,iBAAkBL,GAAM,EAAG7vE,EAAM6T,SAAS/a,OAAS,GACnDwF,SAAS,EACTowB,UAAW,GAIPsiD,EAAsBhB,EAAkBE,iBAAiB3wE,QAC7DS,EAAMqU,qBAGR27D,EAAkBE,iBAAiB/0E,OAAO61E,EAAqB,GAE/Dr+D,EAAaf,EAASL,GAAUy+D,GAEhC3V,GAASzoD,GAETA,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOwvD,UAC5B0U,IAEFn/D,EAAQgqB,iBACN9pB,EAAStF,YAAYK,OAAOwvD,UAC5B0U,IAGF,IAAME,EAAwBH,GAAyBl/D,GAEvDE,EAAStF,YAAY4iE,OAAOzzC,oBAC1B7pB,EAAStF,YAAYK,OAAOqkE,4BAC5BD,GAEFn/D,EAAStF,YAAY4iE,OAAOxzC,iBAC1B9pB,EAAStF,YAAYK,OAAOqkE,4BAC5BD,QA1CAx9D,GAAOH,KACL,mEAqFJrT,QAxCF,SAAiB2R,GACfrQ,aAAaiuE,IACb59D,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOwvD,UAC5B0U,IAGF,IAAME,EAAwBH,GAAyBl/D,GAEvDE,EAAStF,YAAY4iE,OAAOzzC,oBAC1B7pB,EAAStF,YAAYK,OAAOqkE,4BAC5BD,GAGF,IAAMjB,EAAoBn9D,EAAajB,EAASL,IAG5Cy+D,GAAqBA,EAAkBx+D,KAAK1Y,SAC9Ck3E,EAAkBx+D,KAAK,GAAGlT,SAAU,EAGpCy9D,GAAmBN,kBAAkBgU,MAoBvC0B,iBAhBF,WACE,OAAO7gE,IAgBP8gE,iBAbF,SAA0B9mC,GvDpU1B,IAAoC+mC,EuDqUlC/gE,GAAgBg6B,EAEZA,EAAOuuB,0BvDvUuBwY,EuDwUL/mC,EAAOuuB,wBvDvUpCvB,GAAgC+Z,KwD7EbC,G,WACnB,aAAc,YACZ12E,KAAKyZ,oBAAsB,EAC3BzZ,KAAK22E,SAAW,GAChB32E,KAAK42E,iBAAclsE,E,2CAGdsM,EAAS6/D,GAAa,WAE3B,IAAKjzE,OAAOkzE,UAAU92E,KAAKyZ,qBACzB,MAAM,IAAItU,MACR,6DAIJ,IAAKnF,KAAK42E,YACR,MAAM,IAAIzxE,MAAM,0CAGb0xE,IAGHA,EAFiB5+D,EAAajB,EAAS,SAEhBJ,MAIzB,IAAMhF,EAAcsF,EAAStF,YAGvBmlE,EAAkBF,EAAY,GAC9BG,EAAiBD,EAAgB99D,SAASjZ,KAAKyZ,qBAC/Cw9D,EAAqBJ,EAAYloE,MAAM,EAAGkoE,EAAY34E,QAE5D0T,EAAY+U,kBAAkBqwD,GAAgBppE,MAAK,SAAAspE,GACjD,IAAIC,EAAc,EAAKR,SAAS,GAG5BQ,EACFvlE,EAAYwlE,cAAcpgE,EAASkgE,EAAWC,IAG9CA,EAAcvlE,EAAYylE,SACxBrgE,EACAkgE,EACAH,EAAgBntE,SAElB,EAAK+sE,SAASjyE,KAAKyyE,IAIrBvlE,EAAYk+C,aAAa94C,EAASkgE,GAGlCD,EAAmBhxE,SAAQ,SAACqxE,EAAQC,GAClC,IAAM7gE,EAAU,EAAKkgE,YAAYU,EAAOr+D,SAAU+9D,GAC5CQ,EAAaD,EAAoB,EACnCE,EAAiB,EAAKd,SAASa,GAK9BC,IACHA,EAAiB7lE,EAAYylE,SAC3BrgE,OACAtM,EACA4sE,EAAO1tE,SAET,EAAK+sE,SAASjyE,KAAK+yE,IAGjB/gE,EAIF9E,EAAY+U,kBAAkBjQ,GAAS9I,MAAK,SAAAwJ,GAC1CxF,EAAYwlE,cAAcpgE,EAASI,EAAOqgE,GAC1C7lE,EAAYkX,YAAY9R,OAK1BpF,EAAYwlE,cAAcpgE,OAAStM,EAAW+sE,GAC9C7lE,EAAY8lE,eAAe1gE,EAASmgE,GACpCvlE,EAAYkX,YAAY9R,c,KCpF5B2gE,GAAiB,GAEvBA,GAAejB,eAAiBA,GAEjBiB,UCAThhE,GAAW,WA2DjB,SAASihE,GAAiBC,GACxB,IAAMztC,EAAKytC,EAAaC,gBAEN,IAAP1tC,IACTytC,EAAaC,gBAAaptE,EACtBmtE,EAAaE,qBACfpxE,aAAayjC,GAEb4tC,cAAc5tC,IA0BpB,SAAS6tC,GAASjhE,EAASkhE,GACzB,IAAIL,EACAM,EAEJ,QAAgBztE,IAAZsM,EACF,MAAM,IAAI7R,MAAM,2CAGlB,IAAMizE,EAAgBngE,EAAajB,EAAS,SAE5C,GAAKohE,GAAkBA,EAAcxhE,MAASwhE,EAAcxhE,KAAK1Y,OAAjE,CAIA,IAEI6iE,EAFEnvD,EAAcsF,EAAStF,YAI7B,GAAIwmE,EAAcxhE,KAAK1Y,OAAS,EAAG,CACjC,IAAM8iE,EAAoB/oD,EAAajB,EAAS,iBAG9CgqD,GACAA,EAAkBpqD,MAClBoqD,EAAkBpqD,KAAK1Y,SAEvB6iE,EAAgBC,EAAkBpqD,KAAK,IAI3C,IAAM4C,EAAY4+D,EAAcxhE,KAAK,GAE/ByhE,EAAmBpgE,EAAajB,EAASL,IAG5C0hE,GACAA,EAAiBzhE,MACjByhE,EAAiBzhE,KAAK1Y,OAkBvB05E,GAFAC,EAAeQ,EAAiBzhE,KAAK,IAFrCmB,EAAaf,EAASL,GAZtBkhE,EAAe,CACbC,gBAAYptE,EACZwtE,gBAAiB,GACjBI,wBAAoB5tE,EACpB6tE,UAAW,EACXC,qBAAiB9tE,EACjB+tE,uBAAuB,EACvBV,sBAAsB,EACtBW,MAAO,EACP5qE,SAAS,EACTq6C,MAAM,KAUN+vB,EAAkB,GAAKA,EAAkB,KAC3CL,EAAaK,gBAAkBt0E,OAAOs0E,GACtCL,EAAa/pE,QAAU+pE,EAAaK,gBAAkB,EAEtDL,EAAaY,uBAAwB,IAKE,IAAvCZ,EAAaY,uBACbZ,EAAaW,iBACbX,EAAaW,gBAAgBt6E,SAAWsb,EAAUP,SAAS/a,SAE3Di6E,EA5JJ,SAA6BtrC,EAAQ6rC,GACnC,IAAI98E,EACA+8E,EACAC,EACAnxD,EAAM,EACJoxD,EAAQhsC,EAAO3uC,OACf46E,EAAW,GAUjB,IAPAA,EAASC,eAAgB,GAEJ,iBAAVL,GAAsBA,GAAS,KACxCA,EAAQ,GAIL98E,EAAI,EAAGA,EAAIi9E,EAAOj9E,IAErBg9E,EAASh1E,OAAOipC,EAAOjxC,IAAM88E,EAAS,EACtCI,EAASp0E,KAAKk0E,GACJ,IAANh9E,EAEF+8E,EAASC,EACAA,IAAUD,IACnBG,EAASC,eAAgB,GAG3BtxD,GAAOmxD,EAeT,OAZIE,EAAS56E,OAAS,IAIlB06E,EAHEE,EAASC,cAGFtxD,EAAMqxD,EAAS56E,OAAU,EAE1B46E,EAAS,GAGnBA,EAASp0E,KAAKk0E,IAGTE,EAkHcE,CACjBnB,EAAaW,gBACbX,EAAaa,QAKjB,IAAMO,EAAiB,WAErB,IACExpB,EACAC,EACAC,EACAN,EAAkB71C,EAAUC,oBAExBy/D,EAAa1/D,EAAUP,SAAS/a,OAQtC,GANI25E,EAAa/pE,QACfuhD,IAEAA,KAICwoB,EAAa1vB,OACbkH,EAAkB,GAAKA,GAAmB6pB,GAK3C,OAHAtB,GAAiBC,QAnHvB,SAA0B7gE,GACxB,IAAMmiE,EAAc,CAClBniE,WAGF5C,EAAa4C,EAAS/E,EAAO8B,aAAcolE,GA+GvCC,CAAiBpiE,GAMfq4C,GAAmB6pB,IACrB7pB,EAAkB,GAGhBA,EAAkB,IACpBA,EAAkB6pB,EAAa,GAG7B7pB,IAAoB71C,EAAUC,sBAChCg2C,EAAsBxB,GAAmBG,oBAAoBp3C,GAC7D04C,EAAoBzB,GAAmBK,kBAAkBt3C,GACzD24C,EAAsB1B,GAAmBO,uBAAuBx3C,GAE5Dy4C,GACFA,EAAoBz4C,KAGS,IAA3BwC,EAAUo2C,aACHh+C,EAAYi+C,UAAUr2C,EAAUP,SAASo2C,IAEzCz9C,EAAY+U,kBACnBnN,EAAUP,SAASo2C,KAIhBzhD,MACL,SAASwJ,GACP,IACEoC,EAAUC,oBAAsB41C,EAC5B0R,GACFA,EAActnD,oBAAsB41C,EACpC0R,EAAcG,OAAOlqD,EAASohE,EAAcxhE,OAE5ChF,EAAYk+C,aAAa94C,EAASI,GAEhCs4C,GACFA,EAAkB14C,EAASI,GAE7B,MAAOnW,GACP,WAGJ,SAASA,GACP,IAAMyV,EAAU8C,EAAUP,SAASo2C,GAE/BM,GACFA,EAAoB34C,EAASN,EAASzV,QAU9Ck3E,GACAA,EAAiBj6E,OAAS,GAC1Bi6E,EAAiBY,eAEjBlB,EAAaE,sBAAuB,EACpCF,EAAaC,WAAarxE,YAAW,SAAS4yE,IAC5CxB,EAAaC,WAAarxE,WACxB4yE,EACAlB,EAAiB3+D,EAAUC,sBAE7Bw/D,MACC,KAGHpB,EAAaE,sBAAuB,EACpCF,EAAaC,WAAawB,YACxBL,EACA,IAAO11E,KAAKC,IAAIq0E,EAAaK,oBAUnC,SAASqB,GAASviE,GAChB,IAAMqhE,EAAmBpgE,EAAajB,EAASL,IAG5C0hE,GACAA,EAAiBzhE,MACjByhE,EAAiBzhE,KAAK1Y,QAKzB05E,GAAiBS,EAAiBzhE,KAAK,IC9RzC,IAAM4iE,GAAuB,SAASxiE,EAASmV,GAC7C,IAAMsxB,EAAYhxB,GAAMhc,MAAM0Z,MAAM+3C,WAClC,SAAAp3C,GAAI,OAAIA,EAAK9T,UAAYA,GAAW8T,EAAK3uB,OAASgwB,KAGhDsxB,GAAa,GACfhxB,GAAMhc,MAAM0Z,MAAM5pB,OAAOk9C,EAAW,IAclCg8B,GAAa,SAASttD,GAC1ButD,GAAoBvtD,GACpBM,GAAMhc,MAAMyZ,gBAAgBjkB,SAAQ,SAAA+Q,GAClCwiE,GAAqBxiE,EAASmV,OAc5ButD,GAAsB,SAASvtD,GACTxW,GAAU,uBAA5BD,cAEWmU,uBAIf4C,GAAMhc,MAAMuZ,YAAYmC,WACnBM,GAAMhc,MAAMuZ,YAAYmC,IC3C7BwtD,GAA2B,SAAS3iE,EAASmV,EAAUviB,GAC3D,IAAMkhB,EAAOuB,GAAkBrV,EAASmV,GAEpCrB,GACFA,EAAKkD,aAAapkB,IAehBq4D,GAAiB,SAAS91C,EAAUviB,GACxC6G,GAAMyZ,gBAAgBjkB,SAAQ,SAAA+Q,GAC5B2iE,GAAyB3iE,EAASmV,EAAUviB,OCnBhD,SAASgwE,GAAiCC,EAAWC,GACnD,IAAItjE,EAAY,GA2DhB,MARsC,CACpC/Z,IAlBF,SAAmCua,EAASL,GAE1C,OAAIkjE,EAAUl1E,QAAQgS,IAAa,IAEU,IAAvCH,EAAU/Y,eAAekZ,KAC3BH,EAAUG,GAAY,CACpBC,KAAM,KAIHJ,EAAUG,IAIZmjE,EAAgBr9E,IAAIua,EAASL,IAKpCU,IAzCF,SAAmCL,EAASL,EAAUC,GAEpD,KAAIijE,EAAUl1E,QAAQgS,IAAa,GAcjC,OAAOmjE,EAAgBziE,IAAIL,EAASL,EAAUC,IAZH,IAAvCJ,EAAU/Y,eAAekZ,KAC3BH,EAAUG,GAAY,CACpBC,KAAM,KAIOJ,EAAUG,GAGlBC,KAAKlS,KAAKkS,IA6BrBa,cApDF,WACE,OAAOjB,GAoDPkB,iBAjDF,SAA0B43D,GACxB94D,EAAY84D,GAiDZ94D,aAMJ,IAAMujE,GAAqB,GAE3B,SAASC,GAAqBhjE,EAASijE,GACrC,IAAIH,EAAkBjiE,EAA2Bb,GAE5C8iE,IACHA,EAAkBliE,GAGpB,IAAIsiE,EAAa,CACf,QACA,gBACA,WACA,SACA,OACA,iBACA,aACA,iBAGED,IACFC,EAAaA,EAAWjzE,OAAOgzE,IAGjC,IAAME,EAA4BP,GAChCM,EACAJ,GAGFC,GAAmBr1E,KAAKy1E,GACxB7hE,EAA2BtB,EAASmjE,GAGtC,IAAMA,GAA4B,CAChCP,oCACAI,yBCzGF,SAASI,KACP,IAAM5jE,EAAY,GAiFlB,MAAO,CACL/Z,IAnDF,SAA8C49E,EAAkB1jE,GAE9D,IAAmD,IAA/CH,EAAU/Y,eAAe48E,GAA7B,CAIA,IAAMC,EAA4B9jE,EAAU6jE,GAG5C,IAA2D,IAAvDC,EAA0B78E,eAAekZ,GAM7C,OAFiB2jE,EAA0B3jE,KAuC3CU,IA/EF,SACEgjE,EACA1jE,EACAC,IAGmD,IAA/CJ,EAAU/Y,eAAe48E,KAC3B7jE,EAAU6jE,GAAoB,IAGhC,IAAMC,EAA4B9jE,EAAU6jE,IAGe,IAAvDC,EAA0B78E,eAAekZ,KAC3C2jE,EAA0B3jE,GAAY,CACpCC,KAAM,KAIO0jE,EAA0B3jE,GAGlCC,KAAKlS,KAAKkS,IA0DnB2jE,OAnCF,SACEF,EACA1jE,EACAC,GAGA,IAAmD,IAA/CJ,EAAU/Y,eAAe48E,GAA7B,CAIA,IAAMC,EAA4B9jE,EAAU6jE,GAG5C,IAA2D,IAAvDC,EAA0B78E,eAAekZ,GAA7C,CAQA,IAJA,IAAMwB,EAAWmiE,EAA0B3jE,GAEvCyB,GAAe,EAEVxc,EAAI,EAAGA,EAAIuc,EAASvB,KAAK1Y,OAAQtC,IACpCuc,EAASvB,KAAKhb,KAAOgb,IACvBwB,EAAcxc,IAIG,IAAjBwc,GACFD,EAASvB,KAAKrW,OAAO6X,EAAa,OAaxC,IAAMoiE,GAAiDJ,KC3FxC,YAACpjE,EAASyjE,GAAqC,IAA3BC,EAA2B,uDAAhB,YACtClhD,EAASxiB,EAAQmgD,cAAc,UAGrC,GAAI39B,EAAOmhD,SAAU,CACnB,IAAMC,EAAOphD,EAAOmhD,WAEpB,OAAOn/E,OAAOiG,UAAUo5E,WAAWD,EAAMH,GAK3C,IAAMK,EAAMl5E,SAASk2D,cAAc,KAWnC,GARAgjB,EAAIC,SAAWN,EAKfK,EAAIE,KAAOxhD,EAAOyhD,UAAUP,EAAU,GAGlC94E,SAAS8S,YAAa,CACxB,IAAMhO,EAAI9E,SAAS8S,YAAY,eAE/BhO,EAAEw0E,eACA,SACA,GACA,EACA1/E,OACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,MAGFs/E,EAAIlmE,cAAclO,QACTo0E,EAAIK,WACbL,EAAIK,UAAU,YCrDZtiE,GAASL,EAAU,6BAeV,YAASrc,EAAMi/E,GAA8B,IAAnBC,EAAmB,wDACpDC,EAAoBC,GAAuBp/E,IAE7Cm/E,GAAsBD,GAMtBC,GACFziE,GAAOH,KAAK,wBAAyBvc,GAGvCL,GAAQK,GAAQi/E,EAEgC,mBAArCt/E,GAAQK,GAAM6pB,oBACvBlqB,GAAQK,GAAM6pB,sBAZdnN,GAAOH,KAAK,kDAAmDvc,IAgBnE,SAASo/E,GAAuBp/E,GAC9B,YAAyBuO,IAAlB5O,GAAQK,GCxBF,IC6EFq/E,GAAM,CACjB,gBAAiB/9C,GACjB,0BAA2B2D,GAC3B,qBAAsBhB,GAEtB,4BAA6B2E,GAC7B,gBAAiB1G,EAEjB,sCAAuCuE,GACvC,uCAAwCzD,GACxC,+BAAgCmF,GAChC,8BAA+BF,GAC/B,0BAA2BH,GAC3B,6BAA8B2I,GAC9B,wCAAyC5I,GACzC,4CAA6CE,GAC7C,8BAA+BC,GAE/B,oCAAqCrG,GAAO5B,2BAC5C,qCAAsC4B,GAAO3B,4BAE7C,wBAAyBV,GACzB,eAAgB/C,GAChB,eAAgBtX,GAChB,oBAAqByqB,GACrB,mBAAoB9a,GACpB,oBAAqBs8C,GACrB,0BAA2B37C,GAC3B,qBAAsBmK,GACtB,sBAAuBogB,GACvB,mBAAoB3f,GACpB,0BCxGa,SACbrtB,EACA+H,EACA8d,EACAC,EACAnrB,GAEA,IADAonB,EACA,uDADc,QAEd,GAAoB,UAAhBA,EAAyB,CAC3B,IAAMpf,EAAcsF,EAAStF,YAE7BkjB,EAAUljB,EAAYqf,cAAcja,EAAS8d,GAC7CC,EAAUnjB,EAAYqf,cAAcja,EAAS+d,GAG/C,IAAM7V,EAAO3b,KAAK6b,IAAI0V,EAAQpa,EAAGqa,EAAQra,GACnC2E,EAAM9b,KAAK6b,IAAI0V,EAAQvrB,EAAGwrB,EAAQxrB,GAClC4R,EAAQ5X,KAAKC,IAAIsxB,EAAQpa,EAAIqa,EAAQra,GACrCU,EAAS7X,KAAKC,IAAIsxB,EAAQvrB,EAAIwrB,EAAQxrB,GAE5C6X,GAAKnS,EAASrF,GAAS,SAAAqF,GACrBA,EAAQklB,KAAK,EAAG,EAAGllB,EAAQuqB,OAAOrE,YAAalmB,EAAQuqB,OAAOpE,cAC9DnmB,EAAQklB,KAAKjV,EAAO/D,EAAOkE,GAAMlE,EAAOC,ODmF1C,sBAAuB+d,GACvB,oBAAqBgU,GACrB,kBAAmBvU,GACnB,wBAAyBC,GACzB,mBAAoBQ,GACpB,4BAA6BqT,GAC7B,sBAAuB/B,GACvB,uBAAwBrS,GAExB,oBAAqB6qC,GACrB,2BAA4BjrB,GAC5B,kBAAmB+uB,GACnB,oBAAqB9tB,GACrB,mCD1Ha,SAASliC,EAAgBhI,EAAS0oB,GAa/C,OAVAzgB,EAAStF,YAAY6pD,2BACnBxkD,EACAhI,EAJgB,IAYX,CACL0oB,SALqBA,EAAW1gB,EAAege,SAASI,MARxC,GAchBomD,WAJiB9jD,EAAW1gB,EAAege,SAASI,MAVpC,GAehBqmD,UAfgB,KC0HlB,qBAAsBpa,GACtB,cAAeM,GACf,sBAAuBl2B,GACvB,uCAAwC1Z,GACxC,gCAAiCQ,GACjC,8BAA+BG,GAC/B,8BAA+BsM,GAC/B,wBEvIa,SAASjoB,EAAS2kE,GAC/B3kE,EAAQlV,MAAM85E,iBAAmB,OACjC5kE,EAAQlV,MAAM+5E,mBAAqB,OACnC7kE,EAAQlV,MAAMg6E,cAAgB,OAC9B9kE,EAAQlV,MAAMi6E,aAAe,OAC7B/kE,EAAQlV,MAAMk6E,YAAc,OAC5BhlE,EAAQlV,MAAMm6E,gBAAkB,OAChCjlE,EAAQlV,MAAMo6E,WAAa,OAE3BllE,EAAQmlE,aAAe,KACvBnlE,EAAQolE,cAAgB,kBAAM,IAEF,IAAxBT,IACF3kE,EAAQlV,MAAMu6E,cAAgB,SF2HhC,oBAAqBh1B,GACrB,sCAAuC6X,GACvC,kCAAmCD,GACnC,sBAAuBN,GACvB,sBlEpBF,WAKE,OAJgB,IAAIt8D,OAClB,iEAGayD,KAAKrE,UAAUC,YkEgB9B,0BAA2B+6D,GAC3B,yBAA0BriB,GAC1B,uBAAwBnP,GACxB,oBAAqB72B,EACrB,wBAAyByd,GACzB,YAAagO,GACb,iBAAkBG,GAClB,gBAAiBqI,GACjB,iBAAkBnL,GAClB,kBAAmBpD,GACnB,uBAAwBkO,GACxB,qBAAsB1N,GACtB,gBAAiB8N,GACjB,sBAAuBxkB,GACvB,wBAAyBgoC,GACzB,iBAAkBpzC,EAClB,gBAAiBiyB,GACjB,YAAalC,GACb,wCAAyC6yB,GACzC,uBGvKa,SAAyB10D,GACtC,IAAMkL,EAAcsF,EAAStF,YACvBoF,EAAUtQ,EAAEklC,cACZ30B,EAAiBrF,EAAYuF,kBAAkBH,GAErD,GAAKC,GAAmBA,EAAeG,MAAvC,CAIA,IAAMklE,EAAqB7vD,GAAMhc,MAAM6Z,mBAEvC,MAAO,CACLhW,MAAO9Y,OAAO8Y,OAAS5N,EACvBsQ,UACAie,SAAUrjB,EAAYsjB,YAAYle,GAClCI,MAAOH,EAAeG,MACtB4Q,cAAe,CACb5Q,MAAOklE,EACP9iD,OAAQ5nB,EAAYqf,cAAcja,EAASslE,IAE7CC,QAAS71E,EAAE61E,QACX/V,MAAO9/D,EAAE8/D,SHqJX,oBAAqBgW,GACrB,qBAAsBr6B,GACtB,yBAA0Bs6B,EAC1B,iBAAkBvX,II5KdrsD,GAASL,EAAU,4BAeV,YAASrc,EAAMqiC,GAA0B,IAAnB68C,EAAmB,wDAChDC,EAAoBoB,GAAkBvgF,IAExCm/E,GAAsBD,GAMtBC,GACFziE,GAAOH,KAAK,wBAAyBvc,GAIvC2hC,GAAO3hC,GAAQqiC,EAGfg9C,GAAI,UAAD,OAAWr/E,IAAU2hC,GAAO3hC,IAb7B0c,GAAOH,KAAK,kCAAmCvc,IAgBnD,SAASugF,GAAkBvgF,GACzB,YAAwBuO,IAAjBozB,GAAO3hC,GCrChB,IAAM0c,GAASL,EAAU,2BAgBV,YAASjX,EAAMpF,EAAMwgF,GAAyB,IAAnBtB,EAAmB,wDACrDuB,EAAU,GAAH,OAAMr7E,EAAN,YAAcpF,GACrBm/E,EAAoBuB,GAAqBD,IAE3CtB,GAAsBD,GAMtBC,GACFziE,GAAOH,KAAK,iBAAkBkkE,GAGhCpB,GAAIoB,GAAWD,GATb9jE,GAAOH,KAAK,2BAA4BkkE,IAY5C,SAASC,GAAqBD,GAC5B,YAAwBlyE,IAAjB8wE,GAAIoB,GChCb,IAAM/jE,GAASL,EAAU,uBAgBV,YAASjX,EAAMpF,EAAMwgF,GAAyB,IAAnBtB,EAAmB,wDAC3D,GAAKyB,GAAav7E,EAAMpF,EAAMwgF,GAI9B,OAAQp7E,GACN,IAAK,SACHw7E,GAAe5gF,EAAMwgF,EAAMtB,GAC3B,MACF,IAAK,QACH2B,GAAc7gF,EAAMwgF,EAAMtB,GAC1B,MACF,QACE4B,GAAa17E,EAAMpF,EAAMwgF,EAAMtB,KAgBrC,SAASyB,GAAav7E,EAAMpF,EAAMwgF,GAChC,OAAKp7E,EAMApF,EAMe,WAAhB,IAAOwgF,IAAqC,mBAATA,IACrC9jE,GAAOH,KAAP,wDAEEikE,EAFF,IAGSA,KAGF,IAZP9jE,GAAOH,KAAP,gDAA6DnX,IAEtD,IARPsX,GAAOH,KAAK,iDAEL,GCxCI,gBAASwkE,GAA0B,IAAnB7B,EAAmB,wDAChD6B,EAAMj3E,SAAQ,YAA0B,IAAvB1E,EAAuB,EAAvBA,KAAMpF,EAAiB,EAAjBA,KAAMwgF,EAAW,EAAXA,KAC3BQ,GAAS57E,EAAMpF,EAAMwgF,EAAMtB,OCDhB,YAAS+B,EAActuB,EAAeI,GAEnD,GAAIA,IAAkBJ,EAAtB,CAIA,IAAMl9C,EAAcsF,EAAStF,YAEvByrE,EAAiBzrE,EAAYsjB,YAAY45B,GACzCwuB,EAAiB1rE,EAAYsjB,YAAYg6B,GAI7CouB,EAAe9Z,IAAIC,cAAgB4Z,EAAe7Z,IAAIC,aACtD6Z,EAAe9Z,IAAIE,eAAiB2Z,EAAe7Z,IAAIE,cACvD4Z,EAAe9wC,SAAW6wC,EAAe7wC,SAM3C8wC,EAAe9Z,IAAIC,YAAc4Z,EAAe7Z,IAAIC,YACpD6Z,EAAe9Z,IAAIE,aAAe2Z,EAAe7Z,IAAIE,aACrD4Z,EAAe9wC,OAAS6wC,EAAe7wC,OACvC4wC,EAAaplB,YAAY9I,EAAeouB,MCxB3B,YAASF,EAActuB,EAAeI,GAE/CA,IAAkBJ,GAItB53C,EAAStF,YAAYkX,YAAYomC,ICVnC,SAASquB,GAAO/1E,GACd,OAAOA,EAAM0W,QAAO,SAASrhB,EAAO2D,EAAO9B,GACzC,OAAOA,EAAKiG,QAAQ9H,KAAW2D,KA6apBg9E,OAhaf,SAAsBlpE,EAAO65C,GAC3B,IAAMv8C,EAAcsF,EAAStF,YACvB6rE,EAAOz9E,KACP09E,EAAiB,GACjBC,EAAiB,GAEnBC,GAAoB,EAClBC,EAAc,GAChBlvB,EAAeR,EA4HnB,SAASgtB,EAAUrsB,EAAe5zC,GAChC,IAAM4iE,GAAcL,EAAK/5E,QACnBq6E,GAAcL,EAAex/E,SAAWy/E,EAAez/E,OAEzD4/E,GAAcC,IAIlBH,GAAoB,EACpBD,EAAe13E,SAAQ,SAASipD,GAC9B,IAAM8uB,EAAcL,EAAeh5E,QAAQuqD,GAE3C,IAAqB,IAAjB8uB,EAAJ,CAIA,IAAMC,EAAgBJ,EAAY5kE,SAAS0kE,eAAeK,GACpDE,EAAcR,EAAe/4E,QAAQmqD,GAE3C,IAAqB,IAAjBovB,EAAJ,CAIA,IAEIC,EAFEpvB,EAAgB8uB,EAAY5kE,SAASykE,eAAeQ,GAItDnvB,IAAkBkvB,EACpBE,EAAqB,OAC6BzzE,IAAzCmzE,EAAYO,UAAUrvB,KAC/BovB,EACEN,EAAYO,UAAUrvB,GAAekvB,IAGzCtvB,EACE8uB,EACA3uB,EACAI,EACAh0C,EACAijE,QAGJP,GAAoB,GAUtB,SAASS,EAAQ33E,GACf,IAAMwU,EAAYxU,EAAE6N,QAEM,IAAtBqpE,GAIJzC,EAAUz0E,EAAEklC,cAAe1wB,GA0L7B,SAASojE,EAAe53E,GACtB,IAAMsQ,EAAUtQ,EAAE6N,OAAOyC,QAEzBymE,EAAKlD,OAAOvjE,GrE9RhB,SAAmCA,GACjC,IAAK,IAAML,KAAYkrD,GACrBA,GAAmBlrD,GAAYkrD,GAAmBlrD,GAAUuH,QAC1D,SAAA8jD,GAAgB,OAAIA,EAAiBhrD,UAAYA,KqE4RnDunE,CAA0BvnE,GAnX5BhX,KAAK0D,SAAU,EAOf1D,KAAKw+E,WAAa,SAASrwB,GACzBQ,EAAeR,GAOjBnuD,KAAKy+E,WAAa,WAChB,OAAO9vB,GAQT3uD,KAAK0+E,aAAe,WACbhB,EAAex/E,QAAWy/E,EAAez/E,SAI9C2/E,EAAYO,UAAY,GACxBP,EAAY5kE,SAAW,CACrBykE,eAAgB,GAChBC,eAAgB,IAGlBD,EAAez3E,SAAQ,SAAS6oD,GAC9B,IAAM6vB,EAAuB/sE,EAAYuF,kBAAkB23C,GAE3D,GAAK6vB,GAAyBA,EAAqBvnE,MAAnD,CAIA,IAAM23C,EAAgB4vB,EAAqBvnE,MAAMV,QAC3Cs4C,EAAmBp9C,EAAY0U,SAAS7pB,IAC5C,mBACAsyD,GAGF,GAAKC,GAAqBA,EAAiB9rC,qBAA3C,CAIA,IAAM07D,EAAsB/sD,GAC1Bm9B,EAAiB9rC,sBAGf26D,EAAYpgF,eAAekhF,KAG/Bd,EAAYO,UAAUrvB,GAAiB,GAEvC8uB,EAAY5kE,SAASykE,eAAeh5E,KAAKqqD,GAEzC4uB,EAAe13E,SAAQ,SAASipD,GAC9B,IAAM2vB,EAAuBjtE,EAAYuF,kBACvC+3C,GAGF,GAAK2vB,GAAyBA,EAAqBznE,MAAnD,CAIA,IAAM6mE,EAAgBY,EAAqBznE,MAAMV,QAIjD,GAFAmnE,EAAY5kE,SAAS0kE,eAAej5E,KAAKu5E,GAErCnvB,IAAkBI,GAIlBH,IAAkBkvB,IAKpBJ,EAAYO,UAAUrvB,GAAetxD,eAAewgF,GADtD,CAMA,IAAMrrD,EAAmBhhB,EAAY0U,SAAS7pB,IAC5C,mBACAwhF,GAGF,GAAKrrD,GAAqBA,EAAiB1P,qBAA3C,CAIA,IAAM47D,EAAsBjtD,GAC1Be,EAAiB1P,sBAGnB26D,EAAYO,UAAUrvB,GACpBkvB,GACEa,EAAoBzsD,QAAQC,IAAIssD,SAGjCtiF,OAAO0J,KAAK63E,EAAYO,UAAUrvB,IAAgB7wD,eAC9C2/E,EAAYO,UAAUrvB,WAiFnC/uD,KAAK++E,UAAY,SAAS/nE,IAIT,IAFD0mE,EAAe/4E,QAAQqS,KAOrC0mE,EAAeh5E,KAAKsS,GAGpB1C,EAAM3O,MAAM,KAAKM,SAAQ,SAAA+4E,GACvBhoE,EAAQgqB,iBAAiBg+C,EAAUX,MAIrCZ,EAAKiB,eAELjB,EAAKwB,0BASPj/E,KAAKk/E,UAAY,SAASloE,IAIT,IAFD2mE,EAAeh5E,QAAQqS,KAOrC2mE,EAAej5E,KAAKsS,GAGpBymE,EAAKiB,eAGL/vB,EAAa8uB,EAAMzmE,EAASA,EAAS,GAErCymE,EAAKwB,0BASPj/E,KAAKqX,IAAM,SAASL,GAClBymE,EAAKsB,UAAU/nE,GACfymE,EAAKyB,UAAUloE,IASjBhX,KAAKm/E,aAAe,SAASnoE,GAE3B,IAAMxW,EAAQk9E,EAAe/4E,QAAQqS,IAEtB,IAAXxW,IAKJk9E,EAAen9E,OAAOC,EAAO,GAG7B8T,EAAM3O,MAAM,KAAKM,SAAQ,SAAA+4E,GACvBhoE,EAAQ+pB,oBAAoBi+C,EAAUX,MAIxCZ,EAAKiB,eAGLvD,EAAUnkE,GACVymE,EAAKwB,0BASPj/E,KAAKo/E,aAAe,SAASpoE,GAE3B,IAAMxW,EAAQm9E,EAAeh5E,QAAQqS,IAEtB,IAAXxW,IAKJm9E,EAAep9E,OAAOC,EAAO,GAG7Bi9E,EAAKiB,eAGL/vB,EAAa8uB,EAAMzmE,EAASA,EAAS,GACrCymE,EAAKwB,0BASPj/E,KAAKu6E,OAAS,SAASvjE,GACrBymE,EAAK2B,aAAapoE,GAClBymE,EAAK0B,aAAanoE,IAQpBhX,KAAKivD,kBAAoB,WACvB,OAAOyuB,GAQT19E,KAAKq/E,kBAAoB,WACvB,OAAO1B,GAWT39E,KAAK8vD,aAAe,SAAS94C,EAASI,EAAO6d,GAC3C2oD,GAAoB,EACpBhsE,EAAYk+C,aAAa94C,EAASI,EAAO6d,GACzC2oD,GAAoB,GAUtB59E,KAAKg4D,YAAc,SAAShhD,EAASie,GACnC2oD,GAAoB,EACpBhsE,EAAYomD,YAAYhhD,EAASie,GACjC2oD,GAAoB,GAqBtB59E,KAAKi/E,sBAAwB,WACV1B,GAAOG,EAAez2E,OAAO02E,IAErC13E,SAAQ,SAAS+Q,GACxBA,EAAQ+pB,oBACN7pB,EAAStF,YAAYK,OAAOsiE,iBAC5B+J,GAEFtnE,EAAQgqB,iBACN9pB,EAAStF,YAAYK,OAAOsiE,iBAC5B+J,OASNt+E,KAAKsE,QAAU,WACIi5E,GAAOG,EAAez2E,OAAO02E,IAErC13E,SAAQ,SAAS+Q,GACxBymE,EAAKlD,OAAOvjE,QClaH,YAASomE,EAActuB,EAAeI,EAAeh0C,GAElE,GAAI4zC,IAAkBI,GAKjBh0C,GAAcA,EAAU4Y,UAA7B,CAIA,IAAMliB,EAAcsF,EAAStF,YAGvB4H,EADsBvB,EAAai3C,EAAe,SAClBt4C,KAAK,GAGvCy4C,EAAkB71C,EAAUC,oBAAsByB,EAAU4Y,UAMhE,GAHAu7B,EAAkBxvB,GAAKwvB,EAAiB,EAAG71C,EAAUP,SAAS/a,OAAS,GAGnEsb,EAAUC,sBAAwB41C,EAAtC,CAIA,IAAMI,EAAsBxB,GAAmBG,oBAC7Cc,GAEIQ,EAAoBzB,GAAmBK,kBAAkBY,GACzDS,EAAsB1B,GAAmBO,uBAC7CU,GAGF11C,EAAUC,oBAAsB41C,EAChC,IAAM4R,EAAaznD,EAAUP,SAASo2C,GAElCI,GACFA,EAAoBP,KAKS,IAA3B11C,EAAUo2C,aACHh+C,EAAYi+C,UAAUoR,GAEtBrvD,EAAY+U,kBAAkBs6C,IAGlCrzD,MACL,SAASwJ,GACP,IAAM6d,EAAWrjB,EAAYsjB,YAAYg6B,GAErC11C,EAAUC,sBAAwB41C,IAItC+tB,EAAattB,aAAaZ,EAAe93C,EAAO6d,GAC5Cy6B,GACFA,EAAkBR,EAAe93C,OAGrC,SAASnW,GACP,IAAMyV,EAAU8C,EAAUP,SAASo2C,GAE/BM,GACFA,EAAoBT,EAAex4C,EAASzV,SCpErC,YAASm8E,EAActuB,EAAeI,GAEnD,GAAIA,IAAkBJ,EAAtB,CAIA,IAAMl9C,EAAcsF,EAAStF,YACvB0tE,EAAkBrnE,EAAa62C,EAAe,SAASl4C,KAAK,GAC5Dm4C,EACJuwB,EAAgBrmE,SAASqmE,EAAgB7lE,qBACrCu1C,EAAmBp9C,EAAY0U,SAAS7pB,IAC5C,mBACAsyD,GAGF,QACuBrkD,IAArBskD,QAC0CtkD,IAA1CskD,EAAiB9rC,qBAFnB,CASA,IAAM07D,EAAsB/sD,GAC1Bm9B,EAAiB9rC,sBAGb1J,EADsBvB,EAAai3C,EAAe,SAClBt4C,KAAK,GAEvCu4C,EAAcvrD,OAAOwrD,UACrBC,GAAmB,EAwBvB,GAtBA71C,EAAUP,SAAShT,SAAQ,SAACyQ,EAASlW,GACnC,IAAM0xB,EAAatgB,EAAY0U,SAAS7pB,IAAI,mBAAoBia,GAEhE,QACiBhM,IAAfwnB,QACoCxnB,IAApCwnB,EAAWhP,qBAFb,CASA,IACMjE,EADgB4S,GAAiBK,EAAWhP,sBACnBq8D,kBAAkBX,GAG7C3/D,EAAWkwC,IACbA,EAAclwC,EACdowC,EAAkB7uD,OAIlB6uD,IAAoB71C,EAAUC,oBAAlC,CAIA,IAAMg2C,EAAsBxB,GAAmBG,oBAC7Cc,GAEIQ,EAAoBzB,GAAmBK,kBAAkBY,GACzDS,EAAsB1B,GAAmBO,uBAC7CU,GAGF11C,EAAUC,oBAAsB41C,EAChC,IAAM4R,EAAaznD,EAAUP,SAASo2C,GAMtC,GAJII,GACFA,EAAoBP,IAGG,IAArBG,IAG6B,IAA3B71C,EAAUo2C,aACHh+C,EAAYi+C,UAAUoR,GAEtBrvD,EAAY+U,kBAAkBs6C,IAGlCrzD,MACL,SAASwJ,GACP,IAAM6d,EAAWrjB,EAAYsjB,YAAYg6B,GAErC11C,EAAUC,sBAAwB41C,IAItC+tB,EAAattB,aAAaZ,EAAe93C,EAAO6d,GAC5Cy6B,GACFA,EAAkBR,EAAe93C,OAGrC,SAASnW,GACP,IAAMyV,EAAU8C,EAAUP,SAASo2C,GAE/BM,GACFA,EAAoBT,EAAex4C,EAASzV,UC9FvC,YACbm8E,EACAtuB,EACAI,EACAh0C,EACAijE,GAGA,GAAIjvB,IAAkBJ,EAAtB,CAIA,IAAMl9C,EAAcsF,EAAStF,YACvB0tE,EAAkBrnE,EAAa62C,EAAe,SAASl4C,KAAK,GAC5Dm4C,EACJuwB,EAAgBrmE,SAASqmE,EAAgB7lE,qBACrCu1C,EAAmBp9C,EAAY0U,SAAS7pB,IAC5C,mBACAsyD,GAGF,QACuBrkD,IAArBskD,QAC0CtkD,IAA1CskD,EAAiB9rC,qBAFnB,CAOA,IAAM07D,EAAsB/sD,GAC1Bm9B,EAAiB9rC,sBAIb1J,EADsBvB,EAAai3C,EAAe,SAClBt4C,KAAK,GAEvCu4C,EAAcvrD,OAAOwrD,UACrBC,GAAmB,EAEvB,GAAK8uB,EAAL,CAIA,IAAMqB,EAAgBZ,EAAoBvsD,QAAQhb,IAAI8mE,GAqBtD,GAnBA3kE,EAAUP,SAAShT,SAAQ,SAASyQ,EAASlW,GAC3C,IAAM0xB,EAAatgB,EAAY0U,SAAS7pB,IAAI,mBAAoBia,GAEhE,QACiBhM,IAAfwnB,QACoCxnB,IAApCwnB,EAAWhP,qBAFb,CAOA,IAAMqsC,EAAgB19B,GAAiBK,EAAWhP,sBAC5CjE,EAAWugE,EAAcD,kBAAkBhwB,GAE7CtwC,EAAWkwC,IACbA,EAAclwC,EACdowC,EAAkB7uD,OAKpB6uD,IAAoB71C,EAAUC,sBACT,IAArB41C,EAFF,CAOA,IAAMI,EAAsBxB,GAAmBG,oBAC7Cc,GAEIQ,EAAoBzB,GAAmBK,kBAAkBY,GACzDS,EAAsB1B,GAAmBO,uBAC7CU,GAGF11C,EAAUC,oBAAsB41C,EAChC,IAAM4R,EAAaznD,EAAUP,SAASo2C,GAElCI,GACFA,EAAoBP,KAKS,IAA3B11C,EAAUo2C,aACHh+C,EAAYi+C,UAAUoR,GAEtBrvD,EAAY+U,kBAAkBs6C,IAGlCrzD,MACL,SAASwJ,GACP,IAAM6d,EAAWrjB,EAAYsjB,YAAYg6B,GAErC11C,EAAUC,sBAAwB41C,IAItC+tB,EAAattB,aAAaZ,EAAe93C,EAAO6d,GAC5Cy6B,GACFA,EAAkBR,EAAe93C,OAGrC,SAASnW,GACP,IAAMyV,EAAU8C,EAAUP,SAASo2C,GAE/BM,GACFA,EAAoBT,EAAex4C,EAASzV,WCpHrC,YAASm8E,EAActuB,EAAeI,GAEnD,GAAIA,IAAkBJ,EAAtB,CAIA,IAAMl9C,EAAcsF,EAAStF,YAEvB0tE,EAD4BrnE,EAAa62C,EAAe,SACZl4C,KAAK,GAEjD6oE,EAD4BxnE,EAAai3C,EAAe,SACZt4C,KAAK,GAEnDy4C,EAAkBiwB,EAAgB7lE,oBAUtC,IAPA41C,EAAkBxvB,GAChBwvB,EACA,EACAowB,EAAgBxmE,SAAS/a,OAAS,MAIZuhF,EAAgBhmE,oBAAxC,CAIA,IAAMg2C,EAAsBxB,GAAmBG,oBAC7Cc,GAEIQ,EAAoBzB,GAAmBK,kBAAkBY,GACzDS,EAAsB1B,GAAmBO,uBAC7CU,GAGEO,GACFA,EAAoBP,KAKe,IAAjCuwB,EAAgB7vB,aACTh+C,EAAYi+C,UAAU4vB,EAAgBxmE,SAASo2C,IAE/Cz9C,EAAY+U,kBACnB84D,EAAgBxmE,SAASo2C,KAItBzhD,MACL,SAASwJ,GACP,IAAM6d,EAAWrjB,EAAYsjB,YAAYg6B,GAEzCuwB,EAAgBhmE,oBAAsB41C,EACtC+tB,EAAattB,aAAaZ,EAAe93C,EAAO6d,GAC5Cy6B,GACFA,EAAkBR,EAAe93C,MAGrC,SAASnW,GACP,IAAMyV,EAAU+oE,EAAgBxmE,SAASo2C,GAErCM,GACFA,EAAoBT,EAAex4C,EAASzV,SCjErC,YAASm8E,EAActuB,EAAeI,GAEnD,GAAIA,IAAkBJ,EAAtB,CAIA,IAAMl9C,EAAcsF,EAAStF,YAEvByrE,EAAiBzrE,EAAYsjB,YAAY45B,GACzCwuB,EAAiB1rE,EAAYsjB,YAAYg6B,GAI7CouB,EAAejoD,QAAUgoD,EAAehoD,OACxCioD,EAAehoD,YAAY5a,IAAM2iE,EAAe/nD,YAAY5a,GAC5D4iE,EAAehoD,YAAY/rB,IAAM8zE,EAAe/nD,YAAY/rB,IAM9D+zE,EAAejoD,MAAQgoD,EAAehoD,MACtCioD,EAAehoD,YAAY5a,EAAI2iE,EAAe/nD,YAAY5a,EAC1D4iE,EAAehoD,YAAY/rB,EAAI8zE,EAAe/nD,YAAY/rB,EAC1D6zE,EAAaplB,YAAY9I,EAAeouB,MChC3B,YAASoC,GACtB,OAAOlE,GAAIkE,ICRb,87JCAe,WDAf,wCAqNA,IAAMC,GAAmB,CAGvBj1C,aACAoC,qBACAmI,qBACA0D,iBACAiC,iBACAc,qBACA0G,mBACAuE,cACAO,aACAO,oBACAM,kBAEAS,aACAC,sBACA+E,yBACAL,wBACAM,sBACAC,0BAEAgB,kBACAqB,4BACAE,iBACAU,cACAI,2BACAoF,eACAiC,eACAwB,0BACAQ,qBACAO,WACAW,sBACAS,cACAY,mBACAC,oBACA+E,6BACAS,6BACAS,mBACAE,kBACAiB,YACAe,sBACAI,YACAU,sBACArhE,QACA6wE,iBACAsC,kBACAM,YACAsB,YACA9sD,SACA9W,aACA0W,qBACA+lD,WACAF,qBACAuH,cACAD,wBACAvX,kBACA0X,4BACA/4C,0BACA1T,iBACAhB,2BACAsB,kBACAD,4BACAF,mBACAD,6BACAK,kBACAd,4BACA5U,eACAE,eACAC,kBACAG,iBACAC,6BACAT,6BACAyf,aACArH,aACA6F,cACAya,mBACA4pC,6BACAP,oCACAI,wBACA/rB,sBACA13C,qCACAqB,wCACAwiE,+CACAI,kDACA1G,6BACA31B,eACAyhC,UACAC,eACAC,gBACAC,kBACAC,OAAQD,GACR5C,YACA8C,gBACAC,oBACAC,2BACA3C,gBACA4C,2BACAC,kCACAC,wCACAC,+BACAC,uBACArf,sBACAjqD,WACAjF,SACAjK,QC9Ta,SD+aA23E","file":"cornerstoneTools.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstone-tools\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstone-tools\"] = factory();\n\telse\n\t\troot[\"cornerstoneTools\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/* eslint-env browser */\n\nimport setup from './common.js';\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nconst storage = localstorage();\n\nconst debugLib = {\n  formatArgs,\n  save,\n  load,\n  useColors,\n  storage,\n};\n/**\n * Colors.\n */\n\ndebugLib.colors = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33',\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (\n    typeof window !== 'undefined' &&\n    window.process &&\n    (window.process.type === 'renderer' || window.process.__nwjs)\n  ) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)\n  ) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n  return (\n    (typeof document !== 'undefined' &&\n      document.documentElement &&\n      document.documentElement.style &&\n      document.documentElement.style.WebkitAppearance) || // Is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' &&\n      window.console &&\n      (window.console.firebug ||\n        (window.console.exception && window.console.table))) || // Is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' &&\n      navigator.userAgent &&\n      navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) &&\n      parseInt(RegExp.$1, 10) >= 31) || // Double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' &&\n      navigator.userAgent &&\n      navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))\n  );\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  args[0] = `${(this.useColors ? '%c' : '') +\n    this.namespace +\n    (this.useColors ? ' %c' : ' ') +\n    args[0] +\n    (this.useColors ? '%c ' : ' ')}+${setupDebug.humanize(this.diff)}`;\n\n  if (!this.useColors) {\n    return;\n  }\n\n  const c = `color: ${this.color}`;\n\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  let index = 0;\n  let lastC = 0;\n\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\n\ndebugLib.log = console.debug || console.log || function() {};\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      debugLib.storage.setItem('debug', namespaces);\n    } else {\n      debugLib.storage.removeItem('debug');\n    }\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  let r;\n\n  try {\n    r = debugLib.storage.getItem('debug');\n  } catch (error) {\n    console.warn(error);\n  } // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nconst setupDebug = setup(debugLib);\nconst formatters = setupDebug.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return `[UnexpectedJSONParseError]: ${error.message}`;\n  }\n};\n\nexport default setupDebug;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"regenerator-runtime\");\n","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n\n  Object.keys(env).forEach(key => {\n    createDebug[key] = env[key];\n  });\n\n  /**\n   * Active `debug` instances.\n   */\n  createDebug.instances = [];\n\n  /**\n   * The currently active debug mode names, and names to skip.\n   */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n\n  /**\n   * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n   *\n   * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n   */\n  createDebug.formatters = {};\n\n  /**\n   * Selects a color for a debug namespace\n   * @param {String} namespace The namespace string for the for the debug instance to be colored\n   * @returns {Number|String} An ANSI color code for the given namespace\n   * @api private\n   */\n  function selectColor(namespace) {\n    let hash = 0;\n\n    for (let i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n  createDebug.selectColor = selectColor;\n\n  /**\n   * Create a debugger with the given `namespace`.\n   *\n   * @param {String} namespace\n   * @returns {Function}\n   * @api public\n   */\n  function createDebug(namespace) {\n    let prevTime;\n\n    function debug(...args) {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      const self = debug;\n\n      // Set `diff` timestamp\n      const curr = Number(new Date());\n      const ms = curr - (prevTime || curr);\n\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      }\n\n      // Apply any `formatters` transformations\n      let index = 0;\n\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n        index++;\n        const formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          const val = args[index];\n\n          match = formatter.call(self, val);\n\n          // Now we need to remove `args[index]` since it's inlined in the `format`\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      });\n\n      // Apply env-specific formatting (colors, etc.)\n      createDebug.formatArgs.call(self, args);\n\n      const logFn = self.log || createDebug.log;\n\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend;\n    // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n\n    // env-specific initialization logic for debug instances\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n\n    return debug;\n  }\n\n  function destroy() {\n    const index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    const newDebug = createDebug(\n      this.namespace +\n        (typeof delimiter === 'undefined' ? ':' : delimiter) +\n        namespace\n    );\n\n    newDebug.log = this.log;\n\n    return newDebug;\n  }\n\n  /**\n   * Enables a debug mode by namespaces. This can include modes\n   * separated by a colon and wildcards.\n   *\n   * @param {String} namespaces\n   * @api public\n   */\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n\n    createDebug.names = [];\n    createDebug.skips = [];\n\n    let i;\n    const split = (typeof namespaces === 'string' ? namespaces : '').split(\n      /[\\s,]+/\n    );\n    const len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // Ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp(`^${namespaces.substr(1)}$`));\n      } else {\n        createDebug.names.push(new RegExp(`^${namespaces}$`));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      const instance = createDebug.instances[i];\n\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n\n  /**\n   * Disable debug output.\n   *\n   * @returns {String} namespaces\n   * @api public\n   */\n  function disable() {\n    const namespaces = [\n      ...createDebug.names.map(toNamespace),\n      ...createDebug.skips.map(toNamespace).map(namespace => `-${namespace}`),\n    ].join(',');\n\n    createDebug.enable('');\n\n    return namespaces;\n  }\n\n  /**\n   * Returns true if the given mode name is enabled, false otherwise.\n   *\n   * @param {String} name\n   * @returns {Boolean}\n   * @api public\n   */\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    let i;\n    let len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Convert regexp to namespace\n   *\n   * @param {RegExp} regxep\n   * @returns {String} namespace\n   * @api private\n   */\n  function toNamespace(regexp) {\n    return regexp\n      .toString()\n      .substring(2, regexp.toString().length - 2)\n      .replace(/\\.\\*\\?$/, '*');\n  }\n\n  /**\n   * Coerce `val`.\n   *\n   * @param {Mixed} val\n   * @returns {Mixed}\n   * @api private\n   */\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n\n  return createDebug;\n}\n\nexport default setup;\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","let cornerstone = window.cornerstone;\nlet cornerstoneMath = window.cornerstoneMath;\nlet Hammer = window.Hammer;\n\nexport default {\n  set cornerstone(cs) {\n    cornerstone = cs;\n  },\n  get cornerstone() {\n    return cornerstone;\n  },\n  set cornerstoneMath(cm) {\n    cornerstoneMath = cm;\n  },\n  get cornerstoneMath() {\n    return cornerstoneMath;\n  },\n  set Hammer(module) {\n    Hammer = module;\n  },\n  get Hammer() {\n    return Hammer;\n  },\n};\n","/**\n *  Enumerates the events for CornestoneTools. Native events are captured,\n *  normalized, and re-triggered with a `cornerstonetools` prefix. This allows\n *  us to handle events consistently across different browsers.\n *\n *  @enum {String}\n *  @memberof CornerstoneTools\n *  @readonly\n */\nconst EVENTS = {\n  //\n  // MOUSE\n  //\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/mousedown\n   *  @type {String}\n   */\n  MOUSE_DOWN: 'cornerstonetoolsmousedown',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/mouseup\n   *  @type {String}\n   */\n  MOUSE_UP: 'cornerstonetoolsmouseup',\n\n  /**\n   * Is fired if a handled `MOUSE_DOWN` event does not `stopPropagation`. The hook\n   * we use to create new measurement data for mouse events.\n   *  @type {String}\n   */\n  MOUSE_DOWN_ACTIVATE: 'cornerstonetoolsmousedownactivate',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/drag\n   *  @type {String}\n   */\n  MOUSE_DRAG: 'cornerstonetoolsmousedrag',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/mousemove\n   *  @type {String}\n   */\n  MOUSE_MOVE: 'cornerstonetoolsmousemove',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/click\n   *  @type {String}\n   */\n  MOUSE_CLICK: 'cornerstonetoolsmouseclick',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/dblclick\n   *  @type {String}\n   */\n  MOUSE_DOUBLE_CLICK: 'cornerstonetoolsmousedoubleclick',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n   *  @type {String}\n   */\n  MOUSE_WHEEL: 'cornerstonetoolsmousewheel',\n\n  //\n  // TOUCH\n  //\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/touchstart\n   *  @type {String}\n   */\n  TOUCH_START: 'cornerstonetoolstouchstart',\n\n  /**\n   * Is fired if a handled `TOUCH_START` event does not `stopPropagation`. The hook\n   * we use to create new measurement data for touch events.\n   *  @type {String}\n   */\n  TOUCH_START_ACTIVE: 'cornerstonetoolstouchstartactive',\n\n  /**\n   *  @type {String}\n   */\n  TOUCH_END: 'cornerstonetoolstouchend',\n\n  /**\n   *  @type {String}\n   */\n  TOUCH_DRAG: 'cornerstonetoolstouchdrag',\n\n  /**\n   *  @type {String}\n   */\n  TOUCH_DRAG_END: 'cornerstonetoolstouchdragend',\n\n  /**\n   * http://hammerjs.github.io/recognizer-pinch/\n   *  @type {String}\n   */\n  TOUCH_PINCH: 'cornerstonetoolstouchpinch',\n\n  /**\n   * http://hammerjs.github.io/recognizer-rotate/\n   *  @type {String}\n   */\n  TOUCH_ROTATE: 'cornerstonetoolstouchrotate',\n\n  /**\n   * http://hammerjs.github.io/recognizer-press/\n   *  @type {String}\n   */\n  TOUCH_PRESS: 'cornerstonetoolstouchpress',\n\n  /**\n   * http://hammerjs.github.io/recognizer-tap/\n   *  @type {String}\n   */\n  TAP: 'cornerstonetoolstap',\n\n  /**\n   *  @type {String}\n   */\n  DOUBLE_TAP: 'cornerstonetoolsdoubletap',\n\n  /**\n   *  @type {String}\n   */\n  MULTI_TOUCH_START: 'cornerstonetoolsmultitouchstart',\n\n  /**\n   *  @type {String}\n   */\n  MULTI_TOUCH_START_ACTIVE: 'cornerstonetoolsmultitouchstartactive',\n\n  /**\n   *  @type {String}\n   */\n  MULTI_TOUCH_DRAG: 'cornerstonetoolsmultitouchdrag',\n\n  //\n  // KEYBOARD\n  //\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/keydown\n   *  @type {String}\n   */\n  KEY_DOWN: 'cornerstonetoolskeydown',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/keyup\n   *  @type {String}\n   */\n  KEY_UP: 'cornerstonetoolskeyup',\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/Events/keypress\n   *  @type {String}\n   */\n  KEY_PRESS: 'cornerstonetoolskeypress',\n\n  //\n  // CUSTOM\n  //\n\n  /**\n   *  @type {String}\n   */\n  MEASUREMENT_ADDED: 'cornerstonetoolsmeasurementadded',\n\n  /**\n   *  @type {String}\n   */\n  MEASUREMENT_MODIFIED: 'cornerstonetoolsmeasurementmodified',\n\n  /**\n   *  @type {String}\n   */\n  MEASUREMENT_COMPLETED: 'cornerstonetoolsmeasurementcompleted',\n\n  /**\n   *  @type {String}\n   */\n  MEASUREMENT_REMOVED: 'cornerstonetoolsmeasurementremoved',\n\n  /**\n   *  @type {String}\n   */\n  TOOL_DEACTIVATED: 'cornerstonetoolstooldeactivated',\n\n  /**\n   *  @type {String}\n   */\n  CLIP_STOPPED: 'cornerstonetoolsclipstopped',\n\n  /**\n   *  @type {String}\n   */\n  STACK_SCROLL: 'cornerstonetoolsstackscroll',\n\n  /**\n   *  @type {String}\n   */\n  STACK_PREFETCH_IMAGE_LOADED: 'cornerstonetoolsstackprefetchimageloaded',\n\n  /**\n   *  @type {String}\n   */\n  STACK_PREFETCH_DONE: 'cornerstonetoolsstackprefetchdone',\n\n  /**\n   *  @type {String}\n   */\n  LABELMAP_MODIFIED: 'cornersontetoolslabelmapmodified',\n};\n\nexport default EVENTS;\n","/**\n * Triggers a CustomEvent.\n * @public\n * @method triggerEvent\n *\n * @param {EventTarget} el The element or EventTarget to trigger the event upon.\n * @param {String} type    The event type name.\n * @param {Object|null} [detail=null] The event data to be sent.\n * @returns {Boolean} The return value is false if at least one event listener called preventDefault(). Otherwise it returns true.\n */\nexport default function triggerEvent(el, type, detail = null) {\n  let event;\n\n  // This check is needed to polyfill CustomEvent on IE11-\n  if (typeof window.CustomEvent === 'function') {\n    event = new CustomEvent(type, {\n      detail,\n      cancelable: true,\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, detail);\n  }\n\n  return el.dispatchEvent(event);\n}\n","import { getters as storeGetters } from '../../index.js';\n\n/**\n * Returns the cornerstone enabled element given either the element or its enabledElement UUID.\n *\n * @param  {string|HTMLElement} elementOrEnabledElementUID  The enabledElement\n *                                                          or its UUID.\n * @returns {HTMLElement}\n */\nexport default function _getElement(elementOrEnabledElementUID) {\n  if (elementOrEnabledElementUID instanceof HTMLElement) {\n    return elementOrEnabledElementUID;\n  }\n\n  return storeGetters.enabledElementByUID(elementOrEnabledElementUID);\n}\n","const ARRAY_TYPES = {\n  UINT_16_ARRAY: 0,\n  FLOAT_32_ARRAY: 1,\n};\n\nexport default ARRAY_TYPES;\n","import ARRAY_TYPES from './arrayTypes';\nimport { getModule } from '../../index.js';\n\nconst { UINT_16_ARRAY, FLOAT_32_ARRAY } = ARRAY_TYPES;\n\n/**\n * AddLabelmap3D - Adds a `Labelmap3D` object to the `BrushStackState` object.\n *\n * @param  {BrushStackState} brushStackState The labelmap state for a particular stack.\n * @param  {number} labelmapIndex   The labelmapIndex to set.\n * @param  {number} size            The size of the ArrayBuffer in bytes/ 2.\n * @returns {null}\n */\nexport default function addLabelmap3D(brushStackState, labelmapIndex, size) {\n  const { configuration } = getModule('segmentation');\n  let bytesPerVoxel;\n\n  switch (configuration.arrayType) {\n    case UINT_16_ARRAY:\n      bytesPerVoxel = 2;\n\n      break;\n\n    case FLOAT_32_ARRAY:\n      bytesPerVoxel = 4;\n      break;\n\n    default:\n      throw new Error(`Unsupported Array Type ${configuration.arrayType}`);\n  }\n\n  // Buffer size is multiplied by bytesPerVoxel to allocate enough space.\n  brushStackState.labelmaps3D[labelmapIndex] = {\n    buffer: new ArrayBuffer(size * bytesPerVoxel),\n    labelmaps2D: [],\n    metadata: [],\n    activeSegmentIndex: 1,\n    colorLUTIndex: 0,\n    segmentsHidden: [],\n    undo: [],\n    redo: [],\n  };\n}\n","import external from '../externalModules.js';\n\n/**\n * Implements an imageId specific tool state management strategy.  This means that\n * Measurements data is tied to a specific imageId and only visible for enabled elements\n * That are displaying that imageId.\n * @public\n * @constructor newImageIdSpecificToolStateManager\n * @memberof StateManagement\n *\n * @returns {Object} An imageIdSpecificToolStateManager instance.\n */\nfunction newImageIdSpecificToolStateManager() {\n  let toolState = {};\n\n  // Here we add tool state, this is done by tools as well\n  // As modules that restore saved state\n\n  function saveImageIdToolState(imageId) {\n    return toolState[imageId];\n  }\n\n  function restoreImageIdToolState(imageId, imageIdToolState) {\n    toolState[imageId] = imageIdToolState;\n  }\n\n  function saveToolState() {\n    return toolState;\n  }\n\n  function restoreToolState(savedToolState) {\n    toolState = savedToolState;\n  }\n\n  // Here we add tool state, this is done by tools as well\n  // As modules that restore saved state\n  function addElementToolState(element, toolType, data) {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    // If we don't have an image for this element exit early\n    if (!enabledElement.image) {\n      return;\n    }\n    addImageIdToolState(enabledElement.image.imageId, toolType, data);\n  }\n\n  function addImageIdToolState(imageId, toolType, data) {\n    // If we don't have any tool state for this imageId, add an empty object\n    if (toolState.hasOwnProperty(imageId) === false) {\n      toolState[imageId] = {};\n    }\n\n    const imageIdToolState = toolState[imageId];\n\n    // If we don't have tool state for this type of tool, add an empty object\n    if (imageIdToolState.hasOwnProperty(toolType) === false) {\n      imageIdToolState[toolType] = {\n        data: [],\n      };\n    }\n\n    const toolData = imageIdToolState[toolType];\n\n    // Finally, add this new tool to the state\n    toolData.data.push(data);\n  }\n\n  function getElementToolState(element, toolType) {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    // If the element does not have an image return undefined.\n    if (!enabledElement.image) {\n      return;\n    }\n\n    return getImageIdToolState(enabledElement.image.imageId, toolType);\n  }\n\n  // Here you can get state - used by tools as well as modules\n  // That save state persistently\n  function getImageIdToolState(imageId, toolType) {\n    // If we don't have any tool state for this imageId, return undefined\n    if (toolState.hasOwnProperty(imageId) === false) {\n      return;\n    }\n\n    const imageIdToolState = toolState[imageId];\n\n    // If we don't have tool state for this type of tool, return undefined\n    if (imageIdToolState.hasOwnProperty(toolType) === false) {\n      return;\n    }\n\n    return imageIdToolState[toolType];\n  }\n\n  // Clears all tool data from this toolStateManager.\n  function clearElementToolState(element) {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    if (!enabledElement.image) {\n      return;\n    }\n    clearImageIdToolState(enabledElement.image.imageId);\n  }\n\n  function clearImageIdToolState(imageId) {\n    if (toolState.hasOwnProperty(imageId) === false) {\n      return;\n    }\n\n    delete toolState[imageId];\n  }\n\n  return {\n    get: getElementToolState,\n    add: addElementToolState,\n    clear: clearElementToolState,\n    getImageIdToolState,\n    addImageIdToolState,\n    clearImageIdToolState,\n    saveImageIdToolState,\n    restoreImageIdToolState,\n    saveToolState,\n    restoreToolState,\n    toolState,\n  };\n}\n\n// A global imageIdSpecificToolStateManager - the most common case is to share state between all\n// Visible enabled images\nconst globalImageIdSpecificToolStateManager = newImageIdSpecificToolStateManager();\n\nexport {\n  newImageIdSpecificToolStateManager,\n  globalImageIdSpecificToolStateManager,\n};\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport { globalImageIdSpecificToolStateManager } from './imageIdSpecificStateManager.js';\nimport triggerEvent from '../util/triggerEvent.js';\n\n/**\n * Returns the toolstate for a specific element.\n * @public\n * @function getElementToolStateManager\n *\n * @param  {HTMLElement} element The element.\n * @returns {Object} The toolState.\n */\nfunction getElementToolStateManager(element) {\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n  // If the enabledElement has no toolStateManager, create a default one for it\n  // NOTE: This makes state management element specific\n\n  if (enabledElement.toolStateManager === undefined) {\n    enabledElement.toolStateManager = globalImageIdSpecificToolStateManager;\n  }\n\n  return enabledElement.toolStateManager;\n}\n\n/**\n * Adds tool state to the toolStateManager, this is done by tools as well\n * as modules that restore saved state.\n * @public\n * @method addToolState\n *\n * @param  {HTMLElement} element  The element.\n * @param  {string} toolType      The toolType of the state.\n * @param  {Object} measurementData The data to store in the state.\n * @returns {undefined}\n */\nfunction addToolState(element, toolType, measurementData) {\n  const toolStateManager = getElementToolStateManager(element);\n\n  toolStateManager.add(element, toolType, measurementData);\n\n  const eventType = EVENTS.MEASUREMENT_ADDED;\n  const eventData = {\n    toolType,\n    element,\n    measurementData,\n  };\n\n  triggerEvent(element, eventType, eventData);\n}\n\n/**\n * Returns tool specific state of an element. Used by tools as well as modules\n * that save state persistently\n * @export\n * @public\n * @method\n * @name getToolState\n *\n * @param  {HTMLElement} element The element.\n * @param  {string} toolType The toolType of the state.\n * @returns {Object}          The element's state for the given toolType.\n */\nfunction getToolState(element, toolType) {\n  const toolStateManager = getElementToolStateManager(element);\n\n  return toolStateManager.get(element, toolType);\n}\n\n/**\n * Removes specific tool state from the toolStateManager.\n * @public\n * @method removeToolState\n *\n * @param  {HTMLElement} element  The element.\n * @param  {string} toolType      The toolType of the state.\n * @param  {Object} data          The data to remove from the toolStateManager.\n * @returns {undefined}\n */\nfunction removeToolState(element, toolType, data) {\n  const toolStateManager = getElementToolStateManager(element);\n  const toolData = toolStateManager.get(element, toolType);\n\n  if (!toolData || !toolData.data || !toolData.data.length) {\n    return;\n  }\n\n  // Find this tool data\n  let indexOfData = -1;\n\n  for (let i = 0; i < toolData.data.length; i++) {\n    if (toolData.data[i] === data) {\n      indexOfData = i;\n    }\n  }\n\n  if (indexOfData !== -1) {\n    toolData.data.splice(indexOfData, 1);\n\n    const eventType = EVENTS.MEASUREMENT_REMOVED;\n    const eventData = {\n      toolType,\n      element,\n      measurementData: data,\n    };\n\n    triggerEvent(element, eventType, eventData);\n  }\n}\n\n/**\n * Removes all toolState from the toolStateManager corresponding to\n * the toolType and element.\n * @public\n * @method clearToolState\n *\n * @param  {HTMLElement} element  The element.\n * @param  {string} toolType      The toolType of the state.\n * @returns {undefined}\n */\nfunction clearToolState(element, toolType) {\n  const toolStateManager = getElementToolStateManager(element);\n  const toolData = toolStateManager.get(element, toolType);\n\n  // If any toolData actually exists, clear it\n  if (toolData !== undefined) {\n    toolData.data = [];\n  }\n}\n\n/**\n * Sets the tool state manager for an element\n * @public\n * @method setElementToolStateManager\n *\n * @param  {HTMLElement} element The element.\n * @param {Object} toolStateManager The toolStateManager.\n * @returns {undefined}\n */\nfunction setElementToolStateManager(element, toolStateManager) {\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n\n  enabledElement.toolStateManager = toolStateManager;\n}\n\nexport {\n  addToolState,\n  getToolState,\n  removeToolState,\n  clearToolState,\n  setElementToolStateManager,\n  getElementToolStateManager,\n};\n","import debugLib from './debugLib/index.js';\n\nconst BASE_SCOPE = 'cornerstoneTools';\nconst baseLogger = debugLib(BASE_SCOPE);\n\n// eslint-disable-next-line no-process-env\nconst devMode = process.env.NODE_ENV === 'development';\n\n// If we're in dev-mode, tell the user how to get logs\nif (devMode && !baseLogger.enabled) {\n  // eslint-disable-next-line no-console\n  console.log(\n    '%cCornerstone Tools',\n    'background: #339955; padding: 4px; font-weight: bold; color: white'\n  );\n\n  // eslint-disable-next-line no-console\n  console.info(\n    'run %clocalStorage.setItem(\"debug\", \"cornerstoneTools\")%c to see console output',\n    'background: #eaeaea; color: #333; font-family: monospace',\n    ''\n  );\n}\n\n/**\n * @method debug\n * Create's a scoped debuging logger\n */\n\nexport const getLogger = scope => {\n  const log = baseLogger.extend(scope);\n\n  return {\n    log,\n    // eslint-disable-next-line no-console\n    warn: devMode ? console.warn.bind(console) : log,\n    // eslint-disable-next-line no-console\n    error: console.error.bind(console),\n  };\n};\n\n/**\n * @method enable\n * @param {string} scope The scope to enabled\n * @returns {void}\n */\nexport const enable = (scope = `${BASE_SCOPE}:*`) => debugLib.enable(scope);\n\n/**\n * @method disable\n * @param {string} scope\n * @returns {string} The previously enabled scope\n */\nexport const disable = () => debugLib.disable();\n","// Internal state of the brush module.\nconst state = {\n  series: {},\n  colorLutTables: [],\n};\n\nexport default state;\n","import getElement from './getElement';\nimport addLabelmap3D from './addLabelmap3D';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport external from '../../../externalModules';\nimport { getLogger } from '../../../util/logger';\nimport state from './state';\n\nconst logger = getLogger('store:modules:segmentationModule:metadata');\n\n/**\n * GetMetadata - Returns the metadata object for a particular segment if\n * segmentIndex is specified, otherwise returns an array of all segment metadata\n * for the labelmap.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} [labelmapIndex]    If undefined, defaults to the active\n *                                     labelmap index.\n * @param  {number} [segmentIndex]     The segment index.\n * @returns {Object|Object[]}          A metadata object or an array of\n *                                     metadata objects.\n */\nfunction getMetadata(elementOrEnabledElementUID, labelmapIndex, segmentIndex) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    logger.warn(`brushStackState is undefined`);\n\n    return;\n  }\n\n  labelmapIndex =\n    labelmapIndex === undefined\n      ? brushStackState.activeLabelmapIndex\n      : labelmapIndex;\n\n  if (!brushStackState.labelmaps3D[labelmapIndex]) {\n    logger.warn(`No labelmap3D of labelmap index ${labelmapIndex} on stack.`);\n\n    return;\n  }\n\n  const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n\n  if (segmentIndex === undefined) {\n    return labelmap3D.metadata;\n  }\n\n  return labelmap3D.metadata[segmentIndex];\n}\n\n/**\n * SetMetadata - Sets the metadata object for a particular segment of a\n * `Labelmap3D`.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} labelmapIndex = 0 The labelmap index.\n * @param  {number} segmentIndex      The segment index.\n * @param  {Object} metadata          The metadata object to set.\n * @returns {null}\n */\nfunction setMetadata(\n  elementOrEnabledElementUID,\n  labelmapIndex = 0,\n  segmentIndex,\n  metadata\n) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  let brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    state.series[firstImageId] = {\n      labelmapIndex,\n      labelmaps3D: [],\n    };\n\n    brushStackState = state.series[firstImageId];\n  }\n\n  if (!brushStackState.labelmaps3D[labelmapIndex]) {\n    const enabledElement = cornerstone.getEnabledElement(element);\n\n    const { rows, columns } = enabledElement.image;\n    const numberOfFrames = stackData.imageIds.length;\n    const size = rows * columns * numberOfFrames;\n\n    addLabelmap3D(brushStackState, labelmapIndex, size);\n  }\n\n  const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n\n  labelmap3D.metadata[segmentIndex] = metadata;\n}\n\nexport { getMetadata, setMetadata };\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\nimport { getModule } from '../../index.js';\n\n/**\n * Returns the `activeSegmentIndex` for the active `Labelmap3D` for the `BrushStackState` displayed on the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} [labelmapIndex] The labelmap index, defaults to the active labelmap index.\n * @returns {number}                                  The active segment index.\n */\nfunction getActiveSegmentIndex(elementOrEnabledElementUID, labelmapIndex) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (brushStackState) {\n    labelmapIndex =\n      labelmapIndex === undefined\n        ? brushStackState.activeLabelmapIndex\n        : labelmapIndex;\n\n    const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n\n    if (labelmap3D) {\n      return labelmap3D.activeSegmentIndex;\n    }\n  }\n\n  return 1;\n}\n\n/**\n * Sets the `activeSegmentIndex` for the active `Labelmap3D` on the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param {number}  segmentIndex The segmentIndex to set active.\n * @returns {null}\n */\nfunction setActiveSegmentIndex(elementOrEnabledElementUID, segmentIndex) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    return;\n  }\n\n  const activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n  const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\n\n  const { configuration } = getModule('segmentation');\n\n  if (segmentIndex <= 0) {\n    segmentIndex = 1;\n  } else if (segmentIndex > configuration.segmentsPerLabelmap) {\n    segmentIndex = configuration.segmentsPerLabelmap;\n  }\n\n  labelmap3D.activeSegmentIndex = segmentIndex;\n}\n\n/**\n * Increment the `activeSegmentIndex` for the active `Labelmap3D` on the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @returns {null}\n */\nfunction incrementActiveSegmentIndex(elementOrEnabledElementUID) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  _changeActiveSegmentIndex(element, 'increase');\n}\n\n/**\n * Decrement the `activeSegmentIndex` for the active `Labelmap3D` on the element.\n *\n * @param  {HTMLElement} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @returns {null}\n */\nfunction decrementActiveSegmentIndex(elementOrEnabledElementUID) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  _changeActiveSegmentIndex(element, 'decrease');\n}\n\n/**\n * Changes the `activeSegmentIndex` for the active `Labelmap3D` on the element.\n *\n * @param  {HTMLElement} element  The cornerstone enabled element.\n * @param  {string} increaseOrDecrease = Whether to increase/decrease the activeLabelmapIndex.\n * @returns {null}\n */\nfunction _changeActiveSegmentIndex(element, increaseOrDecrease = 'increase') {\n  const { configuration } = getModule('segmentation');\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    return;\n  }\n\n  const activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n  const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\n\n  switch (increaseOrDecrease) {\n    case 'increase':\n      labelmap3D.activeSegmentIndex++;\n\n      if (labelmap3D.activeSegmentIndex > configuration.segmentsPerLabelmap) {\n        labelmap3D.activeSegmentIndex = 1;\n      }\n      break;\n    case 'decrease':\n      labelmap3D.activeSegmentIndex--;\n\n      if (labelmap3D.activeSegmentIndex <= 0) {\n        labelmap3D.activeSegmentIndex = configuration.segmentsPerLabelmap;\n      }\n      break;\n  }\n}\n\nexport {\n  getActiveSegmentIndex,\n  setActiveSegmentIndex,\n  incrementActiveSegmentIndex,\n  decrementActiveSegmentIndex,\n};\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('store:modules:segmentationModule:segmentVisibility');\n\n/**\n * Returns if a segment is visible.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} segmentIndex     The segment index.\n * @param  {number} [labelmapIndex]    If undefined, defaults to the active\n *                                     labelmap index.\n * @returns {boolean} True if the segment is visible.\n */\nfunction isSegmentVisible(\n  elementOrEnabledElementUID,\n  segmentIndex,\n  labelmapIndex\n) {\n  if (!segmentIndex) {\n    return;\n  }\n\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    logger.warn(`brushStackState is undefined`);\n\n    return;\n  }\n\n  labelmapIndex =\n    labelmapIndex === undefined\n      ? brushStackState.activeLabelmapIndex\n      : labelmapIndex;\n\n  if (!brushStackState.labelmaps3D[labelmapIndex]) {\n    logger.warn(`No labelmap3D of labelmap index ${labelmapIndex} on stack.`);\n\n    return;\n  }\n\n  const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n  const visible = !labelmap3D.segmentsHidden[segmentIndex];\n\n  return visible;\n}\n\n/**\n * Toggles the visability of a segment.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} segmentIndex     The segment index.\n * @param  {number} [labelmapIndex]    If undefined, defaults to the active\n *                                     labelmap index.\n * @returns {boolean} True if the segment is now visible.\n */\nfunction toggleSegmentVisibility(\n  elementOrEnabledElementUID,\n  segmentIndex,\n  labelmapIndex\n) {\n  if (!segmentIndex) {\n    return;\n  }\n\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    logger.warn(`brushStackState is undefined`);\n\n    return;\n  }\n\n  labelmapIndex =\n    labelmapIndex === undefined\n      ? brushStackState.activeLabelmapIndex\n      : labelmapIndex;\n\n  if (!brushStackState.labelmaps3D[labelmapIndex]) {\n    logger.warn(`No labelmap3D of labelmap index ${labelmapIndex} on stack.`);\n\n    return;\n  }\n\n  const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n  const segmentsHidden = labelmap3D.segmentsHidden;\n\n  segmentsHidden[segmentIndex] = !segmentsHidden[segmentIndex];\n\n  return !segmentsHidden[segmentIndex];\n}\n\nexport { isSegmentVisible, toggleSegmentVisibility };\n","import { getToolState } from '../../../stateManagement/toolState.js';\nimport getElement from './getElement';\nimport state from './state';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('store:modules:segmentationModule:getLabelmaps3D');\n\n/**\n * Returns the `Labelmap3D` objects associated with the series displayed\n * in the element, the `activeLabelmapIndex` and the `currentImageIdIndex`.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @returns {Object}              An object containing `Labelmap3D` objects,\n *                                the `activeLabelmapIndex` amd the `currentImageIdIndex`.\n */\nexport default function getLabelmaps3D(elementOrEnabledElementUID) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n\n  if (!stackState) {\n    logger.error(\n      'Consumers must define stacks in their application if using segmentations in cornerstoneTools.'\n    );\n\n    return;\n  }\n\n  const stackData = stackState.data[0];\n\n  const firstImageId = stackData.imageIds[0];\n  const brushStackState = state.series[firstImageId];\n\n  let labelmaps3D;\n  let activeLabelmapIndex;\n\n  if (brushStackState) {\n    labelmaps3D = brushStackState.labelmaps3D;\n    activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n  }\n\n  return {\n    labelmaps3D,\n    activeLabelmapIndex,\n    currentImageIdIndex: stackData.currentImageIdIndex,\n  };\n}\n\n/**\n * Returns a single `Labelmap3D` object associated with the series displayed\n * in the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} [labelmapIndex] The index of the `Labelmap3D` to retrieve. Defaults to\n *                                  the `activeLabelmapIndex`.\n * @returns {Object}              A `Labelmap3D` object.\n */\nexport function getLabelmap3D(elementOrEnabledElementUID, labelmapIndex) {\n  const { labelmaps3D, activeLabelmapIndex } = getLabelmaps3D(\n    elementOrEnabledElementUID\n  );\n\n  labelmapIndex =\n    labelmapIndex !== undefined ? labelmapIndex : activeLabelmapIndex;\n\n  return labelmaps3D[labelmapIndex];\n}\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport getLabelmaps3D from './getLabelmaps3D';\nimport state from './state';\nimport ARRAY_TYPES from './arrayTypes';\nimport { getModule } from '../../index.js';\n\nconst { UINT_16_ARRAY, FLOAT_32_ARRAY } = ARRAY_TYPES;\n\n/**\n * GetLabelmapBuffers - Returns the `buffer` of each `Labelmap3D` associated\n *                      with the `BrushStackState` displayed on the element, or a specific\n *                      one if `labelmapIndex` is defined.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param {type} [labelmapIndex] Optional filtering to only return one labelmap.\n * @returns {Object|Object[]} An array of objects containing the `labelmapIndex`, and the corresponding buffer and `colorLUT`.\n * Only one object if `labelmapIndex` was specified.\n *\n */\nfunction getLabelmapBuffers(elementOrEnabledElementUID, labelmapIndex) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const { labelmaps3D } = getLabelmaps3D(element);\n\n  if (!labelmaps3D) {\n    return [];\n  }\n\n  const { configuration } = getModule('segmentation');\n\n  let type;\n  let bytesPerVoxel;\n\n  switch (configuration.arrayType) {\n    case UINT_16_ARRAY:\n      type = 'Uint16Array';\n      bytesPerVoxel = '2';\n\n      break;\n\n    case FLOAT_32_ARRAY:\n      type = 'Float32Array';\n      bytesPerVoxel = '4';\n      break;\n\n    default:\n      throw new Error(`Unsupported Array Type ${configuration.arrayType}`);\n  }\n\n  const colorLutTables = state.colorLutTables;\n\n  if (labelmapIndex !== undefined) {\n    const labelmap3D = labelmaps3D[labelmapIndex];\n\n    if (labelmap3D) {\n      return {\n        labelmapIndex,\n        bytesPerVoxel,\n        type,\n        buffer: labelmap3D.buffer,\n        colorLUT: colorLutTables[labelmap3D.colorLUTIndex],\n      };\n    }\n\n    return;\n  }\n\n  const labelmapBuffers = [];\n\n  for (let i = 0; i < labelmaps3D.length; i++) {\n    const labelmap3D = labelmaps3D[i];\n\n    if (labelmap3D) {\n      labelmapBuffers.push({\n        labelmapIndex: i,\n        bytesPerVoxel: 2,\n        buffer: labelmap3D.buffer,\n        colorLUT: colorLutTables[labelmap3D.colorLUTIndex],\n      });\n    }\n  }\n\n  return labelmapBuffers;\n}\n\n/**\n * Returns the `buffer` corresponding to the active `Labelmap3D` associated with the\n * `BrushStackState` displayed onv the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @returns {Object}      An object containing the `labelmapIndex` and\n *                        corresponding `buffer`.\n */\nfunction getActiveLabelmapBuffer(elementOrEnabledElementUID) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const imageIds = stackState.data[0].imageIds;\n  const firstImageId = imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    return;\n  }\n\n  const activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n\n  return getLabelmapBuffers(element, activeLabelmapIndex);\n}\n\nexport { getLabelmapBuffers, getActiveLabelmapBuffer };\n","/**\n * Returns an array of the segment indicies present on the `pixelData`.\n * @param  {UInt16Array|Float32Array} pixelData The pixel data array.\n */\nexport default function getSegmentsOnPixelData(pixelData) {\n  const segmentSet = new Set(pixelData);\n  const iterator = segmentSet.values();\n\n  const segmentsOnLabelmap = [];\n  let done = false;\n\n  while (!done) {\n    const next = iterator.next();\n\n    done = next.done;\n\n    if (!done) {\n      segmentsOnLabelmap.push(next.value);\n    }\n  }\n\n  return segmentsOnLabelmap;\n}\n","/**\n * If the pixelData for the given pixelIndex is equal to the segmentIndex\n * erase it (set it to 0).\n * @param  {number} pixelIndex The index of the pixel.\n * @param  {UInt16Array} pixelData The pixelData array.\n * @param  {number} segmentIndex The segment Index to erase.\n */\nexport default function eraseIfSegmentIndex(\n  pixelIndex,\n  pixelData,\n  segmentIndex\n) {\n  if (pixelData[pixelIndex] === segmentIndex) {\n    pixelData[pixelIndex] = 0;\n  }\n}\n","import eraseIfSegmentIndex from './eraseIfSegmentIndex.js';\n\n/**\n * DrawBrushPixels - Adds or removes labels to a labelmap.\n *\n * @param  {number[]} pointerArray      The array of pixels to paint.\n * @param  {Object} labelmap2D          The `pixelData` array to paint to.\n * @param  {number} segmentIndex        The segment being drawn.\n * @param  {number} columns             The number of columns in the image.\n * @param  {boolean} shouldErase = false Whether we should erase rather than color pixels.\n * @returns {null}\n */\nfunction drawBrushPixels(\n  pointerArray,\n  pixelData,\n  segmentIndex,\n  columns,\n  shouldErase = false\n) {\n  const getPixelIndex = (x, y) => y * columns + x;\n\n  pointerArray.forEach(point => {\n    const spIndex = getPixelIndex(...point);\n\n    if (shouldErase) {\n      eraseIfSegmentIndex(spIndex, pixelData, segmentIndex);\n    } else {\n      pixelData[spIndex] = segmentIndex;\n    }\n  });\n}\n\nexport { drawBrushPixels };\n","import eraseIfSegmentIndex from './eraseIfSegmentIndex';\n\n/**\n * EraseOutsideBoundingBox - Erase all pixels labeled with the activeSegmentIndex,\n * outside the bouding box defined by the `topLeft` and `topRight`.\n * @param  {} evt The Cornerstone event.\n * @param {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nexport default function eraseOutsideBoundingBox(\n  evt,\n  operationData,\n  topLeft,\n  bottomRight\n) {\n  const eventData = evt.detail;\n  const { pixelData, segmentIndex } = operationData;\n  const { image } = eventData;\n  const { width, height } = image;\n\n  // Loop until top of bounding box from top of image, color the entire row\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < topLeft[1]; j++) {\n      eraseIfSegmentIndex(j * width + i, pixelData, segmentIndex);\n    }\n  }\n\n  // Loop within rows of bounding box, to the left of the box\n  for (let i = 0; i < topLeft[0]; i++) {\n    for (let j = topLeft[1]; j < bottomRight[1]; j++) {\n      eraseIfSegmentIndex(j * width + i, pixelData, segmentIndex);\n    }\n  }\n\n  // Loop within rows of bounding box, to the right of the box\n  for (let i = bottomRight[0]; i < width; i++) {\n    for (let j = topLeft[1]; j < bottomRight[1]; j++) {\n      eraseIfSegmentIndex(j * width + i, pixelData, segmentIndex);\n    }\n  }\n\n  // Loop from bottom of bounding box until bottom of image, color entire row\n  for (let i = 0; i < width; i++) {\n    for (let j = bottomRight[1]; j < height; j++) {\n      eraseIfSegmentIndex(j * width + i, pixelData, segmentIndex);\n    }\n  }\n}\n","/**\n * Returns true if the pixelIndex of pixelData is the same as the segmentIndex.\n *\n * @param  {number} pixelIndex The index of the pixel.\n * @param  {UInt16Array} pixelData The pixelData array.\n * @param  {number} segmentIndex The segment Index to erase.\n *\n * @returns {boolean}\n */\nexport default function isSameSegment(pixelIndex, pixelData, segmentIndex) {\n  return pixelData[pixelIndex] === segmentIndex;\n}\n","import eraseOutsideBoundingBox from './eraseOutsideBoundingBox';\nimport isSameSegment from './isSameSegment.js';\n\nimport { getLogger } from '../logger.js';\n\nconst logger = getLogger('util:segmentation:operations:eraseOutsideCircle');\n\n/**\n * Erase all pixels labeled with the activeSegmentIndex,\n * inside/outside the region defined by the shape.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {Object} pointInShape - A function that checks if a point, x,y is within a shape.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nfunction eraseShape(\n  evt,\n  operationData,\n  pointInShape,\n  topLeft,\n  bottomRight,\n  insideOrOutside = 'inside'\n) {\n  const { width } = evt.detail.image;\n  const { pixelData, segmentIndex } = operationData;\n  const [xMin, yMin] = topLeft;\n  const [xMax, yMax] = bottomRight;\n\n  if (insideOrOutside === 'outside') {\n    eraseOutsideBoundingBox(evt, operationData, topLeft, bottomRight);\n  }\n\n  for (let x = xMin; x < xMax; x++) {\n    for (let y = yMin; y < yMax; y++) {\n      const pixelIndex = y * width + x;\n\n      // If the pixel is the same segmentIndex and is inside the\n      // Region defined by the array of points, set their value to segmentIndex.\n      if (\n        isSameSegment(pixelIndex, pixelData, segmentIndex) &&\n        pointInShape({\n          x,\n          y,\n        })\n      ) {\n        pixelData[pixelIndex] = 0;\n      }\n    }\n  }\n}\n\n/**\n * Erase all pixels labeled with the activeSegmentIndex,\n * inside the region defined by the shape.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {Object} pointInShape - A function that checks if a point, x,y is within a shape.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nexport function eraseInsideShape(\n  evt,\n  operationData,\n  pointInShape,\n  topLeft,\n  bottomRight\n) {\n  eraseShape(evt, operationData, pointInShape, topLeft, bottomRight, 'inside');\n}\n\n/**\n * Erase all pixels labeled with the activeSegmentIndex,\n * outside the region defined by the shape.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {Object} pointInShape - A function that checks if a point, x,y is within a shape.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nexport function eraseOutsideShape(\n  evt,\n  operationData,\n  pointInShape,\n  topLeft,\n  bottomRight\n) {\n  eraseShape(\n    evt,\n    operationData,\n    point => !pointInShape(point),\n    topLeft,\n    bottomRight,\n    'outside'\n  );\n}\n","/**\n * EraseInside - fill all pixels labeled with the activeSegmentIndex,\n * outside the bouding box defined by the `topLeft` and `topRight`.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nexport default function fillOutsideBoundingBox(\n  evt,\n  operationData,\n  topLeft,\n  bottomRight\n) {\n  const { pixelData, segmentIndex } = operationData;\n  const { width, height } = evt.detail.image;\n\n  // Loop until top of bounding box from top of image, color the entire row\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < topLeft[1]; j++) {\n      pixelData[j * width + i] = segmentIndex;\n    }\n  }\n\n  // Loop within rows of bounding box, to the left of the box\n  for (let i = 0; i < topLeft[0]; i++) {\n    for (let j = topLeft[1]; j < bottomRight[1]; j++) {\n      pixelData[j * width + i] = segmentIndex;\n    }\n  }\n\n  // Loop within rows of bounding box, to the right of the box\n  for (let i = bottomRight[0]; i < width; i++) {\n    for (let j = topLeft[1]; j < bottomRight[1]; j++) {\n      pixelData[j * width + i] = segmentIndex;\n    }\n  }\n\n  // Loop from bottom of bounding box until bottom of image, color entire row\n  for (let i = 0; i < width; i++) {\n    for (let j = bottomRight[1]; j < height; j++) {\n      pixelData[j * width + i] = segmentIndex;\n    }\n  }\n}\n","import fillOutsideBoundingBox from './fillOutsideBoundingBox';\nimport { getLogger } from '../logger.js';\n\nconst logger = getLogger('util:segmentation:operations:helpers:fillShape');\n\n/**\n * Fill all pixels labeled with the activeSegmentIndex,\n * inside/outside the region defined by the shape.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {Object} pointInShape - A function that checks if a point, x,y is within a shape.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nfunction fillShape(\n  evt,\n  operationData,\n  pointInShape,\n  topLeft,\n  bottomRight,\n  insideOrOutside = 'inside'\n) {\n  const { pixelData, segmentIndex } = operationData;\n\n  if (pixelData === undefined || segmentIndex === undefined) {\n    logger.error(\n      `fillInsideShape requires operationData to contain pixelData and segmentIndex`\n    );\n\n    return;\n  }\n\n  const { width } = evt.detail.image;\n  const [xMin, yMin] = topLeft;\n  const [xMax, yMax] = bottomRight;\n\n  if (insideOrOutside === 'outside') {\n    fillOutsideBoundingBox(evt, operationData, topLeft, bottomRight);\n  }\n\n  for (let x = xMin; x < xMax; x++) {\n    for (let y = yMin; y < yMax; y++) {\n      const pixelIndex = y * width + x;\n\n      // If the pixel is the same segmentIndex and is inside the\n      // Region defined by the array of points, set their value to segmentIndex.\n      if (\n        pointInShape({\n          x,\n          y,\n        })\n      ) {\n        pixelData[pixelIndex] = segmentIndex;\n      }\n    }\n  }\n}\n\n/**\n * Fill all pixels labeled with the activeSegmentIndex,\n * inside the region defined by the shape.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {Object} pointInShape - A function that checks if a point, x,y is within a shape.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nexport function fillInsideShape(\n  evt,\n  operationData,\n  pointInShape,\n  topLeft,\n  bottomRight\n) {\n  fillShape(evt, operationData, pointInShape, topLeft, bottomRight, 'inside');\n}\n\n/**\n * Fill all pixels labeled with the activeSegmentIndex,\n * outside the region defined by the shape.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @param {Object} pointInShape - A function that checks if a point, x,y is within a shape.\n * @param {number[]} topLeft The top left of the bounding box.\n * @param {number[]} bottomRight The bottom right of the bounding box.\n * @returns {null}\n */\nexport function fillOutsideShape(\n  evt,\n  operationData,\n  pointInShape,\n  topLeft,\n  bottomRight\n) {\n  fillShape(\n    evt,\n    operationData,\n    point => !pointInShape(point),\n    topLeft,\n    bottomRight,\n    'outside'\n  );\n}\n","/**\n * floodFill.js - Taken from MIT OSS lib - https://github.com/tuzz/n-dimensional-flood-fill\n * Refactored to ES6.\n *\n * @param {function} getter The getter to the elements of your data structure,\n *                          e.g. getter(x,y) for a 2D interprettation of your structure.\n * @param {number[]} seed The seed for your fill. The dimensionality is infered\n *                        by the number of dimensions of the seed.\n * @param {function} [options.onFlood] An optional callback to execute when each pixel is flooded.\n *                             e.g. onFlood(x,y).\n * @param {function} [options.onBoundary] An optional callback to execute whenever a boundary is reached.\n *                                a boundary could be another segmentIndex, or the edge of your\n *                                data structure (i.e. when your getter returns undefined).\n * @param {function} [options.equals] An optional equality method for your datastructure.\n *                            Default is simply value1 = value2.\n * @param {boolean} [options.diagonals] Whether you allow flooding through diagonals. Defaults to false.\n *\n * @returns {Object}\n */\nexport default function(getter, seed, options = {}) {\n  const onFlood = options.onFlood || function() {};\n  const onBoundary = options.onBoundary || function() {};\n  const equals = options.equals || defaultEquals;\n  const diagonals = options.diagonals || false;\n  const startNode = get(seed);\n  const permutations = prunedPermutations();\n  const stack = [];\n  const flooded = [];\n  const visits = {};\n  const bounds = {};\n\n  stack.push({ currentArgs: seed });\n\n  while (stack.length > 0) {\n    flood(stack.pop());\n  }\n\n  return {\n    flooded,\n    boundaries: boundaries(),\n  };\n\n  function flood(job) {\n    const getArgs = job.currentArgs;\n    const prevArgs = job.previousArgs;\n\n    if (visited(getArgs)) {\n      return;\n    }\n    markAsVisited(getArgs);\n\n    if (member(getArgs)) {\n      markAsFlooded(getArgs);\n      pushAdjacent(getArgs);\n    } else {\n      markAsBoundary(prevArgs);\n    }\n  }\n\n  function visited(key) {\n    return visits[key] === true;\n  }\n\n  function markAsVisited(key) {\n    visits[key] = true;\n  }\n\n  function member(getArgs) {\n    const node = safely(get, [getArgs]);\n\n    return safely(equals, [node, startNode]);\n  }\n\n  function markAsFlooded(getArgs) {\n    flooded.push(getArgs);\n    onFlood(...getArgs);\n  }\n\n  function markAsBoundary(prevArgs) {\n    bounds[prevArgs] = prevArgs;\n    onBoundary(...prevArgs);\n  }\n\n  function pushAdjacent(getArgs) {\n    for (let i = 0; i < permutations.length; i += 1) {\n      const perm = permutations[i];\n      const nextArgs = getArgs.slice(0);\n\n      for (let j = 0; j < getArgs.length; j += 1) {\n        nextArgs[j] += perm[j];\n      }\n\n      stack.push({\n        currentArgs: nextArgs,\n        previousArgs: getArgs,\n      });\n    }\n  }\n\n  function get(getArgs) {\n    return getter(...getArgs);\n  }\n\n  function safely(f, args) {\n    try {\n      return f(...args);\n    } catch (error) {\n      return;\n    }\n  }\n\n  function prunedPermutations() {\n    const permutations = permute(seed.length);\n\n    return permutations.filter(function(perm) {\n      const count = countNonZeroes(perm);\n\n      return count !== 0 && (count === 1 || diagonals);\n    });\n  }\n\n  function permute(length) {\n    const perms = [];\n\n    const permutation = function(string) {\n      return string.split('').map(function(c) {\n        return parseInt(c, 10) - 1;\n      });\n    };\n\n    for (let i = 0; i < Math.pow(3, length); i += 1) {\n      const string = lpad(i.toString(3), '0', length);\n\n      perms.push(permutation(string));\n    }\n\n    return perms;\n  }\n\n  function boundaries() {\n    const array = [];\n\n    for (const key in bounds) {\n      if (bounds.hasOwnProperty(key)) {\n        array.unshift(bounds[key]);\n      }\n    }\n\n    return array;\n  }\n}\n\nfunction defaultEquals(a, b) {\n  return a === b;\n}\n\nfunction countNonZeroes(array) {\n  let count = 0;\n\n  for (let i = 0; i < array.length; i += 1) {\n    if (array[i] !== 0) {\n      count += 1;\n    }\n  }\n\n  return count;\n}\n\nfunction lpad(string, character, length) {\n  const array = new Array(length + 1);\n  const pad = array.join(character);\n\n  return (pad + string).slice(-length);\n}\n","import external from '../externalModules';\n\n/**\n * Retrieve the bounds of the circle in image coordinates\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {{ left: number, top: number, width: number, height: number }}\n */\nexport default function getCircleCoords(startHandle, endHandle) {\n  const { distance } = external.cornerstoneMath.point;\n  const radius = distance(startHandle, endHandle);\n\n  return {\n    left: Math.floor(Math.min(startHandle.x - radius, endHandle.x)),\n    top: Math.floor(Math.min(startHandle.y - radius, endHandle.y)),\n    width: radius * 2,\n    height: radius * 2,\n  };\n}\n","import getCircleCoords from '../getCircleCoords';\n\nexport default function getBoundingBoxAroundCircle(evt) {\n  const { handles } = evt.detail;\n  const { width: imageWidth, height: imageHeight } = evt.detail.image;\n  const circleCoordinates = getCircleCoords(handles.start, handles.end);\n\n  let xMax = circleCoordinates.width + circleCoordinates.left;\n  let xMin = circleCoordinates.left;\n  let yMax = circleCoordinates.top + circleCoordinates.height;\n  let yMin = circleCoordinates.top;\n\n  xMin = Math.floor(xMin);\n  yMin = Math.floor(yMin);\n  xMax = Math.floor(xMax);\n  yMax = Math.floor(yMax);\n\n  xMax = Math.min(imageWidth, xMax);\n  xMin = Math.max(0, xMin);\n  yMax = Math.min(imageHeight, yMax);\n  yMin = Math.max(0, yMin);\n\n  return [[xMin, yMin], [xMax, yMax]];\n}\n","export default function getBoundingBoxAroundPolygon(vertices, image) {\n  let xMin = Infinity;\n  let xMax = 0;\n  let yMin = Infinity;\n  let yMax = 0;\n  const { width, height } = image;\n\n  vertices.forEach(v => {\n    xMin = Math.min(v[0], xMin);\n    xMax = Math.max(v[0], xMax);\n    yMin = Math.min(v[1], yMin);\n    yMax = Math.max(v[1], yMax);\n  });\n\n  xMin = Math.floor(xMin);\n  yMin = Math.floor(yMin);\n  xMax = Math.floor(xMax);\n  yMax = Math.floor(yMax);\n\n  xMax = Math.min(width, xMax);\n  xMin = Math.max(0, xMin);\n  yMax = Math.min(height, yMax);\n  yMin = Math.max(0, yMin);\n\n  return [[xMin, yMin], [xMax, yMax]];\n}\n","/**\n * Gets the pixels within the circle.\n * @export @public @method\n * @name getCircle\n *\n * @param  {number} radius     The radius of the circle.\n * @param  {number} rows       The number of rows.\n * @param  {number} columns    The number of columns.\n * @param  {number} [xCoord = 0] The x-location of the center of the circle.\n * @param  {number} [yCoord = 0] The y-location of the center of the circle.\n * @returns {Array.number[]}        Array of pixels contained within the circle.\n */\nexport default function getCircle(\n  radius,\n  rows,\n  columns,\n  xCoord = 0,\n  yCoord = 0\n) {\n  const x0 = Math.floor(xCoord);\n  const y0 = Math.floor(yCoord);\n\n  if (radius === 1) {\n    return [[x0, y0]];\n  }\n\n  const circleArray = [];\n  let index = 0;\n\n  for (let y = -radius; y <= radius; y++) {\n    const yCoord = y0 + y;\n\n    if (yCoord > rows || yCoord < 0) {\n      continue;\n    }\n\n    for (let x = -radius; x <= radius; x++) {\n      const xCoord = x0 + x;\n\n      if (xCoord >= columns || xCoord < 0) {\n        continue;\n      }\n\n      if (x * x + y * y < radius * radius) {\n        circleArray[index++] = [x0 + x, y0 + y];\n      }\n    }\n  }\n\n  return circleArray;\n}\n","import external from '../../externalModules.js';\n\nconst oneOverRoot2 = 1 / Math.sqrt(2); // Cache this to avoid repeated computation.\n\nconst DIRECTIONS = {\n  up: {\n    x: 0,\n    y: 1,\n  },\n  upRight: {\n    x: oneOverRoot2,\n    y: oneOverRoot2,\n  },\n  right: {\n    x: 1,\n    y: 0,\n  },\n  downRight: {\n    x: oneOverRoot2,\n    y: -oneOverRoot2,\n  },\n  down: {\n    x: 0,\n    y: 1,\n  },\n  downLeft: {\n    x: -oneOverRoot2,\n    y: -oneOverRoot2,\n  },\n  left: {\n    x: -1,\n    y: 0,\n  },\n  upLeft: {\n    x: -oneOverRoot2,\n    y: oneOverRoot2,\n  },\n};\n\n/**\n * GetPixelPathBetweenPixels - Generates a 1-pixel wide path of pixels between two pixels.\n * This is essentially simplified A* pathfinding, as we know there are no \"obstacles\".\n *\n * @param  {Object} p1 The starting pixel\n * @param  {Object} p2 The end pixel.\n *\n * @returns {Object[]} All of the pixels on the shortest path between p1 and p2.\n */\nexport default function(p1, p2) {\n  const p = {\n    x: p1.x,\n    y: p1.y,\n  };\n\n  const path = [];\n\n  while (p2.x !== p.x || p2.y !== p.y) {\n    if (p2.x === p.x) {\n      // Goal is above or bellow us.\n      if (p2.y > p.y) {\n        p.y++;\n      } else {\n        p.y--;\n      }\n    } else if (p2.y === p.y) {\n      // Goal is to the left or right of us.\n      if (p2.x > p.x) {\n        p.x++;\n      } else {\n        p.x--;\n      }\n    } else if (p2.y > p.y) {\n      if (p2.x > p.x) {\n        // Can go up, right or diagonally up-right towards goal.\n        moveUpRight(p, p2);\n      } else {\n        // Can go up, left, or diagonally up-left towards goal.\n        moveUpLeft(p, p2);\n      }\n    } else if (p2.x > p.x) {\n      // Can go down, right, or diagonally down-right towards goal.\n      moveDownRight(p, p2);\n    } else {\n      // Can go down, left, or diagonally down-left towards goal.\n      moveDownLeft(p, p2);\n    }\n\n    path.push({\n      x: p.x,\n      y: p.y,\n    });\n  }\n\n  path.pop(); // Remove last node as is the same as the destination.\n\n  return path;\n}\n\n/**\n * MoveUpRight - Moves p up, right or diagonally up right towards p2.\n * @param  {Object} p\n * @param  {Object} p2\n *\n * @returns {null}\n */\nfunction moveUpRight(p, p2) {\n  const unitVector = unitVectorFromPtoP2(p, p2);\n\n  // Largest dot product is fastest way to travel.\n  const dotProducts = [\n    dotProduct2D(unitVector, DIRECTIONS.up),\n    dotProduct2D(unitVector, DIRECTIONS.right),\n    dotProduct2D(unitVector, DIRECTIONS.upRight),\n  ];\n\n  const largestIndex = getIndexOfLargestInLengthThreeArray(dotProducts);\n\n  switch (largestIndex) {\n    case 0:\n      p.y++;\n      break;\n    case 1:\n      p.x++;\n      break;\n    case 2:\n      p.y++;\n      p.x++;\n  }\n}\n\n/**\n * MoveUpLeft - Moves p up, left or diagonally up left towards p2.\n * @param  {Object} p\n * @param  {Object} p2\n *\n * @returns {null}\n */\nfunction moveUpLeft(p, p2) {\n  const unitVector = unitVectorFromPtoP2(p, p2);\n\n  // Largest dot product is fastest way to travel.\n  const dotProducts = [\n    dotProduct2D(unitVector, DIRECTIONS.up),\n    dotProduct2D(unitVector, DIRECTIONS.left),\n    dotProduct2D(unitVector, DIRECTIONS.upLeft),\n  ];\n\n  const largestIndex = getIndexOfLargestInLengthThreeArray(dotProducts);\n\n  switch (largestIndex) {\n    case 0:\n      p.y++;\n      break;\n    case 1:\n      p.x--;\n      break;\n    case 2:\n      p.y++;\n      p.x--;\n  }\n}\n\n/**\n * MoveDownRight - Moves p down, right or diagonally down right towards p2.\n * @param  {Object} p\n * @param  {Object} p2\n *\n * @returns {null}\n */\nfunction moveDownRight(p, p2) {\n  const unitVector = unitVectorFromPtoP2(p, p2);\n\n  // Largest dot product is fastest way to travel.\n  const dotProducts = [\n    dotProduct2D(unitVector, DIRECTIONS.down),\n    dotProduct2D(unitVector, DIRECTIONS.right),\n    dotProduct2D(unitVector, DIRECTIONS.downRight),\n  ];\n\n  const largestIndex = getIndexOfLargestInLengthThreeArray(dotProducts);\n\n  switch (largestIndex) {\n    case 0:\n      p.y--;\n      break;\n    case 1:\n      p.x++;\n      break;\n    case 2:\n      p.y--;\n      p.x++;\n  }\n}\n\n/**\n * MoveDownLeft - Moves p down, left or diagonally down left towards p2.\n * @param  {Object} p\n * @param  {Object} p2\n *\n * @returns {null}\n */\nfunction moveDownLeft(p, p2) {\n  const unitVector = unitVectorFromPtoP2(p, p2);\n\n  // Largest dot product is fastest way to travel.\n  const dotProducts = [\n    dotProduct2D(unitVector, DIRECTIONS.down),\n    dotProduct2D(unitVector, DIRECTIONS.left),\n    dotProduct2D(unitVector, DIRECTIONS.downLeft),\n  ];\n\n  const largestIndex = getIndexOfLargestInLengthThreeArray(dotProducts);\n\n  switch (largestIndex) {\n    case 0:\n      p.y--;\n      break;\n    case 1:\n      p.x--;\n      break;\n    case 2:\n      p.y--;\n      p.x--;\n  }\n}\n\n/**\n * UnitVectorFromPtoP2 - Returns a unit vector pointing from p to p2.\n * @param  {Object} p\n * @param  {Object} p2\n *\n * @returns {Object} The unit vector.\n */\nfunction unitVectorFromPtoP2(p, p2) {\n  const distance = external.cornerstoneMath.point.distance(p, p2);\n\n  return {\n    x: (p2.x - p.x) / distance,\n    y: (p2.y - p.y) / distance,\n  };\n}\n\nfunction dotProduct2D(p, p2) {\n  return p.x * p2.x + p.y * p2.y;\n}\n\n/**\n * GetIndexOfLargestInLengthThreeArray - Returns the index of the largest value\n * in the 3 element array.\n * @param  {number[]} array\n * @returns {number}\n */\nfunction getIndexOfLargestInLengthThreeArray(array) {\n  let largestIndex = array[0] > array[1] ? 0 : 1;\n\n  if (array[2] > array[largestIndex]) {\n    largestIndex = 2;\n  }\n\n  return largestIndex;\n}\n","import external from '../../externalModules';\nimport EVENTS from '../../events.js';\nimport { getModule } from '../../store';\n\n/**\n * Triggers the LABELMAP_MODIFIED event for the active element, providing the labelmapIndex that was modified.\n *\n * @param {HTMLElement} element\n * @param {number} labelmapIndex The labelmapIndex. Defaults to the active for that element if not set.\n */\nexport default function triggerLabelmapModifiedEvent(element, labelmapIndex) {\n  const { getters } = getModule('segmentation');\n\n  labelmapIndex =\n    labelmapIndex === undefined\n      ? getters.activeLabelmapIndex(element)\n      : labelmapIndex;\n\n  external.cornerstone.triggerEvent(element, EVENTS.LABELMAP_MODIFIED, {\n    labelmapIndex,\n  });\n}\n","export default function getDiffBetweenPixelData(\n  previousPixelData,\n  newPixelData\n) {\n  const diff = [];\n\n  for (let i = 0; i < previousPixelData.length; i++) {\n    if (previousPixelData[i] !== newPixelData[i]) {\n      diff.push([i, previousPixelData[i], newPixelData[i]]);\n    }\n  }\n\n  return diff;\n}\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\nimport getSegmentsOnPixelData from './getSegmentsOnPixeldata';\nimport { triggerLabelmapModifiedEvent } from '../../../util/segmentation';\nimport ARRAY_TYPES from './arrayTypes';\nimport { getModule } from '../../index.js';\n\nconst { UINT_16_ARRAY, FLOAT_32_ARRAY } = ARRAY_TYPES;\n\n/**\n * Takes a 16-bit encoded `ArrayBuffer` and stores it as a `Labelmap3D` for the\n * `BrushStackState` associated with the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID The cornerstone\n *                                                  enabled element or its UUID.\n * @param  {ArrayBuffer} buffer\n * @param  {number} labelmapIndex The index to store the labelmap under.\n * @param  {Object[]} metadata = [] Any metadata about the segments.\n * @param  {number[][]} [segmentsOnLabelmapArray] An array of array of segments on each imageIdIndex.\n *                       If not present, is calculated.\n * @param  {colorLUTIndex} [colorLUTIndex = 0] The index of the colorLUT to use to render the segmentation.\n * @returns {null}\n */\nfunction setLabelmap3DForElement(\n  elementOrEnabledElementUID,\n  buffer,\n  labelmapIndex,\n  metadata = [],\n  segmentsOnLabelmapArray,\n  colorLUTIndex = 0\n) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const numberOfFrames = stackState.data[0].imageIds.length;\n  const firstImageId = stackState.data[0].imageIds[0];\n\n  setLabelmap3DByFirstImageId(\n    firstImageId,\n    buffer,\n    labelmapIndex,\n    metadata,\n    numberOfFrames,\n    segmentsOnLabelmapArray,\n    colorLUTIndex\n  );\n\n  triggerLabelmapModifiedEvent(element, labelmapIndex);\n}\n\n/**\n * Takes an 16-bit encoded `ArrayBuffer` and stores it as a `Labelmap3D` for\n * the `BrushStackState` associated with the firstImageId.\n *\n * @param  {HTMLElement|string} firstImageId  The firstImageId of the series to\n *                                            store the segmentation on.\n * @param  {ArrayBuffer} buffer\n * @param  {number} labelmapIndex The index to store the labelmap under.\n * @param  {Object[]} metadata = [] Any metadata about the segments.\n * @param  {number} numberOfFrames The number of frames, required to set up the\n *                                 relevant labelmap2D views.\n * @param  {number[][]} [segmentsOnLabelmapArray] An array of array of segments on each imageIdIndex.\n *                       If not present, is calculated.\n * @param  {colorLUTIndex} [colorLUTIndex = 0] The index of the colorLUT to use to render the segmentation.\n * @returns {null}\n */\nfunction setLabelmap3DByFirstImageId(\n  firstImageId,\n  buffer,\n  labelmapIndex,\n  metadata = [],\n  numberOfFrames,\n  segmentsOnLabelmapArray,\n  colorLUTIndex = 0\n) {\n  const { configuration } = getModule('segmentation');\n\n  let brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    state.series[firstImageId] = {\n      activeLabelmapIndex: labelmapIndex,\n      labelmaps3D: [],\n    };\n\n    brushStackState = state.series[firstImageId];\n  }\n\n  brushStackState.labelmaps3D[labelmapIndex] = {\n    buffer,\n    labelmaps2D: [],\n    metadata,\n    activeSegmentIndex: 1,\n    colorLUTIndex: 0,\n    segmentsHidden: [],\n    undo: [],\n    redo: [],\n  };\n\n  const labelmaps2D = brushStackState.labelmaps3D[labelmapIndex].labelmaps2D;\n  const slicelengthInBytes = buffer.byteLength / numberOfFrames;\n\n  for (let i = 0; i < numberOfFrames; i++) {\n    let pixelData;\n\n    switch (configuration.arrayType) {\n      case UINT_16_ARRAY:\n        pixelData = new Uint16Array(\n          buffer,\n          slicelengthInBytes * i, // 2 bytes/voxel\n          slicelengthInBytes / 2\n        );\n\n        break;\n\n      case FLOAT_32_ARRAY:\n        pixelData = new Float32Array(\n          buffer,\n          slicelengthInBytes * i,\n          slicelengthInBytes / 4\n        );\n        break;\n\n      default:\n        throw new Error(`Unsupported Array Type ${configuration.arrayType}`);\n    }\n\n    const segmentsOnLabelmap = segmentsOnLabelmapArray\n      ? segmentsOnLabelmapArray[i]\n      : getSegmentsOnPixelData(pixelData);\n\n    if (segmentsOnLabelmap && segmentsOnLabelmap.some(segment => segment)) {\n      labelmaps2D[i] = {\n        pixelData,\n        segmentsOnLabelmap,\n      };\n    }\n  }\n}\n\nexport { setLabelmap3DByFirstImageId, setLabelmap3DForElement };\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\nimport external from '../../../externalModules';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('store:modules:segmentationModule:getLabelmapStats');\n\n/**\n * Returns the maximum pixel value, mean and standard deviation of the segment\n * given by the `segmentIndex` and `labelmapIndex`.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} segmentIndex  The segment index to query.\n * @param  {number} labelmapIndex The `labelmapIndex` of the `Labelmap3D` to query.\n *                                Defaults to the activeLabelmapIndex if not given.\n * @returns {Promise|null} A promise that resolves to an object containing\n *                    the maximum pixel value, the mean and the standard deviation.\n *                    Returns null if no cornerstone element is found.\n */\nexport default function getLabelmapStats(\n  elementOrEnabledElementUID,\n  segmentIndex,\n  labelmapIndex\n) {\n  const cornerstone = external.cornerstone;\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return null;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const imageIds = stackState.data[0].imageIds;\n  const firstImageId = imageIds[0];\n\n  return new Promise(resolve => {\n    const brushStackState = state.series[firstImageId];\n\n    if (!brushStackState) {\n      resolve(null);\n    }\n\n    const { sufficientMetadata, imagePlanes } = _getImagePlanes(imageIds);\n\n    if (!sufficientMetadata) {\n      logger.warn(\n        'Insufficient imagePlaneModule information to calculate volume statistics.'\n      );\n      resolve(null);\n    }\n\n    labelmapIndex =\n      labelmapIndex === undefined\n        ? brushStackState.activeLabelmapIndex\n        : labelmapIndex;\n\n    const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n\n    const imagePromises = [];\n\n    for (let i = 0; i < imageIds.length; i++) {\n      imagePromises.push(cornerstone.loadAndCacheImage(imageIds[i]));\n    }\n\n    Promise.all(imagePromises).then(images => {\n      const stats = _calculateLabelmapStats(\n        labelmap3D,\n        images,\n        imagePlanes,\n        segmentIndex\n      );\n\n      resolve(stats);\n    });\n  });\n}\n\n/**\n *\n * @param {string[]} imageIds An array of cornerstone imageIds.\n * @returns {Object} An object containing an array of per-frame imagePlane metadata,\n * and a flag indicating if the metadata was present.\n */\nfunction _getImagePlanes(imageIds) {\n  const imagePlanes = [];\n  const cornerstone = external.cornerstone;\n  const metadataProvider = cornerstone.metaData;\n\n  let sufficientMetadata = true;\n\n  for (let i = 0; i < imageIds.length; i++) {\n    const imagePlaneModule = metadataProvider.get(\n      'imagePlaneModule',\n      imageIds[i]\n    );\n\n    if (!imagePlaneModule) {\n      sufficientMetadata = false;\n      break;\n    }\n\n    imagePlanes.push(imagePlaneModule);\n  }\n\n  return { sufficientMetadata, imagePlanes };\n}\n\n/**\n *\n * @param {Labelmap3D} labelmap3D The labelmap3D object.\n * @param {Object[]} images An array of cornerstone images.\n * @param {Object[]} imagePlanes An array of the per-frame imagePlane metadata.\n * @param {number} segmentIndex\n *\n * @returns {Object} Statistics object containing the volume in mm^3; and the\n *                   min, max, mean and stdev of the segmented voxels.\n */\nexport function _calculateLabelmapStats(\n  labelmap3D,\n  images,\n  imagePlanes,\n  segmentIndex\n) {\n  const voxelsPerFrame = _getVoxelsPerFrameForSegment(\n    labelmap3D,\n    images,\n    imagePlanes,\n    segmentIndex\n  );\n\n  let volumeWeightedMean = 0;\n  let max = voxelsPerFrame[0].values[0];\n  let min = max;\n  let volume = 0;\n\n  // Calculate Min, Max, volume and mean.\n  for (let i = 0; i < voxelsPerFrame.length; i++) {\n    const { values, voxelInMM3 } = voxelsPerFrame[i];\n\n    volume += voxelInMM3 * values.length;\n\n    let sum = 0;\n\n    values.forEach(value => {\n      if (value > max) {\n        max = value;\n      } else if (value < min) {\n        min = value;\n      }\n\n      sum += value;\n    });\n\n    volumeWeightedMean += sum * voxelInMM3;\n  }\n\n  volumeWeightedMean /= volume;\n\n  let volumeWeightedStDev = 0;\n\n  // Calculate the volume weigthed standard deviation.\n  for (let i = 0; i < voxelsPerFrame.length; i++) {\n    const { values, voxelInMM3 } = voxelsPerFrame[i];\n\n    let stdDevSum = 0;\n\n    values.forEach(value => {\n      stdDevSum += Math.pow(value - volumeWeightedMean, 2);\n    });\n\n    volumeWeightedStDev += stdDevSum * voxelInMM3;\n  }\n\n  volumeWeightedStDev /= volume;\n  volumeWeightedStDev = Math.sqrt(volumeWeightedStDev);\n\n  return {\n    volume,\n    mean: volumeWeightedMean,\n    stdDev: volumeWeightedStDev,\n    max,\n    min,\n  };\n}\n\n/**\n * Returns an array of voxel values masked by the segment for each frame,\n * as well as the real world volume of a voxel on that frame.\n *\n * @param {Labelmap3D} labelmap3D The `Labelmap3D` object.\n * @param {Object[]} images An array of cornerstone images.\n * @param {Object[]} imagePlanes An array of the per-frame imagePlane metadata.\n * @param {number} segmentIndex The index of the segment to check.\n *\n * @returns {Object[]} An array of voxel values and voxel volumes per frame.\n */\nfunction _getVoxelsPerFrameForSegment(\n  labelmap3D,\n  images,\n  imagePlanes,\n  segmentIndex\n) {\n  const { rowPixelSpacing, columnPixelSpacing } = images[0];\n  const labelmaps2D = labelmap3D.labelmaps2D;\n  const voxelsPerFrame = [];\n\n  for (let i = 0; i < labelmaps2D.length; i++) {\n    const labelmap2D = labelmaps2D[i];\n\n    if (labelmap2D && labelmap2D.segmentsOnLabelmap.includes(segmentIndex)) {\n      const sliceThickness = _getSliceThickness(images, imagePlanes, i);\n      const voxelInMM3 = sliceThickness * rowPixelSpacing * columnPixelSpacing;\n      const segmentationPixelData = labelmap2D.pixelData;\n      const imagePixelData = images[i].getPixelData();\n      const values = [];\n\n      // Iterate over segmentationPixelData and count voxels.\n      for (let p = 0; p < segmentationPixelData.length; p++) {\n        if (segmentationPixelData[p] === segmentIndex) {\n          values.push(imagePixelData[p]);\n        }\n      }\n\n      voxelsPerFrame.push({\n        voxelInMM3,\n        values,\n      });\n    }\n  }\n\n  return voxelsPerFrame;\n}\n\n/**\n * Estimates the slice thickness given the image position patient of adjacent frames.\n * For the edges the slice thickness is assumed to be the perpendicular distance to the closest frame.\n * For all other frames the slice thickness is taken to be the sum of half of the distance to the frame above and below.\n *\n * Voxels on the first or last frame are assumed to be full occupied.\n *\n * @param {Object[]} images An array of cornerstone images.\n * @param {Object[]} imagePlanes An array of the per-frame imagePlane metadata.\n * @param {number} frameIndex The index of the frame to get the slice thickness for.\n *\n * @returns {number}\n */\nfunction _getSliceThickness(images, imagePlanes, frameIndex) {\n  const numberOfSlices = images.length;\n  const ipp = imagePlanes[frameIndex].imagePositionPatient;\n\n  // Special cases: Edge of volume - Assume thickness is the distance\n  // between the current slice and the closest slice as this is all the information we have.\n  if (frameIndex === 0) {\n    const ippAbove = imagePlanes[frameIndex + 1].imagePositionPatient;\n\n    return distanceBetweenSlices(ipp, ippAbove);\n  } else if (frameIndex === numberOfSlices - 1) {\n    const ippBelow = imagePlanes[frameIndex - 1].imagePositionPatient;\n\n    return distanceBetweenSlices(ipp, ippBelow);\n  }\n\n  // Estimate slice thickness from the two adjacent slices.\n  const ippBelow = imagePlanes[frameIndex - 1].imagePositionPatient;\n  const ippAbove = imagePlanes[frameIndex + 1].imagePositionPatient;\n\n  return (\n    (distanceBetweenSlices(ipp, ippBelow) +\n      distanceBetweenSlices(ipp, ippAbove)) /\n    2\n  );\n}\n\n/**\n * Returns the ditance between two imagePostionPatient coordinates.\n *\n * @param {number[]} ipp1 The first image position patient array.\n * @param {number[]} ipp2 The second image position patient array.\n */\nfunction distanceBetweenSlices(ipp1, ipp2) {\n  return Math.sqrt(\n    Math.pow(ipp1[0] - ipp2[0], 2) +\n      Math.pow(ipp1[1] - ipp2[1], 2) +\n      Math.pow(ipp1[2] - ipp2[2], 2)\n  );\n}\n","import ARRAY_TYPES from './arrayTypes';\nimport { getModule } from '../../index.js';\n\nconst { UINT_16_ARRAY, FLOAT_32_ARRAY } = ARRAY_TYPES;\n\n/**\n * Adds a `Labelmap2D` view of one frame of a `Labelmap3D`.\n *\n * @param  {BrushStackState} brushStackState     The `BrushStackState` for a particular `Series`.\n * @param  {number} labelmapIndex       The labelmap index.\n * @param  {number} imageIdIndex        The stack position of the image.\n * @param  {number} rows                The number of rows in the image.\n * @param  {number} columns             The number of columns in the image.\n * @returns {null}\n */\nexport default function addLabelmap2D(\n  brushStackState,\n  labelmapIndex,\n  imageIdIndex,\n  rows,\n  columns\n) {\n  const { configuration } = getModule('segmentation');\n  const sliceLength = rows * columns;\n\n  const elementOffset = sliceLength * imageIdIndex;\n\n  let pixelData;\n\n  switch (configuration.arrayType) {\n    case UINT_16_ARRAY:\n      pixelData = new Uint16Array(\n        brushStackState.labelmaps3D[labelmapIndex].buffer,\n        elementOffset * 2, // 2 bytes/voxel\n        sliceLength\n      );\n\n      break;\n\n    case FLOAT_32_ARRAY:\n      pixelData = new Float32Array(\n        brushStackState.labelmaps3D[labelmapIndex].buffer,\n        elementOffset * 4, // 4 bytes/voxel\n        sliceLength\n      );\n      break;\n\n    default:\n      throw new Error(`Unsupported Array Type ${configuration.arrayType}`);\n  }\n\n  brushStackState.labelmaps3D[labelmapIndex].labelmaps2D[imageIdIndex] = {\n    pixelData,\n    segmentsOnLabelmap: [],\n  };\n}\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport getSegmentsOnPixelData from './getSegmentsOnPixeldata';\nimport addLabelmap3D from './addLabelmap3D';\nimport addLabelmap2D from './addLabelmap2D';\nimport external from '../../../externalModules';\nimport state from './state';\nimport ARRAY_TYPES from './arrayTypes';\nimport { getModule } from '../../index.js';\nimport { getLogger } from '../../../util/logger';\n\nconst { UINT_16_ARRAY, FLOAT_32_ARRAY } = ARRAY_TYPES;\n\nconst logger = getLogger('store:modules:segmentationModule:getLabelmap2D');\n\n/**\n * Returns the active `labelmap3D` and the `currentImageIdIndex`. If a labelmap does\n * not get exist, creates a new one. Generates a `labelmap2D` for the `currentImageIndex`\n * if it does not yet exist.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @returns {Object} The `Labelmap2D`, `Labelmap3D`, `activeLabelmapIndex` and `currentImageIdIndex`.\n */\nexport default function getLabelmap2D(elementOrEnabledElementUID) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  const stackState = getToolState(element, 'stack');\n\n  if (!stackState) {\n    logger.error(\n      'Consumers must define stacks in their application if using segmentations in cornerstoneTools.'\n    );\n\n    return;\n  }\n\n  const stackData = stackState.data[0];\n\n  const enabledElement = cornerstone.getEnabledElement(element);\n\n  const currentImageIdIndex = stackData.currentImageIdIndex;\n  const { rows, columns } = enabledElement.image;\n\n  const numberOfFrames = stackData.imageIds.length;\n  const firstImageId = stackData.imageIds[0];\n\n  let brushStackState = state.series[firstImageId];\n\n  let activeLabelmapIndex;\n\n  if (brushStackState) {\n    activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n\n    if (!brushStackState.labelmaps3D[activeLabelmapIndex]) {\n      const size = rows * columns * numberOfFrames;\n\n      addLabelmap3D(brushStackState, activeLabelmapIndex, size);\n    }\n\n    if (\n      !brushStackState.labelmaps3D[activeLabelmapIndex].labelmaps2D[\n        currentImageIdIndex\n      ]\n    ) {\n      addLabelmap2D(\n        brushStackState,\n        activeLabelmapIndex,\n        currentImageIdIndex,\n        rows,\n        columns\n      );\n    }\n  } else {\n    activeLabelmapIndex = 0;\n\n    state.series[firstImageId] = {\n      activeLabelmapIndex,\n      labelmaps3D: [],\n    };\n\n    brushStackState = state.series[firstImageId];\n\n    const size = rows * columns * numberOfFrames;\n\n    addLabelmap3D(brushStackState, activeLabelmapIndex, size);\n\n    addLabelmap2D(\n      brushStackState,\n      activeLabelmapIndex,\n      currentImageIdIndex,\n      rows,\n      columns\n    );\n  }\n\n  const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\n\n  return {\n    labelmap2D: labelmap3D.labelmaps2D[currentImageIdIndex],\n    labelmap3D,\n    currentImageIdIndex,\n    activeLabelmapIndex,\n  };\n}\n\n/**\n * Returns a `Labelmap2D` view of a `Labelmap3D` for the given `imageIdIndex`.\n * Creates and caches it if it doesn't yet exist.\n *\n * @param  {Labelmap3D} labelmap3D   The `Labelmap3D` object.\n * @param  {number} imageIdIndex The imageId Index.\n * @param  {number} rows         The number of rows.\n * @param  {number} columns      The number of columns.\n * @returns {null}\n */\nexport function getLabelmap2DByImageIdIndex(\n  labelmap3D,\n  imageIdIndex,\n  rows,\n  columns\n) {\n  if (!labelmap3D.labelmaps2D[imageIdIndex]) {\n    const { configuration } = getModule('segmentation');\n    const sliceLength = rows * columns;\n\n    const elementOffset = sliceLength * imageIdIndex;\n\n    let pixelData;\n\n    switch (configuration.arrayType) {\n      case UINT_16_ARRAY:\n        pixelData = new Uint16Array(\n          labelmap3D.buffer,\n          elementOffset * 2, // 2 bytes/voxel\n          sliceLength\n        );\n\n        break;\n\n      case FLOAT_32_ARRAY:\n        pixelData = new Float32Array(\n          labelmap3D.buffer,\n          elementOffset * 4, // 4 bytes/voxel\n          sliceLength\n        );\n        break;\n\n      default:\n        throw new Error(`Unsupported Array Type ${configuration.arrayType}`);\n    }\n\n    labelmap3D.labelmaps2D[imageIdIndex] = {\n      pixelData,\n      segmentsOnLabelmap: getSegmentsOnPixelData(pixelData),\n    };\n  }\n\n  return labelmap3D.labelmaps2D[imageIdIndex];\n}\n","/**\n * Checks if the point is within the image boundaries.\n * @param  {Object} pixel The pixel.\n * @param  {number} rows The number of rows.\n * @param  {number} cols The number of columns.\n * @returns {boolean}\n */\nexport default function isPointInImage({ x, y }, rows, cols) {\n  return x < cols && x >= 0 && y < rows && y >= 0;\n}\n","import { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\nimport isPointInImage from '../../../util/isPointInImage';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger(\n  'store:modules:segmentationModule:getSegmentOfActiveLabelmapAtEvent'\n);\n\n/**\n * Returns the segmentIndex at the event position and its corresponding metadata.\n * @param  {Object} evt A cornerstone event with a currentPoints property.\n *\n * @returns {Object} An `Object` with the `segmentIndex` and its `metadata`.\n */\nexport default function getSegmentOfActiveLabelmapAtEvent(evt) {\n  const eventData = evt.detail;\n  const { element, image, currentPoints } = eventData;\n\n  if (!currentPoints) {\n    logger.warn('Not a cornerstone input event.');\n\n    return;\n  }\n\n  const cols = image.width;\n  const rows = image.height;\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const currentImageIdIndex = stackData.currentImageIdIndex;\n  const firstImageId = stackData.imageIds[0];\n  const brushStackState = state.series[firstImageId];\n\n  const activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n\n  const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\n\n  if (!labelmap3D) {\n    // No labelmap3D === no segment here.\n    return;\n  }\n\n  const labelmap2D = labelmap3D.labelmaps2D[currentImageIdIndex];\n\n  if (!labelmap2D) {\n    // No labelmap on this imageId === no segment here.\n    return;\n  }\n\n  const pixelData = labelmap2D.pixelData;\n\n  let { x, y } = currentPoints.image;\n\n  x = Math.floor(x);\n  y = Math.floor(y);\n\n  if (isPointInImage({ x, y }, rows, cols)) {\n    const segmentIndex = pixelData[y * cols + x];\n\n    if (segmentIndex === 0) {\n      return;\n    }\n\n    return {\n      segmentIndex,\n      metadata: labelmap3D.metadata[segmentIndex],\n    };\n  }\n\n  // Outside image === no segment here.\n  return;\n}\n","import { getLogger } from '../../../util/logger';\nimport state from './state';\nimport { getModule } from '../../index.js';\n\nconst logger = getLogger('store:modules:segmentationModule:setColorLUT');\n\n/**\n * SetColorLUT - Sets the labelmap to a specfic LUT, or generates a new LUT.\n *\n * @param  {number} labelmapIndex The labelmap index to apply the color LUT to.\n * @param  {number[][]} [colorLUT]    An array of The colorLUT to set.\n * @returns {null}\n */\nexport default function setColorLUT(colorLUTIndex, colorLUT = []) {\n  const { configuration } = getModule('segmentation');\n  const segmentsPerLabelmap = configuration.segmentsPerLabelmap;\n\n  if (colorLUT) {\n    _checkColorLUTLength(colorLUT, segmentsPerLabelmap);\n\n    if (colorLUT.length < segmentsPerLabelmap) {\n      colorLUT = [\n        ...colorLUT,\n        ..._generateNewColorLUT(segmentsPerLabelmap - colorLUT.length),\n      ];\n    }\n  } else {\n    // Autogenerate colorLUT.\n    colorLUT = colorLUT || _generateNewColorLUT(segmentsPerLabelmap);\n  }\n\n  // Apppend the \"zero\" (no label) color to the front of the LUT.\n  colorLUT.unshift([0, 0, 0, 0]);\n\n  state.colorLutTables[colorLUTIndex] = colorLUT;\n}\n\nexport function setColorLUTIndexForLabelmap3D(labelmap3D, colorLUTIndex) {\n  labelmap3D.colorLUTIndex = colorLUTIndex;\n}\n\nexport function getColorForSegmentIndexColorLUT(\n  labelmap3DOrColorLUTIndex,\n  segmentIndex\n) {\n  const colorLUT = getColorLUT(labelmap3DOrColorLUTIndex);\n\n  return colorLUT[segmentIndex];\n}\n\n/**\n * Sets a single color of a colorLUT.\n *\n * @param {Object|number} labelmap3DOrColorLUTIndex Either a `Labelmap3D` object (who's referenced colorLUT will be changed), or a colorLUTIndex.\n * @param {number} segmentIndex The segmentIndex color to change.\n * @param {[number,number,number,number]} colorArray The color values in RGBA array format.\n */\nexport function setColorForSegmentIndexOfColorLUT(\n  labelmap3DOrColorLUTIndex,\n  segmentIndex,\n  colorArray\n) {\n  const colorLUT = getColorLUT(labelmap3DOrColorLUTIndex);\n\n  colorLUT[segmentIndex] = colorArray;\n}\n\nexport function getColorLUT(labelmap3DOrColorLUTIndex) {\n  if (typeof labelmap3DOrColorLUTIndex === 'number') {\n    return state.colorLutTables[labelmap3DOrColorLUTIndex];\n  }\n\n  return state.colorLutTables[labelmap3DOrColorLUTIndex.colorLUTIndex];\n}\n\n/**\n * Checks the length of `colorLUT` compared to `segmnetsPerLabelmap` and flags up any warnings.\n * @param  {number[][]} colorLUT\n * @param  {number} segmentsPerLabelmap\n * @returns {boolean} Whether the length is valid.\n */\nfunction _checkColorLUTLength(colorLUT, segmentsPerLabelmap) {\n  if (colorLUT.length < segmentsPerLabelmap) {\n    logger.warn(\n      `The provided colorLUT only provides ${colorLUT.length} labels, whereas segmentsPerLabelmap is set to ${segmentsPerLabelmap}. Autogenerating the rest.`\n    );\n  } else if (colorLUT.length > segmentsPerLabelmap) {\n    logger.warn(\n      `segmentsPerLabelmap is set to ${segmentsPerLabelmap}, and the provided colorLUT provides ${colorLUT.length}. Using the first ${segmentsPerLabelmap} colors from the LUT.`\n    );\n  }\n}\n\n/**\n * Generates a new color LUT (Look Up Table) of length `numberOfColors`,\n * which returns an RGBA color for each segment index.\n *\n * @param  {Number} numberOfColors = 255 The number of colors to generate\n * @returns {Number[][]}           The array of RGB values.\n */\nfunction _generateNewColorLUT(numberOfColors = 255) {\n  const rgbArr = [];\n\n  for (let i = 0; i < numberOfColors; i++) {\n    rgbArr.push(getRGBAfromHSLA(getNextHue(), getNextL()));\n  }\n\n  return rgbArr;\n}\n\nconst goldenAngle = 137.5;\nlet hueValue = 222.5;\n\nfunction getNextHue() {\n  hueValue += goldenAngle;\n\n  if (hueValue >= 360) {\n    hueValue -= 360;\n  }\n\n  return hueValue;\n}\n\nlet l = 0.6;\nconst maxL = 0.82;\nconst minL = 0.3;\nconst incL = 0.07;\n\nfunction getNextL() {\n  l += incL;\n\n  if (l > maxL) {\n    const diff = l - maxL;\n\n    l = minL + diff;\n  }\n\n  return l;\n}\n\n/**\n * GetRGBAfromHSL - Returns an RGBA color given H, S, L and A.\n *\n * @param  {Number} hue         The hue.\n * @param  {Number} s = 1       The saturation.\n * @param  {Number} l = 0.6     The lightness.\n * @param  {Number} alpha = 255 The alpha.\n * @returns {Number[]}            The RGBA formatted color.\n */\nfunction getRGBAfromHSLA(hue, s = 1, l = 0.6, alpha = 255) {\n  const c = (1 - Math.abs(2 * l - 1)) * s;\n  const x = c * (1 - Math.abs(((hue / 60) % 2) - 1));\n  const m = l - c / 2;\n\n  let r, g, b;\n\n  if (hue < 60) {\n    [r, g, b] = [c, x, 0];\n  } else if (hue < 120) {\n    [r, g, b] = [x, c, 0];\n  } else if (hue < 180) {\n    [r, g, b] = [0, c, x];\n  } else if (hue < 240) {\n    [r, g, b] = [0, x, c];\n  } else if (hue < 300) {\n    [r, g, b] = [x, 0, c];\n  } else if (hue < 360) {\n    [r, g, b] = [c, 0, x];\n  }\n\n  return [(r + m) * 255, (g + m) * 255, (b + m) * 255, alpha];\n}\n","import { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\nimport getElement from './getElement';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('store:modules:segmentationModule:getBrushColor');\n\n/**\n * Returns the brush color as a rgba CSS color for the active segment of the active\n * `Labelmap3D` for the `BrushStackState` displayed on the element.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {boolean} drawing = false    Whether the user is drawing or not.\n * @returns {string}                    An rgba value as a string.\n */\nexport default function getBrushColor(\n  elementOrEnabledElementUID,\n  drawing = false\n) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n\n  if (!stackState) {\n    logger.error(\n      'Consumers must define stacks in their application if using segmentations in cornerstoneTools.'\n    );\n\n    return;\n  }\n\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  let color;\n\n  if (brushStackState) {\n    const activeLabelmapIndex = brushStackState.activeLabelmapIndex;\n    const labelmap3D = brushStackState.labelmaps3D[activeLabelmapIndex];\n\n    const activeSegmentIndex = labelmap3D.activeSegmentIndex;\n\n    color = state.colorLutTables[labelmap3D.colorLUTIndex][activeSegmentIndex];\n  } else {\n    // No data yet, make brush the default color of colormap 0.\n    color = state.colorLutTables[0][1];\n  }\n\n  return drawing\n    ? `rgba(${color[0]}, ${color[1]}, ${color[2]}, 1.0 )`\n    : `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.8 )`;\n}\n","import ARRAY_TYPES from './arrayTypes';\n\nconst { UINT_16_ARRAY } = ARRAY_TYPES;\n\n// Segmentation module configuration.\nconst defaultConfiguration = {\n  renderOutline: true,\n  renderFill: true,\n  shouldRenderInactiveLabelmaps: true,\n  radius: 10,\n  minRadius: 1,\n  maxRadius: 50,\n  fillAlpha: 0.2,\n  fillAlphaInactive: 0.1,\n  outlineAlpha: 0.7,\n  outlineAlphaInactive: 0.35,\n  outlineWidth: 3,\n  storeHistory: true,\n  segmentsPerLabelmap: 65535, // Max is 65535 due to using 16-bit Unsigned ints.\n  arrayType: UINT_16_ARRAY,\n};\n\nexport default defaultConfiguration;\n","import { getLabelmap3D } from './getLabelmaps3D';\nimport { getLogger } from '../../../util/logger';\nimport external from '../../../externalModules';\n\nconst logger = getLogger('util:segmentation:labelmap3DHistory');\n\nfunction pushState(element, operations, labelmapIndex) {\n  const labelmap3D = getLabelmap3D(element, labelmapIndex);\n\n  labelmap3D.undo.push(operations);\n  labelmap3D.redo = [];\n}\n\nfunction undo(element, labelmapIndex) {\n  const labelmap3D = getLabelmap3D(element, labelmapIndex);\n  const { undo, redo } = labelmap3D;\n\n  if (!undo.length) {\n    logger.warn('No undos left.');\n\n    return;\n  }\n\n  // Pop last set of operations from undo.\n  const operations = undo.pop();\n\n  // Undo operations.\n  applyState(labelmap3D, operations, 1);\n\n  // Push set of operations to redo.\n  redo.push(operations);\n\n  external.cornerstone.updateImage(element);\n}\n\nfunction redo(element, labelmapIndex) {\n  const labelmap3D = getLabelmap3D(element, labelmapIndex);\n  const { undo, redo } = labelmap3D;\n\n  if (!redo.length) {\n    logger.warn('No redos left.');\n\n    return;\n  }\n\n  // Pop last set of operations from redo.\n  const operations = redo.pop();\n\n  // Redo operations.\n  applyState(labelmap3D, operations, 2);\n\n  // Push set of operations to undo.\n  undo.push(operations);\n\n  external.cornerstone.updateImage(element);\n}\n\nexport { pushState, undo, redo };\n\nfunction applyState(labelmap3D, operations, replaceIndex) {\n  const { labelmaps2D } = labelmap3D;\n\n  operations.forEach(operation => {\n    const { imageIdIndex, diff } = operation;\n    const labelmap2D = labelmaps2D[imageIdIndex];\n    const pixelData = labelmap2D.pixelData;\n\n    for (let i = 0; i < diff.length; i++) {\n      const diffI = diff[i];\n\n      pixelData[diffI[0]] = diffI[replaceIndex];\n    }\n  });\n}\n","import { getMetadata, setMetadata } from './metadata';\nimport {\n  getActiveLabelmapIndex,\n  setActiveLabelmapIndex,\n} from './activeLabelmapIndex';\nimport {\n  getActiveSegmentIndex,\n  setActiveSegmentIndex,\n  incrementActiveSegmentIndex,\n  decrementActiveSegmentIndex,\n} from './activeSegmentIndex';\nimport {\n  isSegmentVisible,\n  toggleSegmentVisibility,\n} from './segmentVisibility.js';\nimport {\n  getLabelmapBuffers,\n  getActiveLabelmapBuffer,\n} from './getLabelmapBuffers';\nimport {\n  setLabelmap3DByFirstImageId,\n  setLabelmap3DForElement,\n} from './setLabelmap3D.js';\nimport getLabelmapStats from './getLabelmapStats';\nimport getLabelmaps3D, { getLabelmap3D } from './getLabelmaps3D';\nimport getLabelmap2D, { getLabelmap2DByImageIdIndex } from './getLabelmap2D';\nimport getSegmentOfActiveLabelmapAtEvent from './getSegmentOfActiveLabelmapAtEvent';\nimport setColorLUT, {\n  getColorLUT,\n  getColorForSegmentIndexColorLUT,\n  setColorLUTIndexForLabelmap3D,\n  setColorForSegmentIndexOfColorLUT,\n} from './colorLUT';\nimport getBrushColor from './getBrushColor';\nimport getSegmentsOnPixelData from './getSegmentsOnPixeldata';\nimport deleteSegment from './deleteSegment';\n\nimport state from './state';\nimport configuration from './defaultConfiguration';\nimport { pushState, undo, redo } from './history';\nimport setRadius from './setRadius';\n\n/**\n * A map of `firstImageId` to associated `BrushStackState`, where\n * `firstImageId` is the `imageId` of the first image in a stack.\n *\n * @typedef {Object} Series\n */\n\n/**\n * @typedef {Object} BrushStackState An object defining a set of 3D labelmaps\n *    associated with a specific cornerstone stack.\n * @property {number} activeLabelmapIndex The index of the active `Labelmap3D`.\n * @property {Labelmap3D[]} labelmaps3D An array of `Labelmap3D` objects.\n */\n\n/**\n * A 3D labelmap object which stores the labelmap data for an entire stack of cornerstone images.\n *\n * @typedef {Object} Labelmap3D An object defining a 3D labelmap.\n * @property {ArrayBuffer}  buffer An array buffer to store the pixel data of the `Labelmap3D` (2 bytes/voxel for Uint16 and 4 bytes/voxel for Float32).\n * @property {Labelmap2D[]} labelmaps2D array of `labelmap2D` views on the `buffer`, indexed by in-stack\n *                          image positions.\n * @property {Object[]} metadata An array of metadata per segment. Metadata is optional and its form is\n *                               application specific.\n * @property {number} activeSegmentIndex The index of the active segment for this `Labelmap3D`.\n * @property {number} colorLUTIndex The index of the color LUT to use when displaying this `Labelmap3D`.\n * @property {boolean[]} segmentsHidden The visibility of segments on this labelmap.\n * If an element is `true`, the element is hidden. If it `false|undefined`, the segment is visible.\n * @property {Object[]} undo A history of operations that can be reversed.\n * @property {Object[]} redo A history of reverted operations, so that an undo can be reversed.\n *                           Is cleared when changes are made to the labelmap.\n */\n\n/**\n * A 2D labelmap object which accesses only one frame's worth of data from its parent `Labelmap3D`.\n *\n * @typedef {Object} Labelmap2D An object defining a 2D view on a section of a `Labelmap3D`'s `buffer`.\n * @property {Uint16Array|Float32Array} pixelData A 2D view on a section of the parent `Labelmap3D`'s `buffer`.\n * @property {number[]} segmentsOnLabelmap An array of segments present in the `pixelData`.\n */\n\n/**\n * OnRegisterCallback - Initialise a single default colorLUT when cornerstoneTools is initialised.\n *\n * @returns {null}\n */\nfunction onRegisterCallback() {\n  setColorLUT(0);\n}\n\nexport default {\n  state,\n  configuration,\n  onRegisterCallback,\n  getters: {\n    metadata: getMetadata,\n    labelmap3D: getLabelmap3D,\n    labelmaps3D: getLabelmaps3D,\n    activeLabelmapIndex: getActiveLabelmapIndex,\n    activeSegmentIndex: getActiveSegmentIndex,\n    isSegmentVisible,\n    labelmap2D: getLabelmap2D,\n    labelmap2DByImageIdIndex: getLabelmap2DByImageIdIndex,\n    labelmapStats: getLabelmapStats,\n    segmentOfActiveLabelmapAtEvent: getSegmentOfActiveLabelmapAtEvent,\n    brushColor: getBrushColor,\n    labelmapBuffers: getLabelmapBuffers,\n    activeLabelmapBuffer: getActiveLabelmapBuffer,\n    colorLUT: getColorLUT,\n    colorForSegmentIndexColorLUT: getColorForSegmentIndexColorLUT,\n  },\n  setters: {\n    metadata: setMetadata,\n    labelmap3DForElement: setLabelmap3DForElement,\n    labelmap3DByFirstImageId: setLabelmap3DByFirstImageId,\n    incrementActiveSegmentIndex,\n    decrementActiveSegmentIndex,\n    activeSegmentIndex: setActiveSegmentIndex,\n    toggleSegmentVisibility,\n    updateSegmentsOnLabelmap2D: labelmap2D => {\n      labelmap2D.segmentsOnLabelmap = getSegmentsOnPixelData(\n        labelmap2D.pixelData\n      );\n    },\n    deleteSegment,\n    colorLUT: setColorLUT,\n    colorLUTIndexForLabelmap3D: setColorLUTIndexForLabelmap3D,\n    colorForSegmentIndexOfColorLUT: setColorForSegmentIndexOfColorLUT,\n    activeLabelmapIndex: setActiveLabelmapIndex,\n    radius: setRadius,\n    pushState,\n    undo,\n    redo,\n  },\n};\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport addLabelmap3D from './addLabelmap3D';\nimport state from './state';\nimport external from '../../../externalModules';\n\n/**\n * Returns the index of the active `Labelmap3D`.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID The cornerstone\n *                                            enabled element or its UUID.\n * @returns {number} The index of the active `Labelmap3D`.\n */\nfunction getActiveLabelmapIndex(elementOrEnabledElementUID) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    return;\n  }\n\n  return brushStackState.activeLabelmapIndex;\n}\n\n/**\n * Sets the active `labelmapIndex` for the `BrushStackState` displayed on this\n * element. Creates the corresponding `Labelmap3D` if it doesn't exist.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID   The cornerstone enabled\n *                                                    element or its UUID.\n * @param  {number} labelmapIndex = 0 The index of the labelmap.\n * @returns {null}\n */\nfunction setActiveLabelmapIndex(elementOrEnabledElementUID, labelmapIndex = 0) {\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const { rows, columns } = enabledElement.image;\n  const numberOfFrames = stackData.imageIds.length;\n  const size = rows * columns * numberOfFrames;\n  const firstImageId = stackData.imageIds[0];\n\n  let brushStackState = state.series[firstImageId];\n\n  if (brushStackState) {\n    brushStackState.activeLabelmapIndex = labelmapIndex;\n\n    if (!brushStackState.labelmaps3D[labelmapIndex]) {\n      addLabelmap3D(brushStackState, labelmapIndex, size);\n    }\n  } else {\n    state.series[firstImageId] = {\n      activeLabelmapIndex: labelmapIndex,\n      labelmaps3D: [],\n    };\n\n    brushStackState = state.series[firstImageId];\n\n    addLabelmap3D(brushStackState, labelmapIndex, size);\n  }\n\n  cornerstone.updateImage(element);\n}\n\nexport { getActiveLabelmapIndex, setActiveLabelmapIndex };\n","import getElement from './getElement';\nimport { getToolState } from '../../../stateManagement/toolState.js';\nimport state from './state';\nimport external from '../../../externalModules';\n\n/**\n * Deletes the segment and any associated metadata from the `Labelmap3D`.\n *\n * @param  {HTMLElement|string} elementOrEnabledElementUID The cornerstone enabled element or its UUID.\n * @param  {number} segmentIndex     The segment Index\n * @param  {number} [labelmapIndex]  The labelmap index. Defaults to the active labelmap index.\n *\n * @returns {null}\n */\nexport default function deleteSegment(\n  elementOrEnabledElementUID,\n  segmentIndex,\n  labelmapIndex\n) {\n  if (!segmentIndex) {\n    return;\n  }\n\n  const element = getElement(elementOrEnabledElementUID);\n\n  if (!element) {\n    return;\n  }\n\n  const stackState = getToolState(element, 'stack');\n  const stackData = stackState.data[0];\n  const firstImageId = stackData.imageIds[0];\n\n  const brushStackState = state.series[firstImageId];\n\n  if (!brushStackState) {\n    return;\n  }\n\n  labelmapIndex =\n    labelmapIndex === undefined\n      ? brushStackState.activeLabelmapIndex\n      : labelmapIndex;\n\n  const labelmap3D = brushStackState.labelmaps3D[labelmapIndex];\n\n  if (!labelmap3D) {\n    return;\n  }\n\n  // Delete metadata if present.\n  delete labelmap3D.metadata[segmentIndex];\n\n  const labelmaps2D = labelmap3D.labelmaps2D;\n\n  // Clear segment's voxels.\n  for (let i = 0; i < labelmaps2D.length; i++) {\n    const labelmap2D = labelmaps2D[i];\n\n    // If the labelmap2D has data, and it contains the segment, delete it.\n    if (labelmap2D && labelmap2D.segmentsOnLabelmap.includes(segmentIndex)) {\n      const pixelData = labelmap2D.pixelData;\n\n      // Remove this segment from the list.\n      const indexOfSegment = labelmap2D.segmentsOnLabelmap.indexOf(\n        segmentIndex\n      );\n\n      labelmap2D.segmentsOnLabelmap.splice(indexOfSegment, 1);\n\n      // Delete the label for this segment.\n      for (let p = 0; p < pixelData.length; p++) {\n        if (pixelData[p] === segmentIndex) {\n          pixelData[p] = 0;\n        }\n      }\n    }\n  }\n\n  external.cornerstone.updateImage(element);\n}\n","import { getModule } from '../../index';\n\nexport default function setRadius(newRadius) {\n  const { configuration } = getModule('segmentation');\n\n  configuration.radius = Math.min(\n    Math.max(newRadius, configuration.minRadius),\n    configuration.maxRadius\n  );\n}\n","import external from '../../externalModules';\n\nconst configuration = {\n  iconSize: 16,\n  viewBox: {\n    x: 16,\n    y: 16,\n  },\n  mousePoint: {\n    x: 8,\n    y: 8,\n  },\n  mousePointerGroupString: `\n    <path stroke=\"ACTIVE_COLOR\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"ACTIVE_COLOR\" d=\"M16 8L0 8\"></path>\n  `,\n};\n\nconst setters = {\n  defaultOptions: newOptions => {\n    Object.assign(configuration, newOptions);\n  },\n};\n\nconst getters = {\n  defaultOptions: () => configuration,\n};\n\nexport default {\n  configuration,\n  getters,\n  setters,\n};\n","const configuration = {\n  mouseEnabled: true,\n  touchEnabled: true,\n  globalToolSyncEnabled: false,\n  showSVGCursors: false,\n  autoResizeViewports: true,\n};\n\nexport default {\n  configuration,\n};\n","// Modules\nimport segmentation from './modules/segmentationModule';\nimport cursor from './modules/cursorModule.js';\nimport globalConfiguration from './modules/globalConfigurationModule.js';\nimport external from '../externalModules.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('store:modules:storeLogger');\n\nexport const state = {\n  // Global\n  globalTools: {},\n  globalToolChangeHistory: [],\n  // Tracking\n  enabledElements: [],\n  tools: [],\n  isToolLocked: false,\n  activeMultiPartTool: null,\n  mousePositionImage: {},\n  // Settings\n  clickProximity: 6,\n  touchProximity: 10,\n  handleRadius: 6,\n  deleteIfHandleOutsideImage: true,\n  preventHandleOutsideImage: false,\n  // Cursor\n  svgCursorUrl: null,\n};\n\nexport const getters = {\n  mouseTools: () =>\n    state.tools.filter(tool =>\n      tool.supportedInteractionTypes.includes('Mouse')\n    ),\n  touchTools: () =>\n    state.tools.filter(tool =>\n      tool.supportedInteractionTypes.includes('Touch')\n    ),\n  enabledElementByUID: enabledElementUID =>\n    state.enabledElements.find(\n      element =>\n        external.cornerstone.getEnabledElement(element).uuid ===\n        enabledElementUID\n    ),\n};\n\nexport const setters = {};\n\nexport const modules = {\n  segmentation,\n  cursor,\n  globalConfiguration,\n};\n\nexport function getModule(moduleName) {\n  return modules[moduleName];\n}\n\nexport default {\n  modules,\n  state,\n  getters,\n};\n","import { state } from './index.js';\n\n/**\n * Returns the tool instance attached to the element.\n * @export\n * @public\n * @method\n * @name getToolForElement\n *\n * @param  {HTMLElement} element The element.\n * @param  {string}      name The tool's name.\n * @returns {Object}      The tool instance.\n */\nexport default function(element, name) {\n  return state.tools.find(\n    tool => tool.element === element && tool.name === name\n  );\n}\n","import { state, modules } from './index.js';\n\nexport { setToolCursor, resetToolCursor, hideToolCursor };\n\nconst globalConfiguration = modules.globalConfiguration;\n\n/**\n * Creates an SVG Cursor for the target element\n *\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {MouseCursor} svgCursor - The cursor.\n * @returns {void}\n */\nfunction setToolCursor(element, svgCursor) {\n  if (!globalConfiguration.configuration.showSVGCursors) {\n    return;\n  }\n  // TODO: (state vs options) Exit if cursor wasn't updated\n  // TODO: Exit if invalid options to create cursor\n\n  // Note: Max size of an SVG cursor is 128x128, default is 32x32.\n  const cursorBlob = svgCursor.getIconWithPointerSVG();\n  const mousePoint = svgCursor.mousePoint;\n\n  const svgCursorUrl = window.URL.createObjectURL(cursorBlob);\n\n  element.style.cursor = `url('${svgCursorUrl}') ${mousePoint}, auto`;\n\n  state.svgCursorUrl = svgCursorUrl;\n}\n\nfunction resetToolCursor(element) {\n  _clearStateAndSetCursor(element, 'initial');\n}\n\nfunction hideToolCursor(element) {\n  if (!globalConfiguration.configuration.showSVGCursors) {\n    return;\n  }\n\n  _clearStateAndSetCursor(element, 'none');\n}\n\nfunction _clearStateAndSetCursor(element, cursorSeting) {\n  if (state.svgCursorUrl) {\n    window.URL.revokeObjectURL(state.svgCursorUrl);\n  }\n\n  state.svgCursorUrl = null;\n  element.style.cursor = cursorSeting;\n}\n","import EVENTS from './../events.js';\nimport triggerEvent from './../util/triggerEvent.js';\nimport getToolForElement from './getToolForElement.js';\nimport {\n  setToolCursor,\n  resetToolCursor,\n  hideToolCursor,\n} from './setToolCursor.js';\nimport { getLogger } from '../util/logger.js';\nimport store, { getModule } from './index.js';\n\nconst globalConfiguration = getModule('globalConfiguration');\nconst logger = getLogger('store:setToolMode');\n\n/**\n * Sets a tool's state, with the provided toolName and element, to 'active'. Active tools are rendered,\n * respond to user input, and can create new data.\n *\n * @public\n * @function setToolActiveForElement\n * @memberof CornerstoneTools\n *\n * @example <caption>Setting a tool 'active' for a specific interaction type.</caption>\n * // Sets length tool to Active\n * setToolActiveForElement(element, 'Length', {\n *   mouseButtonMask: 1\n * }, ['Mouse'])\n * @example <caption>Setting a tool 'active' for all interaction types.</caption>\n * // Sets length tool to Active\n * setToolActiveForElement(element, 'Length', {\n *   mouseButtonMask: 1\n * })\n * @param {HTMLElement} element\n * @param {string} toolName\n * @param {(Object|string[]|number)} options\n * @param {(string[])} interactionTypes\n * @returns {undefined}\n */\nconst setToolActiveForElement = function(\n  element,\n  toolName,\n  options,\n  interactionTypes\n) {\n  // If interactionTypes was passed in via options\n  if (interactionTypes === undefined && Array.isArray(options)) {\n    interactionTypes = options;\n    options = null;\n  }\n\n  const tool = getToolForElement(element, toolName);\n\n  if (tool) {\n    _resolveInputConflicts(element, tool, options, interactionTypes);\n\n    // Iterate over specific interaction types and set active\n    // This is used as a secondary check on active tools to find the active \"parts\" of the tool\n    tool.supportedInteractionTypes.forEach(interactionType => {\n      if (\n        interactionTypes === undefined ||\n        interactionTypes.includes(interactionType)\n      ) {\n        options[`is${interactionType}Active`] = true;\n      } else {\n        options[`is${interactionType}Active`] = false;\n      }\n    });\n\n    if (\n      globalConfiguration.configuration.showSVGCursors &&\n      tool.supportedInteractionTypes.includes('Mouse')\n    ) {\n      _setToolCursorIfPrimary(element, options, tool);\n    }\n  }\n\n  // Resume normal behavior\n  setToolModeForElement('active', null, element, toolName, options);\n};\n\nfunction _setToolCursorIfPrimary(element, options, tool) {\n  let mouseButtonMask;\n\n  if (typeof options === 'number') {\n    mouseButtonMask = [options];\n  } else {\n    mouseButtonMask = options.mouseButtonMask;\n  }\n\n  if (mouseButtonMask.includes(1)) {\n    if (tool.svgCursor) {\n      setToolCursor(tool.element, tool.svgCursor);\n    } else if (tool.hideDefaultCursor) {\n      hideToolCursor(element);\n    } else {\n      resetToolCursor(element);\n    }\n  }\n}\n\n/**\n * Sets all tool's state, with the provided toolName, to 'active'. Active tools are rendered,\n * respond to user input, and can create new data.\n * @public\n * @function setToolActive\n * @memberof CornerstoneTools\n *\n * @param {string} toolName\n * @param {(Object|string[]|number)} options\n * @param {(string[])} interactionTypes\n * @returns {undefined}\n */\nconst setToolActive = function(toolName, options, interactionTypes) {\n  _trackGlobalToolModeChange('active', toolName, options, interactionTypes);\n  store.state.enabledElements.forEach(element => {\n    setToolActiveForElement(element, toolName, options, interactionTypes);\n  });\n};\n\n/**\n * Sets a tool's state, with the provided toolName and element, to 'disabled'. Disabled tools are not rendered,\n * and do not respond to user input\n * @public\n * @function setToolDisabledForElement\n * @memberof CornerstoneTools\n *\n * @param {HTMLElement} element\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nconst setToolDisabledForElement = setToolModeForElement.bind(\n  null,\n  'disabled',\n  null\n);\n\n/**\n * Sets all tool's state, with the provided toolName, to 'disabled'. Disabled tools are not rendered,\n * and do not respond to user input\n * @public\n * @function setToolDisabled\n * @memberof CornerstoneTools\n *\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nconst setToolDisabled = setToolMode.bind(null, 'disabled', null);\n\n/**\n * Sets a tool's state, with the provided toolName and element, to 'enabled'. Enabled tools are rendered,\n * but do not respond to user input\n * @public\n * @function setToolEnabledForElement\n * @memberof CornerstoneTools\n *\n * @param {HTMLElement} element\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nconst setToolEnabledForElement = setToolModeForElement.bind(\n  null,\n  'enabled',\n  null\n);\n\n/**\n * Sets all tool's state, with the provided toolName, to 'enabled'. Enabled tools are rendered,\n * but do not respond to user input\n * @public\n * @function setToolEnabled\n * @memberof CornerstoneTools\n *\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nconst setToolEnabled = setToolMode.bind(null, 'enabled', null);\n\n/**\n * Sets a tool's state, with the provided toolName and element, to 'passive'. Passive tools are rendered and respond to user input,\n * but do not create new measurements or annotations.\n * @public\n * @function setToolPassiveForElement\n * @memberof CornerstoneTools\n *\n * @param {HTMLElement} element\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nconst setToolPassiveForElement = setToolModeForElement.bind(\n  null,\n  'passive',\n  EVENTS.TOOL_DEACTIVATED\n);\n\n/**\n * Sets all tool's state, with the provided toolName, to 'passive'. Passive tools are rendered and respond to user input,\n * but do not create new measurements or annotations.\n * @public\n * @function setToolPassive\n * @memberof CornerstoneTools\n *\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nconst setToolPassive = setToolMode.bind(\n  null,\n  'passive',\n  EVENTS.TOOL_DEACTIVATED\n);\n\n/**\n * An internal method that helps make sure we change tool mode in a consistent\n * way\n * @private\n * @function setToolModeForElement\n *\n * @param {string} mode\n * @param {string} changeEvent\n * @param {HTMLElement} element\n * @param {string} toolName\n * @param {(Object|number[]|number)} options\n * @returns {undefined}\n */\nfunction setToolModeForElement(mode, changeEvent, element, toolName, options) {\n  const tool = getToolForElement(element, toolName);\n\n  if (!tool) {\n    logger.warn('Unable to find tool \"%s\" for enabledElement', toolName);\n\n    return;\n  }\n\n  options = _getNormalizedOptions(options);\n\n  // Keep the same if not an array (undefined)\n  // Reset if empty array\n  // Merge if array contains any bindings\n  if (\n    Array.isArray(options.mouseButtonMask) &&\n    options.mouseButtonMask.length !== 0 &&\n    Array.isArray(tool.options.mouseButtonMask)\n  ) {\n    options.mouseButtonMask = _mergeMouseButtonMask(\n      options.mouseButtonMask,\n      tool.options.mouseButtonMask\n    );\n  }\n\n  // Set mode & options\n  tool.mode = mode;\n  tool.mergeOptions(options);\n\n  // Call tool's hook for this event, if one exists\n  if (tool[`${mode}Callback`]) {\n    tool[`${mode}Callback`](element, options);\n  }\n\n  // Emit event indicating tool state change\n  if (changeEvent) {\n    const statusChangeEventData = {\n      options,\n      toolName,\n      type: changeEvent,\n    };\n\n    triggerEvent(element, changeEvent, statusChangeEventData);\n  }\n\n  // Trigger Update\n  // Todo: don't error out if image hasn't been loaded...\n  // Cornerstone.updateImage(element);\n}\n\n/**\n * A helper/quick way to set a tool's mode for all canvases\n *\n * @private\n * @function setToolMode\n *\n * @param {string} mode\n * @param {string} changeEvent\n * @param {string} toolName\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nfunction setToolMode(mode, changeEvent, toolName, options) {\n  _trackGlobalToolModeChange(mode, toolName, options);\n  store.state.enabledElements.forEach(element => {\n    setToolModeForElement(mode, changeEvent, element, toolName, options);\n  });\n}\n\n/**\n * Find tool's that conflict with the incoming tool's mouse/touch bindings and\n * resolve those conflicts.\n *\n * @private\n * @function _resolveInputConflicts\n *\n * @param {HTMLElement} element\n * @param {Object} tool\n * @param {(Object|number)} options\n * @param {(Array)} interactionTypes\n * @returns {undefined}\n */\nfunction _resolveInputConflicts(element, tool, options, interactionTypes) {\n  // Iterate over the interaction types our tool supports.\n  // For each one we intend to activate, check for potential conflicts\n  // And resolve them\n  tool.supportedInteractionTypes.forEach(interactionType => {\n    if (\n      interactionTypes === undefined ||\n      interactionTypes.includes(interactionType)\n    ) {\n      const inputResolver = _inputResolvers[interactionType];\n\n      if (inputResolver) {\n        inputResolver(tool, element, options);\n      } else {\n        logger.warn(\n          'Unable to resolve input conflicts for type %s',\n          interactionType\n        );\n      }\n    }\n  });\n\n  const activeToolsForElement = store.state.tools.filter(\n    t =>\n      t.element === element &&\n      t.mode === 'active' &&\n      t.supportedInteractionTypes.length > 0\n  );\n\n  activeToolsForElement.forEach(t => {\n    let toolHasAnyActiveInteractionType = false;\n\n    t.supportedInteractionTypes.forEach(interactionType => {\n      if (t.options[`is${interactionType}Active`]) {\n        toolHasAnyActiveInteractionType = true;\n      }\n    });\n\n    if (!toolHasAnyActiveInteractionType) {\n      logger.log(\"Setting tool %s's to PASSIVE\", t.name);\n      setToolPassiveForElement(element, t.name);\n    }\n  });\n}\n\n/**\n * Resolves conflicting active tools when activating a tool for mouse interaction\n * @private\n * @function _resolveMouseInputConflicts\n *\n * @param {Object} tool\n * @param {HTMLElement} element\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nfunction _resolveMouseInputConflicts(tool, element, options) {\n  const mouseButtonMask = _getNormalizedOptions(options).mouseButtonMask;\n  const hasMouseButtonMask =\n    Array.isArray(mouseButtonMask) && mouseButtonMask.length > 0;\n\n  if (!hasMouseButtonMask) {\n    return;\n  }\n\n  const activeToolWithMatchingMouseButtonMask = store.state.tools.find(\n    t =>\n      t.element === element &&\n      t.mode === 'active' &&\n      t.options.isMouseActive === true &&\n      Array.isArray(t.options.mouseButtonMask) &&\n      t.options.mouseButtonMask.some(v => mouseButtonMask.includes(v))\n  );\n\n  if (activeToolWithMatchingMouseButtonMask) {\n    // Remove collissions\n    activeToolWithMatchingMouseButtonMask.options.mouseButtonMask = activeToolWithMatchingMouseButtonMask.options.mouseButtonMask.filter(\n      mask => !mouseButtonMask.includes(mask)\n    );\n\n    // If no remaining bindings, set inactive\n    if (\n      activeToolWithMatchingMouseButtonMask.options.mouseButtonMask.length === 0\n    ) {\n      activeToolWithMatchingMouseButtonMask.options.isMouseActive = false;\n    }\n  }\n}\n\n/**\n * Resolves conflicting active tools when activating a tool for touch interaction\n * @private\n * @function _resolveTouchInputConflicts\n *\n * @param {Object} tool\n * @param {HTMLElement} element\n * @returns {undefined}\n */\nfunction _resolveTouchInputConflicts(tool, element) {\n  const activeTouchTool = store.state.tools.find(\n    t =>\n      t.element === element &&\n      t.mode === 'active' &&\n      t.options.isTouchActive === true\n  );\n\n  const activeMultiTouchToolWithOneTouchPointer = store.state.tools.find(\n    t =>\n      t.element === element &&\n      t.mode === 'active' &&\n      t.options.isMultiTouchActive === true &&\n      t.configuration.touchPointers === 1\n  );\n\n  if (activeTouchTool) {\n    logger.log(\n      \"Setting tool %s's isTouchActive to false\",\n      activeTouchTool.name\n    );\n    activeTouchTool.options.isTouchActive = false;\n  }\n  if (activeMultiTouchToolWithOneTouchPointer) {\n    logger.log(\n      \"Setting tool %s's isTouchActive to false\",\n      activeMultiTouchToolWithOneTouchPointer.name\n    );\n    activeMultiTouchToolWithOneTouchPointer.options.isMultiTouchActive = false;\n  }\n}\n\n/**\n * Resolves conflicting active tools when activating a tool for MultiTouch interaction\n * @private\n * @function _resolveMultiTouchInputConflicts\n *\n * @param {Object} tool\n * @param {HTMLElement} element\n * @returns {undefined}\n */\nfunction _resolveMultiTouchInputConflicts(tool, element) {\n  const activeMultiTouchTool = store.state.tools.find(\n    t =>\n      t.element === element &&\n      t.mode === 'active' &&\n      t.options.isMultiTouchActive === true &&\n      t.configuration.touchPointers === tool.configuration.touchPointers\n  );\n\n  let activeTouchTool;\n\n  if (tool.configuration.touchPointers === 1) {\n    activeTouchTool = store.state.tools.find(\n      t =>\n        t.element === element &&\n        t.mode === 'active' &&\n        t.options.isTouchActive === true\n    );\n  }\n\n  if (activeMultiTouchTool) {\n    logger.log(\n      \"Setting tool %s's isMultiTouchActive to false\",\n      activeMultiTouchTool.name\n    );\n    activeMultiTouchTool.options.isMultiTouchActive = false;\n  }\n\n  if (activeTouchTool) {\n    logger.log(\n      \"Setting tool %s's isTouchActive to false\",\n      activeTouchTool.name\n    );\n    activeTouchTool.options.isTouchActive = false;\n  }\n}\n\n/**\n * If the incoming tool isTouchActive, find any conflicting tools\n * and set their isTouchActive to false to avoid conflicts.\n *\n * @private\n * @function _resolveGenericInputConflicts\n *\n * @param {string} interactionType\n * @param {Object} tool\n * @param {HTMLElement} element\n * @param {(Object|number)} options\n * @returns {undefined}\n */\nfunction _resolveGenericInputConflicts(interactionType, tool, element) {\n  const interactionTypeFlag = `is${interactionType}Active`;\n  const activeToolWithActiveInteractionType = store.state.tools.find(\n    t =>\n      t.element === element &&\n      t.mode === 'active' &&\n      t.options[interactionTypeFlag] === true\n  );\n\n  if (activeToolWithActiveInteractionType) {\n    logger.log(\n      \"Setting tool %s's %s to false\",\n      activeToolWithActiveInteractionType.name,\n      interactionTypeFlag\n    );\n    activeToolWithActiveInteractionType.options[interactionTypeFlag] = false;\n  }\n}\n\nfunction _trackGlobalToolModeChange(mode, toolName, options, interactionTypes) {\n  if (!globalConfiguration.configuration.globalToolSyncEnabled) {\n    return;\n  }\n\n  // Update Tool History\n  const historyEvent = {\n    mode,\n    args: [toolName, options],\n  };\n\n  if (interactionTypes) {\n    historyEvent.push(interactionTypes);\n  }\n\n  store.state.globalToolChangeHistory.push(historyEvent);\n\n  const arbitraryChangeHistoryLimit = 50;\n\n  if (\n    store.state.globalToolChangeHistory.length > arbitraryChangeHistoryLimit\n  ) {\n    store.state.globalToolChangeHistory.shift();\n  }\n\n  // Update ActiveBindings Array\n  const globalTool = store.state.globalTools[toolName];\n\n  if (!globalTool) {\n    logger.warn(\n      `setToolMode call for tool not available globally: ${toolName}`\n    );\n\n    return;\n  }\n\n  if (mode === 'active') {\n    let stringBindings = _determineStringBindings(\n      toolName,\n      options,\n      interactionTypes\n    );\n\n    // Remove the incoming bindings from all global tools\n    Object.keys(store.state.globalTools).forEach(key => {\n      const tool = store.state.globalTools[key];\n\n      tool.activeBindings = tool.activeBindings.filter(\n        binding => !stringBindings.includes(binding)\n      );\n    });\n\n    // @HACK: Clear mouse bindings\n    if (stringBindings.some(binding => binding.includes('Mouse-DELETE'))) {\n      globalTool.activeBindings = globalTool.activeBindings.filter(\n        binding => !binding.includes('Mouse')\n      );\n      stringBindings = stringBindings.filter(\n        binding => !binding.includes('Mouse')\n      );\n    }\n\n    globalTool.activeBindings = globalTool.activeBindings.concat(\n      stringBindings\n    );\n  } else {\n    globalTool.activeBindings = [];\n  }\n}\n\nfunction _determineStringBindings(toolName, options, interactionTypes) {\n  if (interactionTypes === undefined && Array.isArray(options)) {\n    interactionTypes = options;\n    options = null;\n  }\n\n  const stringBindings = [];\n  const globalTool = store.state.globalTools[toolName];\n\n  if (globalTool) {\n    // eslint-disable-next-line new-cap\n    const tool = new globalTool.tool(globalTool.props);\n\n    tool.supportedInteractionTypes.forEach(interactionType => {\n      if (\n        interactionTypes === undefined ||\n        interactionTypes.includes(interactionType)\n      ) {\n        if (interactionType === 'Mouse') {\n          const mouseButtonMasks = _getNormalizedOptions(options)\n            .mouseButtonMask;\n\n          // Add or delete\n          if (Array.isArray(mouseButtonMasks) && mouseButtonMasks.length > 0) {\n            mouseButtonMasks.forEach(mask =>\n              stringBindings.push(`${interactionType}-${mask}`)\n            );\n          } else if (\n            Array.isArray(mouseButtonMasks) &&\n            mouseButtonMasks.length === 0\n          ) {\n            stringBindings.push(`${interactionType}-DELETE`);\n          }\n        } else if (interactionType === 'MultiTouch') {\n          stringBindings.push(\n            `${interactionType}-${tool.configuration.touchPointers}`\n          );\n        } else {\n          stringBindings.push(interactionType);\n        }\n      }\n    });\n  }\n\n  return stringBindings;\n}\n\nconst _inputResolvers = {\n  Mouse: _resolveMouseInputConflicts,\n  MouseWheel: _resolveGenericInputConflicts.bind(this, 'MouseWheel'),\n  Touch: _resolveTouchInputConflicts,\n  TouchPinch: _resolveGenericInputConflicts.bind(this, 'TouchPinch'),\n  TouchRotate: _resolveGenericInputConflicts.bind(this, 'TouchRotate'),\n  DoubleTap: _resolveGenericInputConflicts.bind(this, 'DoubleTap'),\n  MultiTouch: _resolveMultiTouchInputConflicts,\n};\n\nfunction _getNormalizedOptions(options) {\n  if (Array.isArray(options)) {\n    // If options is an array assume the array is the mouseButtonMask array\n    options = { mouseButtonMask: options };\n  } else if (options !== Object(options)) {\n    // And if it's something other than an object, assume options is\n    // a single mouseButtonMask\n    options = { mouseButtonMask: [options] };\n  }\n\n  // If there is still no 'mouseButtonMask' default it to an empty array\n  if (!options.hasOwnProperty('mouseButtonMask')) {\n    options.mouseButtonMask = [];\n  }\n\n  if (!Array.isArray(options.mouseButtonMask)) {\n    options.mouseButtonMask = [options.mouseButtonMask];\n  }\n\n  // Now filter out anything that is not an number or is the number 0\n  options.mouseButtonMask = options.mouseButtonMask.filter(\n    o => typeof o === 'number' && o !== 0\n  );\n\n  return options;\n}\n\nfunction _mergeMouseButtonMask(newMask, oldMask) {\n  // Merges and removes duplicates\n  return newMask.concat(oldMask).reduce((acc, m) => {\n    if (acc.indexOf(m) === -1) {\n      acc.push(m);\n    }\n\n    return acc;\n  }, []);\n}\n\nexport {\n  setToolActive,\n  setToolActiveForElement,\n  setToolDisabled,\n  setToolDisabledForElement,\n  setToolEnabled,\n  setToolEnabledForElement,\n  setToolPassive,\n  setToolPassiveForElement,\n  // Exported for testing\n  setToolMode,\n  setToolModeForElement,\n  _getNormalizedOptions,\n  _mergeMouseButtonMask,\n};\n","import {\n  setToolDisabledForElement,\n  setToolActiveForElement,\n} from '../store/setToolMode.js';\n\n/**\n * If one attempts to change mode to 'passive', redirect the tool to 'disabled'.\n *\n * @param {HTMLElement} element The element on which the tool resides.\n * @returns {undefined}\n */\nfunction passiveCallback(element) {\n  setToolDisabledForElement(element, this.name);\n}\n\n/**\n * If one attempts to turn the tool 'enabled', redirect the tool to 'active'.\n *\n * @param {HTMLElement} element The element on which the tool resides.\n * @returns {undefined}\n */\nfunction enabledCallback(element) {\n  setToolActiveForElement(element, this.name);\n}\n\n/**\n * @mixin activeOrDisabledBinaryTool - Redirect enabled/passive mode changes to active/disabled.\n * @memberof Mixins\n */\nexport default {\n  passiveCallback,\n  enabledCallback,\n};\n","import {\n  setToolDisabledForElement,\n  setToolEnabledForElement,\n} from '../store/setToolMode.js';\n\n/**\n * If one attempts to change mode to 'passive', redirect the tool to 'disabled'.\n *\n * @param {HTMLElement} element The element on which the tool resides.\n * @returns {undefined}\n */\nfunction passiveCallback(element) {\n  setToolDisabledForElement(element, this.name);\n}\n\n/**\n * If one attempts to change mode to 'active', redirect the tool to 'enabled'.\n *\n * @param {HTMLElement} element The element on which the tool resides.\n * @returns {undefined}\n */\nfunction activeCallback(element) {\n  setToolEnabledForElement(element, this.name);\n}\n\n/**\n *\n * @mixin enabledOrDisabledBinaryTool - Redirect active/passive mode changes to enabled/disabled.\n * @memberof Mixins\n */\nexport default {\n  passiveCallback,\n  activeCallback,\n};\n","/**\n * This function manages the {@link https://www.w3.org/TR/2dcontext/#the-canvas-state|save/restore}\n * pattern for working in a new context state stack. The parameter `fn` is passed the `context` and can\n * execute any API calls in a clean stack.\n * @public\n * @method draw\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target Canvas\n * @param {ContextFn} fn - A function which performs drawing operations within the given context.\n * @returns {undefined}\n */\nexport default function(context, fn) {\n  context.save();\n  fn(context);\n  context.restore();\n}\n","let defaultWidth = 1,\n  activeWidth = 2;\n\nfunction setToolWidth(width) {\n  defaultWidth = width;\n}\n\nfunction getToolWidth() {\n  return defaultWidth;\n}\n\nfunction setActiveWidth(width) {\n  activeWidth = width;\n}\n\nfunction getActiveWidth() {\n  return activeWidth;\n}\n\nconst toolStyle = {\n  setToolWidth,\n  getToolWidth,\n  setActiveWidth,\n  getActiveWidth,\n};\n\nexport default toolStyle;\n","import toolStyle from './../stateManagement/toolStyle.js';\n\n/**\n * This function manages the beginPath/stroke pattern for working with\n * {@link https://www.w3.org/TR/2dcontext/#drawing-paths-to-the-canvas|path objects}.\n *\n * @public\n * @function path\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Context to add path to\n * @param {Object} [options={}] - Drawing Options\n * @param {StrokeStyle} [options.color] - The stroke style of the path.\n * @param {number} [options.lineWidth] - The width of lines in the path. If null, no line width is set.\n *     If undefined then toolStyle.getToolWidth() is set.\n * @param {FillStyle} [options.fillStyle] - The style to fill the path with. If undefined then no filling is done.\n * @param {Number[]} [options.lineDash] - The {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash|dash pattern}\n *     to use on the lines.\n * @param {boolean} [options.shouldDrawLines = true] Whether context.stroke should be evoked.\n * @param {ContextFn} fn - A drawing function to execute with the provided stroke pattern.\n * @returns {undefined}\n */\nexport default function(context, options = {}, fn) {\n  const {\n    color,\n    lineWidth,\n    fillStyle,\n    lineDash,\n    shouldDrawLines = true,\n  } = options;\n\n  context.beginPath();\n  context.strokeStyle = color || context.strokeStyle;\n\n  context.lineWidth =\n    lineWidth ||\n    (lineWidth === undefined && toolStyle.getToolWidth()) ||\n    context.lineWidth;\n  if (lineDash) {\n    context.setLineDash(lineDash);\n  }\n\n  fn(context);\n\n  if (fillStyle) {\n    context.fillStyle = fillStyle;\n    context.fill();\n  }\n\n  if (shouldDrawLines) {\n    context.stroke();\n  }\n\n  if (lineDash) {\n    context.setLineDash([]);\n  }\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\n\n/**\n * Draw a line between `start` and `end`.\n *\n * @public\n * @method drawLine\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} start - `{ x, y } in either pixel or canvas coordinates.\n * @param {Object} end - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @returns {undefined}\n */\nexport default function drawLine(\n  context,\n  element,\n  start,\n  end,\n  options,\n  coordSystem = 'pixel'\n) {\n  path(context, options, context => {\n    if (coordSystem === 'pixel') {\n      start = external.cornerstone.pixelToCanvas(element, start);\n      end = external.cornerstone.pixelToCanvas(element, end);\n    }\n\n    context.moveTo(start.x, start.y);\n    context.lineTo(end.x, end.y);\n  });\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\n\n/**\n * Draw a series of joined lines, starting at `start` and then going to each point in `points`.\n * @public\n * @method drawJoinedLines\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} start - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object[]} points - `[{ x, y }]` An array of points in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  start,\n  points,\n  options,\n  coordSystem = 'pixel'\n) {\n  path(context, options, context => {\n    if (coordSystem === 'pixel') {\n      start = external.cornerstone.pixelToCanvas(element, start);\n      points = points.map(p => external.cornerstone.pixelToCanvas(element, p));\n    }\n    context.moveTo(start.x, start.y);\n    points.forEach(({ x, y }) => {\n      context.lineTo(x, y);\n    });\n  });\n}\n","import drawLine from './drawLine.js';\nimport drawJoinedLines from './drawJoinedLines.js';\n\n/**\n * Draw an arrow using the drawing API.\n * @public\n * @method drawArrow\n * @memberof Drawing\n *\n * @param  {Object} context   The canvas context.\n * @param  {Object} start     The start position.\n * @param  {Object} end       The end position.\n * @param  {string} color     The color of the arrow.\n * @param  {number} lineWidth The width of the arrow line.\n * @returns {undefined}\n */\nexport default function(context, start, end, color, lineWidth) {\n  // Variables to be used when creating the arrow\n  const headLength = 10;\n\n  const angle = Math.atan2(end.y - start.y, end.x - start.x);\n\n  // Starting path of the arrow from the start square to the end square and drawing the stroke\n  let options = {\n    color,\n    lineWidth,\n  };\n\n  drawLine(context, undefined, start, end, options, 'canvas');\n  options = {\n    color,\n    lineWidth,\n    fillStyle: color,\n  };\n\n  const points = [\n    {\n      x: end.x - headLength * Math.cos(angle - Math.PI / 7),\n      y: end.y - headLength * Math.sin(angle - Math.PI / 7),\n    },\n    {\n      x: end.x - headLength * Math.cos(angle + Math.PI / 7),\n      y: end.y - headLength * Math.sin(angle + Math.PI / 7),\n    },\n    end,\n  ];\n\n  drawJoinedLines(context, undefined, end, points, options, 'canvas');\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\n\n/**\n * Draw a circle with given `center` and `radius`.\n * @public\n * @method drawCircle\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} center - `{ x, y }` in either pixel or canvas coordinates.\n * @param {number} radius - The circle's radius in canvas units.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  center,\n  radius,\n  options,\n  coordSystem = 'pixel'\n) {\n  if (coordSystem === 'pixel') {\n    center = external.cornerstone.pixelToCanvas(element, center);\n  }\n\n  path(context, options, context => {\n    context.arc(center.x, center.y, radius, 0, 2 * Math.PI);\n  });\n}\n","import external from '../externalModules.js';\n\n/**\n * Convert an Array to a cornerstoneMath.Vector3\n * @export @public @method\n * @name convertToVector3\n *\n * @param {Array|cornerstoneMath.Vector3} arrayOrVector3 Input array or Vector3\n * @returns {cornerstoneMath.Vector3}\n */\nexport default function convertToVector3(arrayOrVector3) {\n  const cornerstoneMath = external.cornerstoneMath;\n\n  if (arrayOrVector3 instanceof cornerstoneMath.Vector3) {\n    return arrayOrVector3;\n  }\n\n  return new cornerstoneMath.Vector3(\n    arrayOrVector3[0],\n    arrayOrVector3[1],\n    arrayOrVector3[2]\n  );\n}\n","import external from '../externalModules.js';\nimport convertToVector3 from '../util/convertToVector3.js';\n\n/**\n * Projects a patient point to an image point\n * @export @public @method\n * @name projectPatientPointToImagePlane\n *\n * @param  {Object} patientPoint The patient point.\n * @param  {Object} imagePlane   The image plane used for projection.\n * @returns {Object}              The projected coordinates.\n */\nexport function projectPatientPointToImagePlane(patientPoint, imagePlane) {\n  const rowCosines = convertToVector3(imagePlane.rowCosines);\n  const columnCosines = convertToVector3(imagePlane.columnCosines);\n  const imagePositionPatient = convertToVector3(\n    imagePlane.imagePositionPatient\n  );\n  const point = patientPoint.clone().sub(imagePositionPatient);\n  const x = rowCosines.dot(point) / imagePlane.columnPixelSpacing;\n  const y = columnCosines.dot(point) / imagePlane.rowPixelSpacing;\n\n  return {\n    x,\n    y,\n  };\n}\n\n//\n/**\n * Projects an image point to a patient point\n * @export @public @method\n * @name imagePointToPatientPoint\n *\n * @param  {Object} imagePoint   The image point.\n * @param  {Object} imagePlane   The image plane used for projection.\n * @returns {Object}              The projected coordinates.\n */\nexport function imagePointToPatientPoint(imagePoint, imagePlane) {\n  const rowCosines = convertToVector3(imagePlane.rowCosines);\n  const columnCosines = convertToVector3(imagePlane.columnCosines);\n  const imagePositionPatient = convertToVector3(\n    imagePlane.imagePositionPatient\n  );\n\n  const x = rowCosines.clone().multiplyScalar(imagePoint.x);\n\n  x.multiplyScalar(imagePlane.columnPixelSpacing);\n  const y = columnCosines.clone().multiplyScalar(imagePoint.y);\n\n  y.multiplyScalar(imagePlane.rowPixelSpacing);\n  const patientPoint = x.add(y);\n\n  patientPoint.add(imagePositionPatient);\n\n  return patientPoint;\n}\n\n/**\n * Returns a rectangle from the imagePlane.\n * @export @public @method\n * @name getRectangleFromImagePlane\n *\n * @param  {Object} imagePlane The imagePlane.\n * @returns {Object} The rect.\n */\nfunction getRectangleFromImagePlane(imagePlane) {\n  // Get the points\n  const topLeft = imagePointToPatientPoint(\n    {\n      x: 0,\n      y: 0,\n    },\n    imagePlane\n  );\n  const topRight = imagePointToPatientPoint(\n    {\n      x: imagePlane.columns,\n      y: 0,\n    },\n    imagePlane\n  );\n  const bottomLeft = imagePointToPatientPoint(\n    {\n      x: 0,\n      y: imagePlane.rows,\n    },\n    imagePlane\n  );\n  const bottomRight = imagePointToPatientPoint(\n    {\n      x: imagePlane.columns,\n      y: imagePlane.rows,\n    },\n    imagePlane\n  );\n\n  // Get each side as a vector\n  const rect = {\n    top: new external.cornerstoneMath.Line3(topLeft, topRight),\n    left: new external.cornerstoneMath.Line3(topLeft, bottomLeft),\n    right: new external.cornerstoneMath.Line3(topRight, bottomRight),\n    bottom: new external.cornerstoneMath.Line3(bottomLeft, bottomRight),\n  };\n\n  return rect;\n}\n\n/**\n * Gets all the intersections of a line with a rect.\n * @private\n * @method\n * @name lineRectangleIntersection\n *\n * @param  {Object} line The line to check.\n * @param  {Object} rect The rect being intersected.\n * @returns {Object[]} An array of the intersections.\n */\nfunction lineRectangleIntersection(line, rect) {\n  const intersections = [];\n\n  Object.keys(rect).forEach(function(side) {\n    const segment = rect[side];\n    const intersection = line.intersectLine(segment);\n\n    if (intersection) {\n      intersections.push(intersection);\n    }\n  });\n\n  return intersections;\n}\n\n/**\n * Gets the line of intersection between two planes in patient space.\n * @export @public @method\n * @name planePlaneIntersection\n *\n * @param  {Object} targetImagePlane    The target plane.\n * @param  {Object} referenceImagePlane The reference plane\n * @returns {Object}                   The intersections.\n */\nexport function planePlaneIntersection(targetImagePlane, referenceImagePlane) {\n  const targetRowCosines = convertToVector3(targetImagePlane.rowCosines);\n  const targetColumnCosines = convertToVector3(targetImagePlane.columnCosines);\n  const targetImagePositionPatient = convertToVector3(\n    targetImagePlane.imagePositionPatient\n  );\n  const referenceRowCosines = convertToVector3(referenceImagePlane.rowCosines);\n  const referenceColumnCosines = convertToVector3(\n    referenceImagePlane.columnCosines\n  );\n  const referenceImagePositionPatient = convertToVector3(\n    referenceImagePlane.imagePositionPatient\n  );\n\n  // First, get the normals of each image plane\n  const targetNormal = targetRowCosines.clone().cross(targetColumnCosines);\n  const targetPlane = new external.cornerstoneMath.Plane();\n\n  targetPlane.setFromNormalAndCoplanarPoint(\n    targetNormal,\n    targetImagePositionPatient\n  );\n\n  const referenceNormal = referenceRowCosines\n    .clone()\n    .cross(referenceColumnCosines);\n  const referencePlane = new external.cornerstoneMath.Plane();\n\n  referencePlane.setFromNormalAndCoplanarPoint(\n    referenceNormal,\n    referenceImagePositionPatient\n  );\n\n  const originDirection = referencePlane.clone().intersectPlane(targetPlane);\n  const origin = originDirection.origin;\n  const direction = originDirection.direction;\n\n  // Calculate the longest possible length in the reference image plane (the length of the diagonal)\n  const bottomRight = imagePointToPatientPoint(\n    {\n      x: referenceImagePlane.columns,\n      y: referenceImagePlane.rows,\n    },\n    referenceImagePlane\n  );\n  const distance = referenceImagePositionPatient.distanceTo(bottomRight);\n\n  // Use this distance to bound the ray intersecting the two planes\n  const line = new external.cornerstoneMath.Line3();\n\n  line.start = origin;\n  line.end = origin.clone().add(direction.multiplyScalar(distance));\n\n  // Find the intersections between this line and the reference image plane's four sides\n  const rect = getRectangleFromImagePlane(referenceImagePlane);\n  const intersections = lineRectangleIntersection(line, rect);\n\n  // Return the intersections between this line and the reference image plane's sides\n  // In order to draw the reference line from the target image.\n  if (intersections.length !== 2) {\n    return;\n  }\n\n  return {\n    start: intersections[0],\n    end: intersections[1],\n  };\n}\n\n/**\n * Translate a point using a rotation angle.\n * @export @public @method\n * @name rotatePoint\n *\n * @param {Object} point - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} center - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Number} angle - angle in degrees\n * @returns {Object} - `{ x, y }` new point translated\n */\nexport function rotatePoint(point, center, angle) {\n  const angleRadians = angle * (Math.PI / 180); // Convert to radians\n\n  const rotatedX =\n    Math.cos(angleRadians) * (point.x - center.x) -\n    Math.sin(angleRadians) * (point.y - center.y) +\n    center.x;\n\n  const rotatedY =\n    Math.sin(angleRadians) * (point.x - center.x) +\n    Math.cos(angleRadians) * (point.y - center.y) +\n    center.y;\n\n  return {\n    x: rotatedX,\n    y: rotatedY,\n  };\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\nimport { rotatePoint } from '../util/pointProjector.js';\n\n/**\n * Draw an ellipse within the bounding box defined by `corner1` and `corner2`.\n * @public\n * @method drawEllipse\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @param {Number} initialRotation - Ellipse initial rotation\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  corner1,\n  corner2,\n  options,\n  coordSystem = 'pixel',\n  initialRotation = 0.0\n) {\n  if (coordSystem === 'pixel') {\n    corner1 = external.cornerstone.pixelToCanvas(element, corner1);\n    corner2 = external.cornerstone.pixelToCanvas(element, corner2);\n  }\n\n  const viewport = external.cornerstone.getViewport(element);\n\n  // Calculate the center of the image\n  const { clientWidth: width, clientHeight: height } = element;\n  const { scale, translation } = viewport;\n  const rotation = viewport.rotation - initialRotation;\n\n  const centerPoint = {\n    x: width / 2 + translation.x * scale,\n    y: height / 2 + translation.y * scale,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    corner1 = rotatePoint(corner1, centerPoint, -rotation);\n    corner2 = rotatePoint(corner2, centerPoint, -rotation);\n  }\n  const w = Math.abs(corner1.x - corner2.x);\n  const h = Math.abs(corner1.y - corner2.y);\n  const xMin = Math.min(corner1.x, corner2.x);\n  const yMin = Math.min(corner1.y, corner2.y);\n\n  let center = {\n    x: xMin + w / 2,\n    y: yMin + h / 2,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    center = rotatePoint(center, centerPoint, rotation);\n  }\n  const angle = (rotation * Math.PI) / 180;\n\n  path(context, options, context => {\n    context.ellipse(center.x, center.y, w / 2, h / 2, angle, 0, 2 * Math.PI);\n    context.closePath();\n  });\n}\n","let defaultColor = 'white',\n  activeColor = 'greenyellow',\n  fillColor = 'transparent';\n\nfunction setFillColor(color) {\n  fillColor = color;\n}\n\nfunction getFillColor() {\n  return fillColor;\n}\n\nfunction setToolColor(color) {\n  defaultColor = color;\n}\n\nfunction getToolColor() {\n  return defaultColor;\n}\n\nfunction setActiveColor(color) {\n  activeColor = color;\n}\n\nfunction getActiveColor() {\n  return activeColor;\n}\n\nfunction getColorIfActive(data) {\n  if (data.color) {\n    return data.color;\n  }\n\n  return data.active ? activeColor : defaultColor;\n}\n\nconst toolColors = {\n  setFillColor,\n  getFillColor,\n  setToolColor,\n  getToolColor,\n  setActiveColor,\n  getActiveColor,\n  getColorIfActive,\n};\n\nexport default toolColors;\n","import external from './../externalModules.js';\nimport toolStyle from './../stateManagement/toolStyle.js';\nimport toolColors from './../stateManagement/toolColors.js';\nimport path from './path.js';\nimport { state } from './../store/index.js';\n\n/**\n * Draws proivded handles to the provided context\n * @public\n * @method drawHandles\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {*} evtDetail - Cornerstone's 'cornerstoneimagerendered' event's `detail`\n * @param {Object[]|Object} handles - An array of handle objects, or an object w/ named handle objects\n * @param {Object} [options={}] - Options object\n * @param {string} [options.color]\n * @param {Boolean} [options.drawHandlesIfActive=false] - Whether the handles should only be drawn if Active (hovered/selected)\n * @param {string} [options.fill]\n * @param {Number} [options.handleRadius=6]\n * @returns {undefined}\n */\nexport default function(context, evtDetail, handles, options = {}) {\n  const element = evtDetail.element;\n  const defaultColor = toolColors.getToolColor();\n\n  context.strokeStyle = options.color || defaultColor;\n\n  const handleKeys = Object.keys(handles);\n\n  for (let i = 0; i < handleKeys.length; i++) {\n    const handleKey = handleKeys[i];\n    const handle = handles[handleKey];\n\n    if (handle.drawnIndependently === true) {\n      continue;\n    }\n\n    if (options.drawHandlesIfActive === true && !handle.active) {\n      continue;\n    }\n\n    const lineWidth = handle.active\n      ? toolStyle.getActiveWidth()\n      : toolStyle.getToolWidth();\n    const fillStyle = options.fill;\n\n    path(\n      context,\n      {\n        lineWidth,\n        fillStyle,\n      },\n      context => {\n        const handleCanvasCoords = external.cornerstone.pixelToCanvas(\n          element,\n          handle\n        );\n\n        // Handle's radisu, then tool's radius, then default radius\n        const handleRadius =\n          handle.radius || options.handleRadius || state.handleRadius;\n\n        context.arc(\n          handleCanvasCoords.x,\n          handleCanvasCoords.y,\n          handleRadius,\n          0,\n          2 * Math.PI\n        );\n      }\n    );\n  }\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\n\n/**\n * Draw multiple lines.\n * @public\n * @method drawJoinedLines\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object[]} lines - `[{ start: {x, y}, end: { x, y }]` An array of `start`, `end` pairs.\n *     Each point is `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  lines,\n  options,\n  coordSystem = 'pixel'\n) {\n  path(context, options, context => {\n    lines.forEach(line => {\n      let start = line.start;\n      let end = line.end;\n\n      if (coordSystem === 'pixel') {\n        const cornerstone = external.cornerstone;\n\n        start = cornerstone.pixelToCanvas(element, start);\n        end = cornerstone.pixelToCanvas(element, end);\n      }\n\n      context.moveTo(start.x, start.y);\n      context.lineTo(end.x, end.y);\n    });\n  });\n}\n","import external from '../externalModules.js';\nimport drawLine from './drawLine.js';\n\n/**\n * Draw a link between an annotation to a box.\n * @public\n * @method drawLink\n * @memberof Drawing\n *\n * @param  {Object[]} linkAnchorPoints An array of possible anchor points.\n * @param  {Object} refPoint         A reference point to select the anchor point.\n * @param  {Object} boundingBox    The bounding box to link.\n * @param  {Object} context          The canvas context.\n * @param  {string} color            The link color.\n * @param  {number} lineWidth        The line width of the link.\n * @returns {undefined}\n */\nexport default function(\n  linkAnchorPoints,\n  refPoint,\n  boundingBox,\n  context,\n  color,\n  lineWidth\n) {\n  // Draw a link from \"the closest anchor point to refPoint\" to \"the nearest midpoint on the bounding box\".\n\n  // Find the closest anchor point to RefPoint\n  const start =\n    linkAnchorPoints.length > 0\n      ? external.cornerstoneMath.point.findClosestPoint(\n          linkAnchorPoints,\n          refPoint\n        )\n      : refPoint;\n\n  // Calculate the midpoints of the bounding box\n  const boundingBoxPoints = [\n    {\n      x: boundingBox.left + boundingBox.width / 2,\n      y: boundingBox.top,\n    },\n    {\n      x: boundingBox.left,\n      y: boundingBox.top + boundingBox.height / 2,\n    },\n    {\n      x: boundingBox.left + boundingBox.width / 2,\n      y: boundingBox.top + boundingBox.height,\n    },\n    {\n      x: boundingBox.left + boundingBox.width,\n      y: boundingBox.top + boundingBox.height / 2,\n    },\n  ];\n\n  // Calculate the link endpoint by identifying which midpoint of the bounding box\n  // Is closest to the start point.\n  const end = external.cornerstoneMath.point.findClosestPoint(\n    boundingBoxPoints,\n    start\n  );\n\n  // Finally we draw the dashed linking line\n  const options = {\n    color,\n    lineWidth,\n    lineDash: [2, 3],\n  };\n\n  drawLine(context, undefined, start, end, options, 'canvas');\n}\n","let defaultFontSize = 15,\n  defaultFont = `${defaultFontSize}px Arial`,\n  defaultBackgroundColor = 'transparent';\n\nfunction setFont(font) {\n  defaultFont = font;\n}\n\nfunction getFont() {\n  return defaultFont;\n}\n\nfunction setFontSize(fontSize) {\n  defaultFontSize = fontSize;\n}\n\nfunction getFontSize() {\n  return defaultFontSize;\n}\n\nfunction setBackgroundColor(backgroundColor) {\n  defaultBackgroundColor = backgroundColor;\n}\n\nfunction getBackgroundColor() {\n  return defaultBackgroundColor;\n}\n\nconst textStyle = {\n  setFont,\n  getFont,\n  setFontSize,\n  getFontSize,\n  setBackgroundColor,\n  getBackgroundColor,\n};\n\nexport default textStyle;\n","import textStyle from './../stateManagement/textStyle.js';\n\n/**\n * Draw multiple lines of text within a bounding box.\n * @public\n * @method fillTextLines\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {Object} boundingBox - `{ left, top }` in canvas coordinates. Only the top-left corner is specified, as the text will take up as much space as it needs.\n * @param {String[]} textLines - The text to be displayed.\n * @param {FillStyle} fillStyle - The fillStyle to apply to the text.\n * @param {Number} padding - The amount of padding above/below each line in canvas units. Note this gives an inter-line spacing of `2*padding`.\n * @returns {undefined}\n */\nexport default function(context, boundingBox, textLines, fillStyle, padding) {\n  const fontSize = textStyle.getFontSize();\n\n  context.font = textStyle.getFont();\n  context.textBaseline = 'top';\n  context.fillStyle = fillStyle;\n  textLines.forEach(function(text, index) {\n    context.fillText(\n      text,\n      boundingBox.left + padding,\n      boundingBox.top + padding + index * (fontSize + padding)\n    );\n  });\n}\n","/**\n * Draw a filled rectangle defined by `boundingBox` using the style defined by `fillStyle`.\n * @public\n * @method fillBox\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {Object} boundingBox - `{ left, top, width, height }` in canvas coordinates.\n * @param {FillStyle} fillStyle - The fillStyle to apply to the region.\n * @returns {undefined}\n */\nexport default function(context, boundingBox, fillStyle) {\n  context.fillStyle = fillStyle;\n  context.fillRect(\n    boundingBox.left,\n    boundingBox.top,\n    boundingBox.width,\n    boundingBox.height\n  );\n}\n","import textStyle from '../stateManagement/textStyle.js';\nimport draw from './draw.js';\nimport fillTextLines from './fillTextLines.js';\nimport fillBox from './fillBox.js';\n\n/**\n * Compute the width of the box required to display the given `text` with a given `padding`.\n * @public\n * @function textBoxWidth\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {String} text - The text to find the width of.\n * @param {Number} padding - The padding to apply on either end of the text.\n * @returns {Number} computed text box width\n */\nexport function textBoxWidth(context, text, padding) {\n  const font = textStyle.getFont();\n  const origFont = context.font;\n\n  if (font && font !== origFont) {\n    context.font = font;\n  }\n  const width = context.measureText(text).width;\n\n  if (font && font !== origFont) {\n    context.font = origFont;\n  }\n\n  return width + 2 * padding;\n}\n\n/**\n * Draws a textBox.\n * @public\n * @function drawTextBox\n * @memberof Drawing\n *\n * @param  {CanvasRenderingContext2D} context The canvas context.\n * @param  {string} textLines   The text to display.\n * @param  {number} x           The x position of the textBox.\n * @param  {number} y           The y position of the textBox.\n * @param  {string} color       The color of the textBox.\n * @param  {Object} options     Options for the textBox.\n * @returns {Object} {top, left, width, height} - Bounding box; can be used for pointNearTool\n */\nexport default function(context, textLines, x, y, color, options) {\n  if (Object.prototype.toString.call(textLines) !== '[object Array]') {\n    textLines = [textLines];\n  }\n\n  const padding = 5;\n  const fontSize = textStyle.getFontSize();\n  const backgroundColor = textStyle.getBackgroundColor();\n\n  // Find the longest text width in the array of text data\n  let maxWidth = 0;\n\n  textLines.forEach(function(text) {\n    // Get the text width in the current font\n    const width = textBoxWidth(context, text, padding);\n\n    // Find the maximum with for all the text rows;\n    maxWidth = Math.max(maxWidth, width);\n  });\n\n  // Calculate the bounding box for this text box\n  const boundingBox = {\n    width: maxWidth,\n    height: padding + textLines.length * (fontSize + padding),\n  };\n\n  draw(context, context => {\n    context.strokeStyle = color;\n\n    // Draw the background box with padding\n    if (options && options.centering && options.centering.x === true) {\n      x -= boundingBox.width / 2;\n    }\n\n    if (options && options.centering && options.centering.y === true) {\n      y -= boundingBox.height / 2;\n    }\n\n    boundingBox.left = x;\n    boundingBox.top = y;\n\n    const fillStyle =\n      options && options.debug === true ? '#FF0000' : backgroundColor;\n\n    fillBox(context, boundingBox, fillStyle);\n\n    // Draw each of the text lines on top of the background box\n    fillTextLines(context, boundingBox, textLines, color, padding);\n  });\n\n  // Return the bounding box so it can be used for pointNearHandle\n  return boundingBox;\n}\n","import external from '../externalModules.js';\nimport drawTextBox from './drawTextBox.js';\nimport drawLink from './drawLink.js';\n\n/**\n * Draw a link between an annotation to a textBox.\n * @public\n * @method drawLinkedTextBox\n * @memberof Drawing\n *\n * @param {Object} context - The canvas context.\n * @param {HTMLElement} element - The element on which to draw the link.\n * @param {Object} textBox - The textBox to link.\n * @param {Object} text - The text to display in the textbox.\n * @param {Object[]} handles - The handles of the annotation.\n * @param {Object[]} textBoxAnchorPoints - An array of possible anchor points on the textBox.\n * @param {string} color - The link color.\n * @param {number} lineWidth - The line width of the link.\n * @param {number} xOffset - The x offset of the textbox.\n * @param {boolean} yCenter - Vertically centers the text if true.\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  textBox,\n  text,\n  handles,\n  textBoxAnchorPoints,\n  color,\n  lineWidth,\n  xOffset,\n  yCenter\n) {\n  const cornerstone = external.cornerstone;\n\n  // Convert the textbox Image coordinates into Canvas coordinates\n  const textCoords = cornerstone.pixelToCanvas(element, textBox);\n\n  if (xOffset) {\n    textCoords.x += xOffset;\n  }\n\n  const options = {\n    centering: {\n      x: false,\n      y: yCenter,\n    },\n  };\n\n  // Draw the text box\n  textBox.boundingBox = drawTextBox(\n    context,\n    text,\n    textCoords.x,\n    textCoords.y,\n    color,\n    options\n  );\n  if (textBox.hasMoved) {\n    // Identify the possible anchor points for the tool -> text line\n    const linkAnchorPoints = textBoxAnchorPoints(handles).map(h =>\n      cornerstone.pixelToCanvas(element, h)\n    );\n\n    // Draw dashed link line between tool and text\n    drawLink(\n      linkAnchorPoints,\n      textCoords,\n      textBox.boundingBox,\n      context,\n      color,\n      lineWidth\n    );\n  }\n}\n","import external from './../externalModules.js';\nimport path from './path.js';\nimport { rotatePoint } from '../util/pointProjector.js';\n\n/**\n * Draw a rectangle defined by `corner1` and `corner2`.\n * @public\n * @method drawRect\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @param {Number} initialRotation - Rectangle initial rotation\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  corner1,\n  corner2,\n  options,\n  coordSystem = 'pixel',\n  initialRotation = 0.0\n) {\n  if (coordSystem === 'pixel') {\n    const cornerstone = external.cornerstone;\n\n    corner1 = cornerstone.pixelToCanvas(element, corner1);\n    corner2 = cornerstone.pixelToCanvas(element, corner2);\n  }\n\n  const viewport = external.cornerstone.getViewport(element);\n\n  // Calculate the center of the image\n  const { clientWidth: width, clientHeight: height } = element;\n  const { scale, translation } = viewport;\n  const rotation = viewport.rotation - initialRotation;\n\n  const centerPoint = {\n    x: width / 2 + translation.x * scale,\n    y: height / 2 + translation.y * scale,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    corner1 = rotatePoint(corner1, centerPoint, -rotation);\n    corner2 = rotatePoint(corner2, centerPoint, -rotation);\n  }\n\n  const w = Math.abs(corner1.x - corner2.x);\n  const h = Math.abs(corner1.y - corner2.y);\n\n  corner1 = {\n    x: Math.min(corner1.x, corner2.x),\n    y: Math.min(corner1.y, corner2.y),\n  };\n\n  corner2 = {\n    x: corner1.x + w,\n    y: corner1.y + h,\n  };\n\n  let corner3 = {\n    x: corner1.x + w,\n    y: corner1.y,\n  };\n\n  let corner4 = {\n    x: corner1.x,\n    y: corner1.y + h,\n  };\n\n  if (Math.abs(rotation) > 0.05) {\n    corner1 = rotatePoint(corner1, centerPoint, rotation);\n    corner2 = rotatePoint(corner2, centerPoint, rotation);\n    corner3 = rotatePoint(corner3, centerPoint, rotation);\n    corner4 = rotatePoint(corner4, centerPoint, rotation);\n  }\n\n  path(context, options, context => {\n    context.moveTo(corner1.x, corner1.y);\n    context.lineTo(corner3.x, corner3.y);\n    context.moveTo(corner3.x, corner3.y);\n    context.lineTo(corner2.x, corner2.y);\n    context.moveTo(corner2.x, corner2.y);\n    context.lineTo(corner4.x, corner4.y);\n    context.moveTo(corner4.x, corner4.y);\n    context.lineTo(corner1.x, corner1.y);\n  });\n}\n","/**\n * Create a new {@link CanvasRenderingContext2D|context} object for the given {@link HTMLCanvasElement|canvas}\n * and set the transform to the {@link https://www.w3.org/TR/2dcontext/#transformations|identity transform}.\n *\n * @public\n * @function getNewContext\n * @memberof Drawing\n *\n * @param {HTMLCanvasElement} canvas - Canvas you would like the context for\n * @returns {CanvasRenderingContext2D} - The provided canvas's 2d context\n */\nexport default function(canvas) {\n  const context = canvas.getContext('2d');\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  return context;\n}\n","/**\n * Returns the first argument if defined, otherwise returns the second\n *\n * @param {*} value\n * @param {*} defaultValue\n * @returns {*}\n */\nexport default function(value, defaultValue) {\n  return value === undefined ? defaultValue : value;\n}\n","import getDefault from './../util/getDefault.js';\n\n/**\n * Set the {@link https://www.w3.org/TR/2dcontext/#shadows|shadow} properties of the context.\n * Each property is set on the context object if defined, otherwise a default value is set.\n *\n * @public\n * @method setShadow\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Context to apply shadow options on\n * @param {Object}  [options={}] - Options object\n * @param {Boolean} [options.shadow=undefined] - Whether to set any shadow options\n * @param {String}  [options.shadowColor=#000000] - Default value: #000000\n * @param {Number}  [options.shadowBlur=0] - Default Value: 0\n * @param {Number}  [options.shadowOffsetX=1] - Default value: 1\n * @param {Number}  [options.shadowOffsetY=1] - Default value: 1\n * @returns {undefined}\n */\nexport default function(context, options = {}) {\n  if (options.shadow) {\n    context.shadowColor = getDefault(options.shadowColor, '#000000');\n    context.shadowBlur = getDefault(options.shadowBlur, 0);\n    context.shadowOffsetX = getDefault(options.shadowOffsetX, 1);\n    context.shadowOffsetY = getDefault(options.shadowOffsetY, 1);\n  }\n}\n","/**\n * Transform the canvas {@link CanvasRenderingContext2D|context} such that it\n * coincides with the orientation of the viewport.\n *\n * @public\n * @function transformCanvasContext\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Context you wish to transform.\n * @param {HTMLCanvasElement} canvas - Canvas the context relates to.\n * @param {*} viewport - The viewport you wish to map on to.\n * @returns {void}\n */\nexport default function(context, canvas, viewport) {\n  if (!(viewport.hflip || viewport.vflip || viewport.rotation)) {\n    return;\n  }\n\n  const translation = {\n    x: canvas.width / 2 + viewport.translation.x * viewport.scale,\n    y: canvas.height / 2 + viewport.translation.y * viewport.scale,\n  };\n\n  context.translate(translation.x, translation.y);\n\n  if (viewport.rotation) {\n    context.rotate((viewport.rotation * Math.PI) / 180);\n  }\n\n  if (viewport.vflip) {\n    context.scale(1, -1);\n  }\n\n  if (viewport.hflip) {\n    context.scale(-1, 1);\n  }\n\n  context.translate(-translation.x, -translation.y);\n}\n","/**\n * Resets the canvas {@link CanvasRenderingContext2D|context} transform to the\n * {@link https://www.w3.org/TR/2dcontext/#transformations|identity transform}.\n *\n * @public\n * @function resetCanvasContextTransform\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - context you wish to transform\n * @returns {void}\n */\nexport default function(context) {\n  context.setTransform(1, 0, 0, 1, 0, 0);\n}\n","/**\n * Helper to determine if an object has no keys and is the correct type (is empty)\n *\n * @private\n * @function isEmptyObject\n * @param {Object} obj The object to check\n * @returns {Boolean} true if the object is empty\n */\nconst isEmptyObject = obj =>\n  Object.keys(obj).length === 0 && obj.constructor === Object;\n\nexport default isEmptyObject;\n","import { draw, drawCircle, getNewContext } from '../../drawing';\nimport external from '../../externalModules';\nimport _isEmptyObject from '../../util/isEmptyObject';\nimport { getModule } from '../../store';\nimport { getDiffBetweenPixelData } from '../../util/segmentation';\n\nconst { getters, setters } = getModule('segmentation');\n\n/**\n * Sets the start and end handle points to empty objects\n *\n * @private\n * @method _resetHandles\n * @returns {undefined}\n */\nfunction _resetHandles() {\n  this.handles = {\n    start: {},\n    end: {},\n  };\n}\n\n/**\n * Render hook: draws the Scissors's outline, box, or circle\n *\n * @param {Object} evt Cornerstone.event#cornerstoneimagerendered > cornerstoneimagerendered event\n * @memberof Tools.ScissorsTool\n * @returns {void}\n */\nfunction renderToolData(evt) {\n  const eventData = evt.detail;\n  const { element } = eventData;\n  const color = getters.brushColor(element, true);\n  const context = getNewContext(eventData.canvasContext.canvas);\n  const { distance } = external.cornerstoneMath.point;\n\n  draw(context, context => {\n    if (!this.handles) {\n      return null;\n    }\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      this.handles.start\n    );\n\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      this.handles.end\n    );\n\n    // Calculating the radius where startCanvas is the center of the circle to be drawn\n    const radius = distance(startCanvas, endCanvas);\n\n    // Draw Circle\n    drawCircle(context, element, this.handles.start, radius, { color });\n  });\n}\n\n/**\n * Sets the start handle point and claims the eventDispatcher event\n *\n * @private\n * @param {*} evt // mousedown, touchstart, click\n * @returns {Boolean} True\n */\nfunction _startOutliningRegion(evt) {\n  const consumeEvent = true;\n  const element = evt.detail.element;\n  const image = evt.detail.currentPoints.image;\n\n  if (_isEmptyObject(this.handles.start)) {\n    this.handles.start = image;\n  } else {\n    this.handles.end = image;\n    this._applyStrategy(evt);\n  }\n\n  external.cornerstone.updateImage(element);\n\n  return consumeEvent;\n}\n\n/**\n * This function will update the handles and updateImage to force re-draw\n *\n * @private\n * @method _setHandlesAndUpdate\n * @param {(CornerstoneTools.event#TOUCH_DRAG|CornerstoneTools.event#MOUSE_DRAG|CornerstoneTools.event#MOUSE_MOVE)} evt  Interaction event emitted by an enabledElement\n * @returns {void}\n */\nfunction _setHandlesAndUpdate(evt) {\n  const { element, currentPoints } = evt.detail;\n  const { image } = currentPoints;\n\n  this.handles.end = image;\n  external.cornerstone.updateImage(element);\n}\n\n/**\n * Event handler for MOUSE_UP/TOUCH_END during handle drag event loop.\n *\n * @private\n * @method _applyStrategy\n * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement\n * @returns {void}\n */\nfunction _applyStrategy(evt) {\n  evt.detail.handles = this.handles;\n  const { element } = evt.detail;\n\n  const { labelmap2D, labelmap3D, currentImageIdIndex } = getters.labelmap2D(\n    element\n  );\n\n  const pixelData = labelmap2D.pixelData;\n  const previousPixeldata = pixelData.slice();\n\n  const points = {\n    start: {\n      x: this.handles.start.x,\n      y: this.handles.start.y,\n    },\n    end: {\n      x: this.handles.end.x,\n      y: this.handles.end.y,\n    },\n  };\n\n  const operationData = {\n    points,\n    pixelData,\n    segmentIndex: labelmap3D.activeSegmentIndex,\n    segmentationMixinType: `circleSegmentationMixin`,\n  };\n\n  this.applyActiveStrategy(evt, operationData);\n\n  const operation = {\n    imageIdIndex: currentImageIdIndex,\n    diff: getDiffBetweenPixelData(previousPixeldata, pixelData),\n  };\n\n  setters.pushState(this.element, [operation]);\n\n  // Invalidate the brush tool data so it is redrawn\n  setters.updateSegmentsOnLabelmap2D(labelmap2D);\n  external.cornerstone.updateImage(element);\n\n  this._resetHandles();\n}\n\n/**\n * @mixin circleSegmentationMixin - Segmentation operations for circles.\n * @memberof Mixins\n */\nexport default {\n  postTouchStartCallback: _startOutliningRegion,\n  postMouseDownCallback: _startOutliningRegion,\n  mouseClickCallback: _startOutliningRegion,\n  touchDragCallback: _setHandlesAndUpdate,\n  mouseDragCallback: _setHandlesAndUpdate,\n  mouseMoveCallback: _setHandlesAndUpdate,\n  touchEndCallback: _applyStrategy,\n  mouseUpCallback: _applyStrategy,\n  initializeMixin: _resetHandles,\n  renderToolData,\n  _resetHandles,\n  _applyStrategy,\n};\n","import external from '../../externalModules.js';\nimport { getModule } from '../../store';\nimport { getLogger } from '../../util/logger.js';\nimport { draw, drawJoinedLines, getNewContext } from '../../drawing';\nimport { getDiffBetweenPixelData } from '../../util/segmentation';\n\nconst logger = getLogger('tools:ScissorsTool');\n\nconst { getters, setters } = getModule('segmentation');\n\n/**\n * Render hook: draws the FreehandScissors's outline\n *\n * @param {Object} evt Cornerstone.event#cornerstoneimagerendered > cornerstoneimagerendered event\n * @memberof Tools.ScissorsTool\n * @returns {void}\n */\nfunction renderToolData(evt) {\n  const eventData = evt.detail;\n  const { element } = eventData;\n  const color = getters.brushColor(element, true);\n  const context = getNewContext(eventData.canvasContext.canvas);\n  const points = this.handles.points;\n\n  if (points.length < 2) {\n    return;\n  }\n\n  draw(context, context => {\n    for (let j = 0; j < points.length; j++) {\n      const lines = [...points[j].lines];\n\n      if (j === points.length - 1) {\n        // If it's still being actively drawn, keep the last line to\n        // The mouse location\n        lines.push(points[0]);\n      }\n      drawJoinedLines(context, element, points[j], lines, {\n        color,\n      });\n    }\n  });\n}\n\n/**\n * Sets the start handle point and claims the eventDispatcher event\n *\n * @private\n * @param {*} evt // mousedown, touchstart, click\n * @returns {void|null}\n */\nfunction _startOutliningRegion(evt) {\n  const element = evt.detail.element;\n  const image = evt.detail.currentPoints.image;\n  const points = this.handles.points;\n\n  if (!points.length) {\n    logger.warn('Something went wrong, empty handles detected.');\n\n    return null;\n  }\n\n  points.push({\n    x: image.x,\n    y: image.y,\n    lines: [],\n  });\n\n  this.currentHandle += 1;\n\n  external.cornerstone.updateImage(element);\n}\n\n/**\n * This function will update the handles and updateImage to force re-draw\n *\n * @private\n * @method _setHandlesAndUpdate\n * @param {(CornerstoneTools.event#TOUCH_DRAG|CornerstoneTools.event#MOUSE_DRAG|CornerstoneTools.event#MOUSE_MOVE)} evt  Interaction event emitted by an enabledElement\n * @returns {void}\n */\nfunction _setHandlesAndUpdate(evt) {\n  const eventData = evt.detail;\n  const element = evt.detail.element;\n\n  this._addPoint(eventData);\n  external.cornerstone.updateImage(element);\n}\n\n/**\n * Event handler for MOUSE_UP/TOUCH_END during handle drag event loop.\n *\n * @private\n * @method _applyStrategy\n * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement\n * @returns {void}\n */\nfunction _applyStrategy(evt) {\n  const points = this.handles.points;\n  const { element } = evt.detail;\n\n  const { labelmap2D, labelmap3D, currentImageIdIndex } = getters.labelmap2D(\n    element\n  );\n\n  const pixelData = labelmap2D.pixelData;\n  const previousPixeldata = pixelData.slice();\n\n  const operationData = {\n    points,\n    pixelData,\n    segmentIndex: labelmap3D.activeSegmentIndex,\n    segmentationMixinType: `freehandSegmentationMixin`,\n  };\n\n  this.applyActiveStrategy(evt, operationData);\n\n  const operation = {\n    imageIdIndex: currentImageIdIndex,\n    diff: getDiffBetweenPixelData(previousPixeldata, pixelData),\n  };\n\n  setters.pushState(this.element, [operation]);\n\n  // Invalidate the brush tool data so it is redrawn\n  setters.updateSegmentsOnLabelmap2D(labelmap2D);\n  external.cornerstone.updateImage(element);\n\n  this._resetHandles();\n}\n\n/**\n * Sets the start and end handle points to empty objects\n *\n * @private\n * @method _resetHandles\n * @returns {undefined}\n */\nfunction _resetHandles() {\n  this.handles = {\n    points: [],\n  };\n\n  this.currentHandle = 0;\n}\n\n/**\n * Adds a point on mouse click in polygon mode.\n *\n * @private\n * @param {Object} evt - data object associated with an event.\n * @returns {void}\n */\nfunction _addPoint(evt) {\n  const points = this.handles.points;\n\n  if (points.length) {\n    // Add the line from the current handle to the new handle\n    points[this.currentHandle - 1].lines.push({\n      x: evt.currentPoints.image.x,\n      y: evt.currentPoints.image.y,\n      lines: [],\n    });\n  }\n\n  // Add the new handle\n  points.push({\n    x: evt.currentPoints.image.x,\n    y: evt.currentPoints.image.y,\n    lines: [],\n  });\n\n  // Increment the current handle value\n  this.currentHandle += 1;\n\n  // Force onImageRendered to fire\n  external.cornerstone.updateImage(evt.element);\n}\n\n/**\n * @mixin freehandSegmentationMixin - segmentation operations for freehand\n * @memberof Mixins\n */\nexport default {\n  postTouchStartCallback: _startOutliningRegion,\n  postMouseDownCallback: _startOutliningRegion,\n  mouseClickCallback: _startOutliningRegion,\n  touchDragCallback: _setHandlesAndUpdate,\n  mouseDragCallback: _setHandlesAndUpdate,\n  mouseMoveCallback: _setHandlesAndUpdate,\n  touchEndCallback: _applyStrategy,\n  mouseUpCallback: _applyStrategy,\n  initializeMixin: _resetHandles,\n  renderToolData,\n  _resetHandles,\n  _addPoint,\n  _applyStrategy,\n};\n","import { draw, drawJoinedLines, getNewContext } from '../../drawing';\nimport { getModule } from '../../store';\nimport freehandSegmentationMixin from './freehandSegmentationMixin';\n\nconst { getters } = getModule('segmentation');\n\n/**\n * Override for `freehandSegmentationMixin`'s `renderToolData` method to render a polyline instead\n * of a freehand region with the first and last point connected. Apply after the `freehandSegmentationMixin`.\n *\n * @override\n * @param {Object} evt The cornerstone render event.\n * @returns {null}\n */\nfunction renderToolData(evt) {\n  const eventData = evt.detail;\n  const { element } = eventData;\n  const color = getters.brushColor(element, true);\n  const context = getNewContext(eventData.canvasContext.canvas);\n  const handles = this.handles;\n\n  draw(context, context => {\n    const isNotTheFirstHandle = handles.points.length > 1;\n\n    if (isNotTheFirstHandle) {\n      for (let j = 0; j < handles.points.length; j++) {\n        const lines = [...handles.points[j].lines];\n\n        drawJoinedLines(context, element, this.handles.points[j], lines, {\n          color,\n        });\n      }\n    }\n  });\n}\n\nconst polylineSegmentationMixin = Object.assign({}, freehandSegmentationMixin, {\n  renderToolData,\n});\n\n/**\n * @mixin freehandPolylineRenderOverride - segmentation operations for corrections Polyline\n * @memberof Mixins\n */\nexport default polylineSegmentationMixin;\n","import { draw, drawRect, getNewContext } from '../../drawing';\nimport external from '../../externalModules';\nimport _isEmptyObject from '../../util/isEmptyObject';\nimport { getModule } from '../../store';\nimport { getDiffBetweenPixelData } from '../../util/segmentation';\n\nconst { getters, setters } = getModule('segmentation');\n\n/**\n * Render hook: draws the Scissors's outline, box, or circle\n *\n * @param {Object} evt Cornerstone.event#cornerstoneimagerendered > cornerstoneimagerendered event\n * @memberof Tools.ScissorsTool\n * @returns {void}\n */\nfunction renderToolData(evt) {\n  const eventData = evt.detail;\n  const { element } = eventData;\n  const color = getters.brushColor(element, true);\n  const context = getNewContext(eventData.canvasContext.canvas);\n\n  draw(context, context => {\n    drawRect(context, element, this.handles.start, this.handles.end, {\n      color,\n    });\n  });\n}\n\n/**\n * Sets the start handle point and claims the eventDispatcher event\n *\n * @private\n * @param {*} evt // mousedown, touchstart, click\n * @returns {Boolean} True\n */\nfunction _startOutliningRegion(evt) {\n  const consumeEvent = true;\n  const element = evt.detail.element;\n  const image = evt.detail.currentPoints.image;\n\n  if (_isEmptyObject(this.handles.start)) {\n    this.handles.start = image;\n  } else {\n    this.handles.end = image;\n    this._applyStrategy(evt);\n  }\n\n  external.cornerstone.updateImage(element);\n\n  return consumeEvent;\n}\n\n/**\n * This function will update the handles and updateImage to force re-draw\n *\n * @private\n * @method _setHandlesAndUpdate\n * @param {(CornerstoneTools.event#TOUCH_DRAG|CornerstoneTools.event#MOUSE_DRAG|CornerstoneTools.event#MOUSE_MOVE)} evt  Interaction event emitted by an enabledElement\n * @returns {void}\n */\nfunction _setHandlesAndUpdate(evt) {\n  const {\n    element,\n    currentPoints: { image },\n  } = evt.detail;\n\n  this.handles.end = image;\n  external.cornerstone.updateImage(element);\n}\n\n/**\n * Event handler for MOUSE_UP/TOUCH_END during handle drag event loop.\n *\n * @private\n * @method _applyStrategy\n * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement\n * @returns {void}\n */\nfunction _applyStrategy(evt) {\n  evt.detail.handles = this.handles;\n\n  const { element } = evt.detail;\n\n  const { labelmap2D, labelmap3D, currentImageIdIndex } = getters.labelmap2D(\n    element\n  );\n\n  const pixelData = labelmap2D.pixelData;\n  const previousPixeldata = pixelData.slice();\n\n  const points = [\n    {\n      x: this.handles.start.x,\n      y: this.handles.start.y,\n    },\n    {\n      x: this.handles.end.x,\n      y: this.handles.end.y,\n    },\n  ];\n\n  const operationData = {\n    points,\n    pixelData,\n    segmentIndex: labelmap3D.activeSegmentIndex,\n    segmentationMixinType: `rectangleSegmentationMixin`,\n  };\n\n  this.applyActiveStrategy(evt, operationData);\n\n  const operation = {\n    imageIdIndex: currentImageIdIndex,\n    diff: getDiffBetweenPixelData(previousPixeldata, pixelData),\n  };\n\n  setters.pushState(this.element, [operation]);\n\n  // Invalidate the brush tool data so it is redrawn\n  setters.updateSegmentsOnLabelmap2D(labelmap2D);\n  external.cornerstone.updateImage(element);\n\n  this._resetHandles();\n}\n\n/**\n * Sets the start and end handle points to empty objects\n *\n * @private\n * @method _resetHandles\n * @returns {void}\n */\nfunction _resetHandles() {\n  this.handles = {\n    start: {},\n    end: {},\n  };\n}\n\n/**\n * @mixin rectangleSegmentationMixin - segmentation operations for rectangles\n * @memberof Mixins\n */\nexport default {\n  postTouchStartCallback: _startOutliningRegion,\n  postMouseDownCallback: _startOutliningRegion,\n  mouseClickCallback: _startOutliningRegion,\n  touchDragCallback: _setHandlesAndUpdate,\n  mouseDragCallback: _setHandlesAndUpdate,\n  mouseMoveCallback: _setHandlesAndUpdate,\n  touchEndCallback: _applyStrategy,\n  mouseUpCallback: _applyStrategy,\n  initializeMixin: _resetHandles,\n  renderToolData,\n  _resetHandles,\n  _applyStrategy,\n};\n","import external from './../../externalModules.js';\nimport store, { getModule } from './../../store/index.js';\n\n/**\n * Called by the event dispatcher to render the image.\n *\n * @param {Object} evt - The event.\n * @returns {void}\n */\nfunction renderBrush(evt) {\n  const { cornerstone } = external;\n  const { getters, configuration } = getModule('segmentation');\n  const eventData = evt.detail;\n  const viewport = eventData.viewport;\n\n  let mousePosition;\n\n  if (this._drawing) {\n    mousePosition = this._lastImageCoords;\n  } else if (this._mouseUpRender) {\n    mousePosition = this._lastImageCoords;\n    this._mouseUpRender = false;\n  } else {\n    mousePosition = store.state.mousePositionImage;\n  }\n\n  if (!mousePosition) {\n    return;\n  }\n\n  const { rows, columns } = eventData.image;\n  const { x, y } = mousePosition;\n\n  if (x < 0 || x > columns || y < 0 || y > rows) {\n    return;\n  }\n\n  // Draw the hover overlay on top of the pixel data\n  const radius = configuration.radius;\n  const context = eventData.canvasContext;\n  const element = eventData.element;\n  const color = getters.brushColor(element, this._drawing);\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  const circleRadius = radius * viewport.scale;\n  const mouseCoordsCanvas = cornerstone.pixelToCanvas(element, mousePosition);\n\n  context.beginPath();\n  context.strokeStyle = color;\n  context.ellipse(\n    mouseCoordsCanvas.x,\n    mouseCoordsCanvas.y,\n    circleRadius,\n    circleRadius,\n    0,\n    0,\n    2 * Math.PI\n  );\n  context.stroke();\n}\n\nexport default {\n  renderBrush,\n};\n","import activeOrDisabledBinaryTool from './activeOrDisabledBinaryTool.js';\nimport enabledOrDisabledBinaryTool from './enabledOrDisabledBinaryTool.js';\nimport circleSegmentationMixin from './segmentation/circleSegmentationMixin.js';\nimport polylineSegmentationMixin from './segmentation/polylineSegmentationMixin.js';\nimport freehandSegmentationMixin from './segmentation/freehandSegmentationMixin.js';\nimport rectangleSegmentationMixin from './segmentation/rectangleSegmentationMixin.js';\nimport renderBrushMixin from './segmentation/renderBrushMixin.js';\n\nexport default {\n  activeOrDisabledBinaryTool,\n  enabledOrDisabledBinaryTool,\n  circleSegmentationMixin,\n  polylineSegmentationMixin,\n  freehandSegmentationMixin,\n  rectangleSegmentationMixin,\n  renderBrushMixin,\n};\n","const isMergeableObject = val => {\n  const nonNullObject = val && typeof val === 'object';\n\n  return (\n    nonNullObject &&\n    Object.prototype.toString.call(val) !== '[object RegExp]' &&\n    Object.prototype.toString.call(val) !== '[object Date]'\n  );\n};\n\nconst emptyTarget = val => {\n  const isEmpty = Array.isArray(val) ? [] : {};\n\n  return isEmpty;\n};\n\nconst cloneIfNecessary = (value, optionsArgument) => {\n  const clone = optionsArgument && optionsArgument.clone === true;\n\n  return clone && isMergeableObject(value)\n    ? deepmerge(emptyTarget(value), value, optionsArgument)\n    : value;\n};\n\nconst defaultArrayMerge = (target, source, optionsArgument) => {\n  const destination = target.slice();\n\n  source.forEach(function(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      destination[i] = cloneIfNecessary(e, optionsArgument);\n    } else if (isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, optionsArgument);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(cloneIfNecessary(e, optionsArgument));\n    }\n  });\n\n  return destination;\n};\n\nconst mergeObject = (target, source, optionsArgument) => {\n  const destination = {};\n\n  if (isMergeableObject(target)) {\n    Object.keys(target).forEach(function(key) {\n      destination[key] = cloneIfNecessary(target[key], optionsArgument);\n    });\n  }\n  Object.keys(source).forEach(function(key) {\n    if (!isMergeableObject(source[key]) || !target[key]) {\n      destination[key] = cloneIfNecessary(source[key], optionsArgument);\n    } else {\n      destination[key] = deepmerge(target[key], source[key], optionsArgument);\n    }\n  });\n\n  return destination;\n};\n\nconst deepmerge = (target = {}, source = {}, optionsArgument) => {\n  const array = Array.isArray(source);\n  const options = optionsArgument || { arrayMerge: defaultArrayMerge };\n  const arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n  if (array) {\n    return Array.isArray(target)\n      ? arrayMerge(target, source, optionsArgument)\n      : cloneIfNecessary(source, optionsArgument);\n  }\n\n  return mergeObject(target, source, optionsArgument);\n};\n\nexport default deepmerge;\n","import mixins from './../../mixins/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport deepmerge from './../../util/deepmerge.js';\nimport { setToolCursor } from '../../store/setToolCursor.js';\nimport { getModule } from '../../store';\n\nconst logger = getLogger('tools:base:BaseTool');\n\nconst globalConfigurationModule = getModule('globalConfiguration');\n\n/**\n * @typedef ToolConfiguration\n * @param {String} name\n * @param {object} strategies - Named strategy functions\n * @param {String} defaultStrategy - The name of the strategy to use by default\n * @param {Object} configuration\n * @param {String[]} mixins - A list of mixin names to apply to the tool\n */\n\n/**\n * @memberof Tools.Base\n * @classdesc BaseTool Class description\n * @property {String[]} supportedInteractionTypes - A string list of ways the tool can interact with the user\n */\nclass BaseTool {\n  /**\n   * Constructor description\n   * @param {props} [props={}] Tool properties set on instantiation of a tool\n   * @param {defaultProps} [defaultProps={}] Tools Default properties\n   */\n  constructor(props, defaultProps) {\n    /**\n     * Merge default props with custom props\n     */\n    this.initialConfiguration = deepmerge(defaultProps, props);\n\n    const {\n      name,\n      strategies,\n      defaultStrategy,\n      configuration,\n      supportedInteractionTypes,\n      mixins,\n      svgCursor,\n    } = this.initialConfiguration;\n\n    /**\n     * A unique, identifying tool name\n     * @type {String}\n     */\n    this.name = name;\n\n    /** @type {String} */\n    this.mode = 'disabled';\n    this.element = undefined;\n    this.supportedInteractionTypes = supportedInteractionTypes || [];\n\n    this.strategies = strategies || {};\n    this.defaultStrategy =\n      defaultStrategy || Object.keys(this.strategies)[0] || undefined;\n    this.activeStrategy = this.defaultStrategy;\n\n    if (svgCursor) {\n      this.svgCursor = svgCursor;\n    }\n\n    // Options are set when a tool is added, during a \"mode\" change,\n    // or via a tool's option's setter\n    this._options = {};\n\n    // Configuration is set at tool initalization\n    this._configuration = Object.assign({}, configuration);\n\n    // `updateOnMouseMove` causes the frame to render on every mouse move when\n    // the tool is active. This is useful for tools that render large/dynamic\n    // items to the canvas which can't easily be respresented with an SVG Cursor.\n    this.updateOnMouseMove = false;\n    this.hideDefaultCursor = false;\n\n    // Apply mixins if mixinsArray is not empty.\n    if (mixins && mixins.length) {\n      this._applyMixins(mixins);\n    }\n\n    this._cursors = Object.assign({}, this.initialConfiguration.cursors);\n\n    const defaultCursor =\n      this.defaultStrategy && this._cursors[this.activeStrategy];\n\n    if (defaultCursor) {\n      this.svgCursor = defaultCursor;\n    }\n  }\n\n  //\n  // CONFIGURATION\n  //\n\n  /**\n   * Config...\n   * @public\n   * @type {Object}\n   * @instance\n   */\n  static get configuration() {}\n\n  get configuration() {\n    return this._configuration;\n  }\n\n  set configuration(configuration) {\n    this._configuration = configuration;\n  }\n\n  //\n  // OPTIONS\n  //\n\n  /**\n   * Options...\n   * @readonly\n   * @instance\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Merges provided options with existing options.\n   *\n   * @public\n   * @instance\n   * @param {Object} options - options object to merge with existing options.\n   * @returns {undefined}\n   */\n  mergeOptions(options) {\n    this._options = Object.assign({}, this._options, options);\n  }\n\n  /**\n   * Clears the tools options.\n   *\n   * @public\n   * @instance\n   * @memberof Tools.Base.BaseTool\n   * @returns {undefined}\n   */\n  clearOptions() {\n    this._options = {};\n  }\n\n  /**\n   * Apply the currently set/active strategy.\n   *\n   * @public\n   * @instance\n   * @method applyActiveStrategy\n   * @memberof Tools.Base.BaseTool\n   *\n   * @param {Object} evt The event that triggered the strategies application\n   * @param {Object} operationData - An object containing extra data not present in the `evt`,\n   *                                 required to apply the strategy.\n   * @returns {*} strategies vary widely; check each specific strategy to find expected return value\n   */\n  applyActiveStrategy(evt, operationData) {\n    return this.strategies[this.activeStrategy].call(this, evt, operationData);\n  }\n\n  /**\n   * Iterates over registered mixins; any matching names in the provided `mixinsArray` will\n   * be merged with this instance.\n   *\n   * @private\n   * @method _applyMixins\n   * @param {string[]} mixinsArray An array of mixin identifiers (strings).\n   * @returns {undefined}\n   */\n  _applyMixins(mixinsArray) {\n    for (let i = 0; i < mixinsArray.length; i++) {\n      const mixin = mixins[`${mixinsArray[i]}`];\n\n      if (typeof mixin === 'object') {\n        Object.assign(this, mixin);\n\n        if (typeof this.initializeMixin === 'function') {\n          // Run the mixin's initialisation process.\n          this.initializeMixin();\n        }\n      } else {\n        logger.warn(`${this.name}: mixin ${mixins[i]} does not exist.`);\n      }\n    }\n\n    // Don't keep initialiseMixin from last mixin.\n    if (this.initializeMixin === 'function') {\n      delete this.initializeMixin;\n    }\n  }\n\n  /**\n   * Change the active strategy.\n   *\n   * @public\n   * @method setActiveStrategy\n   * @param  {string} strategy\n   * @returns {null}\n   */\n  setActiveStrategy(strategy) {\n    this.activeStrategy = strategy;\n\n    if (globalConfigurationModule.configuration.showSVGCursors) {\n      this.changeCursor(this.element, strategy);\n    }\n  }\n\n  /**\n   * Function responsible for changing the Cursor, according to the strategy.\n   * @param {HTMLElement} element\n   * @param {string} strategy The strategy to be used on Tool\n   * @public\n   * @returns {void}\n   */\n  changeCursor(element, strategy) {\n    // Necessary to avoid setToolCursor call without elements, which throws an error.\n    if (!element) {\n      return;\n    }\n\n    // If there are cursors set per strategy, change the cursor.\n    const cursor = this._cursors[strategy];\n\n    if (cursor) {\n      this.svgCursor = cursor;\n\n      if (this.mode === 'active') {\n        setToolCursor(element, cursor);\n        // External.cornerstone.updateImage(element);\n      }\n    }\n  }\n\n  // ===================================================================\n  // Virtual Methods - Have default behavior but may be overridden.\n  // ===================================================================\n\n  //\n  // MOUSE\n  //\n\n  /**\n   * Callback that takes priority if the tool is active, before `MOUSE_DOWN`\n   * events are processed. Does nothing by default.\n   *\n   * @callback BaseTool~preMouseDownCallback\n   * @param  {CornerstoneTools.event:cornerstonetoolsmousedown} evt\n   * @returns {boolean} consumedEvent - True if function consumed the event.\n   */\n  /**\n   * Callback that takes priority if the tool is active, after `MOUSE_DOWN`\n   * events are processed. Does nothing by default.\n   *\n   * @callback BaseTool~postMouseDownCallback\n   * @param  {CornerstoneTools.event:cornerstonetoolsmousedown} evt\n   * @returns {boolean} consumedEvent - True if function consumed the event.\n   */\n\n  /**\n   * Callback that is called if the tool is active, after `MOUSE_DOWN`\n   * events are processed. Does nothing by default.\n   *\n   * @virtual\n   * @param  {type} evt\n   * @returns {boolean} consumedEvent - True if function consumed the event.\n   */\n  /**\n   * Example implementation:\n   *\n   * postMouseDownCallback(evt) {\n   *    return false;\n   * }\n   */\n\n  /**\n   * Callback that takes priority if the tool is active, before `TOUCH_START`\n   * events are processed. Does nothing by default.\n   *\n   * @virtual\n   * @param  {type} evt\n   * @returns {boolean} consumedEvent - True if function consumed the event.\n   */\n  /**\n   * Example implementation:\n   *\n   * preTouchStartCallback(evt) {\n   *    return false;\n   * }\n   */\n\n  /**\n   * Callback that is called if the tool is active, after `TOUCH_START`\n   * events are processed. Does nothing by default.\n   *\n   * @virtual\n   * @param  {type} evt\n   * @returns {boolean} consumedEvent - True if function consumed the event.\n   */\n  /**\n   * Example implementation:\n   *\n   * postTouchStartCallback(evt) {\n   *    return false;\n   * }\n   */\n}\n\nexport default BaseTool;\n","import external from '../externalModules.js';\n\n/**\n * Returns true if a point is enclosed within a bounding box.\n * @export @public @method\n * @name pointInsideBoundingBox\n *\n * @param  {Object} handle The handle containing the boundingBox.\n * @param  {Object} coords The coordinate to check.\n * @returns {boolean} True if the point is enclosed within the bounding box.\n */\nexport default function(handle, coords) {\n  if (!handle.boundingBox) {\n    return;\n  }\n\n  return external.cornerstoneMath.point.insideRect(coords, handle.boundingBox);\n}\n","import external from '../externalModules.js';\nimport pointInsideBoundingBox from '../util/pointInsideBoundingBox.js';\n\n/**\n * Returns the first handle found to be near the provided point. Handles to search can be an array of handles, an\n * object of named handles, or an object of named handles AND named arrays of handles.\n *\n * @public\n * @function getHandleNearImagePoint\n * @memberof Manipulators\n *\n * @param {*} element - Target enabledElement\n * @param {(Array|Object)} handles - An arry of handles, object with named handles, or object with named handles AND named arrays of handles\n * @param {Object} coords - The coordinates to measure from when determining distance from handles\n * @param {number} distanceThreshold - minimum distance handle needs to be from provided coords\n * @returns {Object} Handle\n */\nconst getHandleNearImagePoint = function(\n  element,\n  handles,\n  coords,\n  distanceThreshold\n) {\n  let nearbyHandle;\n\n  if (!handles) {\n    return;\n  }\n\n  if (Array.isArray(handles)) {\n    const handleKeys = Object.keys(handles);\n\n    for (let i = 0; i < handleKeys.length; i++) {\n      const key = handleKeys[i];\n      const handle = handles[key];\n\n      if (\n        // Not a true handle\n        !handle.hasOwnProperty('x') ||\n        !handle.hasOwnProperty('y')\n      ) {\n        continue;\n      }\n\n      if (_isHandleNearImagePoint(handle, element, coords, distanceThreshold)) {\n        nearbyHandle = handle;\n        break;\n      }\n    }\n  } else if (typeof handles === 'object') {\n    const handleKeys = Object.keys(handles);\n\n    for (let i = 0; i < handleKeys.length; i++) {\n      const handleName = handleKeys[i];\n\n      if (Array.isArray(handles[handleName])) {\n        nearbyHandle = getHandleNearImagePoint(\n          element,\n          handles[handleName],\n          coords,\n          distanceThreshold\n        );\n        if (nearbyHandle) {\n          break;\n        }\n      } else {\n        const handle = handles[handleName];\n\n        if (\n          _isHandleNearImagePoint(handle, element, coords, distanceThreshold)\n        ) {\n          nearbyHandle = handle;\n          break;\n        }\n      }\n    }\n  }\n\n  return nearbyHandle;\n};\n\n/**\n * Determines if the handle is less than the provided distance from the  provided coordinates\n * @private\n * @function _isHandleNearImagePoint\n *\n * @param {*} handle\n * @param {*} element\n * @param {*} coords\n * @param {*} distanceThreshold\n * @returns {boolean} true if handles is near image point\n */\nconst _isHandleNearImagePoint = function(\n  handle,\n  element,\n  coords,\n  distanceThreshold\n) {\n  if (handle.hasOwnProperty('pointNearHandle')) {\n    if (handle.pointNearHandle(element, handle, coords)) {\n      return true;\n    }\n  } else if (handle.hasBoundingBox === true) {\n    if (pointInsideBoundingBox(handle, coords)) {\n      return true;\n    }\n  } else {\n    const handleCanvas = external.cornerstone.pixelToCanvas(element, handle);\n    const distance = external.cornerstoneMath.point.distance(\n      handleCanvas,\n      coords\n    );\n\n    if (distance <= distanceThreshold) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default getHandleNearImagePoint;\n","import getHandleNearImagePoint from './getHandleNearImagePoint.js';\n\n/**\n * Update the active handle\n * @public\n * @function handleActivator\n * @memberof Manipulators\n *\n * @param {*} element\n * @param {*} handles\n * @param {*} canvasPoint\n * @param {*} distanceThreshold\n * @returns {Boolean} - True if a handle was activated\n */\nexport default function(element, handles, canvasPoint, distanceThreshold) {\n  if (!distanceThreshold) {\n    distanceThreshold = 6;\n  }\n\n  const activeHandle = _getActiveHandle(handles);\n  const nearbyHandle = getHandleNearImagePoint(\n    element,\n    handles,\n    canvasPoint,\n    distanceThreshold\n  );\n\n  if (activeHandle !== nearbyHandle) {\n    if (nearbyHandle !== undefined) {\n      nearbyHandle.active = true;\n    }\n\n    if (activeHandle !== undefined) {\n      activeHandle.active = false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n *\n * @private\n *\n * @param {*} handles\n * @returns {Object} - Activated Handle\n */\nfunction _getActiveHandle(handles) {\n  let activeHandle;\n\n  Object.keys(handles).forEach(function(name) {\n    const handle = handles[name];\n\n    if (handle.active === true) {\n      activeHandle = handle;\n\n      return;\n    }\n  });\n\n  return activeHandle;\n}\n","import external from '../externalModules.js';\n\n/**\n * Determine if a handle is outside the bounds of the rendered image.\n * @public\n * @function anyHandlesOutsideImage\n * @memberof Manipulators\n *\n * @param {*} renderData - Cornerstone Tool's event detail\n * @param {Object} handles - An object containing named handles\n * @returns {Boolean} - True if the handle was placed outside the image\n */\nexport default function(renderData, handles) {\n  const image = renderData.image;\n  const imageRect = {\n    left: 0,\n    top: 0,\n    width: image.width,\n    height: image.height,\n  };\n\n  let handleOutsideImage = false;\n\n  Object.keys(handles).forEach(function(name) {\n    const handle = handles[name];\n\n    if (handle.allowedOutsideImage === true) {\n      return;\n    }\n\n    if (\n      external.cornerstoneMath.point.insideRect(handle, imageRect) === false\n    ) {\n      handleOutsideImage = true;\n    }\n  });\n\n  return handleOutsideImage;\n}\n","/**\n * Clips a value to an upper and lower bound.\n * @export @public @method\n * @name clip\n *\n * @param  {number} val  The value to clip.\n * @param  {number} low  The lower bound.\n * @param  {number} high The upper bound.\n * @returns {number}      The clipped value.\n */\nexport function clip(val, low, high) {\n  return Math.min(Math.max(low, val), high);\n}\n\n/**\n * Clips a value within a box.\n * @export @public @method\n * @name clipToBox\n *\n * @param  {Object} point The point to clip\n * @param  {Object} box   The bounding box to clip to.\n * @returns {Object}       The clipped point.\n */\nexport function clipToBox(point, box) {\n  // Clip an {x, y} point to a box of size {width, height}\n  point.x = clip(point.x, 0, box.width);\n  point.y = clip(point.y, 0, box.height);\n}\n\nexport default clip;\n","/**\n * Filters an array of tools, returning only tools which are active.\n * @export\n * @public\n * @method\n * @name getActiveToolsForElement\n *\n * @param  {HTMLElement} element The element.\n * @param  {Object[]} tools      The input tool array.\n * @param  {string} handlerType  The input type being queried.\n * @returns {Object[]}            The filtered array.\n */\nexport default function(element, tools, handlerType) {\n  return tools.filter(\n    tool =>\n      tool.element === element &&\n      tool.mode === 'active' &&\n      (handlerType === undefined || tool.options[`is${handlerType}Active`])\n  );\n}\n","import getToolForElement from './getToolForElement.js';\n\n/**\n * Queries if a tool is active on the specified element.\n * @export\n * @public\n * @method\n * @name isToolActiveForElement\n *\n * @param  {HTMLElement} element The element being queried.\n * @param  {string} name    The name of the tool.\n * @returns {boolean}         True if the tool is active.\n */\nexport default function(element, name) {\n  const tool = getToolForElement(element, name);\n\n  return tool.mode === 'active';\n}\n","import BaseTool from './BaseTool.js';\nimport EVENTS from './../../events.js';\nimport external from './../../externalModules.js';\nimport isToolActiveForElement from './../../store/isToolActiveForElement.js';\nimport { getModule } from './../../store/index.js';\nimport {\n  getDiffBetweenPixelData,\n  triggerLabelmapModifiedEvent,\n} from '../../util/segmentation';\n\nconst segmentationModule = getModule('segmentation');\n\n/**\n * @abstract\n * @memberof Tools.Base\n * @classdesc Abstract class for tools which manipulate the mask data to be displayed on\n * the cornerstone canvas.\n * @extends Tools.Base.BaseTool\n */\nclass BaseBrushTool extends BaseTool {\n  constructor(props, defaultProps = {}) {\n    if (!defaultProps.configuration) {\n      defaultProps.configuration = { alwaysEraseOnClick: false };\n    }\n\n    super(props, defaultProps);\n\n    this.updateOnMouseMove = true;\n    this.hideDefaultCursor = true;\n\n    this._drawing = false;\n    this._drawingMouseUpCallback = this._drawingMouseUpCallback.bind(this);\n  }\n\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  /**\n   * Helper function for rendering the brush.\n   *\n   * @abstract\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  // eslint-disable-next-line no-unused-vars\n  renderBrush(evt) {\n    throw new Error(`Method renderBrush not implemented for ${this.name}.`);\n  }\n\n  /**\n   * Paints the data to the labelmap.\n   *\n   * @protected\n   * @abstract\n   * @param  {Object} evt The event.\n   * @returns {void}\n   */\n  // eslint-disable-next-line no-unused-vars\n  _paint(evt) {\n    throw new Error(`Method _paint not implemented for ${this.name}.`);\n  }\n\n  // ===================================================================\n  // Virtual Methods - Have default behavior but may be overriden.\n  // ===================================================================\n\n  /**\n   * Event handler for MOUSE_DRAG event.\n   *\n   * @override\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   */\n  mouseDragCallback(evt) {\n    const { currentPoints } = evt.detail;\n\n    this._lastImageCoords = currentPoints.image;\n\n    // Safety measure incase _startPainting is overridden and doesn't always\n    // start a paint.\n    if (this._drawing) {\n      this._paint(evt);\n    }\n  }\n\n  /**\n   * Event handler for MOUSE_DOWN event.\n   *\n   * @override\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   */\n  preMouseDownCallback(evt) {\n    const eventData = evt.detail;\n    const { element, currentPoints } = eventData;\n\n    this._startPainting(evt);\n\n    this._lastImageCoords = currentPoints.image;\n    this._drawing = true;\n    this._startListeningForMouseUp(element);\n    this._paint(evt);\n\n    return true;\n  }\n\n  /**\n   * Initialise painting with BaseBrushTool.\n   *\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _startPainting(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const { configuration, getters } = segmentationModule;\n\n    const {\n      labelmap2D,\n      labelmap3D,\n      currentImageIdIndex,\n      activeLabelmapIndex,\n    } = getters.labelmap2D(element);\n\n    const shouldErase =\n      this._isCtrlDown(eventData) || this.configuration.alwaysEraseOnClick;\n\n    this.paintEventData = {\n      labelmap2D,\n      labelmap3D,\n      currentImageIdIndex,\n      activeLabelmapIndex,\n      shouldErase,\n    };\n\n    if (configuration.storeHistory) {\n      const previousPixelData = labelmap2D.pixelData.slice();\n\n      this.paintEventData.previousPixelData = previousPixelData;\n    }\n  }\n\n  /**\n   * End painting with BaseBrushTool.\n   *\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _endPainting(evt) {\n    const { configuration, setters } = segmentationModule;\n    const { labelmap2D, currentImageIdIndex } = this.paintEventData;\n\n    // Grab the labels on the slice.\n    const segmentSet = new Set(labelmap2D.pixelData);\n    const iterator = segmentSet.values();\n\n    const segmentsOnLabelmap = [];\n    let done = false;\n\n    while (!done) {\n      const next = iterator.next();\n\n      done = next.done;\n\n      if (!done) {\n        segmentsOnLabelmap.push(next.value);\n      }\n    }\n\n    labelmap2D.segmentsOnLabelmap = segmentsOnLabelmap;\n\n    if (configuration.storeHistory) {\n      const { previousPixelData } = this.paintEventData;\n      const newPixelData = labelmap2D.pixelData;\n      const operation = {\n        imageIdIndex: currentImageIdIndex,\n        diff: getDiffBetweenPixelData(previousPixelData, newPixelData),\n      };\n\n      setters.pushState(this.element, [operation]);\n    }\n\n    triggerLabelmapModifiedEvent(this.element);\n  }\n\n  // ===================================================================\n  // Implementation interface\n  // ===================================================================\n\n  /**\n   * Event handler for MOUSE_MOVE event.\n   *\n   * @override\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   */\n  mouseMoveCallback(evt) {\n    const { currentPoints } = evt.detail;\n\n    this._lastImageCoords = currentPoints.image;\n  }\n\n  /**\n   * Used to redraw the tool's cursor per render.\n   *\n   * @override\n   * @param {Object} evt - The event.\n   */\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n\n    // Only brush needs to render.\n    if (isToolActiveForElement(element, this.name)) {\n      // Call the hover event for the brush\n      this.renderBrush(evt);\n    }\n  }\n\n  /**\n   * Event handler for switching mode to passive.\n   *\n   * @override\n   * @event\n   * @param {Object} evt - The event.\n   */\n  // eslint-disable-next-line no-unused-vars\n  passiveCallback(evt) {\n    try {\n      external.cornerstone.updateImage(this.element);\n    } catch (error) {\n      // It is possible that the image has not been loaded\n      // when this is called.\n      return;\n    }\n  }\n\n  /**\n   * Event handler for MOUSE_UP during the drawing event loop.\n   *\n   * @protected\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _drawingMouseUpCallback(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n\n    this._endPainting(evt);\n\n    this._drawing = false;\n    this._mouseUpRender = true;\n    this._stopListeningForMouseUp(element);\n  }\n\n  newImageCallback(evt) {\n    if (this._drawing) {\n      // End painting on one slice and start on another.\n      this._endPainting(evt);\n      this._startPainting(evt);\n    }\n  }\n\n  /**\n   * Adds modify loop event listeners.\n   *\n   * @protected\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {void}\n   */\n  _startListeningForMouseUp(element) {\n    element.removeEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n    element.removeEventListener(\n      EVENTS.MOUSE_CLICK,\n      this._drawingMouseUpCallback\n    );\n\n    element.addEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._drawingMouseUpCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Adds modify loop event listeners.\n   *\n   * @protected\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {void}\n   */\n  _stopListeningForMouseUp(element) {\n    element.removeEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n    element.removeEventListener(\n      EVENTS.MOUSE_CLICK,\n      this._drawingMouseUpCallback\n    );\n\n    external.cornerstone.updateImage(element);\n  }\n\n  // ===================================================================\n  // Brush API. This is effectively a wrapper around the store.\n  // ===================================================================\n\n  /**\n   * Increases the brush size\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  increaseBrushSize() {\n    const { configuration, setters } = segmentationModule;\n    const oldRadius = configuration.radius;\n    let newRadius = Math.floor(oldRadius * 1.2);\n\n    // If e.g. only 2 pixels big. Math.floor(2*1.2) = 2.\n    // Hence, have minimum increment of 1 pixel.\n    if (newRadius === oldRadius) {\n      newRadius += 1;\n    }\n\n    setters.radius(newRadius);\n  }\n\n  /**\n   * Decreases the brush size\n   *\n   * @public\n   * @api\n   * @returns {void}\n   */\n  decreaseBrushSize() {\n    const { configuration, setters } = segmentationModule;\n    const oldRadius = configuration.radius;\n    const newRadius = Math.floor(oldRadius * 0.8);\n\n    setters.radius(newRadius);\n  }\n\n  _isCtrlDown(eventData) {\n    return (eventData.event && eventData.event.ctrlKey) || eventData.ctrlKey;\n  }\n}\n\nexport default BaseBrushTool;\n","import BaseAnnotationTool from '../tools/base/BaseAnnotationTool.js';\nimport BaseBrushTool from '../tools/base/BaseBrushTool.js';\n\n/**\n * Filters an array of tools, returning only tools which are active or passive.\n * @export\n * @public\n * @method\n * @name filterToolsUseableWithMultiPartTools\n *\n * @param  {Object[]} tools      The input tool array.\n * @returns {Object[]}            The filtered array.\n */\nexport default function(tools) {\n  return tools.filter(\n    tool =>\n      !tool.isMultiPartTool &&\n      !(tool instanceof BaseAnnotationTool) &&\n      !(tool instanceof BaseBrushTool)\n  );\n}\n","import { getters, state } from '../store';\nimport getActiveToolsForElement from '../store/getActiveToolsForElement';\nimport filterToolsUseableWithMultiPartTools from '../store/filterToolsUsableWithMultiPartTools';\n\n// Todo: We could simplify this if we only allow one active\n// Tool per mouse button mask?\nexport default function getActiveTool(\n  element,\n  buttons,\n  interactionType = 'mouse'\n) {\n  let tools;\n\n  if (interactionType === 'touch') {\n    tools = getActiveToolsForElement(element, getters.touchTools());\n    tools = tools.filter(tool => tool.options.isTouchActive);\n  } else {\n    // Filter out disabled, enabled, and passive\n    tools = getActiveToolsForElement(element, getters.mouseTools());\n\n    // Filter out tools that do not match mouseButtonMask\n    tools = tools.filter(\n      tool =>\n        Array.isArray(tool.options.mouseButtonMask) &&\n        buttons &&\n        tool.options.mouseButtonMask.includes(buttons) &&\n        tool.options.isMouseActive\n    );\n\n    if (state.isMultiPartToolActive) {\n      tools = filterToolsUseableWithMultiPartTools(tools);\n    }\n  }\n\n  if (tools.length === 0) {\n    return;\n  }\n\n  return tools[0];\n}\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport anyHandlesOutsideImage from './anyHandlesOutsideImage.js';\nimport { removeToolState } from '../stateManagement/toolState.js';\nimport triggerEvent from '../util/triggerEvent.js';\nimport { clipToBox } from '../util/clip.js';\nimport { state } from './../store/index.js';\nimport getActiveTool from '../util/getActiveTool';\nimport BaseAnnotationTool from '../tools/base/BaseAnnotationTool';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('manipulators:moveAllHandles');\n\nconst _dragEvents = {\n  mouse: [EVENTS.MOUSE_DRAG],\n  touch: [EVENTS.TOUCH_DRAG],\n};\n\nconst _upOrEndEvents = {\n  mouse: [EVENTS.MOUSE_UP, EVENTS.MOUSE_CLICK],\n  touch: [\n    EVENTS.TOUCH_END,\n    EVENTS.TOUCH_DRAG_END,\n    EVENTS.TOUCH_PINCH,\n    EVENTS.TOUCH_PRESS,\n    EVENTS.TAP,\n  ],\n};\n\n/**\n * Manipulator to move all provided handles at the same time\n * @public\n * @function moveAllHandles\n * @memberof Manipulators\n *\n * @param {*}        evtDetail\n * @param {*}        evtDetail.element\n * @param {String}   toolName\n * @param {*}        annotation\n * @param {*}        [handle=null] - not needed by moveAllHandles, but keeps call signature the same as `moveHandle`\n * @param {Object}   [options={}]\n * @param {Boolean}  [options.deleteIfHandleOutsideImage]\n * @param {Boolean}  [options.preventHandleOutsideImage]\n * @param {string}   [interactionType=mouse]\n * @param {function} [doneMovingCallback]\n * @returns {undefined}\n */\nexport default function(\n  { element },\n  toolName,\n  annotation,\n  handle,\n  options = {},\n  interactionType = 'mouse',\n  doneMovingCallback\n) {\n  // Use global defaults, unless overidden by provided options\n  options = Object.assign(\n    {\n      deleteIfHandleOutsideImage: state.deleteIfHandleOutsideImage,\n      preventHandleOutsideImage: state.preventHandleOutsideImage,\n    },\n    options\n  );\n\n  const dragHandler = _dragHandler.bind(\n    this,\n    toolName,\n    annotation,\n    options,\n    interactionType\n  );\n  // So we don't need to inline the entire `upOrEndHandler` function\n  const upOrEndHandler = evt => {\n    _upOrEndHandler(\n      toolName,\n      annotation,\n      options,\n      interactionType,\n      {\n        dragHandler,\n        upOrEndHandler,\n      },\n      evt,\n      doneMovingCallback\n    );\n  };\n\n  annotation.active = true;\n  state.isToolLocked = true;\n\n  // Add Event Listeners\n  _dragEvents[interactionType].forEach(eventType => {\n    element.addEventListener(eventType, dragHandler);\n  });\n  _upOrEndEvents[interactionType].forEach(eventType => {\n    element.addEventListener(eventType, upOrEndHandler);\n  });\n}\n\nfunction _dragHandler(\n  toolName,\n  annotation,\n  options = {},\n  interactionType,\n  evt\n) {\n  const { element, image, buttons } = evt.detail;\n  const { x, y } = evt.detail.deltaPoints.image;\n\n  annotation.active = true;\n  annotation.invalidated = true;\n\n  const handleKeys = Object.keys(annotation.handles);\n\n  for (let i = 0; i < handleKeys.length; i++) {\n    const key = handleKeys[i];\n    const handle = annotation.handles[key];\n\n    if (\n      // Don't move this part of the annotation\n      handle.movesIndependently === true ||\n      // Not a true handle\n      !handle.hasOwnProperty('x') ||\n      !handle.hasOwnProperty('y')\n    ) {\n      continue;\n    }\n\n    handle.x += x;\n    handle.y += y;\n\n    if (options.preventHandleOutsideImage) {\n      clipToBox(handle, image);\n    }\n  }\n\n  external.cornerstone.updateImage(element);\n\n  const activeTool = getActiveTool(element, buttons, interactionType);\n\n  if (activeTool instanceof BaseAnnotationTool) {\n    activeTool.updateCachedStats(image, element, annotation);\n  }\n\n  const eventType = EVENTS.MEASUREMENT_MODIFIED;\n  const modifiedEventData = {\n    toolName,\n    element,\n    measurementData: annotation,\n  };\n\n  triggerEvent(element, eventType, modifiedEventData);\n\n  evt.preventDefault();\n  evt.stopPropagation();\n}\n\nfunction _upOrEndHandler(\n  toolName,\n  annotation,\n  options = {},\n  interactionType,\n  { dragHandler, upOrEndHandler },\n  evt,\n  doneMovingCallback\n) {\n  const eventData = evt.detail;\n  const element = evt.detail.element;\n\n  annotation.active = false;\n  annotation.invalidated = true;\n  state.isToolLocked = false;\n\n  // Remove Event Listeners\n  _dragEvents[interactionType].forEach(eventType => {\n    element.removeEventListener(eventType, dragHandler);\n  });\n  _upOrEndEvents[interactionType].forEach(eventType => {\n    element.removeEventListener(eventType, upOrEndHandler);\n  });\n\n  // If any handle is outside the image, delete the tool data\n  if (\n    options.deleteIfHandleOutsideImage &&\n    anyHandlesOutsideImage(eventData, annotation.handles)\n  ) {\n    removeToolState(element, toolName, annotation);\n  }\n\n  if (typeof options.doneMovingCallback === 'function') {\n    logger.warn(\n      '`options.doneMovingCallback` has been depricated. See https://github.com/cornerstonejs/cornerstoneTools/pull/915 for details.'\n    );\n    options.doneMovingCallback();\n  }\n\n  if (typeof doneMovingCallback === 'function') {\n    doneMovingCallback();\n  }\n\n  external.cornerstone.updateImage(element);\n}\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport anyHandlesOutsideImage from './anyHandlesOutsideImage.js';\nimport { removeToolState } from '../stateManagement/toolState.js';\nimport triggerEvent from '../util/triggerEvent.js';\nimport { clipToBox } from '../util/clip.js';\nimport { state } from './../store/index.js';\nimport getActiveTool from '../util/getActiveTool';\nimport BaseAnnotationTool from '../tools/base/BaseAnnotationTool';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('manipulators:moveHandle');\n\nconst runAnimation = {\n  value: false,\n};\n\nconst _dragEvents = {\n  mouse: [EVENTS.MOUSE_DRAG],\n  touch: [EVENTS.TOUCH_DRAG],\n};\n\nconst _upOrEndEvents = {\n  mouse: [EVENTS.MOUSE_UP, EVENTS.MOUSE_CLICK],\n  touch: [\n    EVENTS.TOUCH_END,\n    EVENTS.TOUCH_DRAG_END,\n    EVENTS.TOUCH_PINCH,\n    EVENTS.TOUCH_PRESS,\n    EVENTS.TAP,\n  ],\n};\n\n/**\n * Move the provided handle\n *\n * @public\n * @method moveHandle\n * @memberof Manipulators\n *\n * @param {*} evtDetail\n * @param {*} toolName\n * @param {*} annotation\n * @param {*} handle\n * @param {*} [options={}]\n * @param {Boolean}  [options.deleteIfHandleOutsideImage]\n * @param {Boolean}  [options.preventHandleOutsideImage]\n * @param {*} [interactionType=mouse]\n * @param {function} doneMovingCallback\n * @returns {undefined}\n */\nexport default function(\n  evtDetail,\n  toolName,\n  annotation,\n  handle,\n  options = {},\n  interactionType = 'mouse',\n  doneMovingCallback\n) {\n  // Use global defaults, unless overidden by provided options\n  options = Object.assign(\n    {\n      deleteIfHandleOutsideImage: state.deleteIfHandleOutsideImage,\n      preventHandleOutsideImage: state.preventHandleOutsideImage,\n    },\n    options\n  );\n\n  const element = evtDetail.element;\n  const dragHandler = _dragHandler.bind(\n    this,\n    toolName,\n    annotation,\n    handle,\n    options,\n    interactionType\n  );\n  // So we don't need to inline the entire `upOrEndHandler` function\n  const upOrEndHandler = evt => {\n    _upOrEndHandler(\n      toolName,\n      evtDetail,\n      annotation,\n      handle,\n      options,\n      interactionType,\n      {\n        dragHandler,\n        upOrEndHandler,\n      },\n      evt,\n      doneMovingCallback\n    );\n  };\n\n  handle.active = true;\n  annotation.active = true;\n  state.isToolLocked = true;\n\n  // Add Event Listeners\n  _dragEvents[interactionType].forEach(eventType => {\n    element.addEventListener(eventType, dragHandler);\n  });\n  _upOrEndEvents[interactionType].forEach(eventType => {\n    element.addEventListener(eventType, upOrEndHandler);\n  });\n\n  // ==========================\n  // ========  TOUCH ==========\n  // ==========================\n  if (interactionType === 'touch') {\n    runAnimation.value = true;\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    // Average pixel width of index finger is 45-57 pixels\n    // https://www.smashingmagazine.com/2012/02/finger-friendly-design-ideal-mobile-touchscreen-target-sizes/\n    const fingerDistance = -57;\n\n    const aboveFinger = {\n      x: evtDetail.currentPoints.page.x,\n      y: evtDetail.currentPoints.page.y + fingerDistance,\n    };\n\n    const targetLocation = external.cornerstone.pageToPixel(\n      element,\n      aboveFinger.x,\n      aboveFinger.y\n    );\n\n    _animate(handle, runAnimation, enabledElement, targetLocation);\n  }\n}\n\nfunction _dragHandler(\n  toolName,\n  annotation,\n  handle,\n  options,\n  interactionType,\n  evt\n) {\n  const { image, currentPoints, element, buttons } = evt.detail;\n  const page = currentPoints.page;\n  const fingerOffset = -57;\n  const targetLocation = external.cornerstone.pageToPixel(\n    element,\n    page.x,\n    interactionType === 'touch' ? page.y + fingerOffset : page.y\n  );\n\n  runAnimation.value = false;\n  handle.active = true;\n  handle.hasMoved = true;\n  handle.x = targetLocation.x;\n  handle.y = targetLocation.y;\n  // TODO: A way to not flip this for textboxes on annotations\n  annotation.invalidated = true;\n\n  if (options.preventHandleOutsideImage) {\n    clipToBox(handle, image);\n  }\n\n  external.cornerstone.updateImage(element);\n\n  const activeTool = getActiveTool(element, buttons, interactionType);\n\n  if (activeTool instanceof BaseAnnotationTool) {\n    activeTool.updateCachedStats(image, element, annotation);\n  }\n\n  const eventType = EVENTS.MEASUREMENT_MODIFIED;\n  const modifiedEventData = {\n    toolName,\n    element,\n    measurementData: annotation,\n  };\n\n  triggerEvent(element, eventType, modifiedEventData);\n}\n\nfunction _upOrEndHandler(\n  toolName,\n  evtDetail,\n  annotation,\n  handle,\n  options = {},\n  interactionType,\n  { dragHandler, upOrEndHandler },\n  evt,\n  doneMovingCallback\n) {\n  const image = evtDetail.currentPoints.image;\n  const element = evt.detail.element;\n\n  handle.active = false;\n  annotation.active = false;\n  // TODO: A way to not flip this for textboxes on annotations\n  annotation.invalidated = true;\n  state.isToolLocked = false;\n  runAnimation.value = false;\n\n  // Remove Event Listeners\n  _dragEvents[interactionType].forEach(eventType => {\n    element.removeEventListener(eventType, dragHandler);\n  });\n  _upOrEndEvents[interactionType].forEach(eventType => {\n    element.removeEventListener(eventType, upOrEndHandler);\n  });\n\n  // If any handle is outside the image, delete the tool data\n  if (\n    options.deleteIfHandleOutsideImage &&\n    anyHandlesOutsideImage(evtDetail, annotation.handles)\n  ) {\n    removeToolState(element, toolName, annotation);\n  }\n\n  // TODO: What dark magic makes us want to handle TOUCH_PRESS differently?\n  if (evt.type === EVENTS.TOUCH_PRESS) {\n    evt.detail.handlePressed = annotation;\n    handle.x = image.x; // Original Event\n    handle.y = image.y;\n  }\n\n  if (typeof options.doneMovingCallback === 'function') {\n    logger.warn(\n      '`options.doneMovingCallback` has been depricated. See https://github.com/cornerstonejs/cornerstoneTools/pull/915 for details.'\n    );\n\n    options.doneMovingCallback();\n  }\n\n  if (typeof doneMovingCallback === 'function') {\n    doneMovingCallback();\n  }\n\n  external.cornerstone.updateImage(element);\n}\n\n/**\n * Animates the provided handle using `requestAnimationFrame`\n * @private\n * @method _animate\n *\n * @param {*} handle\n * @param {*} runAnimation\n * @param {*} enabledElement\n * @param {*} targetLocation\n * @returns {undefined}\n */\nfunction _animate(handle, runAnimation, enabledElement, targetLocation) {\n  if (!runAnimation.value) {\n    return;\n  }\n\n  // Pixels / second\n  const distanceRemaining = Math.abs(handle.y - targetLocation.y);\n  const linearDistEachFrame = distanceRemaining / 10;\n\n  if (distanceRemaining < 1) {\n    handle.y = targetLocation.y;\n    runAnimation.value = false;\n\n    return;\n  }\n\n  if (handle.y > targetLocation.y) {\n    handle.y -= linearDistEachFrame;\n  } else if (handle.y < targetLocation.y) {\n    handle.y += linearDistEachFrame;\n  }\n\n  // Update the image\n  external.cornerstone.updateImage(enabledElement.element);\n\n  // Request a new frame\n  external.cornerstone.requestAnimationFrame(function() {\n    _animate(handle, runAnimation, enabledElement, targetLocation);\n  });\n}\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport anyHandlesOutsideImage from './anyHandlesOutsideImage.js';\nimport { removeToolState } from '../stateManagement/toolState.js';\nimport triggerEvent from '../util/triggerEvent.js';\nimport { clipToBox } from '../util/clip.js';\nimport { state } from './../store/index.js';\nimport getActiveTool from '../util/getActiveTool';\nimport BaseAnnotationTool from '../tools/base/BaseAnnotationTool';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('manipulators:moveNewHandle');\n\nconst _moveEvents = {\n  mouse: [EVENTS.MOUSE_MOVE, EVENTS.MOUSE_DRAG],\n  touch: [EVENTS.TOUCH_DRAG],\n};\n\nconst _moveEndEvents = {\n  mouse: [EVENTS.MOUSE_UP, EVENTS.MOUSE_CLICK],\n  touch: [EVENTS.TOUCH_END, EVENTS.TOUCH_PINCH, EVENTS.TAP],\n};\n\n/**\n * Move a new handle\n * @public\n * @method moveNewHandle\n * @memberof Manipulators\n *\n * @param {*} evtDetail\n * @param {*} toolName\n * @param {*} annotation\n * @param {*} handle\n * @param {*} [options={}]\n * @param {Boolean}  [options.deleteIfHandleOutsideImage]\n * @param {Boolean}  [options.preventHandleOutsideImage]\n * @param {string} [interactionType=mouse]\n * @param {function} [doneMovingCallback]\n * @returns {void}\n */\nexport default function(\n  evtDetail,\n  toolName,\n  annotation,\n  handle,\n  options,\n  interactionType = 'mouse',\n  doneMovingCallback\n) {\n  // Use global defaults, unless overidden by provided options\n  options = Object.assign(\n    {\n      deleteIfHandleOutsideImage: state.deleteIfHandleOutsideImage,\n      preventHandleOutsideImage: state.preventHandleOutsideImage,\n    },\n    options\n  );\n\n  const element = evtDetail.element;\n\n  annotation.active = true;\n  handle.active = true;\n  state.isToolLocked = true;\n\n  function moveHandler(evt) {\n    _moveHandler(\n      toolName,\n      annotation,\n      handle,\n      options,\n      interactionType,\n      {\n        moveHandler,\n        moveEndHandler,\n      },\n      evt\n    );\n  }\n  // So we don't need to inline the entire `moveEndEventHandler` function\n  function moveEndHandler(evt) {\n    _moveEndHandler(\n      toolName,\n      annotation,\n      handle,\n      options,\n      interactionType,\n      {\n        moveHandler,\n        moveEndHandler,\n      },\n      evt,\n      doneMovingCallback\n    );\n  }\n\n  // Add event listeners\n  _moveEvents[interactionType].forEach(eventType => {\n    element.addEventListener(eventType, moveHandler);\n  });\n  element.addEventListener(EVENTS.TOUCH_START, _stopImmediatePropagation);\n}\n\nfunction _moveHandler(\n  toolName,\n  annotation,\n  handle,\n  options,\n  interactionType,\n  { moveEndHandler },\n  evt\n) {\n  const { currentPoints, image, element, buttons } = evt.detail;\n  // Add moveEndEvent Handler when move trigger\n\n  _moveEndEvents[interactionType].forEach(eventType => {\n    element.addEventListener(eventType, moveEndHandler);\n  });\n  const page = currentPoints.page;\n  const fingerOffset = -57;\n  const targetLocation = external.cornerstone.pageToPixel(\n    element,\n    interactionType === 'touch' ? page.x + fingerOffset : page.x,\n    interactionType === 'touch' ? page.y + fingerOffset : page.y\n  );\n\n  annotation.invalidated = true;\n  handle.active = true;\n  handle.x = targetLocation.x;\n  handle.y = targetLocation.y;\n\n  if (options && options.preventHandleOutsideImage) {\n    clipToBox(handle, image);\n  }\n\n  external.cornerstone.updateImage(element);\n\n  const activeTool = getActiveTool(element, buttons, interactionType);\n\n  if (activeTool instanceof BaseAnnotationTool) {\n    activeTool.updateCachedStats(image, element, annotation);\n  }\n\n  const eventType = EVENTS.MEASUREMENT_MODIFIED;\n  const modifiedEventData = {\n    toolName,\n    element,\n    measurementData: annotation,\n  };\n\n  triggerEvent(element, eventType, modifiedEventData);\n}\n\nfunction _moveEndHandler(\n  toolName,\n  annotation,\n  handle,\n  options,\n  interactionType,\n  { moveHandler, moveEndHandler },\n  evt,\n  doneMovingCallback\n) {\n  const { element, currentPoints } = evt.detail;\n  const page = currentPoints.page;\n  const fingerOffset = -57;\n  const targetLocation = external.cornerstone.pageToPixel(\n    element,\n    interactionType === 'touch' ? page.x + fingerOffset : page.x,\n    interactionType === 'touch' ? page.y + fingerOffset : page.y\n  );\n\n  // \"Release\" the handle\n  annotation.active = false;\n  annotation.invalidated = true;\n  handle.active = false;\n  handle.x = targetLocation.x;\n  handle.y = targetLocation.y;\n  state.isToolLocked = false;\n\n  // Remove event listeners\n  _moveEvents[interactionType].forEach(eventType => {\n    element.removeEventListener(eventType, moveHandler);\n  });\n  _moveEndEvents[interactionType].forEach(eventType => {\n    element.removeEventListener(eventType, moveEndHandler);\n  });\n  element.removeEventListener(EVENTS.TOUCH_START, _stopImmediatePropagation);\n\n  // TODO: WHY?\n  // Why would a Touch_Pinch or Touch_Press be associated with a new handle?\n  if (evt.type === EVENTS.TOUCH_PINCH || evt.type === EVENTS.TOUCH_PRESS) {\n    handle.active = false;\n    external.cornerstone.updateImage(element);\n    if (typeof options.doneMovingCallback === 'function') {\n      logger.warn(\n        '`options.doneMovingCallback` has been depricated. See https://github.com/cornerstonejs/cornerstoneTools/pull/915 for details.'\n      );\n\n      options.doneMovingCallback();\n    }\n\n    if (typeof doneMovingCallback === 'function') {\n      doneMovingCallback();\n    }\n\n    return;\n  }\n\n  if (options.preventHandleOutsideImage) {\n    clipToBox(handle, evt.detail.image);\n  }\n\n  // If any handle is outside the image, delete the tool data\n  if (\n    options.deleteIfHandleOutsideImage &&\n    anyHandlesOutsideImage(evt.detail, annotation.handles)\n  ) {\n    removeToolState(element, toolName, annotation);\n  }\n\n  if (typeof options.doneMovingCallback === 'function') {\n    logger.warn(\n      '`options.doneMovingCallback` has been depricated. See https://github.com/cornerstonejs/cornerstoneTools/pull/915 for details.'\n    );\n\n    options.doneMovingCallback();\n  }\n\n  if (typeof doneMovingCallback === 'function') {\n    doneMovingCallback();\n  }\n\n  // Update Image\n  external.cornerstone.updateImage(element);\n}\n\n/**\n * Stop the CornerstoneToolsTouchStart event from\n * Becoming a CornerstoneToolsTouchStartActive event when\n * MoveNewHandle ends\n *\n * @private\n * @function _stopImmediatePropagation\n *\n * @param {*} evt\n * @returns {Boolean} false\n */\nfunction _stopImmediatePropagation(evt) {\n  evt.stopImmediatePropagation();\n\n  return false;\n}\n","import { state } from '../store/index.js';\nimport getHandleNearImagePoint from '../manipulators/getHandleNearImagePoint.js';\nimport { moveHandle, moveAllHandles } from './../manipulators/index.js';\n\n// TODO this should just be in manipulators? They are just manipulator wrappers anyway.\n\n/**\n * Moves a handle near the image point.\n * @public\n * @function moveHandleNearImagePoint\n * @memberof Util\n *\n * @param  {Event} evt      The event.\n * @param  {*} tool The tool\n * @param  {Object} toolData     The toolData that corresponds to the handle.\n * @param  {Object} handle  The handle to be moved.\n * @param  {string} interactionType\n * @returns {undefined}\n */\nconst moveHandleNearImagePoint = function(\n  evt,\n  tool,\n  toolData,\n  handle,\n  interactionType\n) {\n  toolData.active = true;\n  state.isToolLocked = true;\n\n  moveHandle(\n    evt.detail,\n    tool.name,\n    toolData,\n    handle,\n    tool.options,\n    interactionType\n  );\n\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n\n  return;\n};\n\n/**\n * Finds the handle near the image point and its corresponding data.\n *\n * @public\n * @function findHandleDataNearImagePoint\n * @memberof Util\n *\n * @param  {HTMLElement} element  The elment.\n * @param  {Object} toolState     The state of the tool.\n * @param  {string} toolName The name of the tool the handle corrosponds to.\n * @param  {Object} coords The coordinates that need to be checked.\n * @param  {String} [interactionType=mouse]\n * @returns {*}\n */\nconst findHandleDataNearImagePoint = function(\n  element,\n  toolState,\n  toolName,\n  coords,\n  interactionType = 'mouse'\n) {\n  for (let i = 0; i < toolState.data.length; i++) {\n    const data = toolState.data[i];\n    const handle = getHandleNearImagePoint(\n      element,\n      data.handles,\n      coords,\n      interactionType === 'mouse' ? state.clickProximity : state.touchProximity\n    );\n\n    if (handle) {\n      return {\n        handle,\n        data,\n      };\n    }\n  }\n};\n\n/**\n * Moves an entire annotation near the click.\n *\n * @public\n * @function moveAnnotation\n * @memberof Util\n *\n * @param  {Event}   evt           The event.\n * @param  {Object}  tool The tool that the annotation belongs to.\n * @param  {string}  tool.name\n * @param  {Object}  [tool.options={}]\n * @param  {Boolean} [tool.options.preventHandleOutsideImage]\n * @param  {Boolean} [tool.options.deleteIfHandleOutsideImage]\n * @param  {Object}  annotation The toolData that corresponds to the annotation.\n * @param  {String}  [interactionType=mouse]\n * @returns {undefined}\n */\nconst moveAnnotation = function(\n  evt,\n  tool,\n  annotation,\n  interactionType = 'mouse'\n) {\n  annotation.active = true;\n  state.isToolLocked = true;\n\n  moveAllHandles(\n    evt.detail,\n    tool.name,\n    annotation,\n    null,\n    tool.options,\n    interactionType,\n    () => {\n      annotation.active = false;\n      state.isToolLocked = false;\n    }\n  );\n\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n\n  return;\n};\n\nexport {\n  moveHandleNearImagePoint,\n  findHandleDataNearImagePoint,\n  moveAnnotation,\n};\n","import BaseTool from './BaseTool.js';\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport handleActivator from './../../manipulators/handleActivator.js';\nimport {\n  moveHandleNearImagePoint,\n  moveAnnotation,\n} from './../../util/findAndMoveHelpers.js';\nimport { getLogger } from '../../util/logger';\n\nconst logger = getLogger('baseAnnotationTool');\n\n/**\n * @memberof Tools.Base\n * @classdesc Abstract class for tools which create and display annotations on the\n * cornerstone canvas.\n * @extends Tools.Base.BaseTool\n */\nclass BaseAnnotationTool extends BaseTool {\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  /**\n   * Creates a new annotation.\n   *\n   * @method createNewMeasurement\n   * @memberof Tools.Base.BaseAnnotationTool\n   *\n   * @param  {type} evt description\n   * @returns {type}     description\n   */\n  // eslint-disable-next-line no-unused-vars\n  createNewMeasurement(evt) {\n    throw new Error(\n      `Method createNewMeasurement not implemented for ${this.name}.`\n    );\n  }\n\n  /**\n   *\n   * Returns true if the given coords are need the tool.\n   *\n   * @method pointNearTool\n   * @memberof Tools.Base.BaseAnnotationTool\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @param {string} [interactionType=mouse]\n   * @returns {boolean} If the point is near the tool\n   */\n  // eslint-disable-next-line no-unused-vars\n  pointNearTool(element, data, coords, interactionType = 'mouse') {\n    throw new Error(`Method pointNearTool not implemented for ${this.name}.`);\n  }\n\n  /**\n   * Returns the distance in px from the given coords to the closest handle of the annotation.\n   *\n   * @method distanceFromPoint\n   * @memberof Tools.Base.BaseAnnotationTool\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {number} -  the distance in px from the provided coordinates to the\n   * closest rendered portion of the annotation. -1 if the distance cannot be\n   * calculated.\n   */\n  // eslint-disable-next-line no-unused-vars\n  distanceFromPoint(element, data, coords) {\n    throw new Error(\n      `Method distanceFromPoint not implemented for ${this.name}.`\n    );\n  }\n\n  /**\n   * Used to redraw the tool's annotation data per render\n   *\n   * @abstract\n   * @param {*} evt\n   * @returns {void}\n   */\n  // eslint-disable-next-line no-unused-vars\n  renderToolData(evt) {\n    throw new Error(`renderToolData not implemented for ${this.name}.`);\n  }\n\n  // ===================================================================\n  // Virtual Methods - Have default behavior but may be overriden.\n  // ===================================================================\n\n  /**\n   * Event handler for MOUSE_MOVE event.\n   *\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {boolean} - True if the image needs to be updated\n   */\n  mouseMoveCallback(evt) {\n    const { element, currentPoints } = evt.detail;\n    const coords = currentPoints.canvas;\n    const toolState = getToolState(element, this.name);\n\n    let imageNeedsUpdate = false;\n\n    for (let d = 0; d < toolState.data.length; d++) {\n      const data = toolState.data[d];\n\n      // Hovering a handle?\n      if (handleActivator(element, data.handles, coords) === true) {\n        imageNeedsUpdate = true;\n      }\n\n      // Tool data's 'active' does not match coordinates\n      // TODO: can't we just do an if/else and save on a pointNearTool check?\n      const nearToolAndNotMarkedActive =\n        this.pointNearTool(element, data, coords, 'mouse') && !data.active;\n      const notNearToolAndMarkedActive =\n        !this.pointNearTool(element, data, coords, 'mouse') && data.active;\n\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n        data.active = !data.active;\n        imageNeedsUpdate = true;\n      }\n    }\n\n    return imageNeedsUpdate;\n  }\n\n  /**\n   * Custom callback for when a handle is selected.\n   * @method handleSelectedCallback\n   * @memberof Tools.Base.BaseAnnotationTool\n   *\n   * @param  {*} evt    -\n   * @param  {*} toolData   -\n   * @param  {*} handle - The selected handle.\n   * @param  {String} interactionType -\n   * @returns {void}\n   */\n  handleSelectedCallback(evt, toolData, handle, interactionType = 'mouse') {\n    moveHandleNearImagePoint(evt, this, toolData, handle, interactionType);\n  }\n\n  /**\n   * Custom callback for when a tool is selected.\n   *\n   * @method toolSelectedCallback\n   * @memberof Tools.Base.BaseAnnotationTool\n   *\n   * @param  {*} evt\n   * @param  {*} annotation\n   * @param  {string} [interactionType=mouse]\n   * @returns {void}\n   */\n  toolSelectedCallback(evt, annotation, interactionType = 'mouse') {\n    moveAnnotation(evt, this, annotation, interactionType);\n  }\n\n  /**\n   * Updates cached statistics for the tool's annotation data on the element\n   *\n   * @param {*} image\n   * @param {*} element\n   * @param {*} data\n   * @returns {void}\n   */\n  updateCachedStats(image, element, data) {\n    // eslint-disable-line\n    logger.warn(`updateCachedStats not implemented for ${this.name}.`);\n  }\n}\n\nexport default BaseAnnotationTool;\n","import external from '../externalModules.js';\n\n/**\n * Calculates the distance of a line segment from a point.\n * @export @public @method\n * @name lineSegDistance\n *\n * @param  {HTMLElement} element The element.\n * @param  {Object} start   The starting position of the line.\n * @param  {Object} end     The end position of the line.\n * @param  {Object} coords  The coordinates of the point.\n * @returns {name}         The distance between the line and the point.\n */\nexport default function(element, start, end, coords) {\n  const cornerstone = external.cornerstone;\n\n  const lineSegment = {\n    start: cornerstone.pixelToCanvas(element, start),\n    end: cornerstone.pixelToCanvas(element, end),\n  };\n\n  return external.cornerstoneMath.lineSegment.distanceToPoint(\n    lineSegment,\n    coords\n  );\n}\n","/**\n * Rounds a number to the specified precision.\n * @export @public @method\n * @name roundToDecimal\n *\n * @param  {number} value     The value to round.\n * @param  {number} precision The required precision.\n * @returns {number}           The rounded number.\n */\nexport default function(value, precision) {\n  const multiplier = Math.pow(10, precision);\n\n  return Math.round(value * multiplier) / multiplier;\n}\n","import toolColors from '../../stateManagement/toolColors.js';\nimport { modules } from '../../store/index.js';\n\nconst cursorModule = modules.cursor;\n\n/* eslint-disable valid-jsdoc */\n\n/*\nMACROS - The following keys will have the appropriate value injected when\nan SVG is requested:\n\n- ACTIVE_COLOR  => options.activeColor || toolColors.getActiveColor();\n- TOOL_COLOR    => options.toolColor || toolColors.getToolColor();\n- FILL_COLOR    => options.fillColor || toolColors.getFillColor();\n*/\n\nexport default class MouseCursor {\n  constructor(iconGroupString, options) {\n    this.iconGroupString = iconGroupString;\n    this.options = Object.assign(\n      {},\n      cursorModule.getters.defaultOptions(),\n      options\n    );\n  }\n\n  /**\n   * Returns an SVG of the icon only.\n   *\n   * @param  {Object} options - An object which overrides default properties of the returned SVG.\n   * @returns {Blob} The SVG of the icon.\n   */\n  getIconSVG(options = {}) {\n    const svgString = this._generateIconSVGString(options);\n\n    return new Blob([svgString], { type: 'image/svg+xml' });\n  }\n\n  /**\n   *  Returns a string representation of the SVG of the icon only.\n   *\n   * @param  {Object} options - An object which overrides default properties of the returned SVG.\n   * @returns {string} The stringified SVG of the icon.\n   */\n  getIconSVGString(options = {}) {\n    return this._generateIconSVGString(options);\n  }\n\n  /**\n   * Returns an SVG of the icon + pointer.\n   *\n   * @param  {Object} options - An object which overrides default properties of the returned SVG.\n   * @returns {Blob} The SVG of the icon + pointer..\n   */\n  getIconWithPointerSVG(options = {}) {\n    const svgString = this._generateIconWithPointerSVGString(options);\n\n    return new Blob([svgString], { type: 'image/svg+xml' });\n  }\n\n  /**\n   * Returns a string representation of the SVG of the icon + pointer.\n   *\n   * @param  {Object} options - An object which overrides default properties of the returned SVG.\n   * @returns {string} The stringified SVG of the icon + pointer.\n   */\n  getIconWithPointerString(options = {}) {\n    return this._generateIconWithPointerSVGString(options);\n  }\n\n  /**\n   * Returns the mousePoint as a space seperated string.\n   *\n   * @returns {string} The mousePoint.\n   */\n  get mousePoint() {\n    const mousePoint = this.options.mousePoint;\n\n    return `${mousePoint.x} ${mousePoint.y}`;\n  }\n\n  /**\n   * Generates a string representation of the icon + pointer.\n   *\n   * @param  {Object} options - An object which overrides default properties of the returned string.\n   * @returns {string} The SVG as a string.\n   */\n  _generateIconWithPointerSVGString(options = {}) {\n    const svgOptions = Object.assign({}, this.options, options);\n    const { mousePointerGroupString, iconSize, viewBox } = svgOptions;\n\n    const scale = iconSize / Math.max(viewBox.x, viewBox.y);\n    const svgSize = 16 + iconSize;\n\n    const svgString = `\n        <svg\n        data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"${svgSize}\" height=\"${svgSize}\" viewBox=\"0 0 ${svgSize} ${svgSize}\"\n      >\n        <g>\n          ${mousePointerGroupString}\n        </g>\n        <g transform=\"translate(16, 16) scale(${scale})\">\n          ${this.iconGroupString}\n        </g>\n      </svg>`;\n\n    return this._injectColors(svgString, svgOptions);\n  }\n\n  /**\n   * Generates a string representation of the icon.\n   *\n   * @param  {Object} options - An object which overrides default properties of the returned string.\n   * @returns {string} The SVG as a string.\n   */\n  _generateIconSVGString(options = {}) {\n    const svgOptions = Object.assign({}, this.options, options);\n    const { iconSize, viewBox } = svgOptions;\n\n    const svgString = `\n      <svg\n        data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"${iconSize}\" height=\"${iconSize}\" viewBox=\"0 0\n        ${viewBox.x} ${viewBox.y}\"\n      >\n        ${this.iconGroupString}\n      </svg>`;\n\n    return this._injectColors(svgString, svgOptions);\n  }\n\n  /**\n   * Replaces ACTIVE_COLOR, TOOL_COLOR and FILL_COLOR in svgString with their appropriate values.\n   *\n   * @param  {string} svgString - The string to modify.\n   * @param  {Object} options - Optional overrides for the colors.\n   * @returns {string} The string with color values injected.\n   */\n  _injectColors(svgString, options = {}) {\n    const activeColor = options.activeColor || toolColors.getActiveColor();\n    const toolColor = options.toolColor || toolColors.getToolColor();\n    const fillColor = options.fillColor || toolColors.getFillColor();\n\n    return svgString\n      .replace(/ACTIVE_COLOR/g, `${activeColor}`)\n      .replace(/TOOL_COLOR/g, `${toolColor}`)\n      .replace(/FILL_COLOR/g, `${fillColor}`);\n  }\n}\n","import MouseCursor from './MouseCursor.js';\n\n/*\nMACROS:\n\nThe following keys will have the appropriate value injected by the MouseCursor\nclass when an SVG is requested:\n\n- ACTIVE_COLOR  => options.activeColor || toolColors.getActiveColor();\n- TOOL_COLOR    => options.toolColor || toolColors.getToolColor();\n- FILL_COLOR    => options.fillColor || toolColors.getFillColor();\n*/\n\nexport const angleCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n        50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n        10l50 50q10 10 10 23z\"\n      />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const arrowAnnotateCursor = new MouseCursor(\n  `<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"ACTIVE_COLOR\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>`,\n  {\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }\n);\n\nexport const bidirectionalCursor = new MouseCursor(\n  `<g fill=\"ACTIVE_COLOR\" stroke-width=\"3\" stroke=\"ACTIVE_COLOR\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>`,\n  {\n    viewBox: {\n      x: 48,\n      y: 48,\n    },\n  }\n);\n\nexport const cobbAngleCursor = new MouseCursor(\n  `<g stroke=\"ACTIVE_COLOR\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>`,\n  {\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }\n);\n\nexport const circleRoiCursor = new MouseCursor(\n  `<circle stroke=\"ACTIVE_COLOR\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />`,\n  {\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }\n);\n\nexport const ellipticalRoiCursor = new MouseCursor(\n  `<path stroke=\"ACTIVE_COLOR\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\"\n    />`,\n  {\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }\n);\n\nexport const freehandRoiCursor = new MouseCursor(\n  `\n  <g fill=\"ACTIVE_COLOR\" stroke=\"ACTIVE_COLOR\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>`,\n  {\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }\n);\n\nexport const freehandRoiSculptorCursor = new MouseCursor(\n  `<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"ACTIVE_COLOR\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n      <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n      <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n      <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n      <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n      <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n      <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n      <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n      <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n      <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n      <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n      <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n      <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n      <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n      <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n      <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n      <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n      <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n      <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n      <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n      <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n      <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n      <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n      <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n      <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n      <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n      <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n      <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n      <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n      <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n      <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n      <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n    </g>`,\n  {\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }\n);\n\nexport const lengthCursor = new MouseCursor(\n  `<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"ACTIVE_COLOR\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>`,\n  {\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }\n);\n\nexport const probeCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\"\n  />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const rectangleRoiCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\"\n  />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const textMarkerCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\"\n  />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const crosshairsCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\"\n  />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const eraserCursor = new MouseCursor(\n  `<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"ACTIVE_COLOR\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n      34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n      0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n      0 69.5 20.5t47.5 54.5z\"\n    />`,\n  {\n    viewBox: {\n      x: 2048,\n      y: 1792,\n    },\n  }\n);\n\nexport const magnifyCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n      312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n      0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n      0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n      32s176 78.7 176 176-78.7 176-176 176z\"\n    />`,\n  {\n    viewBox: {\n      x: 512,\n      y: 512,\n    },\n  }\n);\n\nexport const panCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n      39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n      355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n      39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n      0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n      144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n      45v448q0 42-39 59-13 5-25 5-26 0-45-19z\"\n    />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const rotateCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n      14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n      163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n      225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n      132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n      164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n      39 17 39 59z\"\n    />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const stackScrollCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n      0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n      0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n      0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n      0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\"\n      />`,\n  {\n    viewBox: {\n      x: 24,\n      y: 28,\n    },\n  }\n);\n\nexport const wwwcRegionCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\"\n  />`,\n  {\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }\n);\n\nexport const wwwcCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"ACTIVE_COLOR\" />`,\n  {\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }\n);\n\nexport const zoomCursor = new MouseCursor(\n  `<path fill=\"ACTIVE_COLOR\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n      312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n      0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n      0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n      32s176 78.7 176 176-78.7 176-176 176z\"\n    />\n    <path fill=\"ACTIVE_COLOR\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n      320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n      19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n      0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\"\n    />`,\n  {\n    viewBox: {\n      x: 640,\n      y: 512,\n    },\n  }\n);\n\nconst segToolCursorBoundaries = {\n  x: 127,\n  y: 60,\n};\n\nconst minusRect = (color = 'ACTIVE_COLOR') =>\n  `<rect fill=\"${color}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>`;\n\nconst plusRect = (\n  color = 'ACTIVE_COLOR'\n) => `<rect fill=\"${color}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n      <rect fill=\"${color}\" x=\"95.84\" y=\"9.38\" width=\"15.85\" height=\"47.14\"/>`;\n\nconst scissorIcon = `<path fill=\"ACTIVE_COLOR\" d=\"M82.89,10a12.09,12.09,0,0,0-16.8-2.5l-27.5,20.4-8.5-6.3a2.93,2.93,0,0,1-1.1-3,14.66,14.66,0,0,0,.1-6.6,14.08,14.08,0,1,0-6.5,15.2,2.87,2.87,0,0,1,3.2.2l8.2,6.1-8.2,6.1a2.87,2.87,0,0,1-3.2.2,14.16,14.16,0,1,0,6.7,14.4,14,14,0,0,0-.3-5.8,2.93,2.93,0,0,1,1.1-3l8.5-6.3,27.5,20.4A11.91,11.91,0,0,0,82.89,57l-31.7-23.5ZM15.29,21a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,21Zm0,36.8a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,57.77Zm28.3-21.5a2.8,2.8,0,1,1,2.8-2.8A2.8,2.8,0,0,1,43.59,36.27Z\" transform=\"translate(-1.17 -0.96)\"/>`;\nconst rectangleIcon = `<path fill=\"ACTIVE_COLOR\" d=\"M8.86,2.25V66.08H72.69V2.25H8.86ZM65.28,58.67h-49v-49h49v49Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst circleIcon = `<path fill=\"ACTIVE_COLOR\" d=\"M40.77,2.25A31.92,31.92,0,1,0,72.69,34.16,31.92,31.92,0,0,0,40.77,2.25Zm0,57.63A25.71,25.71,0,1,1,66.48,34.16,25.71,25.71,0,0,1,40.77,59.87Z\" transform=\"translate(-8.86 -2.25)\"/>`;\n\nexport const freehandEraseInsideCursor = new MouseCursor(\n  `${scissorIcon} ${minusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const freehandFillInsideCursor = new MouseCursor(\n  `${scissorIcon} ${plusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const freehandEraseOutsideCursor = new MouseCursor(\n  `${scissorIcon} ${minusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const freehandFillOutsideCursor = new MouseCursor(\n  `${scissorIcon} ${plusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segRectangleEraseInsideCursor = new MouseCursor(\n  `${rectangleIcon} ${minusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segRectangleFillInsideCursor = new MouseCursor(\n  `${rectangleIcon} ${plusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segRectangleEraseOutsideCursor = new MouseCursor(\n  `${rectangleIcon} ${minusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segRectangleFillOutsideCursor = new MouseCursor(\n  `${rectangleIcon} ${plusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segCircleEraseInsideCursor = new MouseCursor(\n  `${circleIcon} ${minusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segCircleFillInsideCursor = new MouseCursor(\n  `${circleIcon} ${plusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segCircleEraseOutsideCursor = new MouseCursor(\n  `${circleIcon} ${minusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n\nexport const segCircleFillOutsideCursor = new MouseCursor(\n  `${circleIcon} ${plusRect()}`,\n  {\n    viewBox: segToolCursorBoundaries,\n  }\n);\n","import external from '../externalModules';\n\nexport default function getPixelSpacing(image) {\n  const imagePlane = external.cornerstone.metaData.get(\n    'imagePlaneModule',\n    image.imageId\n  );\n\n  if (imagePlane) {\n    return {\n      rowPixelSpacing:\n        imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing,\n      colPixelSpacing:\n        imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing,\n    };\n  }\n\n  return {\n    rowPixelSpacing: image.rowPixelSpacing,\n    colPixelSpacing: image.columnPixelSpacing,\n  };\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * isObject({})\n * // => true\n *\n * isObject([1, 2, 3])\n * // => true\n *\n * isObject(Function)\n * // => true\n *\n * isObject(null)\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n\n  return value !== null && (type === 'object' || type === 'function');\n}\n\nexport default isObject;\n","import isObject from './isObject.js';\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', debounce(calculateLayout, 150))\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }))\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = debounce(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * jQuery(source).on('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nfunction debounce(func, wait, options) {\n  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;\n\n  let lastInvokeTime = 0;\n  let leading = false;\n  let maxing = false;\n  let trailing = true;\n\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF =\n    !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  wait = Number(wait) || 0;\n  if (isObject(options)) {\n    leading = Boolean(options.leading);\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  function invokeFunc(time) {\n    const args = lastArgs;\n    const thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n\n    return result;\n  }\n\n  function startTimer(pendingFunc, wait) {\n    if (useRAF) {\n      return window.requestAnimationFrame(pendingFunc);\n    }\n\n    return setTimeout(pendingFunc, wait);\n  }\n\n  function cancelTimer(id) {\n    if (useRAF) {\n      return window.cancelAnimationFrame(id);\n    }\n    clearTimeout(id);\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = startTimer(timerExpired, wait);\n\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (\n      lastCallTime === undefined ||\n      timeSinceLastCall >= wait ||\n      timeSinceLastCall < 0 ||\n      (maxing && timeSinceLastInvoke >= maxWait)\n    );\n  }\n\n  function timerExpired() {\n    const time = Date.now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = startTimer(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      cancelTimer(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Date.now());\n  }\n\n  function pending() {\n    return timerId !== undefined;\n  }\n\n  function debounced(...args) {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n\n    lastArgs = args;\n    lastThis = this; // eslint-disable-line consistent-this\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = startTimer(timerExpired, wait);\n\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = startTimer(timerExpired, wait);\n    }\n\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  debounced.pending = pending;\n\n  return debounced;\n}\n\nexport default debounce;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame). The throttled function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', throttle(updatePosition, 100))\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const throttled = throttle(renewToken, 300000, { 'trailing': false })\n * jQuery(element).on('click', throttled)\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel)\n */\nfunction throttle(func, wait, options) {\n  let leading = true;\n  let trailing = true;\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? Boolean(options.leading) : leading;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    maxWait: wait,\n  });\n}\n\nexport default throttle;\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport {\n  addToolState,\n  getToolState,\n} from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n// Manipulators\nimport { moveNewHandle } from './../../manipulators/index.js';\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawJoinedLines,\n} from './../../drawing/index.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport { textBoxWidth } from './../../drawing/drawTextBox.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport roundToDecimal from './../../util/roundToDecimal.js';\nimport { angleCursor } from '../cursors/index.js';\nimport triggerEvent from '../../util/triggerEvent.js';\nimport EVENTS from '../../events.js';\nimport getPixelSpacing from '../../util/getPixelSpacing';\nimport throttle from '../../util/throttle';\n\n/**\n * @public\n * @class AngleTool\n * @memberof Tools.Annotation\n * @classdesc Create and position an angle by placing three consecutive points.\n * @extends Tools.Base.BaseAnnotationTool\n * @hideconstructor\n *\n * @param {ToolConfiguration} [props={}]\n */\nexport default class AngleTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Angle',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: angleCursor,\n      configuration: {\n        drawHandles: true,\n      },\n    };\n\n    super(props, defaultProps);\n\n    this.preventNewMeasurement = false;\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    // Create the measurement data for this tool with the end handle activated\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        middle: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords) {\n    if (data.visible === false) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(\n        element,\n        data.handles.start,\n        data.handles.middle,\n        coords\n      ) < 25 ||\n      lineSegDistance(element, data.handles.middle, data.handles.end, coords) <\n        25\n    );\n  }\n\n  updateCachedStats(image, element, data) {\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    const sideA = {\n      x: (data.handles.middle.x - data.handles.start.x) * colPixelSpacing,\n      y: (data.handles.middle.y - data.handles.start.y) * rowPixelSpacing,\n    };\n\n    const sideB = {\n      x: (data.handles.end.x - data.handles.middle.x) * colPixelSpacing,\n      y: (data.handles.end.y - data.handles.middle.y) * rowPixelSpacing,\n    };\n\n    const sideC = {\n      x: (data.handles.end.x - data.handles.start.x) * colPixelSpacing,\n      y: (data.handles.end.y - data.handles.start.y) * rowPixelSpacing,\n    };\n\n    const sideALength = length(sideA);\n    const sideBLength = length(sideB);\n    const sideCLength = length(sideC);\n\n    // Cosine law\n    let angle = Math.acos(\n      (Math.pow(sideALength, 2) +\n        Math.pow(sideBLength, 2) -\n        Math.pow(sideCLength, 2)) /\n        (2 * sideALength * sideBLength)\n    );\n\n    angle *= 180 / Math.PI;\n\n    data.rAngle = roundToDecimal(angle, 2);\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const enabledElement = eventData.enabledElement;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    // If we have no toolData for this element, return immediately as there is nothing to do\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, element } = eventData;\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    const lineWidth = toolStyle.getToolWidth();\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        setShadow(context, this.configuration);\n\n        // Differentiate the color of activation tool\n        const color = toolColors.getColorIfActive(data);\n\n        const handleStartCanvas = external.cornerstone.pixelToCanvas(\n          eventData.element,\n          data.handles.start\n        );\n        const handleMiddleCanvas = external.cornerstone.pixelToCanvas(\n          eventData.element,\n          data.handles.middle\n        );\n\n        drawJoinedLines(\n          context,\n          eventData.element,\n          data.handles.start,\n          [data.handles.middle, data.handles.end],\n          { color }\n        );\n\n        // Draw the handles\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        if (this.configuration.drawHandles) {\n          drawHandles(context, eventData, data.handles, handleOptions);\n        }\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.rAngle) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        if (data.rAngle) {\n          const text = textBoxText(data, rowPixelSpacing, colPixelSpacing);\n\n          const distance = 15;\n\n          let textCoords;\n\n          if (!data.handles.textBox.hasMoved) {\n            textCoords = {\n              x: handleMiddleCanvas.x,\n              y: handleMiddleCanvas.y,\n            };\n\n            const padding = 5;\n            const textWidth = textBoxWidth(context, text, padding);\n\n            if (handleMiddleCanvas.x < handleStartCanvas.x) {\n              textCoords.x -= distance + textWidth + 10;\n            } else {\n              textCoords.x += distance;\n            }\n\n            const transform = external.cornerstone.internal.getTransform(\n              enabledElement\n            );\n\n            transform.invert();\n\n            const coords = transform.transformPoint(textCoords.x, textCoords.y);\n\n            data.handles.textBox.x = coords.x;\n            data.handles.textBox.y = coords.y;\n          }\n\n          drawLinkedTextBox(\n            context,\n            eventData.element,\n            data.handles.textBox,\n            text,\n            data.handles,\n            textBoxAnchorPoints,\n            color,\n            lineWidth,\n            0,\n            true\n          );\n        }\n      });\n    }\n\n    function textBoxText(data, rowPixelSpacing, colPixelSpacing) {\n      const suffix = !rowPixelSpacing || !colPixelSpacing ? ' (isotropic)' : '';\n      const str = '00B0'; // Degrees symbol\n\n      return (\n        data.rAngle.toString() + String.fromCharCode(parseInt(str, 16)) + suffix\n      );\n    }\n\n    function textBoxAnchorPoints(handles) {\n      return [handles.start, handles.middle, handles.end];\n    }\n  }\n\n  addNewMeasurement(evt, interactionType) {\n    if (this.preventNewMeasurement) {\n      return;\n    }\n\n    this.preventNewMeasurement = true;\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const eventData = evt.detail;\n    const measurementData = this.createNewMeasurement(eventData);\n    const element = evt.detail.element;\n\n    // Associate this data with this imageId so we can render it and manipulate it\n    addToolState(element, this.name, measurementData);\n    external.cornerstone.updateImage(element);\n\n    // Step 1, create start and second middle.\n    moveNewHandle(\n      eventData,\n      this.name,\n      measurementData,\n      measurementData.handles.middle,\n      this.options,\n      interactionType,\n      () => {\n        measurementData.active = false;\n        measurementData.handles.end.active = true;\n\n        external.cornerstone.updateImage(element);\n\n        // Step 2, create end.\n        moveNewHandle(\n          eventData,\n          this.name,\n          measurementData,\n          measurementData.handles.end,\n          this.options,\n          interactionType,\n          () => {\n            measurementData.active = false;\n            this.preventNewMeasurement = false;\n            external.cornerstone.updateImage(element);\n          }\n        );\n      }\n    );\n  }\n}\n\nfunction length(vector) {\n  return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n}\n","/* eslint no-alert: 0 */\nimport external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\nimport EVENTS from './../../events.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport textStyle from './../../stateManagement/textStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\nimport { moveNewHandle } from './../../manipulators/index.js';\nimport pointInsideBoundingBox from './../../util/pointInsideBoundingBox.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport triggerEvent from './../../util/triggerEvent.js';\n\nimport {\n  addToolState,\n  removeToolState,\n  getToolState,\n} from './../../stateManagement/toolState.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport { getNewContext, draw, setShadow } from './../../drawing/index.js';\nimport drawArrow from './../../drawing/drawArrow.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport { textBoxWidth } from './../../drawing/drawTextBox.js';\nimport { arrowAnnotateCursor } from '../cursors/index.js';\n\n/**\n * @public\n * @class ArrowAnnotateTool\n * @memberof Tools.Annotation\n * @classdesc Create and position an arrow and label\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class ArrowAnnotateTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'ArrowAnnotate',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        getTextCallback,\n        changeTextCallback,\n        drawHandles: false,\n        drawHandlesOnHover: true,\n        arrowFirst: true,\n      },\n      svgCursor: arrowAnnotateCursor,\n    };\n\n    super(props, defaultProps);\n    this.preventNewMeasurement = false;\n  }\n\n  createNewMeasurement(evt) {\n    // Create the measurement data for this tool with the end handle activated\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      handles: {\n        start: {\n          x: evt.detail.currentPoints.image.x,\n          y: evt.detail.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: evt.detail.currentPoints.image.x,\n          y: evt.detail.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords) {\n    if (data.visible === false) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(element, data.handles.start, data.handles.end, coords) <\n      25\n    );\n  }\n\n  updateCachedStats() {\n    // Implementing to satisfy BaseAnnotationTool\n  }\n\n  renderToolData(evt) {\n    const { element, enabledElement } = evt.detail;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n\n    // If we have no toolData for this element, return immediately as there is nothing to do\n    const toolData = getToolState(element, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const canvas = evt.detail.canvasContext.canvas;\n    const context = getNewContext(canvas);\n\n    const lineWidth = toolStyle.getToolWidth();\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        setShadow(context, this.configuration);\n\n        const color = toolColors.getColorIfActive(data);\n\n        // Draw the arrow\n        const handleStartCanvas = external.cornerstone.pixelToCanvas(\n          element,\n          data.handles.start\n        );\n        const handleEndCanvas = external.cornerstone.pixelToCanvas(\n          element,\n          data.handles.end\n        );\n\n        // Config.arrowFirst = false;\n        if (this.configuration.arrowFirst) {\n          drawArrow(\n            context,\n            handleEndCanvas,\n            handleStartCanvas,\n            color,\n            lineWidth\n          );\n        } else {\n          drawArrow(\n            context,\n            handleStartCanvas,\n            handleEndCanvas,\n            color,\n            lineWidth\n          );\n        }\n\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        if (this.configuration.drawHandles) {\n          drawHandles(context, evt.detail, data.handles, handleOptions);\n        }\n\n        const text = textBoxText(data);\n\n        // Draw the text\n        if (text && text !== '') {\n          // Calculate the text coordinates.\n          const padding = 5;\n          const textWidth = textBoxWidth(context, text, padding);\n          const textHeight = textStyle.getFontSize() + 10;\n\n          let distance = Math.max(textWidth, textHeight) / 2 + 5;\n\n          if (handleEndCanvas.x < handleStartCanvas.x) {\n            distance = -distance;\n          }\n\n          if (!data.handles.textBox.hasMoved) {\n            let textCoords;\n\n            if (this.configuration.arrowFirst) {\n              textCoords = {\n                x: handleEndCanvas.x - textWidth / 2 + distance,\n                y: handleEndCanvas.y - textHeight / 2,\n              };\n            } else {\n              // If the arrow is at the End position, the text should\n              // Be placed near the Start position\n              textCoords = {\n                x: handleStartCanvas.x - textWidth / 2 - distance,\n                y: handleStartCanvas.y - textHeight / 2,\n              };\n            }\n\n            const transform = external.cornerstone.internal.getTransform(\n              enabledElement\n            );\n\n            transform.invert();\n\n            const coords = transform.transformPoint(textCoords.x, textCoords.y);\n\n            data.handles.textBox.x = coords.x;\n            data.handles.textBox.y = coords.y;\n          }\n\n          drawLinkedTextBox(\n            context,\n            element,\n            data.handles.textBox,\n            text,\n            data.handles,\n            textBoxAnchorPoints,\n            color,\n            lineWidth,\n            0,\n            false\n          );\n        }\n      });\n    }\n\n    function textBoxText(data) {\n      return data.text;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      const midpoint = {\n        x: (handles.start.x + handles.end.x) / 2,\n        y: (handles.start.y + handles.end.y) / 2,\n      };\n\n      return [handles.start, midpoint, handles.end];\n    }\n  }\n\n  addNewMeasurement(evt, interactionType) {\n    const element = evt.detail.element;\n    const measurementData = this.createNewMeasurement(evt);\n\n    // Associate this data with this imageId so we can render it and manipulate it\n    addToolState(element, this.name, measurementData);\n    external.cornerstone.updateImage(element);\n\n    moveNewHandle(\n      evt.detail,\n      this.name,\n      measurementData,\n      measurementData.handles.end,\n      this.options,\n      interactionType,\n      () => {\n        if (measurementData.text === undefined) {\n          this.configuration.getTextCallback(text => {\n            if (text) {\n              measurementData.text = text;\n            } else {\n              removeToolState(element, this.name, measurementData);\n            }\n\n            measurementData.active = false;\n            external.cornerstone.updateImage(element);\n\n            triggerEvent(element, EVENTS.MEASUREMENT_MODIFIED, {\n              toolType: this.name,\n              element,\n              measurementData,\n            });\n          }, evt.detail);\n        }\n        external.cornerstone.updateImage(element);\n      }\n    );\n  }\n\n  doubleClickCallback(evt) {\n    return this._updateTextForNearbyAnnotation(evt);\n  }\n\n  touchPressCallback(evt) {\n    return this._updateTextForNearbyAnnotation(evt);\n  }\n\n  _updateTextForNearbyAnnotation(evt) {\n    const element = evt.detail.element;\n    const coords = evt.detail.currentPoints.canvas;\n    const toolState = getToolState(element, this.name);\n\n    if (!toolState) {\n      return false;\n    }\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      const data = toolState.data[i];\n\n      if (\n        this.pointNearTool(element, data, coords) ||\n        pointInsideBoundingBox(data.handles.textBox, coords)\n      ) {\n        data.active = true;\n        external.cornerstone.updateImage(element);\n\n        // Allow relabelling via a callback\n        this.configuration.changeTextCallback(\n          data,\n          evt.detail,\n          this._doneChangingTextCallback.bind(this, element, data)\n        );\n\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        return true;\n      }\n    }\n  }\n\n  _doneChangingTextCallback(element, measurementData, updatedText, deleteTool) {\n    if (deleteTool === true) {\n      removeToolState(element, this.name, measurementData);\n    } else {\n      measurementData.text = updatedText;\n    }\n\n    measurementData.active = false;\n    external.cornerstone.updateImage(element);\n\n    triggerEvent(element, EVENTS.MEASUREMENT_MODIFIED, {\n      toolType: this.name,\n      element,\n      measurementData,\n    });\n  }\n}\n\nfunction getTextCallback(doneChangingTextCallback) {\n  doneChangingTextCallback(prompt('Enter your annotation:'));\n}\n\nfunction changeTextCallback(data, eventData, doneChangingTextCallback) {\n  doneChangingTextCallback(prompt('Change your annotation:'));\n}\n","const getHandle = (x, y, index, extraAttributes = {}) =>\n  Object.assign(\n    {\n      x,\n      y,\n      index,\n      drawnIndependently: false,\n      allowedOutsideImage: false,\n      highlight: true,\n      active: false,\n    },\n    extraAttributes\n  );\n\nexport default function(mouseEventData) {\n  const { x, y } = mouseEventData.currentPoints.image;\n  // Create the measurement data for this tool with the end handle activated\n  const measurementData = {\n    toolType: this.name,\n    isCreating: true,\n    visible: true,\n    active: true,\n    invalidated: true,\n    handles: {\n      start: getHandle(x, y, 0),\n      end: getHandle(x, y, 1, { active: true }),\n      perpendicularStart: getHandle(x, y, 2, { locked: true }),\n      perpendicularEnd: getHandle(x, y, 3),\n      textBox: getHandle(x - 50, y - 70, null, {\n        highlight: false,\n        hasMoved: true,\n        active: false,\n        movesIndependently: false,\n        drawnIndependently: true,\n        allowedOutsideImage: true,\n        hasBoundingBox: true,\n      }),\n    },\n    longestDiameter: 0,\n    shortestDiameter: 0,\n  };\n\n  return measurementData;\n}\n","import { state } from '../../../store/index.js';\nimport external from './../../../externalModules.js';\nimport pointInsideBoundingBox from './../../../util/pointInsideBoundingBox.js';\n\nconst pointNearPerpendicular = (\n  element,\n  handles,\n  coords,\n  distanceThreshold\n) => {\n  const cornerstone = external.cornerstone;\n  const cornerstoneMath = external.cornerstoneMath;\n  const lineSegment = {\n    start: cornerstone.pixelToCanvas(element, handles.perpendicularStart),\n    end: cornerstone.pixelToCanvas(element, handles.perpendicularEnd),\n  };\n\n  const distanceToPoint = cornerstoneMath.lineSegment.distanceToPoint(\n    lineSegment,\n    coords\n  );\n\n  return distanceToPoint < distanceThreshold;\n};\n\nexport default function(element, data, coords, interactionType = 'mouse') {\n  const cornerstone = external.cornerstone;\n  const cornerstoneMath = external.cornerstoneMath;\n  const { handles } = data;\n  const lineSegment = {\n    start: cornerstone.pixelToCanvas(element, handles.start),\n    end: cornerstone.pixelToCanvas(element, handles.end),\n  };\n\n  const distanceToPoint = cornerstoneMath.lineSegment.distanceToPoint(\n    lineSegment,\n    coords\n  );\n\n  if (pointInsideBoundingBox(handles.textBox, coords)) {\n    return true;\n  }\n\n  const distanceThreshold =\n    interactionType === 'mouse' ? state.clickProximity : state.touchProximity;\n\n  if (pointNearPerpendicular(element, handles, coords, distanceThreshold)) {\n    return true;\n  }\n\n  return distanceToPoint < distanceThreshold;\n}\n","/**\n * Return the Vector of a line which determines its inclination and length\n *\n * @param {number} columnPixelSpacing Width that a pixel represents in mm\n * @param {number} rowPixelSpacing Height that a pixel represents in mm\n * @param {*} startPoint Start point of the line\n * @param {*} endPoint End point of the line\n *\n * @returns {*} Resulting line inclination vector\n */\nexport default function getLineVector(\n  columnPixelSpacing,\n  rowPixelSpacing,\n  startPoint,\n  endPoint\n) {\n  const dx = (startPoint.x - endPoint.x) * columnPixelSpacing;\n  const dy = (startPoint.y - endPoint.y) * rowPixelSpacing;\n  const length = Math.sqrt(dx * dx + dy * dy);\n  const vectorX = dx / length;\n  const vectorY = dy / length;\n\n  return {\n    x: vectorX,\n    y: vectorY,\n    length,\n  };\n}\n","import getLineVector from './getLineVector';\n\n/**\n * Update the perpendicular line handles when the measurement is being created.\n * This method will make the perpendicular line intersect in the middle of the\n * long line and assume half the size of the long line.\n *\n * @param {*} eventData Data object associated with the event\n * @param {*} measurementData Data from current bidirectional tool measurement\n *\n * @returns {boolean} False in case the handle is not locked or true when moved\n */\nexport default function updatePerpendicularLineHandles(\n  eventData,\n  measurementData\n) {\n  if (!measurementData.handles.perpendicularStart.locked) {\n    return false;\n  }\n\n  let startX, startY, endX, endY;\n\n  const { start, end } = measurementData.handles;\n  const { columnPixelSpacing = 1, rowPixelSpacing = 1 } = eventData.image;\n\n  if (start.x === end.x && start.y === end.y) {\n    startX = start.x;\n    startY = start.y;\n    endX = end.x;\n    endY = end.y;\n  } else {\n    // Mid point of long-axis line\n    const mid = {\n      x: (start.x + end.x) / 2,\n      y: (start.y + end.y) / 2,\n    };\n\n    // Inclination of the perpendicular line\n    const vector = getLineVector(\n      columnPixelSpacing,\n      rowPixelSpacing,\n      start,\n      end\n    );\n\n    const perpendicularLineLength = vector.length / 2;\n    const rowMultiplier = perpendicularLineLength / (2 * rowPixelSpacing);\n    const columnMultiplier = perpendicularLineLength / (2 * columnPixelSpacing);\n\n    startX = mid.x + columnMultiplier * vector.y;\n    startY = mid.y - rowMultiplier * vector.x;\n    endX = mid.x - columnMultiplier * vector.y;\n    endY = mid.y + rowMultiplier * vector.x;\n  }\n\n  measurementData.handles.perpendicularStart.x = startX;\n  measurementData.handles.perpendicularStart.y = startY;\n  measurementData.handles.perpendicularEnd.x = endX;\n  measurementData.handles.perpendicularEnd.y = endY;\n\n  return true;\n}\n","/* eslint no-loop-func: 0 */ // --> OFF\nimport drawHandles from './../../../drawing/drawHandles.js';\nimport updatePerpendicularLineHandles from './utils/updatePerpendicularLineHandles.js';\n\nimport toolStyle from './../../../stateManagement/toolStyle.js';\nimport toolColors from './../../../stateManagement/toolColors.js';\nimport { getToolState } from './../../../stateManagement/toolState.js';\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawLine,\n} from './../../../drawing/index.js';\nimport drawLinkedTextBox from './../../../drawing/drawLinkedTextBox.js';\nimport getPixelSpacing from '../../../util/getPixelSpacing';\n\nexport default function(evt) {\n  const eventData = evt.detail;\n  const { element, canvasContext, image } = eventData;\n  const { handleRadius, drawHandlesOnHover } = this.configuration;\n\n  // If we have no toolData for this element, return immediately as there is nothing to do\n  const toolData = getToolState(element, this.name);\n\n  if (!toolData) {\n    return;\n  }\n\n  const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n  // LT-29 Disable Target Measurements when pixel spacing is not available\n  if (!rowPixelSpacing || !colPixelSpacing) {\n    return;\n  }\n\n  // We have tool data for this element - iterate over each one and draw it\n  const context = getNewContext(canvasContext.canvas);\n\n  let color;\n  const activeColor = toolColors.getActiveColor();\n  const lineWidth = toolStyle.getToolWidth();\n\n  for (let i = 0; i < toolData.data.length; i++) {\n    const data = toolData.data[i];\n\n    if (data.visible === false) {\n      continue;\n    }\n\n    color = data.active ? activeColor : toolColors.getToolColor();\n\n    // Calculate the data measurements\n    if (data.invalidated === true) {\n      if (data.longestDiameter && data.shortestDiameter) {\n        this.throttledUpdateCachedStats(image, element, data);\n      } else {\n        this.updateCachedStats(image, element, data);\n      }\n    }\n\n    draw(context, context => {\n      // Configurable shadow\n      setShadow(context, this.configuration);\n\n      const {\n        start,\n        end,\n        perpendicularStart,\n        perpendicularEnd,\n        textBox,\n      } = data.handles;\n\n      // Draw the measurement line\n      drawLine(context, element, start, end, { color });\n\n      // Draw perpendicular line\n      const strokeWidth = lineWidth;\n\n      updatePerpendicularLineHandles(eventData, data);\n      drawLine(context, element, perpendicularStart, perpendicularEnd, {\n        color,\n        strokeWidth,\n      });\n\n      // Draw the handles\n      const handleOptions = {\n        color,\n        handleRadius,\n        drawHandlesIfActive: drawHandlesOnHover,\n      };\n\n      // Draw the handles\n      if (this.configuration.drawHandles) {\n        drawHandles(context, eventData, data.handles, handleOptions);\n      }\n\n      // Draw the textbox\n      // Move the textbox slightly to the right and upwards\n      // So that it sits beside the length tool handle\n      const xOffset = 10;\n      const textBoxAnchorPoints = handles => [\n        handles.start,\n        handles.end,\n        handles.perpendicularStart,\n        handles.perpendicularEnd,\n      ];\n      const textLines = getTextBoxText(data, rowPixelSpacing, colPixelSpacing);\n\n      drawLinkedTextBox(\n        context,\n        element,\n        textBox,\n        textLines,\n        data.handles,\n        textBoxAnchorPoints,\n        color,\n        lineWidth,\n        xOffset,\n        true\n      );\n    });\n  }\n}\n\nconst getTextBoxText = (data, rowPixelSpacing, colPixelSpacing) => {\n  let suffix = ' mm';\n\n  if (!rowPixelSpacing || !colPixelSpacing) {\n    suffix = ' pixels';\n  }\n\n  const lengthText = ` L ${data.longestDiameter}${suffix}`;\n  const widthText = ` W ${data.shortestDiameter}${suffix}`;\n\n  const { labels } = data;\n\n  if (labels && Array.isArray(labels)) {\n    return [...labels, lengthText, widthText];\n  }\n\n  return [lengthText, widthText];\n};\n","let coordsData;\n\nfunction setCoords(eventData) {\n  coordsData = eventData.currentPoints.canvas;\n}\n\nfunction getCoords() {\n  return coordsData;\n}\n\nconst toolCoordinates = {\n  setCoords,\n  getCoords,\n};\n\nexport default toolCoordinates;\n","import external from './../../../externalModules.js';\nimport EVENTS from './../../../events.js';\nimport { moveNewHandle } from './../../../manipulators/index.js';\nimport anyHandlesOutsideImage from './../../../manipulators/anyHandlesOutsideImage.js';\nimport {\n  addToolState,\n  removeToolState,\n} from './../../../stateManagement/toolState.js';\nimport triggerEvent from '../../../util/triggerEvent.js';\nimport getActiveTool from '../../../util/getActiveTool';\nimport BaseAnnotationTool from '../../base/BaseAnnotationTool';\nimport updatePerpendicularLineHandles from './utils/updatePerpendicularLineHandles.js';\n\nexport default function(evt, interactionType) {\n  const eventData = evt.detail;\n  const { element, image, buttons } = eventData;\n  const config = this.configuration;\n\n  if (checkPixelSpacing(image)) {\n    return;\n  }\n\n  const measurementData = this.createNewMeasurement(eventData);\n\n  const doneCallback = () => {\n    measurementData.active = false;\n    external.cornerstone.updateImage(element);\n  };\n\n  // Associate this data with this imageId so we can render it and manipulate it\n  addToolState(element, this.name, measurementData);\n  external.cornerstone.updateImage(element);\n\n  const timestamp = new Date().getTime();\n  const { end, perpendicularStart } = measurementData.handles;\n\n  moveNewHandle(\n    eventData,\n    this.name,\n    measurementData,\n    end,\n    {},\n    interactionType,\n    () => {\n      const { handles, longestDiameter, shortestDiameter } = measurementData;\n      const hasHandlesOutside = anyHandlesOutsideImage(eventData, handles);\n      const longestDiameterSize = parseFloat(longestDiameter) || 0;\n      const shortestDiameterSize = parseFloat(shortestDiameter) || 0;\n      const isTooSmal = longestDiameterSize < 1 || shortestDiameterSize < 1;\n      const isTooFast = new Date().getTime() - timestamp < 150;\n\n      if (hasHandlesOutside || isTooSmal || isTooFast) {\n        // Delete the measurement\n        measurementData.cancelled = true;\n        removeToolState(element, this.name, measurementData);\n      } else {\n        // Set lesionMeasurementData Session\n        config.getMeasurementLocationCallback(\n          measurementData,\n          eventData,\n          doneCallback\n        );\n      }\n\n      // Update perpendicular line and disconnect it from the long-line\n      updatePerpendicularLineHandles(eventData, measurementData);\n      perpendicularStart.locked = false;\n\n      measurementData.invalidated = true;\n\n      external.cornerstone.updateImage(element);\n\n      const activeTool = getActiveTool(element, buttons, interactionType);\n\n      if (activeTool instanceof BaseAnnotationTool) {\n        activeTool.updateCachedStats(image, element, measurementData);\n      }\n\n      const modifiedEventData = {\n        toolType: this.name,\n        element,\n        measurementData,\n      };\n\n      triggerEvent(element, EVENTS.MEASUREMENT_MODIFIED, modifiedEventData);\n      triggerEvent(element, EVENTS.MEASUREMENT_COMPLETED, modifiedEventData);\n    }\n  );\n}\n\nconst checkPixelSpacing = image => {\n  const imagePlane = external.cornerstone.metaData.get(\n    'imagePlaneModule',\n    image.imageId\n  );\n  let rowPixelSpacing = image.rowPixelSpacing;\n  let colPixelSpacing = image.columnPixelSpacing;\n\n  if (imagePlane) {\n    rowPixelSpacing =\n      imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing;\n    colPixelSpacing =\n      imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing;\n  }\n\n  // LT-29 Disable Target Measurements when pixel spacing is not available\n  return !rowPixelSpacing || !colPixelSpacing;\n};\n","import external from './../../../externalModules.js';\nimport toolCoordinates from './../../../stateManagement/toolCoordinates.js';\nimport getHandleNearImagePoint from './../../../manipulators/getHandleNearImagePoint.js';\nimport { getToolState } from './../../../stateManagement/toolState.js';\n\n// Replaces the cornerstoneTools.handleActivator function by skiping the active handle comparison\nconst handleActivator = (\n  element,\n  handles,\n  canvasPoint,\n  distanceThreshold = 6\n) => {\n  const nearbyHandle = getHandleNearImagePoint(\n    element,\n    handles,\n    canvasPoint,\n    distanceThreshold\n  );\n\n  let handleActivatorChanged = false;\n\n  Object.keys(handles).forEach(handleKey => {\n    if (handleKey === 'textBox') {\n      return;\n    }\n    const handle = handles[handleKey];\n    const newActiveState = handle === nearbyHandle;\n\n    if (handle.active !== newActiveState) {\n      handleActivatorChanged = true;\n    }\n\n    handle.active = newActiveState;\n  });\n\n  return handleActivatorChanged;\n};\n\n// MouseMoveCallback is used to hide handles when mouse is away\nexport default function(event) {\n  const eventData = event.detail;\n  const { element } = eventData;\n\n  toolCoordinates.setCoords(eventData);\n\n  // If we have no tool data for this element, do nothing\n  const toolData = getToolState(element, this.name);\n\n  if (!toolData) {\n    return;\n  }\n\n  // We have tool data, search through all data and see if we can activate a handle\n  let imageNeedsUpdate = false;\n\n  for (let i = 0; i < toolData.data.length; i++) {\n    // Get the cursor position in canvas coordinates\n    const coords = eventData.currentPoints.canvas;\n\n    const data = toolData.data[i];\n    const handleActivatorChanged = handleActivator(\n      element,\n      data.handles,\n      coords\n    );\n\n    Object.keys(data.handles).forEach(handleKey => {\n      if (handleKey === 'textBox') {\n        return;\n      }\n      const handle = data.handles[handleKey];\n\n      handle.hover = handle.active;\n    });\n\n    if (handleActivatorChanged) {\n      imageNeedsUpdate = true;\n    }\n\n    const nearTool = this.pointNearTool(element, data, coords, 'mouse');\n    const nearToolAndInactive = nearTool && !data.active;\n    const notNearToolAndActive = !nearTool && data.active;\n\n    if (nearToolAndInactive || notNearToolAndActive) {\n      data.active = !data.active;\n      imageNeedsUpdate = true;\n    }\n  }\n\n  // Handle activation status changed, redraw the image\n  if (imageNeedsUpdate === true) {\n    external.cornerstone.updateImage(element);\n  }\n}\n","export default function(evt, toolData, handle, interactionType = 'mouse') {\n  if (interactionType === 'touch') {\n    this.handleSelectedTouchCallback(evt);\n  } else {\n    this.handleSelectedMouseCallback(evt);\n  }\n}\n","/**\n * Return the distance between 2 points considering the pixel spacing\n *\n * @param {number} columnPixelSpacing Width that a pixel represents in mm\n * @param {number} rowPixelSpacing Height that a pixel represents in mm\n * @param {*} startPoint Start point of the line\n * @param {*} endPoint End point of the line\n *\n * @returns {number} Distance between the 2 given points considering the pixel spacing\n */\nexport default function getDistanceWithPixelSpacing(\n  columnPixelSpacing,\n  rowPixelSpacing,\n  startPoint,\n  endPoint\n) {\n  const calcX = (startPoint.x - endPoint.x) / rowPixelSpacing;\n  const calcY = (startPoint.y - endPoint.y) / columnPixelSpacing;\n\n  return Math.sqrt(calcX * calcX + calcY * calcY);\n}\n","import external from '../../../../externalModules.js';\nimport getDistanceWithPixelSpacing from '../utils/getDistanceWithPixelSpacing.js';\n\nfunction createLine(startPoint, endPoint) {\n  return {\n    start: startPoint,\n    end: endPoint,\n  };\n}\n\n/**\n * Extract and group the base data to be used on bidirectional tool lines\n * moving.\n *\n * @param {*} measurementData Data from current bidirectional tool measurement\n * @param {*} eventData Data object associated with the event\n * @param {*} fixedPoint Point that is not being moved in line\n *\n * @returns {*} Grouped that needed for lines moving\n */\nexport default function getBaseData(measurementData, eventData, fixedPoint) {\n  const { lineSegment } = external.cornerstoneMath;\n  const {\n    start,\n    end,\n    perpendicularStart,\n    perpendicularEnd,\n  } = measurementData.handles;\n  const { columnPixelSpacing = 1, rowPixelSpacing = 1 } = eventData.image;\n\n  const longLine = createLine(start, end);\n  const perpendicularLine = createLine(perpendicularStart, perpendicularEnd);\n  const intersection = lineSegment.intersectLine(longLine, perpendicularLine);\n\n  const distanceToFixed = getDistanceWithPixelSpacing(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    fixedPoint,\n    intersection\n  );\n\n  return {\n    columnPixelSpacing, // Width that a pixel represents in mm\n    rowPixelSpacing, // Height that a pixel represents in mm\n    start, // Start point of the long line\n    end, // End point of the long line\n    perpendicularStart, // Start point of the perpendicular line\n    perpendicularEnd, // End point of the perpendicular line\n    longLine, // Long line object containing the start and end points\n    intersection, // Intersection point between long and perpendicular lines\n    distanceToFixed, // Distance from intersection to the fixed point\n    fixedPoint, // Opposite point from the handle that is being moved\n  };\n}\n","import getDistanceWithPixelSpacing from '../../utils/getDistanceWithPixelSpacing.js';\nimport getBaseData from '../getBaseData.js';\nimport updatePerpendicularLine from './updatePerpendicularLine.js';\n\n/**\n * Move the long line updating the perpendicular line handles position.\n *\n * @param {*} proposedPoint Point that was moved in bidirectional tool\n * @param {*} measurementData Data from current bidirectional tool measurement\n * @param {*} eventData Data object associated with the event\n * @param {*} fixedPoint Point that is not being moved in long line\n *\n * @returns {boolean} True if perpendicular handles were updated, false if not\n */\nexport default function moveLongLine(\n  proposedPoint,\n  measurementData,\n  eventData,\n  fixedPoint\n) {\n  const baseData = getBaseData(measurementData, eventData, fixedPoint);\n  const { columnPixelSpacing, rowPixelSpacing, distanceToFixed } = baseData;\n\n  // Calculate the length of the new line, considering the proposed point\n  const newLineLength = getDistanceWithPixelSpacing(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    fixedPoint,\n    proposedPoint\n  );\n\n  // Stop here if the handle tries to move before the intersection point\n  if (newLineLength <= distanceToFixed) {\n    return false;\n  }\n\n  // Calculate the new intersection point\n  const distanceRatio = distanceToFixed / newLineLength;\n  const newIntersection = {\n    x: fixedPoint.x + (proposedPoint.x - fixedPoint.x) * distanceRatio,\n    y: fixedPoint.y + (proposedPoint.y - fixedPoint.y) * distanceRatio,\n  };\n\n  // Calculate and the new position of the perpendicular handles\n  const newLine = updatePerpendicularLine(baseData, newIntersection);\n\n  // Update the perpendicular line handles\n  measurementData.handles.perpendicularStart.x = newLine.start.x;\n  measurementData.handles.perpendicularStart.y = newLine.start.y;\n  measurementData.handles.perpendicularEnd.x = newLine.end.x;\n  measurementData.handles.perpendicularEnd.y = newLine.end.y;\n\n  return true;\n}\n","import getLineVector from '../../utils/getLineVector';\nimport getDistanceWithPixelSpacing from '../../utils/getDistanceWithPixelSpacing';\n\n/**\n * Returns the updated line object that will be used to change the position of\n * the perpendicular line handles.\n *\n * @param {*} baseData Base data for bidirectional line moving\n * @param {*} mid Middle point considering the proposed point\n *\n * @returns {*} Returns a line object with the updated handles position\n */\nexport default function updatePerpendicularLine(baseData, mid) {\n  const {\n    columnPixelSpacing,\n    rowPixelSpacing,\n    start,\n    perpendicularStart,\n    perpendicularEnd,\n    intersection,\n    fixedPoint,\n  } = baseData;\n\n  // Get the original distance from perpendicular start handle to intersection\n  const distancePS = getDistanceWithPixelSpacing(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    perpendicularStart,\n    intersection\n  );\n\n  // Get the original distance from perpendicular end handle to intersection\n  const distancePE = getDistanceWithPixelSpacing(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    perpendicularEnd,\n    intersection\n  );\n\n  // Inclination of the perpendicular line\n  const vector = getLineVector(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    fixedPoint,\n    mid\n  );\n\n  // Define the multiplier\n  const multiplier = fixedPoint === start ? 1 : -1;\n  const rowMultiplier = multiplier * rowPixelSpacing;\n  const columnMultiplier = multiplier * columnPixelSpacing;\n\n  // Calculate and return the new position of the perpendicular handles\n  return {\n    start: {\n      x: mid.x + vector.y * distancePS * rowMultiplier,\n      y: mid.y + vector.x * distancePS * columnMultiplier * -1,\n    },\n    end: {\n      x: mid.x + vector.y * distancePE * rowMultiplier * -1,\n      y: mid.y + vector.x * distancePE * columnMultiplier,\n    },\n  };\n}\n","/**\n * Returns true if the end point is the point that is not being moved in the\n * perpendicular line.\n *\n * @param {*} fixedPoint Point that is not being moved in perpendicular line\n * @param {*} perpendicularEnd The end point of the perpencular line\n *\n * @returns {boolean} Returns true if the fixed point is the end point\n */\nexport default function isPerpendicularEndFixed(fixedPoint, perpendicularEnd) {\n  return fixedPoint === perpendicularEnd;\n}\n","import isPerpendicularEndFixed from './isPerpendicularEndFixed.js';\n\n/**\n * Return the direction multiplier based on the perpendicular fixed point and\n * the end point.\n *\n * @param {*} fixedPoint Point that is not being moved in perpendicular line\n * @param {*} perpendicularEnd The end point of the perpencular line\n *\n * @returns {number} Returns -1 if end point is not being moved or 1 if it is\n */\nexport default function getDirectionMultiplier(fixedPoint, perpendicularEnd) {\n  return isPerpendicularEndFixed(fixedPoint, perpendicularEnd) ? -1 : 1;\n}\n","import getDirectionMultiplier from './getDirectionMultiplier';\nimport getMovingPoint from './getMovingPoint';\n\n/**\n * Returns the updated line object that will be used to change the position of\n * the perpendicular line handles.\n *\n * @param {*} baseData Base data for bidirectional line moving\n * @param {*} mid Middle point considering the proposed point\n * @param {*} helperLine Line based on proposed point that crosses long line\n * @param {*} vector Vector with the perpendicular line inclination\n *\n * @returns {*} Returns a line object with the updated handles position\n */\nexport default function updatePerpendicularLine(\n  baseData,\n  mid,\n  helperLine,\n  vector\n) {\n  const {\n    columnPixelSpacing,\n    rowPixelSpacing,\n    fixedPoint,\n    perpendicularStart,\n    perpendicularEnd,\n    distanceToFixed,\n  } = baseData;\n\n  // Get the multiplier\n  const multiplier =\n    getDirectionMultiplier(fixedPoint, perpendicularEnd) * distanceToFixed;\n\n  // Define the moving point\n  const movingPoint = getMovingPoint(\n    fixedPoint,\n    perpendicularStart,\n    perpendicularEnd\n  );\n\n  // Get the object keys for moving and fixed points\n  const isMovingStart = movingPoint === perpendicularStart;\n  const movingKey = isMovingStart ? 'start' : 'end';\n  const fixedKey = isMovingStart ? 'end' : 'start';\n\n  // Calculate and return the new position of the perpendicular handles\n  return {\n    [movingKey]: {\n      x: helperLine.start.x,\n      y: helperLine.start.y,\n    },\n    [fixedKey]: {\n      x: mid.x + vector.y * rowPixelSpacing * multiplier,\n      y: mid.y + vector.x * columnPixelSpacing * multiplier * -1,\n    },\n  };\n}\n","import isPerpendicularEndFixed from './isPerpendicularEndFixed.js';\n\n/**\n * Utility function to return the point that is the opposite of the fixed\n * point (the point not being moved in the bidirectional tool's perpendicular\n * line).\n *\n * @param {*} fixedPoint Point that is not being moved in perpendicular line\n * @param {*} perpendicularStart The start point of the perpencular line\n * @param {*} perpendicularEnd The end point of the perpencular line\n *\n * @returns {*} Point that is being moved in perpendicular line\n */\nexport default function getMovingPoint(\n  fixedPoint,\n  perpendicularStart,\n  perpendicularEnd\n) {\n  if (isPerpendicularEndFixed(fixedPoint, perpendicularEnd)) {\n    return perpendicularStart;\n  }\n\n  return perpendicularEnd;\n}\n","import external from './../../../../../externalModules.js';\nimport getLineVector from '../../utils/getLineVector.js';\nimport getBaseData from '../getBaseData.js';\nimport lineHasLength from './lineHasLength.js';\nimport getHelperLine from './getHelperLine.js';\nimport updatePerpendicularLine from './updatePerpendicularLine.js';\n\n/**\n * Move the perpendicular line updating the opposite handle position.\n *\n * @param {*} proposedPoint Point that was moved in bidirectional tool\n * @param {*} measurementData Data from current bidirectional tool measurement\n * @param {*} eventData Data object associated with the event\n * @param {*} fixedPoint Point that is not being moved in long line\n *\n * @returns {boolean} True if perpendicular handles were updated, false if not\n */\nexport default function movePerpendicularLine(\n  proposedPoint,\n  measurementData,\n  eventData,\n  fixedPoint\n) {\n  const { lineSegment } = external.cornerstoneMath;\n  const baseData = getBaseData(measurementData, eventData, fixedPoint);\n  const {\n    columnPixelSpacing,\n    rowPixelSpacing,\n    start,\n    longLine,\n    intersection,\n  } = baseData;\n\n  // Stop here if the long line has no length\n  if (!lineHasLength(columnPixelSpacing, rowPixelSpacing, longLine)) {\n    return false;\n  }\n\n  // Inclination of the perpendicular line\n  const vector = getLineVector(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    start,\n    intersection\n  );\n\n  // Get a helper line to calculate the intersection\n  const helperLine = getHelperLine(baseData, proposedPoint, vector);\n\n  // Find the new intersection in the long line\n  const newIntersection = lineSegment.intersectLine(longLine, helperLine);\n\n  // Stop the flow here if there's no intersection point between lines\n  if (!newIntersection) {\n    return false;\n  }\n\n  // Calculate and the new position of the perpendicular handles\n  const newLine = updatePerpendicularLine(\n    baseData,\n    newIntersection,\n    helperLine,\n    vector\n  );\n\n  // Change the position of the perpendicular line handles\n  measurementData.handles.perpendicularStart.x = newLine.start.x;\n  measurementData.handles.perpendicularStart.y = newLine.start.y;\n  measurementData.handles.perpendicularEnd.x = newLine.end.x;\n  measurementData.handles.perpendicularEnd.y = newLine.end.y;\n\n  return true;\n}\n","import getDistanceWithPixelSpacing from '../../utils/getDistanceWithPixelSpacing';\n\n/**\n * Returns true if the given line object has its length different from zero,\n * considering the column and row pixel spacings.\n *\n * @param {number} columnPixelSpacing Width that a pixel represents in mm\n * @param {number} rowPixelSpacing Height that a pixel represents in mm\n * @param {*} line Line object that will have its length calculated\n *\n * @returns {boolean} Returns true if line has any length\n */\nexport default function lineHasLength(\n  columnPixelSpacing,\n  rowPixelSpacing,\n  line\n) {\n  const lineLength = getDistanceWithPixelSpacing(\n    columnPixelSpacing,\n    rowPixelSpacing,\n    line.start,\n    line.end\n  );\n\n  return lineLength !== 0;\n}\n","import getDirectionMultiplier from './getDirectionMultiplier';\n\n/**\n * Creates a helper line with the same inclination as the perpendicular line\n * but having the start point as the proposed point.\n * This line will start in the proposed point and will grow in the long line\n * direction trying to cross it to enable finding the intersection point\n * between the long line and this new perpendicular line.\n *\n * @param {*} baseData Base data for bidirectional line moving\n * @param {*} proposedPoint Point that was moved in bidirectional tool\n * @param {*} vector Vector with the perpendicular line inclination\n *\n * @returns {*} Returns the helper line containing the start and end points\n */\nexport default function getHelperLine(baseData, proposedPoint, vector) {\n  const {\n    columnPixelSpacing,\n    rowPixelSpacing,\n    perpendicularEnd,\n    fixedPoint,\n  } = baseData;\n\n  // Create a helper line to find the intesection point in the long line\n  const highNumber = Number.MAX_SAFE_INTEGER;\n\n  // Get the multiplier\n  const multiplier =\n    getDirectionMultiplier(fixedPoint, perpendicularEnd) * highNumber;\n\n  return {\n    start: proposedPoint,\n    end: {\n      x: proposedPoint.x + vector.y * rowPixelSpacing * multiplier,\n      y: proposedPoint.y + vector.x * columnPixelSpacing * multiplier * -1,\n    },\n  };\n}\n","import external from './../../../../externalModules.js';\nimport moveLongLine from './moveLongLine/moveLongLine.js';\nimport movePerpendicularLine from './movePerpendicularLine/movePerpendicularLine.js';\n\n// Sets position of handles(start, end, perpendicularStart, perpendicularEnd)\nexport default function(handle, eventData, data, distanceFromTool) {\n  let movedPoint;\n  let outOfBounds;\n  let result;\n  let intersection;\n  let d1;\n  let d2;\n\n  const longLine = {};\n  const perpendicularLine = {};\n  const proposedPoint = {\n    x: eventData.currentPoints.image.x + distanceFromTool.x,\n    y: eventData.currentPoints.image.y + distanceFromTool.y,\n  };\n\n  if (handle.index === 0) {\n    // If long-axis start point is moved\n    result = moveLongLine(proposedPoint, data, eventData, data.handles.end);\n    if (result) {\n      handle.x = proposedPoint.x;\n      handle.y = proposedPoint.y;\n    } else {\n      eventData.currentPoints.image.x = handle.x;\n      eventData.currentPoints.image.y = handle.y;\n    }\n  } else if (handle.index === 1) {\n    // If long-axis end point is moved\n    result = moveLongLine(proposedPoint, data, eventData, data.handles.start);\n    if (result) {\n      handle.x = proposedPoint.x;\n      handle.y = proposedPoint.y;\n    } else {\n      eventData.currentPoints.image.x = handle.x;\n      eventData.currentPoints.image.y = handle.y;\n    }\n  } else if (handle.index === 2) {\n    outOfBounds = false;\n    // If perpendicular start point is moved\n    longLine.start = {\n      x: data.handles.start.x,\n      y: data.handles.start.y,\n    };\n    longLine.end = {\n      x: data.handles.end.x,\n      y: data.handles.end.y,\n    };\n\n    perpendicularLine.start = {\n      x: data.handles.perpendicularEnd.x,\n      y: data.handles.perpendicularEnd.y,\n    };\n    perpendicularLine.end = {\n      x: proposedPoint.x,\n      y: proposedPoint.y,\n    };\n\n    intersection = external.cornerstoneMath.lineSegment.intersectLine(\n      longLine,\n      perpendicularLine\n    );\n    if (!intersection) {\n      perpendicularLine.end = {\n        x: data.handles.perpendicularStart.x,\n        y: data.handles.perpendicularStart.y,\n      };\n\n      intersection = external.cornerstoneMath.lineSegment.intersectLine(\n        longLine,\n        perpendicularLine\n      );\n\n      d1 = external.cornerstoneMath.point.distance(\n        intersection,\n        data.handles.start\n      );\n      d2 = external.cornerstoneMath.point.distance(\n        intersection,\n        data.handles.end\n      );\n\n      if (!intersection || d1 < 3 || d2 < 3) {\n        outOfBounds = true;\n      }\n    }\n\n    movedPoint = false;\n\n    if (!outOfBounds) {\n      movedPoint = movePerpendicularLine(\n        proposedPoint,\n        data,\n        eventData,\n        data.handles.perpendicularEnd\n      );\n\n      if (!movedPoint) {\n        eventData.currentPoints.image.x = data.handles.perpendicularStart.x;\n        eventData.currentPoints.image.y = data.handles.perpendicularStart.y;\n      }\n    }\n  } else if (handle.index === 3) {\n    outOfBounds = false;\n\n    // If perpendicular end point is moved\n    longLine.start = {\n      x: data.handles.start.x,\n      y: data.handles.start.y,\n    };\n    longLine.end = {\n      x: data.handles.end.x,\n      y: data.handles.end.y,\n    };\n\n    perpendicularLine.start = {\n      x: data.handles.perpendicularStart.x,\n      y: data.handles.perpendicularStart.y,\n    };\n    perpendicularLine.end = {\n      x: proposedPoint.x,\n      y: proposedPoint.y,\n    };\n\n    intersection = external.cornerstoneMath.lineSegment.intersectLine(\n      longLine,\n      perpendicularLine\n    );\n    if (!intersection) {\n      perpendicularLine.end = {\n        x: data.handles.perpendicularEnd.x,\n        y: data.handles.perpendicularEnd.y,\n      };\n\n      intersection = external.cornerstoneMath.lineSegment.intersectLine(\n        longLine,\n        perpendicularLine\n      );\n\n      d1 = external.cornerstoneMath.point.distance(\n        intersection,\n        data.handles.start\n      );\n      d2 = external.cornerstoneMath.point.distance(\n        intersection,\n        data.handles.end\n      );\n\n      if (!intersection || d1 < 3 || d2 < 3) {\n        outOfBounds = true;\n      }\n    }\n\n    movedPoint = false;\n\n    if (!outOfBounds) {\n      movedPoint = movePerpendicularLine(\n        proposedPoint,\n        data,\n        eventData,\n        data.handles.perpendicularStart\n      );\n\n      if (!movedPoint) {\n        eventData.currentPoints.image.x = data.handles.perpendicularEnd.x;\n        eventData.currentPoints.image.y = data.handles.perpendicularEnd.y;\n      }\n    }\n  }\n}\n","const swapAttribute = (a, b, attribute) => {\n  const originalA = a[attribute];\n  const originalB = b[attribute];\n\n  a[attribute] = originalB;\n  b[attribute] = originalA;\n};\n\nconst swapHandles = (a, b) => {\n  swapAttribute(a, b, 'x');\n  swapAttribute(a, b, 'y');\n  swapAttribute(a, b, 'moving');\n  swapAttribute(a, b, 'hover');\n  swapAttribute(a, b, 'active');\n  swapAttribute(a, b, 'selected');\n};\n\nexport default function invertHandles(eventData, measurementData, handle) {\n  const { rowPixelSpacing, columnPixelSpacing } = eventData.image;\n  const { handles } = measurementData;\n  const { start, end, perpendicularStart, perpendicularEnd } = handles;\n\n  // Calculate the long axis length\n  const dx = (start.x - end.x) * (columnPixelSpacing || 1);\n  const dy = (start.y - end.y) * (rowPixelSpacing || 1);\n  const length = Math.sqrt(dx * dx + dy * dy);\n\n  // Calculate the short axis length\n  const wx =\n    (perpendicularStart.x - perpendicularEnd.x) * (columnPixelSpacing || 1);\n  const wy =\n    (perpendicularStart.y - perpendicularEnd.y) * (rowPixelSpacing || 1);\n  const width = Math.sqrt(wx * wx + wy * wy) || 0;\n\n  if (width > length) {\n    swapHandles(start, end);\n    swapHandles(start, perpendicularStart);\n    swapHandles(end, perpendicularEnd);\n\n    return Object.values(handles).find(h => h.moving === true);\n  }\n\n  return handle;\n}\n","/* jshint -W083 */\nimport external from './../../../externalModules.js';\nimport { state } from '../../../store/index.js';\nimport EVENTS from './../../../events.js';\nimport {\n  removeToolState,\n  getToolState,\n} from './../../../stateManagement/toolState.js';\nimport anyHandlesOutsideImage from './../../../manipulators/anyHandlesOutsideImage.js';\nimport getHandleNearImagePoint from './../../../manipulators/getHandleNearImagePoint.js';\nimport { moveAllHandles } from './../../../manipulators/index.js';\nimport moveHandle from './moveHandle/moveHandle.js';\nimport invertHandles from './invertHandles.js';\nimport { setToolCursor, hideToolCursor } from '../../../store/setToolCursor.js';\n\nexport default function(evt) {\n  const eventData = evt.detail;\n\n  const { element } = eventData;\n  let data;\n\n  const distanceThreshold = state.clickProximity;\n\n  const handleDoneMove = handle => {\n    data.invalidated = true;\n    if (anyHandlesOutsideImage(eventData, data.handles)) {\n      // Delete the measurement\n      removeToolState(element, this.name, data);\n    }\n\n    // Update the handles to keep selected state\n    if (handle) {\n      handle.moving = false;\n      handle.selected = true;\n    }\n\n    setToolCursor(this.element, this.svgCursor);\n\n    external.cornerstone.updateImage(element);\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._moveCallback);\n    element.addEventListener(EVENTS.TOUCH_START, this._moveCallback);\n  };\n\n  const coords = eventData.startPoints.canvas;\n  const toolData = getToolState(evt.currentTarget, this.name);\n\n  if (!toolData) {\n    return;\n  }\n\n  // Now check to see if there is a handle we can move\n  for (let i = 0; i < toolData.data.length; i++) {\n    data = toolData.data[i];\n    const handleParams = [element, data.handles, coords, distanceThreshold];\n    let handle = getHandleNearImagePoint(...handleParams);\n\n    if (handle) {\n      element.removeEventListener(EVENTS.MOUSE_MOVE, this._moveCallback);\n      element.removeEventListener(EVENTS.TOUCH_START, this._moveCallback);\n\n      data.active = true;\n\n      unselectAllHandles(data.handles);\n      handle.moving = true;\n\n      // Invert handles if needed\n      handle = invertHandles(eventData, data, handle);\n\n      /* Hide the cursor to improve precision while resizing the line or set to move\n         if dragging text box\n      */\n      if (!handle.hasBoundingBox) {\n        hideToolCursor(this.element);\n      }\n\n      moveHandle(eventData, this.name, data, handle, () =>\n        handleDoneMove(handle)\n      );\n\n      preventPropagation(evt);\n\n      return true;\n    }\n  }\n\n  const getDoneMovingCallback = handles => () => {\n    setHandlesMovingState(handles, false);\n    handleDoneMove();\n  };\n\n  for (let i = 0; i < toolData.data.length; i++) {\n    data = toolData.data[i];\n    if (this.pointNearTool(element, data, coords, 'mouse')) {\n      element.removeEventListener(EVENTS.MOUSE_MOVE, this._moveCallback);\n      element.removeEventListener(EVENTS.TOUCH_START, this._moveCallback);\n      data.active = true;\n\n      unselectAllHandles(data.handles);\n      setHandlesMovingState(data.handles, true);\n\n      const doneMovingCallback = getDoneMovingCallback(data.handles);\n\n      moveAllHandles(\n        eventData,\n        this.name,\n        data,\n        null,\n        {\n          deleteIfHandleOutsideImage: true,\n          preventHandleOutsideImage: false,\n        },\n        'mouse',\n        doneMovingCallback\n      );\n\n      preventPropagation(evt);\n\n      return true;\n    }\n  }\n}\n\n// Clear the selected state for the given handles object\nconst unselectAllHandles = handles => {\n  let imageNeedsUpdate = false;\n\n  Object.keys(handles).forEach(handleKey => {\n    if (handleKey === 'textBox') {\n      return;\n    }\n    handles[handleKey].selected = false;\n    imageNeedsUpdate = handles[handleKey].active || imageNeedsUpdate;\n    handles[handleKey].active = false;\n  });\n\n  return imageNeedsUpdate;\n};\n\nconst setHandlesMovingState = (handles, state) => {\n  Object.keys(handles).forEach(handleKey => {\n    if (handleKey === 'textBox') {\n      return;\n    }\n    handles[handleKey].moving = state;\n  });\n};\n\nconst preventPropagation = evt => {\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n};\n","import external from './../../../../externalModules.js';\nimport { state } from '../../../../store/index.js';\nimport EVENTS from './../../../../events.js';\nimport setHandlesPosition from './setHandlesPosition.js';\nimport getActiveTool from '../../../../util/getActiveTool';\nimport BaseAnnotationTool from '../../../base/BaseAnnotationTool';\n\nexport default function(\n  mouseEventData,\n  toolType,\n  data,\n  handle,\n  doneMovingCallback,\n  preventHandleOutsideImage\n) {\n  const { element, image, buttons } = mouseEventData;\n  const distanceFromTool = {\n    x: handle.x - mouseEventData.currentPoints.image.x,\n    y: handle.y - mouseEventData.currentPoints.image.y,\n  };\n\n  const _dragCallback = event => {\n    const eventData = event.detail;\n\n    handle.hasMoved = true;\n\n    if (handle.index === undefined || handle.index === null) {\n      handle.x = eventData.currentPoints.image.x + distanceFromTool.x;\n      handle.y = eventData.currentPoints.image.y + distanceFromTool.y;\n    } else {\n      setHandlesPosition(handle, eventData, data, distanceFromTool);\n    }\n\n    if (preventHandleOutsideImage) {\n      handle.x = Math.max(handle.x, 0);\n      handle.x = Math.min(handle.x, eventData.image.width);\n\n      handle.y = Math.max(handle.y, 0);\n      handle.y = Math.min(handle.y, eventData.image.height);\n    }\n\n    data.invalidated = true;\n\n    external.cornerstone.updateImage(element);\n\n    const activeTool = getActiveTool(element, buttons, 'mouse');\n\n    if (activeTool instanceof BaseAnnotationTool) {\n      activeTool.updateCachedStats(image, element, data);\n    }\n\n    const modifiedEventData = {\n      toolType,\n      element,\n      measurementData: data,\n    };\n\n    external.cornerstone.triggerEvent(\n      element,\n      EVENTS.MEASUREMENT_MODIFIED,\n      modifiedEventData\n    );\n  };\n\n  handle.active = true;\n  state.isToolLocked = true;\n\n  element.addEventListener(EVENTS.MOUSE_DRAG, _dragCallback);\n  element.addEventListener(EVENTS.TOUCH_DRAG, _dragCallback);\n\n  const currentImage = external.cornerstone.getImage(element);\n  const imageRenderedHandler = () => {\n    const newImage = external.cornerstone.getImage(element);\n\n    // Check if the rendered image changed during measurement modifying and stop it if so\n    if (newImage.imageId !== currentImage.imageId) {\n      interactionEndCallback();\n    }\n  };\n\n  // Bind the event listener for image rendering\n  element.addEventListener(\n    external.cornerstone.EVENTS.IMAGE_RENDERED,\n    imageRenderedHandler\n  );\n\n  const interactionEndCallback = () => {\n    handle.active = false;\n    state.isToolLocked = false;\n\n    element.removeEventListener(\n      external.cornerstone.EVENTS.IMAGE_RENDERED,\n      imageRenderedHandler\n    );\n\n    element.removeEventListener(EVENTS.MOUSE_DRAG, _dragCallback);\n    element.removeEventListener(EVENTS.MOUSE_UP, interactionEndCallback);\n    element.removeEventListener(EVENTS.MOUSE_CLICK, interactionEndCallback);\n\n    element.removeEventListener(EVENTS.TOUCH_DRAG, _dragCallback);\n    element.removeEventListener(EVENTS.TOUCH_DRAG_END, interactionEndCallback);\n    element.removeEventListener(EVENTS.TAP, interactionEndCallback);\n\n    external.cornerstone.updateImage(element);\n\n    if (typeof doneMovingCallback === 'function') {\n      doneMovingCallback();\n    }\n  };\n\n  element.addEventListener(EVENTS.MOUSE_UP, interactionEndCallback);\n  element.addEventListener(EVENTS.MOUSE_CLICK, interactionEndCallback);\n\n  element.addEventListener(EVENTS.TOUCH_DRAG_END, interactionEndCallback);\n  element.addEventListener(EVENTS.TAP, interactionEndCallback);\n}\n","import external from './../../../../externalModules.js';\nimport { state } from '../../../../store/index.js';\nimport EVENTS from './../../../../events.js';\nimport setHandlesPosition from './setHandlesPosition.js';\nimport getActiveTool from '../../../../util/getActiveTool';\nimport BaseAnnotationTool from '../../../base/BaseAnnotationTool';\n\nconst touchEndEvents = [\n  EVENTS.TOUCH_END,\n  EVENTS.TOUCH_DRAG_END,\n  EVENTS.TOUCH_PINCH,\n  EVENTS.TOUCH_PRESS,\n  EVENTS.TAP,\n];\n\nexport default function(\n  mouseEventData,\n  toolType,\n  data,\n  handle,\n  doneMovingCallback,\n  preventHandleOutsideImage\n) {\n  const { element, image, buttons } = mouseEventData;\n  const distanceFromTool = {\n    x: handle.x - mouseEventData.currentPoints.image.x,\n    y: handle.y - mouseEventData.currentPoints.image.y,\n  };\n\n  const touchDragCallback = event => {\n    const eventData = event.detail;\n\n    handle.hasMoved = true;\n\n    if (handle.index === undefined || handle.index === null) {\n      handle.x = eventData.currentPoints.image.x + distanceFromTool.x;\n      handle.y = eventData.currentPoints.image.y + distanceFromTool.y;\n    } else {\n      setHandlesPosition(handle, eventData, data, distanceFromTool);\n    }\n\n    if (preventHandleOutsideImage) {\n      handle.x = Math.max(handle.x, 0);\n      handle.x = Math.min(handle.x, eventData.image.width);\n\n      handle.y = Math.max(handle.y, 0);\n      handle.y = Math.min(handle.y, eventData.image.height);\n    }\n\n    data.invalidated = true;\n\n    external.cornerstone.updateImage(element);\n\n    const activeTool = getActiveTool(element, buttons, 'touch');\n\n    if (activeTool instanceof BaseAnnotationTool) {\n      activeTool.updateCachedStats(image, element, data);\n    }\n\n    const modifiedEventData = {\n      toolType,\n      element,\n      measurementData: data,\n    };\n\n    external.cornerstone.triggerEvent(\n      element,\n      EVENTS.MEASUREMENT_MODIFIED,\n      modifiedEventData\n    );\n  };\n\n  handle.active = true;\n  state.isToolLocked = true;\n\n  element.addEventListener(EVENTS.TOUCH_DRAG, touchDragCallback);\n\n  const touchEndCallback = () => {\n    handle.active = false;\n    state.isToolLocked = false;\n\n    element.removeEventListener(EVENTS.TOUCH_DRAG, touchDragCallback);\n    touchEndEvents.forEach(eventType => {\n      element.removeEventListener(eventType, touchEndCallback);\n    });\n\n    external.cornerstone.updateImage(element);\n\n    if (typeof doneMovingCallback === 'function') {\n      doneMovingCallback();\n    }\n  };\n\n  touchEndEvents.forEach(eventType => {\n    element.addEventListener(eventType, touchEndCallback);\n  });\n}\n","/* jshint -W083 */\nimport external from './../../../externalModules.js';\nimport { state } from '../../../store/index.js';\nimport EVENTS from './../../../events.js';\nimport {\n  removeToolState,\n  getToolState,\n} from './../../../stateManagement/toolState.js';\nimport anyHandlesOutsideImage from './../../../manipulators/anyHandlesOutsideImage.js';\nimport getHandleNearImagePoint from './../../../manipulators/getHandleNearImagePoint.js';\nimport { moveAllHandles } from './../../../manipulators/index.js';\nimport touchMoveHandle from './moveHandle/touchMoveHandle.js';\n\nexport default function(evt) {\n  const eventData = evt.detail;\n  const { element } = eventData;\n  let data;\n\n  const distanceThreshold = state.touchProximity;\n\n  const handleDoneMove = handle => {\n    data.invalidated = true;\n    if (anyHandlesOutsideImage(eventData, data.handles)) {\n      // Delete the measurement\n      removeToolState(element, this.name, data);\n    }\n\n    // Update the handles to keep selected state\n    if (handle) {\n      handle.moving = false;\n      handle.selected = true;\n    }\n\n    external.cornerstone.updateImage(element);\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._moveCallback);\n  };\n\n  const coords = eventData.startPoints.canvas;\n  const toolData = getToolState(evt.currentTarget, this.name);\n\n  if (!toolData) {\n    return;\n  }\n\n  // Now check to see if there is a handle we can move\n  for (let i = 0; i < toolData.data.length; i++) {\n    data = toolData.data[i];\n    const handleParams = [element, data.handles, coords, distanceThreshold];\n    const handle = getHandleNearImagePoint(...handleParams);\n\n    if (handle) {\n      element.removeEventListener(EVENTS.TOUCH_DRAG, this._moveCallback);\n\n      data.active = true;\n\n      unselectAllHandles(data.handles);\n      handle.moving = true;\n      touchMoveHandle(eventData, this.name, data, handle, () =>\n        handleDoneMove(handle)\n      );\n      preventPropagation(evt);\n\n      return true;\n    }\n  }\n\n  const getDoneMovingCallback = handles => () => {\n    setHandlesMovingState(handles, false);\n    handleDoneMove();\n  };\n\n  for (let i = 0; i < toolData.data.length; i++) {\n    data = toolData.data[i];\n    if (this.pointNearTool(element, data, coords, 'touch')) {\n      element.removeEventListener(EVENTS.TOUCH_DRAG, this._moveCallback);\n      data.active = true;\n\n      unselectAllHandles(data.handles);\n      setHandlesMovingState(data.handles, true);\n\n      const doneMovingCallback = getDoneMovingCallback(data.handles);\n\n      moveAllHandles(\n        eventData,\n        this.name,\n        data,\n        null,\n        {\n          deleteIfHandleOutsideImage: true,\n          preventHandleOutsideImage: false,\n        },\n        'touch',\n        doneMovingCallback\n      );\n\n      preventPropagation(evt);\n\n      return true;\n    }\n  }\n}\n\n// Clear the selected state for the given handles object\nconst unselectAllHandles = handles => {\n  let imageNeedsUpdate = false;\n\n  Object.keys(handles).forEach(handleKey => {\n    if (handleKey === 'textBox') {\n      return;\n    }\n    handles[handleKey].selected = false;\n    imageNeedsUpdate = handles[handleKey].active || imageNeedsUpdate;\n    handles[handleKey].active = false;\n  });\n\n  return imageNeedsUpdate;\n};\n\nconst setHandlesMovingState = (handles, state) => {\n  Object.keys(handles).forEach(handleKey => {\n    if (handleKey === 'textBox') {\n      return;\n    }\n    handles[handleKey].moving = state;\n  });\n};\n\nconst preventPropagation = evt => {\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n};\n","import BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\nimport createNewMeasurement from './bidirectionalTool/createNewMeasurement.js';\nimport pointNearTool from './bidirectionalTool/pointNearTool.js';\nimport renderToolData from './bidirectionalTool/renderToolData.js';\nimport addNewMeasurement from './bidirectionalTool/addNewMeasurement.js';\nimport _moveCallback from './bidirectionalTool/mouseMoveCallback.js';\nimport handleSelectedCallback from './bidirectionalTool/handleSelectedCallback.js';\nimport handleSelectedMouseCallback from './bidirectionalTool/handleSelectedMouseCallback.js';\nimport handleSelectedTouchCallback from './bidirectionalTool/handleSelectedTouchCallback.js';\nimport { bidirectionalCursor } from '../cursors/index.js';\nimport throttle from '../../util/throttle';\nimport getPixelSpacing from '../../util/getPixelSpacing';\nimport calculateLongestAndShortestDiameters from './bidirectionalTool/utils/calculateLongestAndShortestDiameters';\n\nconst emptyLocationCallback = (measurementData, eventData, doneCallback) =>\n  doneCallback();\n\n/**\n * @public\n * @class BidirectionalTool\n * @memberof Tools.Annotation\n * @classdesc Create and position an annotation that measures the\n * length and width of a region.\n * @extends Tools.Base.BaseAnnotationTool\n */\n\nexport default class BidirectionalTool extends BaseAnnotationTool {\n  constructor(props) {\n    const defaultProps = {\n      name: 'Bidirectional',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        changeMeasurementLocationCallback: emptyLocationCallback,\n        getMeasurementLocationCallback: emptyLocationCallback,\n        textBox: '',\n        shadow: '',\n        drawHandles: true,\n        drawHandlesOnHover: true,\n        additionalData: [],\n      },\n      svgCursor: bidirectionalCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n\n    this.createNewMeasurement = createNewMeasurement.bind(this);\n    this.pointNearTool = pointNearTool.bind(this);\n    this.renderToolData = renderToolData.bind(this);\n    this.addNewMeasurement = addNewMeasurement.bind(this);\n    this._moveCallback = _moveCallback.bind(this);\n\n    this.handleSelectedCallback = handleSelectedCallback.bind(this);\n    this.handleSelectedMouseCallback = handleSelectedMouseCallback.bind(this);\n    this.handleSelectedTouchCallback = handleSelectedTouchCallback.bind(this);\n  }\n\n  updateCachedStats(image, element, data) {\n    const pixelSpacing = getPixelSpacing(image);\n    const {\n      longestDiameter,\n      shortestDiameter,\n    } = calculateLongestAndShortestDiameters(data, pixelSpacing);\n\n    // Set measurement text to show lesion table\n    data.longestDiameter = longestDiameter;\n    data.shortestDiameter = shortestDiameter;\n    data.invalidated = false;\n  }\n}\n","/**\n * Calculates longest and shortest diameters using measurement handles and pixelSpacing\n * @param  {Object} measurementData\n * @param {Object} pixelSpacing pixelSpacing\n *\n *@returns {Object} longestDiameter and shortestDiameter\n */\nexport default function calculateLongestAndShortestDiameters(\n  measurementData,\n  pixelSpacing\n) {\n  const { rowPixelSpacing, colPixelSpacing } = pixelSpacing;\n  const {\n    start,\n    end,\n    perpendicularStart,\n    perpendicularEnd,\n  } = measurementData.handles;\n\n  // Calculate the long axis length\n  const dx = (start.x - end.x) * (colPixelSpacing || 1);\n  const dy = (start.y - end.y) * (rowPixelSpacing || 1);\n  let length = Math.sqrt(dx * dx + dy * dy);\n\n  // Calculate the short axis length\n  const wx =\n    (perpendicularStart.x - perpendicularEnd.x) * (colPixelSpacing || 1);\n  const wy =\n    (perpendicularStart.y - perpendicularEnd.y) * (rowPixelSpacing || 1);\n  let width = Math.sqrt(wx * wx + wy * wy);\n\n  if (!width) {\n    width = 0;\n  }\n\n  // Length is always longer than width\n  if (width > length) {\n    const tempW = width;\n    const tempL = length;\n\n    length = tempW;\n    width = tempL;\n  }\n\n  return {\n    longestDiameter: length.toFixed(1),\n    shortestDiameter: width.toFixed(1),\n  };\n}\n","import external from '../externalModules.js';\n\n/**\n * Calculates a Standardized Uptake Value.\n * @export @public @method\n * @name calculateSUV\n *\n * @param  {Object} image            The image.\n * @param  {number} storedPixelValue The raw pixel value.\n * @param  {bool} [skipRescale=fale]\n * @returns {number}                  The SUV.\n */\nexport default function(image, storedPixelValue, skipRescale = false) {\n  const cornerstone = external.cornerstone;\n  const patientStudyModule = cornerstone.metaData.get(\n    'patientStudyModule',\n    image.imageId\n  );\n  const seriesModule = cornerstone.metaData.get(\n    'generalSeriesModule',\n    image.imageId\n  );\n\n  if (!patientStudyModule || !seriesModule) {\n    return;\n  }\n\n  const modality = seriesModule.modality;\n\n  // Image must be PET\n  if (modality !== 'PT') {\n    return;\n  }\n\n  const modalityPixelValue = skipRescale\n    ? storedPixelValue\n    : storedPixelValue * image.slope + image.intercept;\n\n  const patientWeight = patientStudyModule.patientWeight; // In kg\n\n  if (!patientWeight) {\n    return;\n  }\n\n  const petSequenceModule = cornerstone.metaData.get(\n    'petIsotopeModule',\n    image.imageId\n  );\n\n  if (!petSequenceModule) {\n    return;\n  }\n\n  const radiopharmaceuticalInfo = petSequenceModule.radiopharmaceuticalInfo;\n  const startTime = radiopharmaceuticalInfo.radiopharmaceuticalStartTime;\n  const totalDose = radiopharmaceuticalInfo.radionuclideTotalDose;\n  const halfLife = radiopharmaceuticalInfo.radionuclideHalfLife;\n  const seriesAcquisitionTime = seriesModule.seriesTime;\n\n  if (!startTime || !totalDose || !halfLife || !seriesAcquisitionTime) {\n    return;\n  }\n\n  const acquisitionTimeInSeconds =\n    fracToDec(seriesAcquisitionTime.fractionalSeconds || 0) +\n    seriesAcquisitionTime.seconds +\n    seriesAcquisitionTime.minutes * 60 +\n    seriesAcquisitionTime.hours * 60 * 60;\n  const injectionStartTimeInSeconds =\n    fracToDec(startTime.fractionalSeconds) +\n    startTime.seconds +\n    startTime.minutes * 60 +\n    startTime.hours * 60 * 60;\n  const durationInSeconds =\n    acquisitionTimeInSeconds - injectionStartTimeInSeconds;\n  const correctedDose =\n    totalDose * Math.exp((-durationInSeconds * Math.log(2)) / halfLife);\n  const suv = ((modalityPixelValue * patientWeight) / correctedDose) * 1000;\n\n  return suv;\n}\n\n/**\n * Returns a decimal value given a fractional value.\n * @private\n * @method\n * @name fracToDec\n *\n * @param  {number} fractionalValue The value to convert.\n * @returns {number}                 The value converted to decimal.\n */\nfunction fracToDec(fractionalValue) {\n  return parseFloat(`.${fractionalValue}`);\n}\n","/**\n * Returns true if a point is within an ellipse\n * @export @public @method\n * @name pointInEllipse\n *\n * @param  {Object} ellipse  Object defining the ellipse.\n * @param  {Object} location The location of the point.\n * @returns {boolean} True if the point is within the ellipse.\n */\nexport default function(ellipse, location) {\n  const xRadius = ellipse.width / 2;\n  const yRadius = ellipse.height / 2;\n\n  if (xRadius <= 0.0 || yRadius <= 0.0) {\n    return false;\n  }\n\n  const center = {\n    x: ellipse.left + xRadius,\n    y: ellipse.top + yRadius,\n  };\n\n  /* This is a more general form of the circle equation\n   *\n   * X^2/a^2 + Y^2/b^2 <= 1\n   */\n\n  const normalized = {\n    x: location.x - center.x,\n    y: location.y - center.y,\n  };\n\n  const inEllipse =\n    (normalized.x * normalized.x) / (xRadius * xRadius) +\n      (normalized.y * normalized.y) / (yRadius * yRadius) <=\n    1.0;\n\n  return inEllipse;\n}\n","import pointInEllipse from './pointInEllipse.js';\n\n/**\n * Calculates the statistics of an elliptical region of interest.\n *\n * @private\n * @function calculateEllipseStatistics\n *\n * @param {number[]} sp - Array of the image data's pixel values.\n * @param {Object} ellipse - { top, left, height, width } - An object describing the ellipse.\n * @returns {Object} { count, mean, variance, stdDev, min, max }\n */\nexport default function(sp, ellipse) {\n  let sum = 0;\n  let sumSquared = 0;\n  let count = 0;\n  let index = 0;\n  let min = null;\n  let max = null;\n\n  for (let y = ellipse.top; y < ellipse.top + ellipse.height; y++) {\n    for (let x = ellipse.left; x < ellipse.left + ellipse.width; x++) {\n      const point = {\n        x,\n        y,\n      };\n\n      if (pointInEllipse(ellipse, point)) {\n        if (min === null) {\n          min = sp[index];\n          max = sp[index];\n        }\n\n        sum += sp[index];\n        sumSquared += sp[index] * sp[index];\n        min = Math.min(min, sp[index]);\n        max = Math.max(max, sp[index]);\n        count++;\n      }\n\n      index++;\n    }\n  }\n\n  if (count === 0) {\n    return {\n      count,\n      mean: 0.0,\n      variance: 0.0,\n      stdDev: 0.0,\n      min: 0.0,\n      max: 0.0,\n    };\n  }\n\n  const mean = sum / count;\n  const variance = sumSquared / count - mean * mean;\n\n  return {\n    count,\n    mean,\n    variance,\n    stdDev: Math.sqrt(variance),\n    min,\n    max,\n  };\n}\n","import calculateEllipseStatistics from './calculateEllipseStatistics.js';\nimport pointInEllipse from './pointInEllipse.js';\n\n// Named\nexport { calculateEllipseStatistics, pointInEllipse };\n\n// Default\nexport default {\n  calculateEllipseStatistics,\n  pointInEllipse,\n};\n","/**\n * Determine the coordinates that will place the textbox to the right of the\n * annotation, taking rotation, hflip, and vflip into account.\n *\n * @param {Object} viewport - The object that stores rotation, hflip, and vflip.\n * @param {Object} handles - The handles of the annotation.\n * @returns {Object} - The coordinates for default placement of the textbox\n */\nexport default function getROITextBoxCoords(viewport, handles) {\n  const corners = _determineCorners(handles);\n  const centerX = (corners.left.x + corners.right.x) / 2;\n  const centerY = (corners.top.y + corners.bottom.y) / 2;\n  const textBox = {};\n\n  if (viewport.rotation >= 0 && viewport.rotation < 90) {\n    textBox.x = viewport.hflip ? corners.left.x : corners.right.x;\n    textBox.y = centerY;\n  }\n  if (viewport.rotation >= 90 && viewport.rotation < 180) {\n    textBox.x = centerX;\n    textBox.y = viewport.vflip ? corners.bottom.y : corners.top.y;\n  }\n  if (viewport.rotation >= 180 && viewport.rotation < 270) {\n    textBox.x = viewport.hflip ? corners.right.x : corners.left.x;\n    textBox.y = centerY;\n  }\n  if (viewport.rotation >= 270 && viewport.rotation < 360) {\n    textBox.x = centerX;\n    textBox.y = viewport.vflip ? corners.top.y : corners.bottom.y;\n  }\n\n  return textBox;\n}\n\n/**\n * Determine the handles that have the min/max x and y values.\n *\n * @param {Object} handles - The handles of the annotation.\n * @returns {Object} - The top, left, bottom, and right handles\n */\nfunction _determineCorners(handles) {\n  const handlesLeftToRight = [handles.start, handles.end].sort(_compareX);\n  const handlesTopToBottom = [handles.start, handles.end].sort(_compareY);\n  const left = handlesLeftToRight[0];\n  const right = handlesLeftToRight[handlesLeftToRight.length - 1];\n  const top = handlesTopToBottom[0];\n  const bottom = handlesTopToBottom[handlesTopToBottom.length - 1];\n\n  return {\n    top,\n    left,\n    bottom,\n    right,\n  };\n\n  function _compareX(a, b) {\n    return a.x < b.x ? -1 : 1;\n  }\n  function _compareY(a, b) {\n    return a.y < b.y ? -1 : 1;\n  }\n}\n","/**\n * Converts a number to a string with comma separators.\n * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n * @export @public @method\n * @name numbersWithCommas\n *\n * @param  {number} x The number to convert.\n * @returns {string}   The pretty-printed number as a string.\n */\nexport default function(x) {\n  const parts = x.toString().split('.');\n\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n  return parts.join('.');\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawCircle,\n  drawHandles,\n  drawLinkedTextBox,\n} from './../../drawing/index.js';\n\n// Util\nimport calculateSUV from './../../util/calculateSUV.js';\nimport { calculateEllipseStatistics } from './../../util/ellipse/index.js';\nimport getROITextBoxCoords from '../../util/getROITextBoxCoords.js';\nimport numbersWithCommas from './../../util/numbersWithCommas.js';\nimport throttle from './../../util/throttle.js';\nimport { getLogger } from '../../util/logger.js';\nimport getPixelSpacing from '../../util/getPixelSpacing';\nimport { circleRoiCursor } from '../cursors/index.js';\nimport getCircleCoords from '../../util/getCircleCoords';\n\nconst logger = getLogger('tools:annotation:CircleRoiTool');\n\n/**\n * @public\n * @class CircleRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing circular regions of interest, and measuring\n * the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class CircleRoiTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'CircleRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: circleRoiCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${this.name}'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        initialRotation: eventData.viewport.rotation,\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords, interactionType) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n\n    const getDistance = external.cornerstoneMath.point.distance;\n\n    if (!hasStartAndEndHandles) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!hasStartAndEndHandles || data.visible === false) {\n      return false;\n    }\n\n    const distance = interactionType === 'mouse' ? 15 : 25;\n\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.start\n    );\n\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    // StartCanvas is the center of the circle\n    const distanceFromCenter = getDistance(startCanvas, coords);\n\n    // Getting radius of circle annotation in canvas\n    const radius = getDistance(startCanvas, endCanvas);\n\n    // Checking if point is near the tool by comparing its distance from the center of the circle\n    return (\n      distanceFromCenter > radius - distance / 2 &&\n      distanceFromCenter < radius + distance / 2\n    );\n  }\n\n  updateCachedStats(image, element, data) {\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n    const modality = seriesModule.modality;\n    const pixelSpacing = getPixelSpacing(image);\n\n    const stats = _calculateStats(\n      image,\n      element,\n      data.handles,\n      modality,\n      pixelSpacing\n    );\n\n    data.cachedStats = stats;\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    const getDistance = external.cornerstoneMath.point.distance;\n    const eventData = evt.detail;\n    const { image, element, canvasContext } = eventData;\n    const lineWidth = toolStyle.getToolWidth();\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const newContext = getNewContext(canvasContext.canvas);\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    // Meta\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n\n    // Pixel Spacing\n    const modality = seriesModule.modality;\n    const hasPixelSpacing = rowPixelSpacing && colPixelSpacing;\n\n    draw(newContext, context => {\n      // If we have tool data for this element, iterate over each set and draw it\n      for (let i = 0; i < toolData.data.length; i++) {\n        const data = toolData.data[i];\n\n        if (data.visible === false) {\n          continue;\n        }\n\n        // Configure\n        const color = toolColors.getColorIfActive(data);\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        setShadow(context, this.configuration);\n\n        const startCanvas = external.cornerstone.pixelToCanvas(\n          element,\n          data.handles.start\n        );\n\n        const endCanvas = external.cornerstone.pixelToCanvas(\n          element,\n          data.handles.end\n        );\n\n        // Calculating the radius where startCanvas is the center of the circle to be drawn\n        const radius = getDistance(startCanvas, endCanvas);\n\n        // Draw Circle\n        drawCircle(\n          context,\n          element,\n          data.handles.start,\n          radius,\n          {\n            color,\n          },\n          'pixel'\n        );\n\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        // Default to textbox on right side of ROI\n        if (!data.handles.textBox.hasMoved) {\n          const defaultCoords = getROITextBoxCoords(\n            eventData.viewport,\n            data.handles\n          );\n\n          Object.assign(data.handles.textBox, defaultCoords);\n        }\n\n        const textBoxAnchorPoints = handles =>\n          _findTextBoxAnchorPoints(handles.start, handles.end);\n\n        const textBoxContent = _createTextBoxContent(\n          context,\n          image.color,\n          data.cachedStats,\n          modality,\n          hasPixelSpacing,\n          this.configuration\n        );\n\n        data.unit = _getUnit(modality, this.configuration.showHounsfieldUnits);\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          textBoxContent,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          10,\n          true\n        );\n      }\n    });\n  }\n}\n\n/**\n *\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {Array.<{x: number, y: number}>}\n */\nfunction _findTextBoxAnchorPoints(startHandle, endHandle) {\n  const { left, top, width, height } = getCircleCoords(startHandle, endHandle);\n\n  return [\n    {\n      // Top middle point of ellipse\n      x: left + width / 2,\n      y: top,\n    },\n    {\n      // Left middle point of ellipse\n      x: left,\n      y: top + height / 2,\n    },\n    {\n      // Bottom middle point of ellipse\n      x: left + width / 2,\n      y: top + height,\n    },\n    {\n      // Right middle point of ellipse\n      x: left + width,\n      y: top + height / 2,\n    },\n  ];\n}\n\nfunction _getUnit(modality, showHounsfieldUnits) {\n  return modality === 'CT' && showHounsfieldUnits !== false ? 'HU' : '';\n}\n\n/**\n *\n *\n * @param {*} context\n * @param {*} isColorImage\n * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }\n * @param {*} modality\n * @param {*} hasPixelSpacing\n * @param {*} [options={}] - { showMinMax, showHounsfieldUnits }\n * @returns {string[]}\n */\nfunction _createTextBoxContent(\n  context,\n  isColorImage,\n  { area, mean, stdDev, min, max, meanStdDevSUV } = {},\n  modality,\n  hasPixelSpacing,\n  options = {}\n) {\n  const showMinMax = options.showMinMax || false;\n  const textLines = [];\n\n  // Don't display mean/standardDev for color images\n  const otherLines = [];\n\n  if (!isColorImage) {\n    const hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;\n    const unit = _getUnit(modality, options.showHounsfieldUnits);\n\n    let meanString = `Mean: ${numbersWithCommas(mean.toFixed(2))} ${unit}`;\n    const stdDevString = `Std Dev: ${numbersWithCommas(\n      stdDev.toFixed(2)\n    )} ${unit}`;\n\n    // If this image has SUV values to display, concatenate them to the text line\n    if (hasStandardUptakeValues) {\n      const SUVtext = ' SUV: ';\n\n      const meanSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.mean.toFixed(2)\n      )}`;\n      const stdDevSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.stdDev.toFixed(2)\n      )}`;\n\n      const targetStringLength = Math.floor(\n        context.measureText(`${stdDevString}     `).width\n      );\n\n      while (context.measureText(meanString).width < targetStringLength) {\n        meanString += ' ';\n      }\n\n      otherLines.push(`${meanString}${meanSuvString}`);\n      otherLines.push(`${stdDevString}     ${stdDevSuvString}`);\n    } else {\n      otherLines.push(`${meanString}     ${stdDevString}`);\n    }\n\n    if (showMinMax) {\n      let minString = `Min: ${min} ${unit}`;\n      const maxString = `Max: ${max} ${unit}`;\n      const targetStringLength = hasStandardUptakeValues\n        ? Math.floor(context.measureText(`${stdDevString}     `).width)\n        : Math.floor(context.measureText(`${meanString}     `).width);\n\n      while (context.measureText(minString).width < targetStringLength) {\n        minString += ' ';\n      }\n\n      otherLines.push(`${minString}${maxString}`);\n    }\n  }\n\n  textLines.push(_formatArea(area, hasPixelSpacing));\n  otherLines.forEach(x => textLines.push(x));\n\n  return textLines;\n}\n\n/**\n *\n *\n * @param {*} area\n * @param {*} hasPixelSpacing\n * @returns {string} The formatted label for showing area\n */\nfunction _formatArea(area, hasPixelSpacing) {\n  // This uses Char code 178 for a superscript 2\n  const suffix = hasPixelSpacing\n    ? ` mm${String.fromCharCode(178)}`\n    : ` px${String.fromCharCode(178)}`;\n\n  return `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n}\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} handles\n * @param {*} modality\n * @param {*} pixelSpacing\n * @returns {Object} The Stats object\n */\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\n  // Retrieve the bounds of the ellipse in image coordinates\n  const circleCoordinates = getCircleCoords(handles.start, handles.end);\n\n  // Retrieve the array of pixels that the ellipse bounds cover\n  const pixels = external.cornerstone.getPixels(\n    element,\n    circleCoordinates.left,\n    circleCoordinates.top,\n    circleCoordinates.width,\n    circleCoordinates.height\n  );\n\n  // Calculate the mean & standard deviation from the pixels and the ellipse details.\n  const ellipseMeanStdDev = calculateEllipseStatistics(\n    pixels,\n    circleCoordinates\n  );\n\n  let meanStdDevSUV;\n\n  if (modality === 'PT') {\n    meanStdDevSUV = {\n      mean: calculateSUV(image, ellipseMeanStdDev.mean, true) || 0,\n      stdDev: calculateSUV(image, ellipseMeanStdDev.stdDev, true) || 0,\n    };\n  }\n\n  const area =\n    Math.PI *\n    ((circleCoordinates.width * (pixelSpacing.colPixelSpacing || 1)) / 2) *\n    ((circleCoordinates.height * (pixelSpacing.rowPixelSpacing || 1)) / 2);\n\n  return {\n    area: area || 0,\n    count: ellipseMeanStdDev.count || 0,\n    mean: ellipseMeanStdDev.mean || 0,\n    variance: ellipseMeanStdDev.variance || 0,\n    stdDev: ellipseMeanStdDev.stdDev || 0,\n    min: ellipseMeanStdDev.min || 0,\n    max: ellipseMeanStdDev.max || 0,\n    meanStdDevSUV,\n  };\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport textStyle from './../../stateManagement/textStyle.js';\nimport {\n  addToolState,\n  getToolState,\n} from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n// Manipulators\nimport { moveNewHandle } from './../../manipulators/index.js';\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawLine,\n} from './../../drawing/index.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport roundToDecimal from './../../util/roundToDecimal.js';\nimport EVENTS from './../../events.js';\nimport { cobbAngleCursor } from '../cursors/index.js';\nimport triggerEvent from '../../util/triggerEvent.js';\nimport throttle from '../../util/throttle';\nimport getPixelSpacing from '../../util/getPixelSpacing';\n\n/**\n * @public\n * @class CobbAngleTool\n * @memberof Tools.Annotation\n * @classdesc Tool for measuring the angle between two straight lines.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class CobbAngleTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'CobbAngle',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: cobbAngleCursor,\n      configuration: {\n        drawHandles: true,\n      },\n    };\n\n    super(props, defaultProps);\n\n    this.hasIncomplete = false;\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    // Create the measurement data for this tool with the end handle activated\n    this.hasIncomplete = true;\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      complete: false,\n      value: '',\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        start2: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n          drawnIndependently: true,\n        },\n        end2: {\n          x: eventData.currentPoints.image.x + 1,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n          drawnIndependently: true,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    if (data.visible === false) {\n      return false;\n    }\n\n    if (this.hasIncomplete) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(element, data.handles.start, data.handles.end, coords) <\n        25 ||\n      lineSegDistance(element, data.handles.start2, data.handles.end2, coords) <\n        25\n    );\n  }\n\n  updateCachedStats(image, element, data) {\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    const dx1 =\n      (Math.ceil(data.handles.start.x) - Math.ceil(data.handles.end.x)) *\n      colPixelSpacing;\n    const dy1 =\n      (Math.ceil(data.handles.start.y) - Math.ceil(data.handles.end.y)) *\n      rowPixelSpacing;\n    const dx2 =\n      (Math.ceil(data.handles.start2.x) - Math.ceil(data.handles.end2.x)) *\n      colPixelSpacing;\n    const dy2 =\n      (Math.ceil(data.handles.start2.y) - Math.ceil(data.handles.end2.y)) *\n      rowPixelSpacing;\n\n    let angle = Math.acos(\n      Math.abs(\n        (dx1 * dx2 + dy1 * dy2) /\n          (Math.sqrt(dx1 * dx1 + dy1 * dy1) * Math.sqrt(dx2 * dx2 + dy2 * dy2))\n      )\n    );\n\n    angle *= 180 / Math.PI;\n\n    data.rAngle = roundToDecimal(angle, 2);\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    // If we have no toolData for this element, return immediately as there is nothing to do\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    const lineWidth = toolStyle.getToolWidth();\n    const font = textStyle.getFont();\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        setShadow(context, this.configuration);\n\n        // Differentiate the color of activation tool\n        const color = toolColors.getColorIfActive(data);\n\n        drawLine(\n          context,\n          eventData.element,\n          data.handles.start,\n          data.handles.end,\n          {\n            color,\n          }\n        );\n\n        if (data.complete) {\n          drawLine(\n            context,\n            eventData.element,\n            data.handles.start2,\n            data.handles.end2,\n            {\n              color,\n            }\n          );\n        }\n\n        // Draw the handles\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        if (this.configuration.drawHandles) {\n          drawHandles(context, eventData, data.handles, handleOptions);\n        }\n\n        // Draw the text\n        context.fillStyle = color;\n\n        const text = data.value;\n\n        if (!data.handles.textBox.hasMoved) {\n          const textCoords = {\n            x: (data.handles.start.x + data.handles.end.x) / 2,\n            y: (data.handles.start.y + data.handles.end.y) / 2 - 10,\n          };\n\n          context.font = font;\n          data.handles.textBox.x = textCoords.x;\n          data.handles.textBox.y = textCoords.y;\n        }\n\n        drawLinkedTextBox(\n          context,\n          eventData.element,\n          data.handles.textBox,\n          text,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          0,\n          true\n        );\n      });\n    }\n\n    function textBoxAnchorPoints(handles) {\n      return [handles.start, handles.start2, handles.end, handles.end2];\n    }\n  }\n\n  getIncomplete(element) {\n    const toolState = getToolState(element, this.name);\n\n    if (toolState && Array.isArray(toolState.data)) {\n      return toolState.data.find(({ complete }) => complete === false);\n    }\n  }\n\n  addNewMeasurement(evt, interactionType) {\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const eventData = evt.detail;\n\n    let measurementData;\n    let toMoveHandle;\n    let doneMovingCallback;\n\n    // Search for incomplete measurements\n    const element = evt.detail.element;\n    const pendingMeasurement = this.getIncomplete(element);\n\n    if (pendingMeasurement) {\n      measurementData = pendingMeasurement;\n      measurementData.complete = true;\n      measurementData.handles.start2 = {\n        x: eventData.currentPoints.image.x,\n        y: eventData.currentPoints.image.y,\n        drawnIndependently: false,\n        highlight: true,\n        active: false,\n      };\n      measurementData.handles.end2 = {\n        x: eventData.currentPoints.image.x,\n        y: eventData.currentPoints.image.y,\n        drawnIndependently: false,\n        highlight: true,\n        active: true,\n      };\n      toMoveHandle = measurementData.handles.end2;\n      this.hasIncomplete = false;\n      doneMovingCallback = () => {\n        const eventType = EVENTS.MEASUREMENT_COMPLETED;\n        const eventData = {\n          toolType: this.name,\n          element,\n          measurementData,\n        };\n\n        triggerEvent(element, eventType, eventData);\n      };\n    } else {\n      measurementData = this.createNewMeasurement(eventData);\n      addToolState(element, this.name, measurementData);\n      toMoveHandle = measurementData.handles.end;\n    }\n\n    // Associate this data with this imageId so we can render it and manipulate it\n    external.cornerstone.updateImage(element);\n\n    moveNewHandle(\n      eventData,\n      this.name,\n      measurementData,\n      toMoveHandle,\n      this.options,\n      interactionType,\n      doneMovingCallback\n    );\n  }\n\n  onMeasureModified(ev) {\n    const { element } = ev.detail;\n    const image = external.cornerstone.getEnabledElement(element).image;\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    if (ev.detail.toolName !== this.name) {\n      return;\n    }\n    const data = ev.detail.measurementData;\n\n    // Update textbox stats\n    if (data.invalidated === true) {\n      if (data.rAngle) {\n        this.throttledUpdateCachedStats(image, element, data);\n      } else {\n        this.updateCachedStats(image, element, data);\n      }\n    }\n\n    const { rAngle } = data;\n\n    data.value = '';\n\n    if (!Number.isNaN(rAngle)) {\n      data.value = textBoxText(rAngle, rowPixelSpacing, colPixelSpacing);\n    }\n\n    function textBoxText(rAngle, rowPixelSpacing, colPixelSpacing) {\n      const suffix = !rowPixelSpacing || !colPixelSpacing ? ' (isotropic)' : '';\n      const str = '00B0'; // Degrees symbol\n\n      return (\n        rAngle.toString() + String.fromCharCode(parseInt(str, 16)) + suffix\n      );\n    }\n  }\n\n  activeCallback(element) {\n    this.onMeasureModified = this.onMeasureModified.bind(this);\n    element.addEventListener(\n      EVENTS.MEASUREMENT_MODIFIED,\n      this.onMeasureModified\n    );\n  }\n\n  passiveCallback(element) {\n    this.onMeasureModified = this.onMeasureModified.bind(this);\n    element.addEventListener(\n      EVENTS.MEASUREMENT_MODIFIED,\n      this.onMeasureModified\n    );\n  }\n\n  enabledCallback(element) {\n    element.removeEventListener(\n      EVENTS.MEASUREMENT_MODIFIED,\n      this.onMeasureModified\n    );\n  }\n\n  disabledCallback(element) {\n    element.removeEventListener(\n      EVENTS.MEASUREMENT_MODIFIED,\n      this.onMeasureModified\n    );\n  }\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawEllipse,\n  drawHandles,\n  drawLinkedTextBox,\n} from './../../drawing/index.js';\n\n// Util\nimport calculateSUV from './../../util/calculateSUV.js';\nimport {\n  pointInEllipse,\n  calculateEllipseStatistics,\n} from './../../util/ellipse/index.js';\nimport getROITextBoxCoords from '../../util/getROITextBoxCoords.js';\nimport numbersWithCommas from './../../util/numbersWithCommas.js';\nimport throttle from './../../util/throttle.js';\nimport { ellipticalRoiCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport getPixelSpacing from '../../util/getPixelSpacing';\n\nconst logger = getLogger('tools:annotation:EllipticalRoiTool');\n\n/**\n * @public\n * @class EllipticalRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing elliptical regions of interest, and measuring\n * the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class EllipticalRoiTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'EllipticalRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        // showMinMax: false,\n        // showHounsfieldUnits: true,\n      },\n      svgCursor: ellipticalRoiCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${this.name}'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        initialRotation: eventData.viewport.rotation,\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords, interactionType) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const distance = interactionType === 'mouse' ? 15 : 25;\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.start\n    );\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    const minorEllipse = {\n      left: Math.min(startCanvas.x, endCanvas.x) + distance / 2,\n      top: Math.min(startCanvas.y, endCanvas.y) + distance / 2,\n      width: Math.abs(startCanvas.x - endCanvas.x) - distance,\n      height: Math.abs(startCanvas.y - endCanvas.y) - distance,\n    };\n\n    const majorEllipse = {\n      left: Math.min(startCanvas.x, endCanvas.x) - distance / 2,\n      top: Math.min(startCanvas.y, endCanvas.y) - distance / 2,\n      width: Math.abs(startCanvas.x - endCanvas.x) + distance,\n      height: Math.abs(startCanvas.y - endCanvas.y) + distance,\n    };\n\n    const pointInMinorEllipse = pointInEllipse(minorEllipse, coords);\n    const pointInMajorEllipse = pointInEllipse(majorEllipse, coords);\n\n    if (pointInMajorEllipse && !pointInMinorEllipse) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateCachedStats(image, element, data) {\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n    const modality = seriesModule.modality;\n    const pixelSpacing = getPixelSpacing(image);\n\n    const stats = _calculateStats(\n      image,\n      element,\n      data.handles,\n      modality,\n      pixelSpacing\n    );\n\n    data.cachedStats = stats;\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    const eventData = evt.detail;\n    const { image, element } = eventData;\n    const lineWidth = toolStyle.getToolWidth();\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    // Meta\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n\n    // Pixel Spacing\n    const modality = seriesModule.modality;\n    const hasPixelSpacing = rowPixelSpacing && colPixelSpacing;\n\n    draw(context, context => {\n      // If we have tool data for this element - iterate over each set and draw it\n      for (let i = 0; i < toolData.data.length; i++) {\n        const data = toolData.data[i];\n\n        if (data.visible === false) {\n          continue;\n        }\n\n        // Configure\n        const color = toolColors.getColorIfActive(data);\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        setShadow(context, this.configuration);\n\n        // Draw\n        drawEllipse(\n          context,\n          element,\n          data.handles.start,\n          data.handles.end,\n          {\n            color,\n          },\n          'pixel',\n          data.handles.initialRotation\n        );\n        drawHandles(context, eventData, data.handles, handleOptions);\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        // Default to textbox on right side of ROI\n        if (!data.handles.textBox.hasMoved) {\n          const defaultCoords = getROITextBoxCoords(\n            eventData.viewport,\n            data.handles\n          );\n\n          Object.assign(data.handles.textBox, defaultCoords);\n        }\n\n        const textBoxAnchorPoints = handles =>\n          _findTextBoxAnchorPoints(handles.start, handles.end);\n        const textBoxContent = _createTextBoxContent(\n          context,\n          image.color,\n          data.cachedStats,\n          modality,\n          hasPixelSpacing,\n          this.configuration\n        );\n\n        data.unit = _getUnit(modality, this.configuration.showHounsfieldUnits);\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          textBoxContent,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          10,\n          true\n        );\n      }\n    });\n  }\n}\n\n/**\n *\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {Array.<{x: number, y: number}>}\n */\nfunction _findTextBoxAnchorPoints(startHandle, endHandle) {\n  const { left, top, width, height } = _getEllipseImageCoordinates(\n    startHandle,\n    endHandle\n  );\n\n  return [\n    {\n      // Top middle point of ellipse\n      x: left + width / 2,\n      y: top,\n    },\n    {\n      // Left middle point of ellipse\n      x: left,\n      y: top + height / 2,\n    },\n    {\n      // Bottom middle point of ellipse\n      x: left + width / 2,\n      y: top + height,\n    },\n    {\n      // Right middle point of ellipse\n      x: left + width,\n      y: top + height / 2,\n    },\n  ];\n}\n\nfunction _getUnit(modality, showHounsfieldUnits) {\n  return modality === 'CT' && showHounsfieldUnits !== false ? 'HU' : '';\n}\n\n/**\n *\n *\n * @param {*} context\n * @param {*} isColorImage\n * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }\n * @param {*} modality\n * @param {*} hasPixelSpacing\n * @param {*} [options={}] - { showMinMax, showHounsfieldUnits }\n * @returns {string[]}\n */\nfunction _createTextBoxContent(\n  context,\n  isColorImage,\n  { area, mean, stdDev, min, max, meanStdDevSUV } = {},\n  modality,\n  hasPixelSpacing,\n  options = {}\n) {\n  const showMinMax = options.showMinMax || false;\n  const textLines = [];\n\n  // Don't display mean/standardDev for color images\n  const otherLines = [];\n\n  if (!isColorImage) {\n    const hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;\n    const unit = _getUnit(modality, options.showHounsfieldUnits);\n\n    let meanString = `Mean: ${numbersWithCommas(mean.toFixed(2))} ${unit}`;\n    const stdDevString = `Std Dev: ${numbersWithCommas(\n      stdDev.toFixed(2)\n    )} ${unit}`;\n\n    // If this image has SUV values to display, concatenate them to the text line\n    if (hasStandardUptakeValues) {\n      const SUVtext = ' SUV: ';\n\n      const meanSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.mean.toFixed(2)\n      )}`;\n      const stdDevSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.stdDev.toFixed(2)\n      )}`;\n\n      const targetStringLength = Math.floor(\n        context.measureText(`${stdDevString}     `).width\n      );\n\n      while (context.measureText(meanString).width < targetStringLength) {\n        meanString += ' ';\n      }\n\n      otherLines.push(`${meanString}${meanSuvString}`);\n      otherLines.push(`${stdDevString}     ${stdDevSuvString}`);\n    } else {\n      otherLines.push(`${meanString}     ${stdDevString}`);\n    }\n\n    if (showMinMax) {\n      let minString = `Min: ${min} ${unit}`;\n      const maxString = `Max: ${max} ${unit}`;\n      const targetStringLength = hasStandardUptakeValues\n        ? Math.floor(context.measureText(`${stdDevString}     `).width)\n        : Math.floor(context.measureText(`${meanString}     `).width);\n\n      while (context.measureText(minString).width < targetStringLength) {\n        minString += ' ';\n      }\n\n      otherLines.push(`${minString}${maxString}`);\n    }\n  }\n\n  textLines.push(_formatArea(area, hasPixelSpacing));\n  otherLines.forEach(x => textLines.push(x));\n\n  return textLines;\n}\n\n/**\n *\n *\n * @param {*} area\n * @param {*} hasPixelSpacing\n * @returns {string} The formatted label for showing area\n */\nfunction _formatArea(area, hasPixelSpacing) {\n  // This uses Char code 178 for a superscript 2\n  const suffix = hasPixelSpacing\n    ? ` mm${String.fromCharCode(178)}`\n    : ` px${String.fromCharCode(178)}`;\n\n  return `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n}\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} handles\n * @param {*} modality\n * @param {*} pixelSpacing\n * @returns {Object} The Stats object\n */\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\n  // Retrieve the bounds of the ellipse in image coordinates\n  const ellipseCoordinates = _getEllipseImageCoordinates(\n    handles.start,\n    handles.end\n  );\n\n  // Retrieve the array of pixels that the ellipse bounds cover\n  const pixels = external.cornerstone.getPixels(\n    element,\n    ellipseCoordinates.left,\n    ellipseCoordinates.top,\n    ellipseCoordinates.width,\n    ellipseCoordinates.height\n  );\n\n  // Calculate the mean & standard deviation from the pixels and the ellipse details.\n  const ellipseMeanStdDev = calculateEllipseStatistics(\n    pixels,\n    ellipseCoordinates\n  );\n\n  let meanStdDevSUV;\n\n  if (modality === 'PT') {\n    meanStdDevSUV = {\n      mean: calculateSUV(image, ellipseMeanStdDev.mean, true) || 0,\n      stdDev: calculateSUV(image, ellipseMeanStdDev.stdDev, true) || 0,\n    };\n  }\n\n  // Calculate the image area from the ellipse dimensions and pixel spacing\n  const area =\n    Math.PI *\n    ((ellipseCoordinates.width * (pixelSpacing.colPixelSpacing || 1)) / 2) *\n    ((ellipseCoordinates.height * (pixelSpacing.rowPixelSpacing || 1)) / 2);\n\n  return {\n    area: area || 0,\n    count: ellipseMeanStdDev.count || 0,\n    mean: ellipseMeanStdDev.mean || 0,\n    variance: ellipseMeanStdDev.variance || 0,\n    stdDev: ellipseMeanStdDev.stdDev || 0,\n    min: ellipseMeanStdDev.min || 0,\n    max: ellipseMeanStdDev.max || 0,\n    meanStdDevSUV,\n  };\n}\n\n/**\n * Retrieve the bounds of the ellipse in image coordinates\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {{ left: number, top: number, width: number, height: number }}\n */\nfunction _getEllipseImageCoordinates(startHandle, endHandle) {\n  return {\n    left: Math.round(Math.min(startHandle.x, endHandle.x)),\n    top: Math.round(Math.min(startHandle.y, endHandle.y)),\n    width: Math.round(Math.abs(startHandle.x - endHandle.x)),\n    height: Math.round(Math.abs(startHandle.y - endHandle.y)),\n  };\n}\n","/**\n * Calculates whether \"location\" is inside the polygon defined by dataHandles\n * by counting the number of times a ray originating from \"point\" crosses the\n * edges of the polygon. Odd === inside, Even === outside.\n * @export @public @method\n * @name pointInFreehand\n *\n * @param {Object} dataHandles Data object associated with the tool.\n * @param {Object} location The coordinates being queried.\n * @returns {boolean} True if the location is inside the polygon defined by dataHandles.\n */\nexport default function(dataHandles, location) {\n  let inROI = false;\n\n  // Cycle round pairs of points\n  let j = dataHandles.length - 1; // The last vertex is the previous one to the first\n\n  for (let i = 0; i < dataHandles.length; i++) {\n    if (rayFromPointCrosssesLine(location, dataHandles[i], dataHandles[j])) {\n      inROI = !inROI;\n    }\n\n    j = i; // Here j is previous vertex to i\n  }\n\n  return inROI;\n}\n\n/**\n * Returns true if the y-position yp is enclosed within y-positions y1 and y2.\n * @private\n * @method\n * @name isEnclosedY\n *\n * @param {number} yp The y position of point p.\n * @param {number} y1 The y position of point 1.\n * @param {number} y2 The y position of point 2.\n * @returns {boolean} True if the y-position yp is enclosed within y-positions y1 and y2.\n */\nfunction isEnclosedY(yp, y1, y2) {\n  if ((y1 < yp && yp < y2) || (y2 < yp && yp < y1)) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the line segment is to the right of the point.\n * @private\n * @method\n * @name isLineRightOfPoint\n *\n * @param {Object} point The point being queried.\n * @param {Object} lp1 The first point of the line segment.\n * @param {Object} lp2 The second point of the line segment.\n * @returns {boolean} True if the line is to the right of the point.\n */\nfunction isLineRightOfPoint(point, lp1, lp2) {\n  // If both right of point return true\n  if (lp1.x > point.x && lp2.x > point.x) {\n    return true;\n  }\n\n  // Catch when line is vertical.\n  if (lp1.x === lp2.x) {\n    return point.x < lp1.x;\n  }\n\n  // Put leftmost point in lp1\n  if (lp1.x > lp2.x) {\n    const lptemp = lp1;\n\n    lp1 = lp2;\n    lp2 = lptemp;\n  }\n  const lPointY = lineSegmentAtPoint(point, lp1, lp2);\n\n  // If the lp1.x and lp2.x enclose point.x check gradient of line and see if\n  // Point is above or below the line to calculate if it inside.\n  if (\n    Math.sign(lPointY.gradient) * point.y >\n    Math.sign(lPointY.gradient) * lPointY.value\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns the y value of the line segment at the x value of the point.\n * @private\n * @method\n * @name lineSegmentAtPoint\n *\n * @param {Object} point The point being queried.\n * @param {Object} lp1 The first point of the line segment.\n * @param {Object} lp2 The second point of the line segment.\n * @returns {Object} An object containing the y value as well as the gradient of the line segment.\n */\nfunction lineSegmentAtPoint(point, lp1, lp2) {\n  const dydx = (lp2.y - lp1.y) / (lp2.x - lp1.x);\n  const fx = {\n    value: lp1.y + dydx * (point.x - lp1.x),\n    gradient: dydx,\n  };\n\n  return fx;\n}\n\n/**\n * Returns true if a rightwards ray originating from the point crosses the line defined by handleI and handleJ.\n * @private\n * @method\n * @name rayFromPointCrosssesLine\n *\n * @param {Object} point The point being queried.\n * @param {Object} handleI The first handle of the line segment.\n * @param {Object} handleJ The second handle of the line segment.\n * @returns {boolean} True if a rightwards ray originating from the point crosses the line defined by handleI and handleJ.\n */\nfunction rayFromPointCrosssesLine(point, handleI, handleJ) {\n  if (\n    isEnclosedY(point.y, handleI.y, handleJ.y) &&\n    isLineRightOfPoint(point, handleI, handleJ)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import pointInFreehand from './pointInFreehand.js';\n\n/**\n * Calculates the statistics of all the pixels within the freehand object.\n * @export @public @method\n * @name calculateFreehandStatistics\n *\n * @param {Object} sp An array of the pixel data.\n * @param {Object} boundingBox Rectangular box enclosing the polygon.\n * @param {Object} dataHandles Data object associated with the tool.\n * @returns {Object} Object containing the derived statistics.\n */\nexport default function(sp, boundingBox, dataHandles) {\n  const statisticsObj = {\n    count: 0,\n    mean: 0.0,\n    variance: 0.0,\n    stdDev: 0.0,\n  };\n\n  const sum = getSum(sp, boundingBox, dataHandles);\n\n  if (sum.count === 0) {\n    return statisticsObj;\n  }\n\n  statisticsObj.count = sum.count;\n  statisticsObj.mean = sum.value / sum.count;\n  statisticsObj.variance =\n    sum.squared / sum.count - statisticsObj.mean * statisticsObj.mean;\n  statisticsObj.stdDev = Math.sqrt(statisticsObj.variance);\n\n  return statisticsObj;\n}\n\n/**\n * Calculates the sum, squared sum and count of all pixels within the polygon.\n * @private\n * @method\n * @name getSum\n *\n * @param {Object} sp An array of the pixel data.\n * @param {Object} boundingBox Rectangular box enclosing the polygon.\n * @param {Object} dataHandles Data object associated with the tool.\n * @returns {Object} Object containing the sum, squared sum and pixel count.\n */\nfunction getSum(sp, boundingBox, dataHandles) {\n  const sum = {\n    value: 0,\n    squared: 0,\n    count: 0,\n  };\n  let index = 0;\n\n  for (let y = boundingBox.top; y < boundingBox.top + boundingBox.height; y++) {\n    for (\n      let x = boundingBox.left;\n      x < boundingBox.left + boundingBox.width;\n      x++\n    ) {\n      const point = {\n        x,\n        y,\n      };\n\n      sumPointIfInFreehand(dataHandles, point, sum, sp[index]);\n      index++;\n    }\n  }\n\n  return sum;\n}\n\n/**\n * Adds the pixel to the workingSum if it is within the polygon.\n * @private\n * @method sumPointIfInFreehand\n *\n * @param {Object} dataHandles Data object associated with the tool.\n * @param {Object} point The pixel coordinates.\n * @param {Object} workingSum The working sum, squared sum and pixel count.\n * @param {Object} pixelValue The pixel value. // @modifies {workingSum}\n * @returns {undefined}\n */\nfunction sumPointIfInFreehand(dataHandles, point, workingSum, pixelValue) {\n  if (pointInFreehand(dataHandles, point)) {\n    workingSum.value += pixelValue;\n    workingSum.squared += pixelValue * pixelValue;\n    workingSum.count++;\n  }\n}\n","/**\n * @public\n * @name ClickedLineData\n * @classdesc Creates an object containing information about the clicked line.\n * @property {number} toolIndex ID of the tool that the line corresponds to.\n * @property {Object} handleIndexArray An array of the handle indicies that correspond to the line segment.\n */\nexport default class ClickedLineData {\n  /**\n   * Constructs an object containing information about the clicked line.\n   * @param {number} toolIndex - The ID of the tool the line corresponds to.\n   * @param {Object} handleIndexArray - An array of the handle indicies that correspond to the line segment.\n   */\n  constructor(toolIndex, handleIndexArray) {\n    this.toolIndex = toolIndex;\n    this.handleIndexArray = handleIndexArray;\n  }\n}\n","/**\n * @public\n * @name FreehandHandleData\n * @classdesc Creates a single handle for the freehand tool.\n *\n * @property {number} x The x position.\n * @property {number} y The y position.\n * @property {boolean} highlight Whether the handle should be rendered as the highlighted color.\n * @property {boolean} active Whether the handle is active.\n * @property {Object} lines An array of lines associated with the handle.\n */\nexport default class FreehandHandleData {\n  /**\n   * Constructs a a single handle for the freehand tool\n   *\n   * @param {Object} position - The position of the handle.\n   * @param {boolean} highlight - whether the handle should be rendered as the highlighted color.\n   * @param {boolean} active - whether the handle is active.\n   */\n  constructor(position, highlight = true, active = true) {\n    this.x = position.x;\n    this.y = position.y;\n    this.highlight = highlight;\n    this.active = active;\n    this.lines = [];\n  }\n}\n","/**\n * Orientation algoritm to determine if two lines cross.\n * Credit and details: geeksforgeeks.org/check-if-two-given-line-segments-intersect/\n */\n\n/**\n * Determines whether a new handle causes an intersection of the lines of the polygon.\n * @public\n * @function newHandle\n *\n * @param {Object} candidateHandle The new handle to check.\n * @param {Object} dataHandles data object associated with the tool.\n * @returns {boolean} - Whether the new line intersects with any other lines of the polygon.\n */\nfunction newHandle(candidateHandle, dataHandles) {\n  // Check if the proposed line will intersect any existent line\n  const lastHandleId = dataHandles.length - 1;\n  const lastHandle = getCoords(dataHandles[lastHandleId]);\n  const newHandle = getCoords(candidateHandle);\n\n  return doesIntersectOtherLines(dataHandles, lastHandle, newHandle, [\n    lastHandleId,\n  ]);\n}\n\n/**\n * Checks if the last line of a polygon will intersect the other lines of the polgyon.\n * @public\n * @function end\n *\n * @param {Object} dataHandles data object associated with the tool.\n * @returns {boolean} Whether the last line intersects with any other lines of the polygon.\n */\nfunction end(dataHandles) {\n  const lastHandleId = dataHandles.length - 1;\n  const lastHandle = getCoords(dataHandles[lastHandleId]);\n  const firstHandle = getCoords(dataHandles[0]);\n\n  return doesIntersectOtherLines(dataHandles, lastHandle, firstHandle, [\n    lastHandleId,\n    0,\n  ]);\n}\n\n/**\n * Checks whether the modification of a handle's position causes intersection of the lines of the polygon.\n * @public\n * @method modify\n *\n * @param {Object} dataHandles Data object associated with the tool.\n * @param {number} modifiedHandleId The id of the handle being modified.\n * @returns {boolean} Whether the modfication causes any intersections.\n */\nfunction modify(dataHandles, modifiedHandleId) {\n  // Check if the modifiedHandle's previous and next lines will intersect any other line in the polygon\n  const modifiedHandle = getCoords(dataHandles[modifiedHandleId]);\n\n  // Previous neightbor handle\n  let neighborHandleId = modifiedHandleId - 1;\n\n  if (modifiedHandleId === 0) {\n    neighborHandleId = dataHandles.length - 1;\n  }\n\n  let neighborHandle = getCoords(dataHandles[neighborHandleId]);\n\n  if (\n    doesIntersectOtherLines(dataHandles, modifiedHandle, neighborHandle, [\n      modifiedHandleId,\n      neighborHandleId,\n    ])\n  ) {\n    return true;\n  }\n\n  // Next neightbor handle\n  if (modifiedHandleId === dataHandles.length - 1) {\n    neighborHandleId = 0;\n  } else {\n    neighborHandleId = modifiedHandleId + 1;\n  }\n\n  neighborHandle = getCoords(dataHandles[neighborHandleId]);\n\n  return doesIntersectOtherLines(dataHandles, modifiedHandle, neighborHandle, [\n    modifiedHandleId,\n    neighborHandleId,\n  ]);\n}\n\n/**\n * Checks whether the line (p1,q1) intersects any of the other lines in the polygon.\n * @private\n * @function doesIntersectOtherLines\n *\n * @param {Object} dataHandles Data object associated with the tool.\n * @param {Object} p1 Coordinates of the start of the line.\n * @param {Object} q1 Coordinates of the end of the line.\n * @param {Object} ignoredHandleIds Ids of handles to ignore (i.e. lines that share a vertex with the line being tested).\n * @returns {boolean} Whether the line intersects any of the other lines in the polygon.\n */\nfunction doesIntersectOtherLines(dataHandles, p1, q1, ignoredHandleIds) {\n  let j = dataHandles.length - 1;\n\n  for (let i = 0; i < dataHandles.length; i++) {\n    if (\n      ignoredHandleIds.indexOf(i) !== -1 ||\n      ignoredHandleIds.indexOf(j) !== -1\n    ) {\n      j = i;\n      continue;\n    }\n\n    const p2 = getCoords(dataHandles[j]);\n    const q2 = getCoords(dataHandles[i]);\n\n    if (doesIntersect(p1, q1, p2, q2)) {\n      return true;\n    }\n\n    j = i;\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the line (p1,q1) intersects the line (p2,q2) via an orientation algorithm.\n * @private\n * @function doesIntersect\n *\n * @param {Object} p1 Coordinates of the start of the line 1.\n * @param {Object} q1 Coordinates of the end of the line 1.\n * @param {Object} p2 Coordinates of the start of the line 2.\n * @param {Object} q2 Coordinates of the end of the line 2.\n * @returns {boolean} Whether lines (p1,q1) and (p2,q2) intersect.\n */\nfunction doesIntersect(p1, q1, p2, q2) {\n  let result = false;\n\n  const orient = [\n    orientation(p1, q1, p2),\n    orientation(p1, q1, q2),\n    orientation(p2, q2, p1),\n    orientation(p2, q2, q1),\n  ];\n\n  // General Case\n  if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n    return true;\n  }\n\n  // Special Cases\n  if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n    // If p1, q1 and p2 are colinear and p2 lies on segment p1q1\n    result = true;\n  } else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n    // If p1, q1 and p2 are colinear and q2 lies on segment p1q1\n    result = true;\n  } else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n    // If p2, q2 and p1 are colinear and p1 lies on segment p2q2\n    result = true;\n  } else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n    // If p2, q2 and q1 are colinear and q1 lies on segment p2q2\n    result = true;\n  }\n\n  return result;\n}\n\n/**\n * Returns an object with two properties, x and y, from a heavier FreehandHandleData object.\n * @private\n * @function getCoords\n *\n * @param {Object} dataHandle Data object associated with a single handle in the freehand tool.\n * @returns {Object} An object containing position propeties x and y.\n */\nfunction getCoords(dataHandle) {\n  return {\n    x: dataHandle.x,\n    y: dataHandle.y,\n  };\n}\n\n/**\n * Checks the orientation of 3 points.\n * @private\n * @function orientation\n *\n * @param {Object} p First point.\n * @param {Object} q Second point.\n * @param {Object} r Third point.\n * @returns {number} - 0: Colinear, 1: Clockwise, 2: Anticlockwise\n */\nfunction orientation(p, q, r) {\n  const orientationValue =\n    (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\n  if (orientationValue === 0) {\n    return 0; // Colinear\n  }\n\n  return orientationValue > 0 ? 1 : 2;\n}\n\n/**\n * Checks if point q lines on the segment (p,r).\n * @private\n * @function onSegment\n *\n * @param {Object} p Point p.\n * @param {Object} q Point q.\n * @param {Object} r Point r.\n * @returns {boolean} - If q lies on line segment (p,r).\n */\nfunction onSegment(p, q, r) {\n  if (\n    q.x <= Math.max(p.x, r.x) &&\n    q.x >= Math.min(p.x, r.x) &&\n    q.y <= Math.max(p.y, r.y) &&\n    q.y >= Math.min(p.y, r.y)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport default {\n  newHandle,\n  end,\n  modify,\n};\n","import { getToolState } from '../../stateManagement/toolState.js';\nimport external from '../../externalModules.js';\nimport ClickedLineData from './ClickedLineData.js';\n\nconst distanceThreshold = 10;\n\n/**\n * @public\n * @class FreehandLineFinder\n * @classdesc Class that finds lines of freehand ROIs based on click proximity.\n */\nexport default class FreehandLineFinder {\n  /**\n   * Creates an instance of FreehandLineFinder.\n   * @param {*} eventData - Data object associated with the event.\n   * @param {string} toolName - The tool name\n   * @memberof FreehandLineFinder\n   */\n  constructor(eventData, toolName) {\n    this._eventData = eventData;\n    this._toolName = toolName;\n  }\n\n  /**\n   * Looks for lines near the mouse cursor.\n   *\n   * @public\n   * @method\n   * @returns {ClickedLineData} Data object corresponding to the clicked line.\n   */\n  findLine() {\n    const closestToolIndex = this.findTool();\n\n    if (closestToolIndex === null) {\n      return null;\n    }\n\n    const closeLines = this._getCloseLinesInTool(closestToolIndex);\n\n    if (closeLines) {\n      const clickedLineData = this._findCorrectLine(\n        closestToolIndex,\n        closeLines\n      );\n\n      // Note: clickedLineData may be null if no valid projections are found.\n      return clickedLineData;\n    }\n\n    // Return null if no valid close lines found.\n    return null;\n  }\n\n  /**\n   * Looks for tools near the mouse cursor.\n   *\n   * @public\n   * @method\n   *\n   * @returns {ClickedLineData} Data object corresponding to the clicked line.\n   */\n  findTool() {\n    this._toolData = getToolState(this._eventData.element, this._toolName);\n    this._mousePoint = this._eventData.currentPoints.canvas;\n\n    if (!this._toolData) {\n      return null;\n    }\n\n    const closestHandle = this._nearestHandleToPointAllTools();\n\n    return closestHandle.toolIndex;\n  }\n\n  /**\n   * Finds the nearest handle to the mouse cursor for all tools.\n   * @private\n   * @method\n   * @returns {Object} The handle closest to the point.\n   */\n  _nearestHandleToPointAllTools() {\n    const toolData = this._toolData;\n\n    let closestHandle = {\n      toolIndex: null,\n      handleIndex: null,\n      distance: Infinity, // Some large number\n    };\n\n    for (let toolIndex = 0; toolIndex < toolData.data.length; toolIndex++) {\n      const closestHandleForToolI = this._nearestHandleToPoint(toolIndex);\n\n      if (closestHandleForToolI === null) {\n        continue;\n      }\n\n      if (closestHandleForToolI.distance < closestHandle.distance) {\n        closestHandle = closestHandleForToolI;\n      }\n    }\n\n    return closestHandle;\n  }\n\n  /**\n   * Finds the nearest handle to the mouse cursor for a specific tool.\n   * @private\n   * @method\n   *\n   * @param {number} toolIndex The index of the particular freehand tool.\n   * @returns {Object} An object containing information about the closest handle.\n   */\n  _nearestHandleToPoint(toolIndex) {\n    const eventData = this._eventData;\n    const toolData = this._toolData;\n\n    const data = toolData.data[toolIndex];\n    const points = data.handles.points;\n\n    if (points === undefined) {\n      return null;\n    }\n\n    if (data.visible === false) {\n      return null;\n    }\n\n    const closest = {\n      toolIndex,\n      handleIndex: null,\n      distance: Infinity, // Some large number\n    };\n\n    for (let i = 0; i < points.length; i++) {\n      const handleCanvas = external.cornerstone.pixelToCanvas(\n        eventData.element,\n        points[i]\n      );\n      const handleDistanceFromMousePoint = external.cornerstoneMath.point.distance(\n        handleCanvas,\n        this._mousePoint\n      );\n\n      if (handleDistanceFromMousePoint < closest.distance) {\n        closest.handleIndex = i;\n        closest.distance = handleDistanceFromMousePoint;\n      }\n    }\n\n    return closest;\n  }\n\n  /**\n   * Finds all the lines close to the mouse point for a particular tool.\n   * @private\n   * @method\n   *\n   * @param {number} toolIndex The index of the particular freehand tool.\n   * @returns {Object} An array of lines close to the mouse point.\n   */\n  _getCloseLinesInTool(toolIndex) {\n    const toolData = this._toolData;\n    const points = toolData.data[toolIndex].handles.points;\n\n    const closeLines = [];\n\n    for (let i = 0; i < points.length; i++) {\n      const nextIndex = FreehandLineFinder.getNextHandleIndex(i, points.length);\n      const d = this._distanceOfPointfromLine(points[i], points[nextIndex]);\n\n      if (d < distanceThreshold) {\n        closeLines.push([i, nextIndex]);\n      }\n    }\n\n    return closeLines;\n  }\n\n  /**\n   * Finds the line the user clicked on from an array of close lines.\\\n   * @private\n   * @method\n   *\n   * @param {number} toolIndex The index of the particular freehand tool.\n   * @param {Object} closeLines An array of lines close to the mouse point.\n   * @returns {ClickedLineData|null} An instance of ClickedLineData containing information about the line, or null if no line is correct.\n   */\n  _findCorrectLine(toolIndex, closeLines) {\n    // Test if any candidate lines can be projected onto by the mousePoint\n    for (let i = 0; i < closeLines.length; i++) {\n      if (this._pointProjectsToLineSegment(toolIndex, closeLines[i])) {\n        return new ClickedLineData(toolIndex, closeLines[i]);\n      }\n    }\n\n    // No valid line found\n    return null;\n  }\n\n  /**\n   * Returns true if the mouse point projects onto the line segment.\n   * @private\n   * @method\n   *\n   * @param {number} toolIndex The index of the particular freehand tool.\n   * @param {Object} handleIndexArray An array of indicies corresponding to the line segment.\n   * @returns {boolean} True if the mouse point projects onto the line segment\n   */\n  _pointProjectsToLineSegment(toolIndex, handleIndexArray) {\n    const eventData = this._eventData;\n    const toolData = this._toolData;\n    const data = toolData.data[toolIndex];\n    const points = data.handles.points;\n\n    if (data.handles.points === undefined) {\n      return;\n    }\n\n    if (data.visible === false) {\n      return false;\n    }\n\n    const handle1 = points[handleIndexArray[0]];\n    const handle2 = points[handleIndexArray[1]];\n\n    const p = FreehandLineFinder.getCanvasPointsFromHandles(\n      handle1,\n      handle2,\n      eventData.element\n    );\n\n    const r = FreehandLineFinder.getLineAsVector(p);\n    const m = this._getLineOriginToMouseAsVector(p);\n\n    // Project vector m onto r to see if the point is within bounds of line segment\n    const mProj = (m[0] * r[0] + m[1] * r[1]) / r.magnitude;\n\n    if (mProj > 0 && mProj < r.magnitude) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns the canvas positions from the handle's pixel positions.\n   *\n   * @static\n   * @public\n   * @method\n   * @param {FreehandHandleData} handle1 The first handle.\n   * @param {FreehandHandleData} handle2 The second handle.\n   * @param {Object} element The element on which the handles reside.\n   * @returns {Object} An array contsining the handle positions in canvas coordinates.\n   */\n  static getCanvasPointsFromHandles(handle1, handle2, element) {\n    const p = [];\n\n    // Point r from left to right so that we only have one orientation to test.\n    if (handle1.x < handle2.x) {\n      p.push(external.cornerstone.pixelToCanvas(element, handle1));\n      p.push(external.cornerstone.pixelToCanvas(element, handle2));\n    } else {\n      p.push(external.cornerstone.pixelToCanvas(element, handle2));\n      p.push(external.cornerstone.pixelToCanvas(element, handle1));\n    }\n\n    return p;\n  }\n\n  /**\n   * Converts a line segment to a vector.\n   *\n   * @static\n   * @public\n   * @method\n   * @param {Object} p An array of two points respresenting the line segment.\n   * @returns {Object} An array containing the x and y components of the vector, as well as a magnitude property.\n   */\n  static getLineAsVector(p) {\n    const r = [p[1].x - p[0].x, p[1].y - p[0].y];\n\n    r.magnitude = external.cornerstoneMath.point.distance(p[0], p[1]);\n\n    return r;\n  }\n\n  /**\n   * Constructs a vector from the direction and magnitude of the line from the the line origin to the mouse cursor.\n   * @private\n   * @method\n   *\n   * @param {Object} p An array of two points respresenting the line segment.\n   * @returns {Object} An array containing the x and y components of the vector.\n   */\n  _getLineOriginToMouseAsVector(p) {\n    const m = [this._mousePoint.x - p[0].x, this._mousePoint.y - p[0].y];\n\n    return m;\n  }\n\n  /**\n   * Calculates the perpendicular distance of the mouse cursor from a line segment.\n   * @private\n   * @method\n   *\n   * @param {FreehandHandleData} handle1 The first handle.\n   * @param {FreehandHandleData} handle2 The first handle.\n   * @returns {number} The perpendicular distance of the mouse cursor from the line segment.\n   */\n  _distanceOfPointfromLine(handle1, handle2) {\n    const eventData = this._eventData;\n\n    const p1 = external.cornerstone.pixelToCanvas(eventData.element, handle1);\n    const p2 = external.cornerstone.pixelToCanvas(eventData.element, handle2);\n    const pMouse = this._mousePoint;\n\n    // Perpendicular distance of point from line:\n    // = 2* area of triangle(p1,p2,pm) / length of triangle's base |p2 - p1|\n    const twiceAreaOfTriangle = Math.abs(\n      (p2.y - p1.y) * pMouse.x -\n        (p2.x - p1.x) * pMouse.y +\n        p2.x * p1.y -\n        p2.y * p1.x\n    );\n    const rMagnitude = external.cornerstoneMath.point.distance(p1, p2);\n    const d = twiceAreaOfTriangle / rMagnitude;\n\n    return d;\n  }\n\n  /**\n   * Gets the next handl index from a cyclical array of points.\n   *\n   * @static\n   * @public\n   * @method\n   *\n   * @param {number} currentIndex The current index.\n   * @param {number} length The number of handles in the polygon.\n   * @returns {number} The index of the next handle.\n   */\n  static getNextHandleIndex(currentIndex, length) {\n    let nextIndex;\n\n    if (currentIndex < length - 1) {\n      nextIndex = currentIndex + 1;\n    } else {\n      nextIndex = 0;\n    }\n\n    return nextIndex;\n  }\n}\n","/**\n * AddLine - Adds a line to a specifc index of a freehand tool points array.\n *\n * @param  {Object[]} points      The array of points.\n * @param  {Number} insertIndex The index to insert the line.\n * @returns {Null}             description\n */\nexport default function(points, insertIndex) {\n  // Add the line from the inserted handle to the handle after\n  if (insertIndex === points.length - 1) {\n    points[insertIndex].lines.push(points[0]);\n  } else {\n    points[insertIndex].lines.push(points[insertIndex + 1]);\n  }\n}\n","import FreehandLineFinder from './FreehandLineFinder.js';\nimport FreehandHandleData from './FreehandHandleData.js';\nimport { getToolState } from '../../stateManagement/toolState.js';\nimport external from '../../externalModules.js';\nimport addLine from './addLine.js';\n\n/**\n * Inserts or deletes a point from a freehand tool.\n * @export @public @method\n * @name insertOrDelete\n *\n * @param {Object} evt The event.\n * @param {Object} nearby Object containing information about a nearby handle.\n * @returns {void}\n */\nexport default function(evt, nearby) {\n  const eventData = evt.detail;\n\n  if (nearby && nearby.handleNearby !== null) {\n    const deleteInfo = {\n      toolIndex: nearby.toolIndex,\n      handleIndex: nearby.handleNearby,\n    };\n\n    _deletePoint.call(this, eventData, deleteInfo);\n  } else {\n    const freehandLineFinder = new FreehandLineFinder(eventData, this.name);\n    const insertInfo = freehandLineFinder.findLine();\n\n    if (insertInfo) {\n      _insertPoint.call(this, eventData, insertInfo);\n    }\n  }\n}\n\n/**\n * Deletes a point from a freehand tool.\n * @private\n * @method\n *\n * @param {Object} eventData The data object associated with the event.\n * @param {Object} deleteInfo Object containing information about which point to delete.\n * @returns {void}\n */\nfunction _deletePoint(eventData, deleteInfo) {\n  const toolData = getToolState(eventData.element, this.name);\n\n  if (toolData === undefined) {\n    return;\n  }\n\n  const deleteHandle = deleteInfo.handleIndex;\n  const toolIndex = deleteInfo.toolIndex;\n\n  // Get the toolData from insertInfo\n  const data = toolData.data[toolIndex];\n\n  const points = data.handles.points;\n\n  // Only allow delete if > 3 points\n  if (points.length <= 3) {\n    return;\n  }\n\n  // Link the line of the previous handle to the one after handles[deleteHandle];\n  if (deleteHandle === points.length - 1) {\n    points[deleteHandle - 1].lines.pop();\n    points[deleteHandle - 1].lines.push(points[0]);\n  } else if (deleteHandle === 0) {\n    points[points.length - 1].lines.pop();\n    points[points.length - 1].lines.push(points[deleteHandle + 1]);\n  } else {\n    points[deleteHandle - 1].lines.pop();\n    points[deleteHandle - 1].lines.push(points[deleteHandle + 1]);\n  }\n\n  // Remove the handle\n  points.splice(deleteHandle, 1);\n\n  data.invalidated = true;\n  data.active = true;\n  data.highlight = true;\n\n  // Force onImageRendered to fire\n  external.cornerstone.updateImage(eventData.element);\n}\n\n/**\n * Inserts a new point into a freehand tool.\n * @private\n * @method\n *\n * @param {Object} eventData - The data object associated with the event.\n * @param {Object} insertInfo - Object containing information about where to insert the point.\n * @returns {void}\n */\nfunction _insertPoint(eventData, insertInfo) {\n  const toolData = getToolState(eventData.element, this.name);\n\n  if (toolData === undefined) {\n    return;\n  }\n\n  // Get the toolData from insertInfo\n  const data = toolData.data[insertInfo.toolIndex];\n\n  const insertIndex = _getInsertionIndex(insertInfo);\n\n  if (insertIndex === Infinity) {\n    return;\n  }\n\n  const handleData = new FreehandHandleData(eventData.currentPoints.image);\n\n  const points = data.handles.points;\n\n  // Add the new handle\n  points.splice(insertIndex, 0, handleData);\n\n  // Add the line from the previous handle to the inserted handle (note the tool is now one increment longer)\n  points[insertIndex - 1].lines.pop();\n  points[insertIndex - 1].lines.push(eventData.currentPoints.image);\n\n  addLine(points, insertIndex);\n\n  data.active = true;\n  data.highlight = true;\n\n  // Force onImageRendered to fire\n  data.invalidated = true;\n  external.cornerstone.updateImage(eventData.element);\n}\n\n/**\n * Gets the handle index of a tool in which to insert the new point.\n * @private\n * @method\n *\n * @param {Object} insertInfo - Object containing information about where to insert the point.\n * @returns {void}\n */\nfunction _getInsertionIndex(insertInfo) {\n  // Get lowest index that isn't zero\n  const handleIndexArray = insertInfo.handleIndexArray;\n  let insertIndex = Infinity;\n  const arrayContainsZero = handleIndexArray.includes(0);\n\n  for (let i = 0; i < handleIndexArray.length; i++) {\n    const index = handleIndexArray[i];\n\n    if (index !== 0 && index < insertIndex) {\n      insertIndex = index;\n    }\n  }\n\n  // Treat the special case of handleIndexArray === [0,1] || [1,0]\n  if (arrayContainsZero && insertIndex === 1) {\n    insertIndex = 0;\n  }\n\n  // The insertion index shall be just after the lower index\n  insertIndex++;\n\n  return insertIndex;\n}\n","import calculateFreehandStatistics from './calculateFreehandStatistics.js';\nimport ClickedLineData from './ClickedLineData.js';\nimport freehandArea from './freehandArea.js';\nimport FreehandHandleData from './FreehandHandleData.js';\nimport freehandIntersect from './freehandIntersect.js';\nimport FreehandLineFinder from './FreehandLineFinder.js';\nimport insertOrDelete from './insertOrDelete.js';\nimport pointInFreehand from './pointInFreehand.js';\nimport addLine from './addLine.js';\n\nexport default {\n  calculateFreehandStatistics,\n  ClickedLineData,\n  freehandArea,\n  FreehandHandleData,\n  freehandIntersect,\n  FreehandLineFinder,\n  insertOrDelete,\n  pointInFreehand,\n  addLine,\n};\n","/**\n * Calculates the area of a freehand tool polygon.\n * @export @public @method\n * @name freehandArea\n *\n * @param {Object} dataHandles Data object associated with the tool.\n * @param {Object} scaling Area scaling of image.\n * @returns {number} The area of the polygon.\n */\nexport default function(dataHandles, scaling) {\n  let freeHandArea = 0;\n  let j = dataHandles.length - 1; // The last vertex is the previous one to the first\n\n  scaling = scaling || 1; // If scaling is falsy, set scaling to 1\n\n  for (let i = 0; i < dataHandles.length; i++) {\n    freeHandArea +=\n      (dataHandles[j].x + dataHandles[i].x) *\n      (dataHandles[j].y - dataHandles[i].y);\n    j = i; // Here j is previous vertex to i\n  }\n\n  return Math.abs((freeHandArea * scaling) / 2.0);\n}\n","import EVENTS from './../../events.js';\nimport external from './../../externalModules.js';\nimport BaseAnnotationTool from './../base/BaseAnnotationTool.js';\n// State\nimport {\n  addToolState,\n  getToolState,\n  removeToolState,\n} from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\nimport { state } from '../../store/index.js';\nimport triggerEvent from '../../util/triggerEvent.js';\n// Manipulators\nimport { moveHandleNearImagePoint } from '../../util/findAndMoveHelpers.js';\n// Implementation Logic\nimport pointInsideBoundingBox from '../../util/pointInsideBoundingBox.js';\nimport calculateSUV from '../../util/calculateSUV.js';\nimport numbersWithCommas from '../../util/numbersWithCommas.js';\n\n// Drawing\nimport { getNewContext, draw, drawJoinedLines } from '../../drawing/index.js';\nimport drawLinkedTextBox from '../../drawing/drawLinkedTextBox.js';\nimport drawHandles from '../../drawing/drawHandles.js';\nimport { clipToBox } from '../../util/clip.js';\nimport { hideToolCursor, setToolCursor } from '../../store/setToolCursor.js';\nimport { freehandRoiCursor } from '../cursors/index.js';\nimport freehandUtils from '../../util/freehand/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport throttle from '../../util/throttle';\n\nconst logger = getLogger('tools:annotation:FreehandRoiTool');\n\nconst {\n  insertOrDelete,\n  freehandArea,\n  calculateFreehandStatistics,\n  freehandIntersect,\n  FreehandHandleData,\n} = freehandUtils;\n\n/**\n * @public\n * @class FreehandRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing arbitrary polygonal regions of interest, and\n * measuring the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class FreehandRoiTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'FreehandRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: defaultFreehandConfiguration(),\n      svgCursor: freehandRoiCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.isMultiPartTool = true;\n\n    this._drawing = false;\n    this._dragging = false;\n    this._modifying = false;\n\n    // Create bound callback functions for private event loops\n    this._drawingMouseDownCallback = this._drawingMouseDownCallback.bind(this);\n    this._drawingMouseMoveCallback = this._drawingMouseMoveCallback.bind(this);\n    this._drawingMouseDragCallback = this._drawingMouseDragCallback.bind(this);\n    this._drawingMouseUpCallback = this._drawingMouseUpCallback.bind(this);\n    this._drawingMouseDoubleClickCallback = this._drawingMouseDoubleClickCallback.bind(\n      this\n    );\n    this._editMouseUpCallback = this._editMouseUpCallback.bind(this);\n    this._editMouseDragCallback = this._editMouseDragCallback.bind(this);\n\n    this._drawingTouchStartCallback = this._drawingTouchStartCallback.bind(\n      this\n    );\n    this._drawingTouchDragCallback = this._drawingTouchDragCallback.bind(this);\n    this._drawingDoubleTapClickCallback = this._drawingDoubleTapClickCallback.bind(\n      this\n    );\n    this._editTouchDragCallback = this._editTouchDragCallback.bind(this);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${this.name}'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    const measurementData = {\n      visible: true,\n      active: true,\n      invalidated: true,\n      color: undefined,\n      handles: {\n        points: [],\n      },\n    };\n\n    measurementData.handles.textBox = {\n      active: false,\n      hasMoved: false,\n      movesIndependently: false,\n      drawnIndependently: true,\n      allowedOutsideImage: true,\n      hasBoundingBox: true,\n    };\n\n    return measurementData;\n  }\n\n  /**\n   *\n   *\n   * @param {*} element element\n   * @param {*} data data\n   * @param {*} coords coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const validParameters = data && data.handles && data.handles.points;\n\n    if (!validParameters) {\n      throw new Error(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const isPointNearTool = this._pointNearHandle(element, data, coords);\n\n    if (isPointNearTool !== undefined) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {number} the distance in px from the provided coordinates to the\n   * closest rendered portion of the annotation. -1 if the distance cannot be\n   * calculated.\n   */\n  distanceFromPoint(element, data, coords) {\n    let distance = Infinity;\n\n    for (let i = 0; i < data.handles.points.length; i++) {\n      const distanceI = external.cornerstoneMath.point.distance(\n        data.handles.points[i],\n        coords\n      );\n\n      distance = Math.min(distance, distanceI);\n    }\n\n    // If an error caused distance not to be calculated, return -1.\n    if (distance === Infinity) {\n      return -1;\n    }\n\n    return distance;\n  }\n\n  /**\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {number} the distance in canvas units from the provided coordinates to the\n   * closest rendered portion of the annotation. -1 if the distance cannot be\n   * calculated.\n   */\n  distanceFromPointCanvas(element, data, coords) {\n    let distance = Infinity;\n\n    if (!data) {\n      return -1;\n    }\n\n    const canvasCoords = external.cornerstone.pixelToCanvas(element, coords);\n\n    const points = data.handles.points;\n\n    for (let i = 0; i < points.length; i++) {\n      const handleCanvas = external.cornerstone.pixelToCanvas(\n        element,\n        points[i]\n      );\n\n      const distanceI = external.cornerstoneMath.point.distance(\n        handleCanvas,\n        canvasCoords\n      );\n\n      distance = Math.min(distance, distanceI);\n    }\n\n    // If an error caused distance not to be calculated, return -1.\n    if (distance === Infinity) {\n      return -1;\n    }\n\n    return distance;\n  }\n\n  /**\n   *\n   *\n   *\n   * @param {Object} image image\n   * @param {Object} element element\n   * @param {Object} data data\n   *\n   * @returns {void}  void\n   */\n  updateCachedStats(image, element, data) {\n    // Define variables for the area and mean/standard deviation\n    let meanStdDev, meanStdDevSUV;\n\n    const seriesModule = external.cornerstone.metaData.get(\n      'generalSeriesModule',\n      image.imageId\n    );\n    const modality = seriesModule ? seriesModule.modality : null;\n\n    const points = data.handles.points;\n    // If the data has been invalidated, and the tool is not currently active,\n    // We need to calculate it again.\n\n    // Retrieve the bounds of the ROI in image coordinates\n    const bounds = {\n      left: points[0].x,\n      right: points[0].x,\n      bottom: points[0].y,\n      top: points[0].x,\n    };\n\n    for (let i = 0; i < points.length; i++) {\n      bounds.left = Math.min(bounds.left, points[i].x);\n      bounds.right = Math.max(bounds.right, points[i].x);\n      bounds.bottom = Math.min(bounds.bottom, points[i].y);\n      bounds.top = Math.max(bounds.top, points[i].y);\n    }\n\n    const polyBoundingBox = {\n      left: bounds.left,\n      top: bounds.bottom,\n      width: Math.abs(bounds.right - bounds.left),\n      height: Math.abs(bounds.top - bounds.bottom),\n    };\n\n    // Store the bounding box information for the text box\n    data.polyBoundingBox = polyBoundingBox;\n\n    // First, make sure this is not a color image, since no mean / standard\n    // Deviation will be calculated for color images.\n    if (!image.color) {\n      // Retrieve the array of pixels that the ROI bounds cover\n      const pixels = external.cornerstone.getPixels(\n        element,\n        polyBoundingBox.left,\n        polyBoundingBox.top,\n        polyBoundingBox.width,\n        polyBoundingBox.height\n      );\n\n      // Calculate the mean & standard deviation from the pixels and the object shape\n      meanStdDev = calculateFreehandStatistics.call(\n        this,\n        pixels,\n        polyBoundingBox,\n        data.handles.points\n      );\n\n      if (modality === 'PT') {\n        // If the image is from a PET scan, use the DICOM tags to\n        // Calculate the SUV from the mean and standard deviation.\n\n        // Note that because we are using modality pixel values from getPixels, and\n        // The calculateSUV routine also rescales to modality pixel values, we are first\n        // Returning the values to storedPixel values before calcuating SUV with them.\n        // TODO: Clean this up? Should we add an option to not scale in calculateSUV?\n        meanStdDevSUV = {\n          mean: calculateSUV(\n            image,\n            (meanStdDev.mean - image.intercept) / image.slope\n          ),\n          stdDev: calculateSUV(\n            image,\n            (meanStdDev.stdDev - image.intercept) / image.slope\n          ),\n        };\n      }\n\n      // If the mean and standard deviation values are sane, store them for later retrieval\n      if (meanStdDev && !isNaN(meanStdDev.mean)) {\n        data.meanStdDev = meanStdDev;\n        data.meanStdDevSUV = meanStdDevSUV;\n      }\n    }\n\n    // Retrieve the pixel spacing values, and if they are not\n    // Real non-zero values, set them to 1\n    const columnPixelSpacing = image.columnPixelSpacing || 1;\n    const rowPixelSpacing = image.rowPixelSpacing || 1;\n    const scaling = columnPixelSpacing * rowPixelSpacing;\n\n    const area = freehandArea(data.handles.points, scaling);\n\n    // If the area value is sane, store it for later retrieval\n    if (!isNaN(area)) {\n      data.area = area;\n    }\n\n    // Set the invalidated flag to false so that this data won't automatically be recalculated\n    data.invalidated = false;\n  }\n\n  /**\n   *\n   *\n   * @param {*} evt\n   * @returns {undefined}\n   */\n  renderToolData(evt) {\n    const eventData = evt.detail;\n\n    // If we have no toolState for this element, return immediately as there is nothing to do\n    const toolState = getToolState(evt.currentTarget, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    const { image, element } = eventData;\n    const config = this.configuration;\n    const seriesModule = external.cornerstone.metaData.get(\n      'generalSeriesModule',\n      image.imageId\n    );\n    const modality = seriesModule ? seriesModule.modality : null;\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const lineWidth = toolStyle.getToolWidth();\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      const data = toolState.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        let color = toolColors.getColorIfActive(data);\n        let fillColor;\n\n        if (data.active) {\n          if (data.handles.invalidHandlePlacement) {\n            color = config.invalidColor;\n            fillColor = config.invalidColor;\n          } else {\n            color = toolColors.getColorIfActive(data);\n            fillColor = toolColors.getFillColor();\n          }\n        } else {\n          fillColor = toolColors.getToolColor();\n        }\n\n        if (data.handles.points.length) {\n          for (let j = 0; j < data.handles.points.length; j++) {\n            const lines = [...data.handles.points[j].lines];\n            const points = data.handles.points;\n\n            if (j === points.length - 1 && !data.polyBoundingBox) {\n              // If it's still being actively drawn, keep the last line to\n              // The mouse location\n              lines.push(config.mouseLocation.handles.start);\n            }\n            drawJoinedLines(context, element, data.handles.points[j], lines, {\n              color,\n            });\n          }\n        }\n\n        // Draw handles\n\n        const options = {\n          color,\n          fill: fillColor,\n        };\n\n        if (config.alwaysShowHandles || (data.active && data.polyBoundingBox)) {\n          // Render all handles\n          options.handleRadius = config.activeHandleRadius;\n\n          if (this.configuration.drawHandles) {\n            drawHandles(context, eventData, data.handles.points, options);\n          }\n        }\n\n        if (data.canComplete) {\n          // Draw large handle at the origin if can complete drawing\n          options.handleRadius = config.completeHandleRadius;\n          const handle = data.handles.points[0];\n\n          if (this.configuration.drawHandles) {\n            drawHandles(context, eventData, [handle], options);\n          }\n        }\n\n        if (data.active && !data.polyBoundingBox) {\n          // Draw handle at origin and at mouse if actively drawing\n          options.handleRadius = config.activeHandleRadius;\n\n          if (this.configuration.drawHandles) {\n            drawHandles(\n              context,\n              eventData,\n              config.mouseLocation.handles,\n              options\n            );\n          }\n\n          const firstHandle = data.handles.points[0];\n\n          if (this.configuration.drawHandles) {\n            drawHandles(context, eventData, [firstHandle], options);\n          }\n        }\n\n        // Update textbox stats\n        if (data.invalidated === true && !data.active) {\n          if (data.meanStdDev && data.meanStdDevSUV && data.area) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        // Only render text if polygon ROI has been completed and freehand 'shiftKey' mode was not used:\n        if (data.polyBoundingBox && !data.handles.textBox.freehand) {\n          // If the textbox has not been moved by the user, it should be displayed on the right-most\n          // Side of the tool.\n          if (!data.handles.textBox.hasMoved) {\n            // Find the rightmost side of the polyBoundingBox at its vertical center, and place the textbox here\n            // Note that this calculates it in image coordinates\n            data.handles.textBox.x =\n              data.polyBoundingBox.left + data.polyBoundingBox.width;\n            data.handles.textBox.y =\n              data.polyBoundingBox.top + data.polyBoundingBox.height / 2;\n          }\n\n          const text = textBoxText.call(this, data);\n\n          drawLinkedTextBox(\n            context,\n            element,\n            data.handles.textBox,\n            text,\n            data.handles.points,\n            textBoxAnchorPoints,\n            color,\n            lineWidth,\n            0,\n            true\n          );\n        }\n      });\n    }\n\n    function textBoxText(data) {\n      const { meanStdDev, meanStdDevSUV, area } = data;\n      // Define an array to store the rows of text for the textbox\n      const textLines = [];\n\n      // If the mean and standard deviation values are present, display them\n      if (meanStdDev && meanStdDev.mean !== undefined) {\n        // If the modality is CT, add HU to denote Hounsfield Units\n        let moSuffix = '';\n\n        if (modality === 'CT') {\n          moSuffix = 'HU';\n        }\n        data.unit = moSuffix;\n\n        // Create a line of text to display the mean and any units that were specified (i.e. HU)\n        let meanText = `Mean: ${numbersWithCommas(\n          meanStdDev.mean.toFixed(2)\n        )} ${moSuffix}`;\n        // Create a line of text to display the standard deviation and any units that were specified (i.e. HU)\n        let stdDevText = `StdDev: ${numbersWithCommas(\n          meanStdDev.stdDev.toFixed(2)\n        )} ${moSuffix}`;\n\n        // If this image has SUV values to display, concatenate them to the text line\n        if (meanStdDevSUV && meanStdDevSUV.mean !== undefined) {\n          const SUVtext = ' SUV: ';\n\n          meanText +=\n            SUVtext + numbersWithCommas(meanStdDevSUV.mean.toFixed(2));\n          stdDevText +=\n            SUVtext + numbersWithCommas(meanStdDevSUV.stdDev.toFixed(2));\n        }\n\n        // Add these text lines to the array to be displayed in the textbox\n        textLines.push(meanText);\n        textLines.push(stdDevText);\n      }\n\n      // If the area is a sane value, display it\n      if (area) {\n        // Determine the area suffix based on the pixel spacing in the image.\n        // If pixel spacing is present, use millimeters. Otherwise, use pixels.\n        // This uses Char code 178 for a superscript 2\n        let suffix = ` mm${String.fromCharCode(178)}`;\n\n        if (!image.rowPixelSpacing || !image.columnPixelSpacing) {\n          suffix = ` pixels${String.fromCharCode(178)}`;\n        }\n\n        // Create a line of text to display the area and its units\n        const areaText = `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n\n        // Add this text line to the array to be displayed in the textbox\n        textLines.push(areaText);\n      }\n\n      return textLines;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      return handles;\n    }\n  }\n\n  addNewMeasurement(evt) {\n    const eventData = evt.detail;\n\n    this._startDrawing(evt);\n    this._addPoint(eventData);\n\n    preventPropagation(evt);\n  }\n\n  preMouseDownCallback(evt) {\n    const eventData = evt.detail;\n    const nearby = this._pointNearHandleAllTools(eventData);\n\n    if (eventData.event.ctrlKey) {\n      if (nearby !== undefined && nearby.handleNearby.hasBoundingBox) {\n        // Ctrl + clicked textBox, do nothing but still consume event.\n      } else {\n        insertOrDelete.call(this, evt, nearby);\n      }\n\n      preventPropagation(evt);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  handleSelectedCallback(evt, toolData, handle, interactionType = 'mouse') {\n    const { element } = evt.detail;\n    const toolState = getToolState(element, this.name);\n\n    if (handle.hasBoundingBox) {\n      // Use default move handler.\n      moveHandleNearImagePoint(evt, this, toolData, handle, interactionType);\n\n      return;\n    }\n\n    const config = this.configuration;\n\n    config.dragOrigin = {\n      x: handle.x,\n      y: handle.y,\n    };\n\n    // Iterating over handles of all toolData instances to find the indices of the selected handle\n    for (let toolIndex = 0; toolIndex < toolState.data.length; toolIndex++) {\n      const points = toolState.data[toolIndex].handles.points;\n\n      for (let p = 0; p < points.length; p++) {\n        if (points[p] === handle) {\n          config.currentHandle = p;\n          config.currentTool = toolIndex;\n        }\n      }\n    }\n\n    this._modifying = true;\n\n    this._activateModify(element);\n\n    // Interupt eventDispatchers\n    preventPropagation(evt);\n  }\n\n  /**\n   * Event handler for MOUSE_MOVE during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseMoveCallback(evt) {\n    const eventData = evt.detail;\n    const { currentPoints, element } = eventData;\n    const toolState = getToolState(element, this.name);\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n\n    const data = toolState.data[currentTool];\n    const coords = currentPoints.canvas;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n    this._checkInvalidHandleLocation(data, eventData);\n\n    // Mouse move -> Polygon Mode\n    const handleNearby = this._pointNearHandle(element, data, coords);\n    const points = data.handles.points;\n    // If there is a handle nearby to snap to\n    // (and it's not the actual mouse handle)\n\n    if (\n      handleNearby !== undefined &&\n      !handleNearby.hasBoundingBox &&\n      handleNearby < points.length - 1\n    ) {\n      config.mouseLocation.handles.start.x = points[handleNearby].x;\n      config.mouseLocation.handles.start.y = points[handleNearby].y;\n    }\n\n    // Force onImageRendered\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Event handler for MOUSE_DRAG during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseDragCallback(evt) {\n    if (!this.options.mouseButtonMask.includes(evt.detail.buttons)) {\n      return;\n    }\n\n    this._drawingDrag(evt);\n  }\n\n  /**\n   * Event handler for TOUCH_DRAG during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingTouchDragCallback(evt) {\n    this._drawingDrag(evt);\n  }\n\n  _drawingDrag(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    const toolState = getToolState(element, this.name);\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n\n    const data = toolState.data[currentTool];\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n    this._checkInvalidHandleLocation(data, eventData);\n    this._addPointPencilMode(eventData, data.handles.points);\n    this._dragging = true;\n\n    // Force onImageRendered\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Event handler for MOUSE_UP during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseUpCallback(evt) {\n    const { element } = evt.detail;\n\n    if (!this._dragging) {\n      return;\n    }\n\n    this._dragging = false;\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const toolState = getToolState(element, this.name);\n    const data = toolState.data[currentTool];\n\n    if (!freehandIntersect.end(data.handles.points) && data.canComplete) {\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n    }\n\n    preventPropagation(evt);\n\n    return;\n  }\n\n  /**\n   * Event handler for MOUSE_DOWN during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseDownCallback(evt) {\n    const eventData = evt.detail;\n    const { buttons, currentPoints, element } = eventData;\n\n    if (!this.options.mouseButtonMask.includes(buttons)) {\n      return;\n    }\n\n    const coords = currentPoints.canvas;\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const toolState = getToolState(element, this.name);\n    const data = toolState.data[currentTool];\n\n    const handleNearby = this._pointNearHandle(element, data, coords);\n\n    if (!freehandIntersect.end(data.handles.points) && data.canComplete) {\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n    } else if (handleNearby === undefined) {\n      this._addPoint(eventData);\n    }\n\n    preventPropagation(evt);\n\n    return;\n  }\n\n  /**\n   * Event handler for TOUCH_START during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingTouchStartCallback(evt) {\n    const eventData = evt.detail;\n    const { currentPoints, element } = eventData;\n\n    const coords = currentPoints.canvas;\n\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const toolState = getToolState(element, this.name);\n    const data = toolState.data[currentTool];\n\n    const handleNearby = this._pointNearHandle(element, data, coords);\n\n    if (!freehandIntersect.end(data.handles.points) && data.canComplete) {\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n    } else if (handleNearby === undefined) {\n      this._addPoint(eventData);\n    }\n\n    preventPropagation(evt);\n\n    return;\n  }\n\n  /** Ends the active drawing loop and completes the polygon.\n   *\n   * @public\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @returns {null}\n   */\n  completeDrawing(element) {\n    if (!this._drawing) {\n      return;\n    }\n    const toolState = getToolState(element, this.name);\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n\n    if (\n      !freehandIntersect.end(data.handles.points) &&\n      data.handles.points.length >= 2\n    ) {\n      const lastHandlePlaced = config.currentHandle;\n\n      data.polyBoundingBox = {};\n      this._endDrawing(element, lastHandlePlaced);\n    }\n  }\n\n  /**\n   * Event handler for MOUSE_DOUBLE_CLICK during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingMouseDoubleClickCallback(evt) {\n    const { element } = evt.detail;\n\n    this.completeDrawing(element);\n\n    preventPropagation(evt);\n  }\n\n  /**\n   * Event handler for DOUBLE_TAP during drawing event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _drawingDoubleTapClickCallback(evt) {\n    const { element } = evt.detail;\n\n    this.completeDrawing(element);\n\n    preventPropagation(evt);\n  }\n\n  /**\n   * Event handler for MOUSE_DRAG during handle drag event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _editMouseDragCallback(evt) {\n    const eventData = evt.detail;\n    const { element, buttons } = eventData;\n\n    if (!this.options.mouseButtonMask.includes(buttons)) {\n      return;\n    }\n\n    const toolState = getToolState(element, this.name);\n\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n    const currentHandle = config.currentHandle;\n    const points = data.handles.points;\n    let handleIndex = -1;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n\n    data.handles.invalidHandlePlacement = freehandIntersect.modify(\n      points,\n      currentHandle\n    );\n    data.active = true;\n    data.highlight = true;\n    points[currentHandle].x = config.mouseLocation.handles.start.x;\n    points[currentHandle].y = config.mouseLocation.handles.start.y;\n\n    handleIndex = this._getPrevHandleIndex(currentHandle, points);\n\n    if (currentHandle >= 0) {\n      const lastLineIndex = points[handleIndex].lines.length - 1;\n      const lastLine = points[handleIndex].lines[lastLineIndex];\n\n      lastLine.x = config.mouseLocation.handles.start.x;\n      lastLine.y = config.mouseLocation.handles.start.y;\n    }\n\n    // Update the image\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Event handler for TOUCH_DRAG during handle drag event loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _editTouchDragCallback(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    const toolState = getToolState(element, this.name);\n\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n    const currentHandle = config.currentHandle;\n    const points = data.handles.points;\n    let handleIndex = -1;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n\n    data.handles.invalidHandlePlacement = freehandIntersect.modify(\n      points,\n      currentHandle\n    );\n    data.active = true;\n    data.highlight = true;\n    points[currentHandle].x = config.mouseLocation.handles.start.x;\n    points[currentHandle].y = config.mouseLocation.handles.start.y;\n\n    handleIndex = this._getPrevHandleIndex(currentHandle, points);\n\n    if (currentHandle >= 0) {\n      const lastLineIndex = points[handleIndex].lines.length - 1;\n      const lastLine = points[handleIndex].lines[lastLineIndex];\n\n      lastLine.x = config.mouseLocation.handles.start.x;\n      lastLine.y = config.mouseLocation.handles.start.y;\n    }\n\n    // Update the image\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Returns the previous handle to the current one.\n   * @param {Number} currentHandle - the current handle index\n   * @param {Array} points - the handles Array of the freehand data\n   * @returns {Number} - The index of the previos handle\n   */\n  _getPrevHandleIndex(currentHandle, points) {\n    if (currentHandle === 0) {\n      return points.length - 1;\n    }\n\n    return currentHandle - 1;\n  }\n\n  /**\n   * Event handler for MOUSE_UP during handle drag event loop.\n   *\n   * @private\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _editMouseUpCallback(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n    const toolState = getToolState(element, this.name);\n\n    this._deactivateModify(element);\n\n    this._dropHandle(eventData, toolState);\n    this._endDrawing(element);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Places a handle of the freehand tool if the new location is valid.\n   * If the new location is invalid the handle snaps back to its previous position.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with the event.\n   * @param {Object} toolState - The data associated with the freehand tool.\n   * @modifies {toolState}\n   * @returns {undefined}\n   */\n  _dropHandle(eventData, toolState) {\n    const config = this.configuration;\n    const currentTool = config.currentTool;\n    const handles = toolState.data[currentTool].handles;\n    const points = handles.points;\n\n    // Don't allow the line being modified to intersect other lines\n    if (handles.invalidHandlePlacement) {\n      const currentHandle = config.currentHandle;\n      const currentHandleData = points[currentHandle];\n      let previousHandleData;\n\n      if (currentHandle === 0) {\n        const lastHandleID = points.length - 1;\n\n        previousHandleData = points[lastHandleID];\n      } else {\n        previousHandleData = points[currentHandle - 1];\n      }\n\n      // Snap back to previous position\n      currentHandleData.x = config.dragOrigin.x;\n      currentHandleData.y = config.dragOrigin.y;\n      previousHandleData.lines[0] = currentHandleData;\n\n      handles.invalidHandlePlacement = false;\n    }\n  }\n\n  /**\n   * Begining of drawing loop when tool is active and a click event happens far\n   * from existing handles.\n   *\n   * @private\n   * @param {Object} evt - The event.\n   * @returns {undefined}\n   */\n  _startDrawing(evt) {\n    const eventData = evt.detail;\n    const measurementData = this.createNewMeasurement(eventData);\n    const { element } = eventData;\n    const config = this.configuration;\n    let interactionType;\n\n    if (evt.type === EVENTS.MOUSE_DOWN_ACTIVATE) {\n      interactionType = 'Mouse';\n    } else if (evt.type === EVENTS.TOUCH_START_ACTIVE) {\n      interactionType = 'Touch';\n    }\n    this._activateDraw(element, interactionType);\n    this._getMouseLocation(eventData);\n\n    addToolState(element, this.name, measurementData);\n\n    const toolState = getToolState(element, this.name);\n\n    config.currentTool = toolState.data.length - 1;\n\n    this._activeDrawingToolReference = toolState.data[config.currentTool];\n  }\n\n  /**\n   * Adds a point on mouse click in polygon mode.\n   *\n   * @private\n   * @param {Object} eventData - data object associated with an event.\n   * @returns {undefined}\n   */\n  _addPoint(eventData) {\n    const { currentPoints, element } = eventData;\n    const toolState = getToolState(element, this.name);\n\n    // Get the toolState from the last-drawn polygon\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n\n    if (data.handles.invalidHandlePlacement) {\n      return;\n    }\n\n    const newHandleData = new FreehandHandleData(currentPoints.image);\n\n    // If this is not the first handle\n    if (data.handles.points.length) {\n      // Add the line from the current handle to the new handle\n      data.handles.points[config.currentHandle - 1].lines.push(\n        currentPoints.image\n      );\n    }\n\n    // Add the new handle\n    data.handles.points.push(newHandleData);\n\n    // Increment the current handle value\n    config.currentHandle += 1;\n\n    // Force onImageRendered to fire\n    external.cornerstone.updateImage(element);\n    this.fireModifiedEvent(element, data);\n  }\n\n  /**\n   * If in pencilMode, check the mouse position is farther than the minimum\n   * distance between points, then add a point.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with an event.\n   * @param {Object} points - Data object associated with the tool.\n   * @returns {undefined}\n   */\n  _addPointPencilMode(eventData, points) {\n    const config = this.configuration;\n    const { element } = eventData;\n    const mousePoint = config.mouseLocation.handles.start;\n\n    const handleFurtherThanMinimumSpacing = handle =>\n      this._isDistanceLargerThanSpacing(element, handle, mousePoint);\n\n    if (points.every(handleFurtherThanMinimumSpacing)) {\n      this._addPoint(eventData);\n    }\n  }\n\n  /**\n   * Ends the active drawing loop and completes the polygon.\n   *\n   * @private\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @param {Object} handleNearby - the handle nearest to the mouse cursor.\n   * @returns {undefined}\n   */\n  _endDrawing(element, handleNearby) {\n    const toolState = getToolState(element, this.name);\n    const config = this.configuration;\n    const data = toolState.data[config.currentTool];\n\n    data.active = false;\n    data.highlight = false;\n    data.handles.invalidHandlePlacement = false;\n\n    // Connect the end handle to the origin handle\n    if (handleNearby !== undefined) {\n      const points = data.handles.points;\n\n      points[config.currentHandle - 1].lines.push(points[0]);\n    }\n\n    if (this._modifying) {\n      this._modifying = false;\n      data.invalidated = true;\n    }\n\n    // Reset the current handle\n    config.currentHandle = 0;\n    config.currentTool = -1;\n    data.canComplete = false;\n\n    if (this._drawing) {\n      this._deactivateDraw(element);\n    }\n\n    external.cornerstone.updateImage(element);\n\n    this.fireModifiedEvent(element, data);\n    this.fireCompletedEvent(element, data);\n  }\n\n  /**\n   * Returns a handle of a particular tool if it is close to the mouse cursor\n   *\n   * @private\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @param {Object} data      Data object associated with the tool.\n   * @param {*} coords\n   * @returns {Number|Object|Boolean}\n   */\n  _pointNearHandle(element, data, coords) {\n    if (data.handles === undefined || data.handles.points === undefined) {\n      return;\n    }\n\n    if (data.visible === false) {\n      return;\n    }\n\n    for (let i = 0; i < data.handles.points.length; i++) {\n      const handleCanvas = external.cornerstone.pixelToCanvas(\n        element,\n        data.handles.points[i]\n      );\n\n      if (external.cornerstoneMath.point.distance(handleCanvas, coords) < 6) {\n        return i;\n      }\n    }\n\n    // Check to see if mouse in bounding box of textbox\n    if (data.handles.textBox) {\n      if (pointInsideBoundingBox(data.handles.textBox, coords)) {\n        return data.handles.textBox;\n      }\n    }\n  }\n\n  /**\n   * Returns a handle if it is close to the mouse cursor (all tools)\n   *\n   * @private\n   * @param {Object} eventData - data object associated with an event.\n   * @returns {Object}\n   */\n  _pointNearHandleAllTools(eventData) {\n    const { currentPoints, element } = eventData;\n    const coords = currentPoints.canvas;\n    const toolState = getToolState(element, this.name);\n\n    if (!toolState) {\n      return;\n    }\n\n    let handleNearby;\n\n    for (let toolIndex = 0; toolIndex < toolState.data.length; toolIndex++) {\n      handleNearby = this._pointNearHandle(\n        element,\n        toolState.data[toolIndex],\n        coords\n      );\n      if (handleNearby !== undefined) {\n        return {\n          handleNearby,\n          toolIndex,\n        };\n      }\n    }\n  }\n\n  /**\n   * Gets the current mouse location and stores it in the configuration object.\n   *\n   * @private\n   * @param {Object} eventData The data assoicated with the event.\n   * @returns {undefined}\n   */\n  _getMouseLocation(eventData) {\n    const { currentPoints, image } = eventData;\n    // Set the mouseLocation handle\n    const config = this.configuration;\n\n    config.mouseLocation.handles.start.x = currentPoints.image.x;\n    config.mouseLocation.handles.start.y = currentPoints.image.y;\n    clipToBox(config.mouseLocation.handles.start, image);\n  }\n\n  /**\n   * Returns true if the proposed location of a new handle is invalid.\n   *\n   * @private\n   * @param {Object} data      Data object associated with the tool.\n   * @param {Object} eventData The data assoicated with the event.\n   * @returns {Boolean}\n   */\n  _checkInvalidHandleLocation(data, eventData) {\n    if (data.handles.points.length < 2) {\n      return true;\n    }\n\n    let invalidHandlePlacement;\n\n    if (this._dragging) {\n      invalidHandlePlacement = this._checkHandlesPencilMode(data, eventData);\n    } else {\n      invalidHandlePlacement = this._checkHandlesPolygonMode(data, eventData);\n    }\n\n    data.handles.invalidHandlePlacement = invalidHandlePlacement;\n  }\n\n  /**\n   * Returns true if the proposed location of a new handle is invalid (in polygon mode).\n   *\n   * @private\n   *\n   * @param {Object} data - data object associated with the tool.\n   * @param {Object} eventData The data assoicated with the event.\n   * @returns {Boolean}\n   */\n  _checkHandlesPolygonMode(data, eventData) {\n    const config = this.configuration;\n    const { element } = eventData;\n    const mousePoint = config.mouseLocation.handles.start;\n    const points = data.handles.points;\n    let invalidHandlePlacement = false;\n\n    data.canComplete = false;\n\n    const mouseAtOriginHandle = this._isDistanceSmallerThanCompleteSpacingCanvas(\n      element,\n      points[0],\n      mousePoint\n    );\n\n    if (\n      mouseAtOriginHandle &&\n      !freehandIntersect.end(points) &&\n      points.length > 2\n    ) {\n      data.canComplete = true;\n      invalidHandlePlacement = false;\n    } else {\n      invalidHandlePlacement = freehandIntersect.newHandle(mousePoint, points);\n    }\n\n    return invalidHandlePlacement;\n  }\n\n  /**\n   * Returns true if the proposed location of a new handle is invalid (in pencilMode).\n   *\n   * @private\n   * @param {Object} data - data object associated with the tool.\n   * @param {Object} eventData The data associated with the event.\n   * @returns {Boolean}\n   */\n  _checkHandlesPencilMode(data, eventData) {\n    const config = this.configuration;\n    const mousePoint = config.mouseLocation.handles.start;\n    const points = data.handles.points;\n    let invalidHandlePlacement = freehandIntersect.newHandle(\n      mousePoint,\n      points\n    );\n\n    if (invalidHandlePlacement === false) {\n      invalidHandlePlacement = this._invalidHandlePencilMode(data, eventData);\n    }\n\n    return invalidHandlePlacement;\n  }\n\n  /**\n   * Returns true if the mouse position is far enough from previous points (in pencilMode).\n   *\n   * @private\n   * @param {Object} data - data object associated with the tool.\n   * @param {Object} eventData The data associated with the event.\n   * @returns {Boolean}\n   */\n  _invalidHandlePencilMode(data, eventData) {\n    const config = this.configuration;\n    const { element } = eventData;\n    const mousePoint = config.mouseLocation.handles.start;\n    const points = data.handles.points;\n\n    const mouseAtOriginHandle = this._isDistanceSmallerThanCompleteSpacingCanvas(\n      element,\n      points[0],\n      mousePoint\n    );\n\n    if (mouseAtOriginHandle) {\n      data.canComplete = true;\n\n      return false;\n    }\n\n    data.canComplete = false;\n\n    // Compare with all other handles appart from the last one\n    for (let i = 1; i < points.length - 1; i++) {\n      if (this._isDistanceSmallerThanSpacing(element, points[i], mousePoint)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns true if two points are closer than this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @returns {boolean}            True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _isDistanceSmallerThanCompleteSpacingCanvas(element, p1, p2) {\n    const p1Canvas = external.cornerstone.pixelToCanvas(element, p1);\n    const p2Canvas = external.cornerstone.pixelToCanvas(element, p2);\n\n    let completeHandleRadius;\n\n    if (this._drawingInteractionType === 'Mouse') {\n      completeHandleRadius = this.configuration.completeHandleRadius;\n    } else if (this._drawingInteractionType === 'Touch') {\n      completeHandleRadius = this.configuration.completeHandleRadiusTouch;\n    }\n\n    return this._compareDistanceToSpacing(\n      element,\n      p1Canvas,\n      p2Canvas,\n      '<',\n      completeHandleRadius\n    );\n  }\n\n  /**\n   * Returns true if two points are closer than this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @returns {boolean}            True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _isDistanceSmallerThanSpacing(element, p1, p2) {\n    return this._compareDistanceToSpacing(element, p1, p2, '<');\n  }\n\n  /**\n   * Returns true if two points are farther than this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @returns {boolean}            True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _isDistanceLargerThanSpacing(element, p1, p2) {\n    return this._compareDistanceToSpacing(element, p1, p2, '>');\n  }\n\n  /**\n   * Compares the distance between two points to this.configuration.spacing.\n   *\n   * @private\n   * @param  {Object} element     The element on which the roi is being drawn.\n   * @param  {Object} p1          The first point, in pixel space.\n   * @param  {Object} p2          The second point, in pixel space.\n   * @param  {string} comparison  The comparison to make.\n   * @param  {number} spacing     The allowed canvas spacing\n   * @returns {boolean}           True if the distance is smaller than the\n   *                              allowed canvas spacing.\n   */\n  _compareDistanceToSpacing(\n    element,\n    p1,\n    p2,\n    comparison = '>',\n    spacing = this.configuration.spacing\n  ) {\n    if (comparison === '>') {\n      return external.cornerstoneMath.point.distance(p1, p2) > spacing;\n    }\n\n    return external.cornerstoneMath.point.distance(p1, p2) < spacing;\n  }\n\n  /**\n   * Adds drawing loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @param {string} interactionType - The interactionType used for the loop.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _activateDraw(element, interactionType = 'Mouse') {\n    this._drawing = true;\n    this._drawingInteractionType = interactionType;\n\n    state.isMultiPartToolActive = true;\n    hideToolCursor(this.element);\n\n    // Polygonal Mode\n    element.addEventListener(EVENTS.MOUSE_DOWN, this._drawingMouseDownCallback);\n    element.addEventListener(EVENTS.MOUSE_MOVE, this._drawingMouseMoveCallback);\n    element.addEventListener(\n      EVENTS.MOUSE_DOUBLE_CLICK,\n      this._drawingMouseDoubleClickCallback\n    );\n\n    // Drag/Pencil Mode\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._drawingMouseDragCallback);\n    element.addEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n\n    // Touch\n    element.addEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingMouseMoveCallback\n    );\n    element.addEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingTouchStartCallback\n    );\n\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._drawingTouchDragCallback);\n    element.addEventListener(EVENTS.TOUCH_END, this._drawingMouseUpCallback);\n    element.addEventListener(\n      EVENTS.DOUBLE_TAP,\n      this._drawingDoubleTapClickCallback\n    );\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Removes drawing loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _deactivateDraw(element) {\n    this._drawing = false;\n    state.isMultiPartToolActive = false;\n    this._activeDrawingToolReference = null;\n    this._drawingInteractionType = null;\n    setToolCursor(this.element, this.svgCursor);\n\n    element.removeEventListener(\n      EVENTS.MOUSE_DOWN,\n      this._drawingMouseDownCallback\n    );\n    element.removeEventListener(\n      EVENTS.MOUSE_MOVE,\n      this._drawingMouseMoveCallback\n    );\n    element.removeEventListener(\n      EVENTS.MOUSE_DOUBLE_CLICK,\n      this._drawingMouseDoubleClickCallback\n    );\n    element.removeEventListener(\n      EVENTS.MOUSE_DRAG,\n      this._drawingMouseDragCallback\n    );\n    element.removeEventListener(EVENTS.MOUSE_UP, this._drawingMouseUpCallback);\n\n    // Touch\n    element.removeEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingTouchStartCallback\n    );\n    element.removeEventListener(\n      EVENTS.TOUCH_DRAG,\n      this._drawingTouchDragCallback\n    );\n    element.removeEventListener(\n      EVENTS.TOUCH_START,\n      this._drawingMouseMoveCallback\n    );\n    element.removeEventListener(EVENTS.TOUCH_END, this._drawingMouseUpCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Adds modify loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _activateModify(element) {\n    state.isToolLocked = true;\n\n    element.addEventListener(EVENTS.MOUSE_UP, this._editMouseUpCallback);\n    element.addEventListener(EVENTS.MOUSE_DRAG, this._editMouseDragCallback);\n    element.addEventListener(EVENTS.MOUSE_CLICK, this._editMouseUpCallback);\n\n    element.addEventListener(EVENTS.TOUCH_END, this._editMouseUpCallback);\n    element.addEventListener(EVENTS.TOUCH_DRAG, this._editTouchDragCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Removes modify loop event listeners.\n   *\n   * @private\n   * @param {Object} element - The viewport element to add event listeners to.\n   * @modifies {element}\n   * @returns {undefined}\n   */\n  _deactivateModify(element) {\n    state.isToolLocked = false;\n\n    element.removeEventListener(EVENTS.MOUSE_UP, this._editMouseUpCallback);\n    element.removeEventListener(EVENTS.MOUSE_DRAG, this._editMouseDragCallback);\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this._editMouseUpCallback);\n\n    element.removeEventListener(EVENTS.TOUCH_END, this._editMouseUpCallback);\n    element.removeEventListener(EVENTS.TOUCH_DRAG, this._editTouchDragCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  passiveCallback(element) {\n    this._closeToolIfDrawing(element);\n  }\n\n  enabledCallback(element) {\n    this._closeToolIfDrawing(element);\n  }\n\n  disabledCallback(element) {\n    this._closeToolIfDrawing(element);\n  }\n\n  _closeToolIfDrawing(element) {\n    if (this._drawing) {\n      // Actively drawing but changed mode.\n      const config = this.configuration;\n      const lastHandlePlaced = config.currentHandle;\n\n      this._endDrawing(element, lastHandlePlaced);\n      external.cornerstone.updateImage(element);\n    }\n  }\n\n  /**\n   * Fire MEASUREMENT_MODIFIED event on provided element\n   * @param {any} element which freehand data has been modified\n   * @param {any} measurementData the measurment data\n   * @returns {void}\n   */\n  fireModifiedEvent(element, measurementData) {\n    const eventType = EVENTS.MEASUREMENT_MODIFIED;\n    const eventData = {\n      toolName: this.name,\n      element,\n      measurementData,\n    };\n\n    triggerEvent(element, eventType, eventData);\n  }\n\n  fireCompletedEvent(element, measurementData) {\n    const eventType = EVENTS.MEASUREMENT_COMPLETED;\n    const eventData = {\n      toolName: this.name,\n      element,\n      measurementData,\n    };\n\n    triggerEvent(element, eventType, eventData);\n  }\n\n  // ===================================================================\n  // Public Configuration API. .\n  // ===================================================================\n\n  get spacing() {\n    return this.configuration.spacing;\n  }\n\n  set spacing(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehand spacing to a value other than a number.'\n      );\n    }\n\n    this.configuration.spacing = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get activeHandleRadius() {\n    return this.configuration.activeHandleRadius;\n  }\n\n  set activeHandleRadius(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehand activeHandleRadius to a value other than a number.'\n      );\n    }\n\n    this.configuration.activeHandleRadius = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get completeHandleRadius() {\n    return this.configuration.completeHandleRadius;\n  }\n\n  set completeHandleRadius(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehand completeHandleRadius to a value other than a number.'\n      );\n    }\n\n    this.configuration.completeHandleRadius = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get alwaysShowHandles() {\n    return this.configuration.alwaysShowHandles;\n  }\n\n  set alwaysShowHandles(value) {\n    if (typeof value !== 'boolean') {\n      throw new Error(\n        'Attempting to set freehand alwaysShowHandles to a value other than a boolean.'\n      );\n    }\n\n    this.configuration.alwaysShowHandles = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get invalidColor() {\n    return this.configuration.invalidColor;\n  }\n\n  set invalidColor(value) {\n    /*\n      It'd be easy to check if the color was e.g. a valid rgba color. However\n      it'd be difficult to check if the color was a named CSS color without\n      bloating the library, so we don't. If the canvas can't intepret the color\n      it'll show up grey.\n    */\n\n    this.configuration.invalidColor = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  /**\n   * Ends the active drawing loop and removes the polygon.\n   *\n   * @public\n   * @param {Object} element - The element on which the roi is being drawn.\n   * @returns {null}\n   */\n  cancelDrawing(element) {\n    if (!this._drawing) {\n      return;\n    }\n    const toolState = getToolState(element, this.name);\n\n    const config = this.configuration;\n\n    const data = toolState.data[config.currentTool];\n\n    data.active = false;\n    data.highlight = false;\n    data.handles.invalidHandlePlacement = false;\n\n    // Reset the current handle\n    config.currentHandle = 0;\n    config.currentTool = -1;\n    data.canComplete = false;\n\n    removeToolState(element, this.name, data);\n\n    this._deactivateDraw(element);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * New image event handler.\n   *\n   * @public\n   * @param  {Object} evt The event.\n   * @returns {null}\n   */\n  newImageCallback(evt) {\n    const config = this.configuration;\n\n    if (!(this._drawing && this._activeDrawingToolReference)) {\n      return;\n    }\n\n    // Actively drawing but scrolled to different image.\n\n    const element = evt.detail.element;\n    const data = this._activeDrawingToolReference;\n\n    data.active = false;\n    data.highlight = false;\n    data.handles.invalidHandlePlacement = false;\n\n    // Connect the end handle to the origin handle\n    const points = data.handles.points;\n\n    points[config.currentHandle - 1].lines.push(points[0]);\n\n    // Reset the current handle\n    config.currentHandle = 0;\n    config.currentTool = -1;\n    data.canComplete = false;\n\n    this._deactivateDraw(element);\n\n    external.cornerstone.updateImage(element);\n  }\n}\n\nfunction defaultFreehandConfiguration() {\n  return {\n    mouseLocation: {\n      handles: {\n        start: {\n          highlight: true,\n          active: true,\n        },\n      },\n    },\n    spacing: 1,\n    activeHandleRadius: 3,\n    completeHandleRadius: 6,\n    completeHandleRadiusTouch: 28,\n    alwaysShowHandles: false,\n    invalidColor: 'crimson',\n    currentHandle: 0,\n    currentTool: -1,\n    drawHandles: true,\n  };\n}\n\nfunction preventPropagation(evt) {\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n}\n","import BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawLine,\n} from './../../drawing/index.js';\nimport drawLinkedTextBox from './../../drawing/drawLinkedTextBox.js';\nimport drawHandles from './../../drawing/drawHandles.js';\nimport lineSegDistance from './../../util/lineSegDistance.js';\nimport { lengthCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport getPixelSpacing from '../../util/getPixelSpacing';\nimport throttle from '../../util/throttle';\n\nconst logger = getLogger('tools:annotation:LengthTool');\n\n/**\n * @public\n * @class LengthTool\n * @memberof Tools.Annotation\n * @classdesc Tool for measuring distances.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class LengthTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Length',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: lengthCursor,\n      configuration: {\n        drawHandles: true,\n      },\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${this.name}'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    const { x, y } = eventData.currentPoints.image;\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x,\n          y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x,\n          y,\n          highlight: true,\n          active: true,\n        },\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n\n      return false;\n    }\n\n    if (data.visible === false) {\n      return false;\n    }\n\n    return (\n      lineSegDistance(element, data.handles.start, data.handles.end, coords) <\n      25\n    );\n  }\n\n  updateCachedStats(image, element, data) {\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    // Set rowPixelSpacing and columnPixelSpacing to 1 if they are undefined (or zero)\n    const dx =\n      (data.handles.end.x - data.handles.start.x) * (colPixelSpacing || 1);\n    const dy =\n      (data.handles.end.y - data.handles.start.y) * (rowPixelSpacing || 1);\n\n    // Calculate the length, and create the text variable with the millimeters or pixels suffix\n    const length = Math.sqrt(dx * dx + dy * dy);\n\n    // Store the length inside the tool for outside access\n    data.length = length;\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, element } = eventData;\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    const lineWidth = toolStyle.getToolWidth();\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        // Configurable shadow\n        setShadow(context, this.configuration);\n\n        const color = toolColors.getColorIfActive(data);\n\n        // Draw the measurement line\n        drawLine(context, element, data.handles.start, data.handles.end, {\n          color,\n        });\n\n        // Draw the handles\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        if (this.configuration.drawHandles) {\n          drawHandles(context, eventData, data.handles, handleOptions);\n        }\n\n        if (!data.handles.textBox.hasMoved) {\n          const coords = {\n            x: Math.max(data.handles.start.x, data.handles.end.x),\n          };\n\n          // Depending on which handle has the largest x-value,\n          // Set the y-value for the text box\n          if (coords.x === data.handles.start.x) {\n            coords.y = data.handles.start.y;\n          } else {\n            coords.y = data.handles.end.y;\n          }\n\n          data.handles.textBox.x = coords.x;\n          data.handles.textBox.y = coords.y;\n        }\n\n        // Move the textbox slightly to the right and upwards\n        // So that it sits beside the length tool handle\n        const xOffset = 10;\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.length) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        const text = textBoxText(data, rowPixelSpacing, colPixelSpacing);\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          text,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          xOffset,\n          true\n        );\n      });\n    }\n\n    function textBoxText(data, rowPixelSpacing, colPixelSpacing) {\n      // Set the length text suffix depending on whether or not pixelSpacing is available\n      let suffix = 'mm';\n\n      if (!rowPixelSpacing || !colPixelSpacing) {\n        suffix = 'pixels';\n      }\n\n      data.unit = suffix;\n\n      return `${data.length.toFixed(2)} ${suffix}`;\n    }\n\n    function textBoxAnchorPoints(handles) {\n      const midpoint = {\n        x: (handles.start.x + handles.end.x) / 2,\n        y: (handles.start.y + handles.end.y) / 2,\n      };\n\n      return [handles.start, midpoint, handles.end];\n    }\n  }\n}\n","import external from '../externalModules.js';\n\n/**\n * Gets pixels of an RGB image.\n * @export @public @method\n * @name getRGBPixels\n *\n * @param  {HTMLElement} element The element.\n * @param  {number} x       The x position of the top-left corner of the region.\n * @param  {number} y       The y position of the top-left corner of the region.\n * @param  {number} width   The width of the region.\n * @param  {number} height  The height of the region\n * @returns {number[]}       The pixel data.\n */\nexport default function(element, x, y, width, height) {\n  if (!element) {\n    throw new Error('getRGBPixels: parameter element must not be undefined');\n  }\n\n  x = Math.round(x);\n  y = Math.round(y);\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n  const storedPixelData = [];\n  let index = 0;\n  const pixelData = enabledElement.image.getPixelData();\n  let spIndex, row, column;\n\n  if (enabledElement.image.color) {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = ((row + y) * enabledElement.image.columns + (column + x)) * 4;\n        const red = pixelData[spIndex];\n        const green = pixelData[spIndex + 1];\n        const blue = pixelData[spIndex + 2];\n        const alpha = pixelData[spIndex + 3];\n\n        storedPixelData[index++] = red;\n        storedPixelData[index++] = green;\n        storedPixelData[index++] = blue;\n        storedPixelData[index++] = alpha;\n      }\n    }\n  }\n\n  return storedPixelData;\n}\n","import external from '../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n// State\nimport { getToolState } from '../../stateManagement/toolState.js';\nimport textStyle from '../../stateManagement/textStyle.js';\nimport toolColors from '../../stateManagement/toolColors.js';\n// Drawing\nimport { getNewContext, draw } from '../../drawing/index.js';\nimport drawTextBox from '../../drawing/drawTextBox.js';\nimport drawHandles from '../../drawing/drawHandles.js';\n// Utilities\nimport getRGBPixels from '../../util/getRGBPixels.js';\nimport calculateSUV from '../../util/calculateSUV.js';\nimport { probeCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport throttle from '../../util/throttle';\n\nconst logger = getLogger('tools:annotation:ProbeTool');\n\n/**\n * @public\n * @class ProbeTool\n * @memberof Tools.Annotation\n * @classdesc Tool which provides a probe of the image data at the\n * desired position.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class ProbeTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Probe',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: probeCursor,\n      configuration: {\n        drawHandles: true,\n      },\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${this.name}'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n      },\n    };\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @param {*} data\n   * @param {*} coords\n   * @returns {Boolean}\n   */\n  pointNearTool(element, data, coords) {\n    const hasEndHandle = data && data.handles && data.handles.end;\n    const validParameters = hasEndHandle;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const probeCoords = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    return external.cornerstoneMath.point.distance(probeCoords, coords) < 5;\n  }\n\n  updateCachedStats(image, element, data) {\n    const x = Math.round(data.handles.end.x);\n    const y = Math.round(data.handles.end.y);\n\n    const stats = {};\n\n    if (x >= 0 && y >= 0 && x < image.columns && y < image.rows) {\n      stats.x = x;\n      stats.y = y;\n\n      if (image.color) {\n        stats.storedPixels = getRGBPixels(element, x, y, 1, 1);\n      } else {\n        stats.storedPixels = external.cornerstone.getStoredPixels(\n          element,\n          x,\n          y,\n          1,\n          1\n        );\n        stats.sp = stats.storedPixels[0];\n        stats.mo = stats.sp * image.slope + image.intercept;\n        stats.suv = calculateSUV(image, stats.sp);\n      }\n    }\n\n    data.cachedStats = stats;\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { handleRadius } = this.configuration;\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, element } = eventData;\n    const fontHeight = textStyle.getFontSize();\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      draw(context, context => {\n        const color = toolColors.getColorIfActive(data);\n\n        if (this.configuration.drawHandles) {\n          // Draw the handles\n          drawHandles(context, eventData, data.handles, {\n            handleRadius,\n            color,\n          });\n        }\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        let text, str;\n\n        const { x, y, storedPixels, sp, mo, suv } = data.cachedStats;\n\n        if (x >= 0 && y >= 0 && x < image.columns && y < image.rows) {\n          text = `${x}, ${y}`;\n\n          if (image.color) {\n            str = `R: ${storedPixels[0]} G: ${storedPixels[1]} B: ${\n              storedPixels[2]\n            }`;\n          } else {\n            // Draw text\n            str = `SP: ${sp} MO: ${parseFloat(mo.toFixed(3))}`;\n            if (suv) {\n              str += ` SUV: ${parseFloat(suv.toFixed(3))}`;\n            }\n          }\n\n          // Coords for text\n          const coords = {\n            // Translate the x/y away from the cursor\n            x: data.handles.end.x + 3,\n            y: data.handles.end.y - 3,\n          };\n          const textCoords = external.cornerstone.pixelToCanvas(\n            eventData.element,\n            coords\n          );\n\n          drawTextBox(\n            context,\n            str,\n            textCoords.x,\n            textCoords.y + fontHeight + 5,\n            color\n          );\n          drawTextBox(context, text, textCoords.x, textCoords.y, color);\n        }\n      });\n    }\n  }\n}\n","import external from './../../externalModules.js';\nimport BaseAnnotationTool from '../base/BaseAnnotationTool.js';\n\n// State\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport toolStyle from './../../stateManagement/toolStyle.js';\nimport toolColors from './../../stateManagement/toolColors.js';\n\n// Drawing\nimport {\n  getNewContext,\n  draw,\n  drawHandles,\n  drawRect,\n  drawLinkedTextBox,\n  setShadow,\n} from './../../drawing/index.js';\n\n// Util\nimport calculateSUV from './../../util/calculateSUV.js';\nimport getROITextBoxCoords from '../../util/getROITextBoxCoords.js';\nimport numbersWithCommas from './../../util/numbersWithCommas.js';\nimport throttle from './../../util/throttle.js';\nimport { rectangleRoiCursor } from '../cursors/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport getPixelSpacing from '../../util/getPixelSpacing';\n\nconst logger = getLogger('tools:annotation:RectangleRoiTool');\n\n/**\n * @public\n * @class RectangleRoiTool\n * @memberof Tools.Annotation\n * @classdesc Tool for drawing rectangular regions of interest, and measuring\n * the statistics of the enclosed pixels.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class RectangleRoiTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'RectangleRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        drawHandles: true,\n        // showMinMax: false,\n        // showHounsfieldUnits: true\n      },\n      svgCursor: rectangleRoiCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.throttledUpdateCachedStats = throttle(this.updateCachedStats, 110);\n  }\n\n  createNewMeasurement(eventData) {\n    const goodEventData =\n      eventData && eventData.currentPoints && eventData.currentPoints.image;\n\n    if (!goodEventData) {\n      logger.error(\n        `required eventData not supplied to tool ${this.name}'s createNewMeasurement`\n      );\n\n      return;\n    }\n\n    return {\n      visible: true,\n      active: true,\n      color: undefined,\n      invalidated: true,\n      handles: {\n        start: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: false,\n        },\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n        },\n        initialRotation: eventData.viewport.rotation,\n        textBox: {\n          active: false,\n          hasMoved: false,\n          movesIndependently: false,\n          drawnIndependently: true,\n          allowedOutsideImage: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n  }\n\n  pointNearTool(element, data, coords, interactionType) {\n    const hasStartAndEndHandles =\n      data && data.handles && data.handles.start && data.handles.end;\n    const validParameters = hasStartAndEndHandles;\n\n    if (!validParameters) {\n      logger.warn(\n        `invalid parameters supplied to tool ${this.name}'s pointNearTool`\n      );\n    }\n\n    if (!validParameters || data.visible === false) {\n      return false;\n    }\n\n    const distance = interactionType === 'mouse' ? 15 : 25;\n    const startCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.start\n    );\n    const endCanvas = external.cornerstone.pixelToCanvas(\n      element,\n      data.handles.end\n    );\n\n    const rect = {\n      left: Math.min(startCanvas.x, endCanvas.x),\n      top: Math.min(startCanvas.y, endCanvas.y),\n      width: Math.abs(startCanvas.x - endCanvas.x),\n      height: Math.abs(startCanvas.y - endCanvas.y),\n    };\n\n    const distanceToPoint = external.cornerstoneMath.rect.distanceToPoint(\n      rect,\n      coords\n    );\n\n    return distanceToPoint < distance;\n  }\n\n  updateCachedStats(image, element, data) {\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n    const modality = seriesModule.modality;\n    const pixelSpacing = getPixelSpacing(image);\n\n    const stats = _calculateStats(\n      image,\n      element,\n      data.handles,\n      modality,\n      pixelSpacing\n    );\n\n    data.cachedStats = stats;\n    data.invalidated = false;\n  }\n\n  renderToolData(evt) {\n    const toolData = getToolState(evt.currentTarget, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    const eventData = evt.detail;\n    const { image, element } = eventData;\n    const lineWidth = toolStyle.getToolWidth();\n    const { handleRadius, drawHandlesOnHover } = this.configuration;\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { rowPixelSpacing, colPixelSpacing } = getPixelSpacing(image);\n\n    // Meta\n    const seriesModule =\n      external.cornerstone.metaData.get('generalSeriesModule', image.imageId) ||\n      {};\n\n    // Pixel Spacing\n    const modality = seriesModule.modality;\n    const hasPixelSpacing = rowPixelSpacing && colPixelSpacing;\n\n    draw(context, context => {\n      // If we have tool data for this element - iterate over each set and draw it\n      for (let i = 0; i < toolData.data.length; i++) {\n        const data = toolData.data[i];\n\n        if (data.visible === false) {\n          continue;\n        }\n\n        // Configure\n        const color = toolColors.getColorIfActive(data);\n        const handleOptions = {\n          color,\n          handleRadius,\n          drawHandlesIfActive: drawHandlesOnHover,\n        };\n\n        setShadow(context, this.configuration);\n\n        // Draw\n        drawRect(\n          context,\n          element,\n          data.handles.start,\n          data.handles.end,\n          {\n            color,\n          },\n          'pixel',\n          data.handles.initialRotation\n        );\n\n        if (this.configuration.drawHandles) {\n          drawHandles(context, eventData, data.handles, handleOptions);\n        }\n\n        // Update textbox stats\n        if (data.invalidated === true) {\n          if (data.cachedStats) {\n            this.throttledUpdateCachedStats(image, element, data);\n          } else {\n            this.updateCachedStats(image, element, data);\n          }\n        }\n\n        // Default to textbox on right side of ROI\n        if (!data.handles.textBox.hasMoved) {\n          const defaultCoords = getROITextBoxCoords(\n            eventData.viewport,\n            data.handles\n          );\n\n          Object.assign(data.handles.textBox, defaultCoords);\n        }\n\n        const textBoxAnchorPoints = handles =>\n          _findTextBoxAnchorPoints(handles.start, handles.end);\n        const textBoxContent = _createTextBoxContent(\n          context,\n          image.color,\n          data.cachedStats,\n          modality,\n          hasPixelSpacing,\n          this.configuration\n        );\n\n        data.unit = _getUnit(modality, this.configuration.showHounsfieldUnits);\n\n        drawLinkedTextBox(\n          context,\n          element,\n          data.handles.textBox,\n          textBoxContent,\n          data.handles,\n          textBoxAnchorPoints,\n          color,\n          lineWidth,\n          10,\n          true\n        );\n      }\n    });\n  }\n}\n\n/**\n * TODO: This is the same method (+ GetPixels) for the other ROIs\n * TODO: The pixel filtering is the unique bit\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {{ left: number, top: number, width: number, height: number}}\n */\nfunction _getRectangleImageCoordinates(startHandle, endHandle) {\n  return {\n    left: Math.min(startHandle.x, endHandle.x),\n    top: Math.min(startHandle.y, endHandle.y),\n    width: Math.abs(startHandle.x - endHandle.x),\n    height: Math.abs(startHandle.y - endHandle.y),\n  };\n}\n\n/**\n *\n *\n * @param {*} image\n * @param {*} element\n * @param {*} handles\n * @param {*} modality\n * @param {*} pixelSpacing\n * @returns {Object} The Stats object\n */\nfunction _calculateStats(image, element, handles, modality, pixelSpacing) {\n  // Retrieve the bounds of the rectangle in image coordinates\n  const roiCoordinates = _getRectangleImageCoordinates(\n    handles.start,\n    handles.end\n  );\n\n  // Retrieve the array of pixels that the rectangle bounds cover\n  const pixels = external.cornerstone.getPixels(\n    element,\n    roiCoordinates.left,\n    roiCoordinates.top,\n    roiCoordinates.width,\n    roiCoordinates.height\n  );\n\n  // Calculate the mean & standard deviation from the pixels and the rectangle details\n  const roiMeanStdDev = _calculateRectangleStats(pixels, roiCoordinates);\n\n  let meanStdDevSUV;\n\n  if (modality === 'PT') {\n    meanStdDevSUV = {\n      mean: calculateSUV(image, roiMeanStdDev.mean, true) || 0,\n      stdDev: calculateSUV(image, roiMeanStdDev.stdDev, true) || 0,\n    };\n  }\n\n  // Calculate the image area from the rectangle dimensions and pixel spacing\n  const area =\n    roiCoordinates.width *\n    (pixelSpacing.colPixelSpacing || 1) *\n    (roiCoordinates.height * (pixelSpacing.rowPixelSpacing || 1));\n\n  return {\n    area: area || 0,\n    count: roiMeanStdDev.count || 0,\n    mean: roiMeanStdDev.mean || 0,\n    variance: roiMeanStdDev.variance || 0,\n    stdDev: roiMeanStdDev.stdDev || 0,\n    min: roiMeanStdDev.min || 0,\n    max: roiMeanStdDev.max || 0,\n    meanStdDevSUV,\n  };\n}\n\n/**\n *\n *\n * @param {*} sp\n * @param {*} rectangle\n * @returns {{ count, number, mean: number,  variance: number,  stdDev: number,  min: number,  max: number }}\n */\nfunction _calculateRectangleStats(sp, rectangle) {\n  let sum = 0;\n  let sumSquared = 0;\n  let count = 0;\n  let index = 0;\n  let min = sp ? sp[0] : null;\n  let max = sp ? sp[0] : null;\n\n  for (let y = rectangle.top; y < rectangle.top + rectangle.height; y++) {\n    for (let x = rectangle.left; x < rectangle.left + rectangle.width; x++) {\n      sum += sp[index];\n      sumSquared += sp[index] * sp[index];\n      min = Math.min(min, sp[index]);\n      max = Math.max(max, sp[index]);\n      count++; // TODO: Wouldn't this just be sp.length?\n      index++;\n    }\n  }\n\n  if (count === 0) {\n    return {\n      count,\n      mean: 0.0,\n      variance: 0.0,\n      stdDev: 0.0,\n      min: 0.0,\n      max: 0.0,\n    };\n  }\n\n  const mean = sum / count;\n  const variance = sumSquared / count - mean * mean;\n\n  return {\n    count,\n    mean,\n    variance,\n    stdDev: Math.sqrt(variance),\n    min,\n    max,\n  };\n}\n\n/**\n *\n *\n * @param {*} startHandle\n * @param {*} endHandle\n * @returns {Array.<{x: number, y: number}>}\n */\nfunction _findTextBoxAnchorPoints(startHandle, endHandle) {\n  const { left, top, width, height } = _getRectangleImageCoordinates(\n    startHandle,\n    endHandle\n  );\n\n  return [\n    {\n      // Top middle point of rectangle\n      x: left + width / 2,\n      y: top,\n    },\n    {\n      // Left middle point of rectangle\n      x: left,\n      y: top + height / 2,\n    },\n    {\n      // Bottom middle point of rectangle\n      x: left + width / 2,\n      y: top + height,\n    },\n    {\n      // Right middle point of rectangle\n      x: left + width,\n      y: top + height / 2,\n    },\n  ];\n}\n\n/**\n *\n *\n * @param {*} area\n * @param {*} hasPixelSpacing\n * @returns {string} The formatted label for showing area\n */\nfunction _formatArea(area, hasPixelSpacing) {\n  // This uses Char code 178 for a superscript 2\n  const suffix = hasPixelSpacing\n    ? ` mm${String.fromCharCode(178)}`\n    : ` px${String.fromCharCode(178)}`;\n\n  return `Area: ${numbersWithCommas(area.toFixed(2))}${suffix}`;\n}\n\nfunction _getUnit(modality, showHounsfieldUnits) {\n  return modality === 'CT' && showHounsfieldUnits !== false ? 'HU' : '';\n}\n\n/**\n * TODO: This is identical to EllipticalROI's same fn\n * TODO: We may want to make this a utility for ROIs with these values?\n *\n * @param {*} context\n * @param {*} isColorImage\n * @param {*} { area, mean, stdDev, min, max, meanStdDevSUV }\n * @param {*} modality\n * @param {*} hasPixelSpacing\n * @param {*} [options={}]\n * @returns {string[]}\n */\nfunction _createTextBoxContent(\n  context,\n  isColorImage,\n  { area, mean, stdDev, min, max, meanStdDevSUV },\n  modality,\n  hasPixelSpacing,\n  options = {}\n) {\n  const showMinMax = options.showMinMax || false;\n  const textLines = [];\n\n  const otherLines = [];\n\n  if (!isColorImage) {\n    const hasStandardUptakeValues = meanStdDevSUV && meanStdDevSUV.mean !== 0;\n    const unit = _getUnit(modality, options.showHounsfieldUnits);\n\n    let meanString = `Mean: ${numbersWithCommas(mean.toFixed(2))} ${unit}`;\n    const stdDevString = `Std Dev: ${numbersWithCommas(\n      stdDev.toFixed(2)\n    )} ${unit}`;\n\n    // If this image has SUV values to display, concatenate them to the text line\n    if (hasStandardUptakeValues) {\n      const SUVtext = ' SUV: ';\n\n      const meanSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.mean.toFixed(2)\n      )}`;\n      const stdDevSuvString = `${SUVtext}${numbersWithCommas(\n        meanStdDevSUV.stdDev.toFixed(2)\n      )}`;\n\n      const targetStringLength = Math.floor(\n        context.measureText(`${stdDevString}     `).width\n      );\n\n      while (context.measureText(meanString).width < targetStringLength) {\n        meanString += ' ';\n      }\n\n      otherLines.push(`${meanString}${meanSuvString}`);\n      otherLines.push(`${stdDevString}     ${stdDevSuvString}`);\n    } else {\n      otherLines.push(`${meanString}     ${stdDevString}`);\n    }\n\n    if (showMinMax) {\n      let minString = `Min: ${min} ${unit}`;\n      const maxString = `Max: ${max} ${unit}`;\n      const targetStringLength = hasStandardUptakeValues\n        ? Math.floor(context.measureText(`${stdDevString}     `).width)\n        : Math.floor(context.measureText(`${meanString}     `).width);\n\n      while (context.measureText(minString).width < targetStringLength) {\n        minString += ' ';\n      }\n\n      otherLines.push(`${minString}${maxString}`);\n    }\n  }\n\n  textLines.push(_formatArea(area, hasPixelSpacing));\n  otherLines.forEach(x => textLines.push(x));\n\n  return textLines;\n}\n","import BaseAnnotationTool from '../base/BaseAnnotationTool.js';\nimport external from './../../externalModules.js';\nimport pointInsideBoundingBox from './../../util/pointInsideBoundingBox.js';\nimport toolColors from './../../stateManagement/toolColors.js';\nimport { getNewContext, draw, setShadow } from './../../drawing/index.js';\nimport drawTextBox from './../../drawing/drawTextBox.js';\nimport {\n  removeToolState,\n  getToolState,\n} from './../../stateManagement/toolState.js';\nimport { textMarkerCursor } from '../cursors/index.js';\n\n/**\n * @public\n * @class TextMarkerTool\n * @memberof Tools.Annotation\n *\n * @classdesc Tool for annotating an image with text markers.\n * @extends Tools.Base.BaseAnnotationTool\n */\nexport default class TextMarkerTool extends BaseAnnotationTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'TextMarker',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        markers: [],\n        current: '',\n        ascending: true,\n        loop: false,\n        changeTextCallback,\n      },\n      svgCursor: textMarkerCursor,\n    };\n\n    super(props, defaultProps);\n    this.touchPressCallback = this._changeText.bind(this);\n    this.doubleClickCallback = this._changeText.bind(this);\n  }\n\n  createNewMeasurement(eventData) {\n    const config = this.configuration;\n\n    if (!config.current) {\n      return;\n    }\n\n    // Create the measurement data for this tool with the end handle activated\n    const measurementData = {\n      visible: true,\n      active: true,\n      text: config.current,\n      color: undefined,\n      handles: {\n        end: {\n          x: eventData.currentPoints.image.x,\n          y: eventData.currentPoints.image.y,\n          highlight: true,\n          active: true,\n          hasBoundingBox: true,\n        },\n      },\n    };\n\n    // Create a rectangle representing the image\n    const imageRect = {\n      left: 0,\n      top: 0,\n      width: eventData.image.width,\n      height: eventData.image.height,\n    };\n\n    // Check if the current handle is outside the image,\n    // If it is, prevent the handle creation\n    if (\n      !external.cornerstoneMath.point.insideRect(\n        measurementData.handles.end,\n        imageRect\n      )\n    ) {\n      return;\n    }\n\n    // Update the current marker for the next marker\n    let currentIndex = config.markers.indexOf(config.current);\n\n    const increment = config.ascending ? 1 : -1;\n\n    currentIndex += increment;\n\n    if (currentIndex >= config.markers.length) {\n      currentIndex = config.loop ? 0 : -1;\n    } else if (currentIndex < 0) {\n      currentIndex = config.loop ? config.markers.length : -1;\n    }\n\n    config.current = config.markers[currentIndex];\n\n    return measurementData;\n  }\n\n  pointNearTool(element, data, coords) {\n    if (data.visible === false) {\n      return false;\n    }\n\n    if (!data.handles.end.boundingBox) {\n      return;\n    }\n\n    const distanceToPoint = external.cornerstoneMath.rect.distanceToPoint(\n      data.handles.end.boundingBox,\n      coords\n    );\n    const insideBoundingBox = pointInsideBoundingBox(data.handles.end, coords);\n\n    return distanceToPoint < 10 || insideBoundingBox;\n  }\n\n  updateCachedStats() {\n    // Implementing to satisfy BaseAnnotationTool\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const config = this.configuration;\n\n    // If we have no toolData for this element, return immediately as there is nothing to do\n    const toolData = getToolState(eventData.element, this.name);\n\n    if (!toolData) {\n      return;\n    }\n\n    // We have tool data for this element - iterate over each one and draw it\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      const data = toolData.data[i];\n\n      if (data.visible === false) {\n        continue;\n      }\n\n      const color = toolColors.getColorIfActive(data);\n\n      draw(context, context => {\n        setShadow(context, config);\n\n        const textCoords = external.cornerstone.pixelToCanvas(\n          eventData.element,\n          data.handles.end\n        );\n\n        const options = {\n          centering: {\n            x: true,\n            y: true,\n          },\n        };\n\n        data.handles.end.boundingBox = drawTextBox(\n          context,\n          data.text,\n          textCoords.x,\n          textCoords.y - 10,\n          color,\n          options\n        );\n      });\n    }\n  }\n\n  _changeText(evt) {\n    const eventData = evt.detail;\n    const { element, currentPoints } = eventData;\n    let data;\n\n    function doneChangingTextCallback(data, updatedText, deleteTool) {\n      if (deleteTool === true) {\n        removeToolState(element, this.name, data);\n      } else {\n        data.text = updatedText;\n      }\n\n      data.active = false;\n      external.cornerstone.updateImage(element);\n    }\n\n    const config = this.configuration;\n    const coords = currentPoints.canvas;\n    const toolData = getToolState(element, this.name);\n\n    // Now check to see if there is a handle we can move\n    if (!toolData) {\n      return;\n    }\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      data = toolData.data[i];\n      if (this.pointNearTool(element, data, coords)) {\n        data.active = true;\n        external.cornerstone.updateImage(element);\n\n        // Allow relabelling via a callback\n        config.changeTextCallback(data, eventData, doneChangingTextCallback);\n\n        evt.stopImmediatePropagation();\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        return;\n      }\n    }\n  }\n}\n\n/**\n * This function is a callback to be overwriten in order to provide the wanted feature\n * modal, overlay, popup or any kind of interaction with the user to be able to update\n * the text marker label.\n *\n * @param  {Object} data\n * @param  {Object} eventData\n * @param  {doneChangingTextCallback} doneChangingTextCallback\n * @returns {void}\n */\nconst changeTextCallback = (data, eventData, doneChangingTextCallback) => {\n  // eslint-disable-next-line no-alert\n  doneChangingTextCallback(data, prompt('Change your annotation:'));\n};\n\n/**\n * @callback doneChangingTextCallback\n * @param {Object} data\n * @param {string} text - The new text\n */\n","import external from './../../externalModules.js';\nimport { BaseBrushTool } from '../base';\nimport { getModule } from './../../store/index.js';\nimport { drawBrushPixels, getCircle } from '../../util/segmentation/index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('tools:BrushTool');\n\nconst segmentationModule = getModule('segmentation');\n\n/**\n * @public\n * @class BrushTool\n * @memberof Tools.Brush\n * @classdesc Tool for drawing segmentations on an image.\n * @extends Tools.Base.BaseBrushTool\n */\nexport default class BrushTool extends BaseBrushTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Brush',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {},\n      mixins: ['renderBrushMixin'],\n    };\n\n    super(props, defaultProps);\n\n    this.touchDragCallback = this._paint.bind(this);\n  }\n\n  /**\n   * Paints the data to the labelmap.\n   *\n   * @protected\n   * @param  {Object} evt The data object associated with the event.\n   * @returns {void}\n   */\n  _paint(evt) {\n    const { configuration } = segmentationModule;\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const { rows, columns } = eventData.image;\n    const { x, y } = eventData.currentPoints.image;\n\n    if (x < 0 || x > columns || y < 0 || y > rows) {\n      return;\n    }\n\n    const radius = configuration.radius;\n    const pointerArray = getCircle(radius, rows, columns, x, y);\n\n    const { labelmap2D, labelmap3D, shouldErase } = this.paintEventData;\n\n    // Draw / Erase the active color.\n    drawBrushPixels(\n      pointerArray,\n      labelmap2D.pixelData,\n      labelmap3D.activeSegmentIndex,\n      columns,\n      shouldErase\n    );\n\n    external.cornerstone.updateImage(evt.detail.element);\n  }\n}\n","import external from './../../externalModules.js';\nimport BaseBrushTool from './../base/BaseBrushTool.js';\nimport { getModule } from './../../store/index.js';\nimport {\n  drawBrushPixels,\n  getCircle,\n  triggerLabelmapModifiedEvent,\n} from './../../util/segmentation';\nimport { getToolState } from '../../stateManagement/toolState.js';\nimport { getLogger } from '../../util/logger.js';\nimport { getDiffBetweenPixelData } from '../../util/segmentation';\n\nconst logger = getLogger('tools:SphericalBrushTool');\n\nconst segmentationModule = getModule('segmentation');\n\n/**\n * @public\n * @class BrushTool\n * @memberof Tools.Brush\n * @classdesc Tool for drawing segmentations on an image.\n * @extends Tools.Base.BaseBrushTool\n */\nexport default class SphericalBrushTool extends BaseBrushTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'SphericalBrush',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: { alwaysEraseOnClick: false },\n      mixins: ['renderBrushMixin'],\n    };\n\n    super(props, defaultProps);\n\n    this.touchDragCallback = this._paint.bind(this);\n  }\n\n  /**\n   * Initialise painting with BaseBrushTool.\n   *\n   * @abstract\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _startPainting(evt) {\n    const { configuration, getters } = segmentationModule;\n    const eventData = evt.detail;\n    const { element, image } = eventData;\n    const { cornerstone } = external;\n    const radius = configuration.radius;\n    const { rows, columns } = image;\n    const pixelSpacing = Math.max(\n      image.rowPixelSpacing,\n      image.columnPixelSpacing\n    );\n\n    const stackState = getToolState(element, 'stack');\n    const stackData = stackState.data[0];\n    const { imageIds } = stackData;\n\n    const {\n      labelmap2D,\n      labelmap3D,\n      currentImageIdIndex,\n      activeLabelmapIndex,\n    } = getters.labelmap2D(element);\n\n    const shouldErase =\n      this._isCtrlDown(eventData) || this.configuration.alwaysEraseOnClick;\n\n    const imagePlaneOfCurrentImage = cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n\n    let imagesInRange;\n\n    if (imagePlaneOfCurrentImage) {\n      const ippOfCurrentImage = imagePlaneOfCurrentImage.imagePositionPatient;\n\n      imagesInRange = this._getImagesInRange(\n        currentImageIdIndex,\n        ippOfCurrentImage,\n        imageIds,\n        radius,\n        pixelSpacing\n      );\n    } else {\n      logger.warn(\n        `No imagePlane metadata found for image, defaulting to circle brush application.`\n      );\n\n      imagesInRange = [\n        // The current image.\n        {\n          imageIdIndex: currentImageIdIndex,\n          radiusOnImage: radius,\n        },\n      ];\n    }\n\n    this.paintEventData = {\n      labelmap2D,\n      labelmap3D,\n      currentImageIdIndex,\n      activeLabelmapIndex,\n      shouldErase,\n      imagesInRange,\n    };\n\n    if (configuration.storeHistory) {\n      const previousPixeldataForImagesInRange = [];\n\n      for (let i = 0; i < imagesInRange.length; i++) {\n        const { imageIdIndex } = imagesInRange[i];\n        const labelmap2DForImageIdIndex = getters.labelmap2DByImageIdIndex(\n          labelmap3D,\n          imageIdIndex,\n          rows,\n          columns\n        );\n\n        const previousPixeldata = labelmap2DForImageIdIndex.pixelData.slice();\n\n        previousPixeldataForImagesInRange.push(previousPixeldata);\n      }\n\n      this.paintEventData.previousPixeldataForImagesInRange = previousPixeldataForImagesInRange;\n    }\n  }\n\n  /**\n   * Paints the data to the labelmap.\n   *\n   * @private\n   * @param  {Object} evt The data object associated with the event.\n   * @returns {void}\n   */\n  _paint(evt) {\n    const { getters } = segmentationModule;\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const image = eventData.image;\n    const { rows, columns } = image;\n    const { x, y } = eventData.currentPoints.image;\n\n    if (x < 0 || x > columns || y < 0 || y > rows) {\n      return;\n    }\n\n    const { labelmap3D, imagesInRange, shouldErase } = this.paintEventData;\n\n    for (let i = 0; i < imagesInRange.length; i++) {\n      const { imageIdIndex, radiusOnImage } = imagesInRange[i];\n      const pointerArray = getCircle(radiusOnImage, rows, columns, x, y);\n\n      // Cache the view on this image if its not present.\n      const labelmap2DForImageIdIndex = getters.labelmap2DByImageIdIndex(\n        labelmap3D,\n        imageIdIndex,\n        rows,\n        columns\n      );\n\n      // Draw / Erase the active color.\n      drawBrushPixels(\n        pointerArray,\n        labelmap2DForImageIdIndex.pixelData,\n        labelmap3D.activeSegmentIndex,\n        columns,\n        shouldErase\n      );\n    }\n\n    external.cornerstone.updateImage(evt.detail.element);\n  }\n\n  /**\n   * _getImagesInRange - Returns an array of image Ids within range of the\n   * sphere, and the in-plane brush radii of those images.\n   *\n   * @param  {string} currentImageIdIndex The imageId of the image displayed on\n   *                                   the cornerstone enabled element.\n   * @param  {number[]} ippOfCurrentImage   The image position patient of the image.\n   * @param  {string[]} imageIds           An array of images in the stack.\n   * @param  {number} radius             The radius of the sphere.\n   * @param  {number} pixelSpacing       The pixelSpacing.\n   * @returns {Object[]}                   An array of imageIds in range and their\n   *                                   in plane brush radii.\n   */\n  _getImagesInRange(\n    currentImageIdIndex,\n    ippOfCurrentImage,\n    imageIds,\n    radius,\n    pixelSpacing\n  ) {\n    const radiusInMM = radius * pixelSpacing;\n    const imagesInRange = [\n      // The current image.\n      {\n        imageIdIndex: currentImageIdIndex,\n        radiusOnImage: radius,\n      },\n    ];\n\n    // Check images above\n    for (let i = currentImageIdIndex + 1; i < imageIds.length; i++) {\n      const radiusOnImage = this._getRadiusOnImage(\n        imageIds[i],\n        ippOfCurrentImage,\n        radiusInMM,\n        pixelSpacing\n      );\n\n      if (!radiusOnImage) {\n        break;\n      }\n\n      imagesInRange.push({\n        imageIdIndex: i,\n        radiusOnImage,\n      });\n    }\n\n    // Check images below\n    for (let i = currentImageIdIndex - 1; i >= 0; i--) {\n      const radiusOnImage = this._getRadiusOnImage(\n        imageIds[i],\n        ippOfCurrentImage,\n        radiusInMM,\n        pixelSpacing\n      );\n\n      if (!radiusOnImage) {\n        break;\n      }\n\n      imagesInRange.push({\n        imageIdIndex: i,\n        radiusOnImage,\n      });\n    }\n\n    return imagesInRange;\n  }\n\n  /**\n   * _getRadiusOnImage - If the image is in range of the spherical brush, returns\n   *                     the in-plane brush radius on that image.\n   *\n   * @param  {string} imageId           The cornerstone imageId of the image.\n   * @param  {number[]} ippOfCurrentImage The image position patient of the current image.\n   * @param  {number} radiusInMM        The radius of the sphere in millimeters.\n   * @param  {string} pixelSpacing      The pixelspacing.\n   * @returns {number|undefined}        The brush radius on the image, undefined if\n   *                                    the image is out of range of the sphere.\n   */\n  _getRadiusOnImage(imageId, ippOfCurrentImage, radiusInMM, pixelSpacing) {\n    const imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      imageId\n    );\n\n    if (!imagePlane) {\n      logger.warn(\n        `Can't find imagePlane metadata for image, cancelling spherical brushing on: ${imageId},`\n      );\n\n      return;\n    }\n\n    const ipp = imagePlane.imagePositionPatient;\n\n    const distance = Math.sqrt(\n      Math.pow(ipp[0] - ippOfCurrentImage[0], 2) +\n        Math.pow(ipp[1] - ippOfCurrentImage[1], 2) +\n        Math.pow(ipp[2] - ippOfCurrentImage[2], 2)\n    );\n\n    if (distance > radiusInMM) {\n      // Image too far away, break!\n      return;\n    }\n\n    return Math.floor(\n      Math.sqrt(Math.pow(radiusInMM, 2) - Math.pow(distance, 2)) / pixelSpacing\n    );\n  }\n\n  _endPainting(evt) {\n    const { labelmap3D, imagesInRange } = this.paintEventData;\n    const operations = [];\n    const { configuration, setters } = segmentationModule;\n\n    for (let i = 0; i < imagesInRange.length; i++) {\n      const { imageIdIndex } = imagesInRange[i];\n      const labelmap2D = labelmap3D.labelmaps2D[imageIdIndex];\n\n      // Grab the labels on the slice.\n      const segmentSet = new Set(labelmap2D.pixelData);\n      const iterator = segmentSet.values();\n\n      const segmentsOnLabelmap = [];\n      let done = false;\n\n      while (!done) {\n        const next = iterator.next();\n\n        done = next.done;\n\n        if (!done) {\n          segmentsOnLabelmap.push(next.value);\n        }\n      }\n\n      labelmap2D.segmentsOnLabelmap = segmentsOnLabelmap;\n\n      if (configuration.storeHistory) {\n        const { previousPixeldataForImagesInRange } = this.paintEventData;\n\n        const previousPixeldata = previousPixeldataForImagesInRange[i];\n        const labelmap2D = labelmap3D.labelmaps2D[imageIdIndex];\n        const newPixelData = labelmap2D.pixelData;\n\n        operations.push({\n          imageIdIndex,\n          diff: getDiffBetweenPixelData(previousPixeldata, newPixelData),\n        });\n      }\n    }\n\n    if (configuration.storeHistory) {\n      setters.pushState(this.element, operations);\n    }\n\n    triggerLabelmapModifiedEvent(this.element);\n  }\n}\n","import { fillInsideFreehand, eraseInsideFreehand } from './index.js';\nimport {\n  getPixelPathBetweenPixels,\n  floodFill,\n} from '../../../util/segmentation';\nimport clip from '../../../util/clip';\nimport isPointInImage from '../../../util/isPointInImage';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('util:segmentation:operations:correction');\n\n/**\n * Using the stroke given, determine which action(s) to perfom:\n * - Stroke starts and ends inside a segmentation: Behaves as an subtractive freehand scissors.\n * - Stroke starts and ends outside a segmentation: Behaves as an additive freehand scissors.\n * - Stroke out-in-out: Section is subtracted.\n * - Stroke in-out-in: Section is added.\n *\n * @param  {Object} evt The cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n *\n * @returns {null}\n */\nexport default function correction(evt, operationData) {\n  const { pixelData, segmentIndex, segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `freehandSegmentationMixin`) {\n    logger.error(\n      `correction operation requires freehandSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  const nodes = snapPointsToGrid(evt, operationData);\n\n  const scissorOperation = checkIfSimpleScissorOperation(nodes, segmentIndex);\n\n  if (scissorOperation.isScissorOperation) {\n    if (scissorOperation.operation === 'fillInsideFreehand') {\n      logger.warn('The line never intersects a segment.');\n      fillInsideFreehand(evt, operationData);\n    } else if (scissorOperation.operation === 'eraseInsideFreehand') {\n      logger.warn('The line is only ever inside the segment.');\n      eraseInsideFreehand(evt, operationData);\n    }\n\n    return;\n  }\n\n  // Create binary labelmap with only this segment for calculations of each operation.\n  const workingLabelMap = new Uint8Array(pixelData.length);\n  const operations = splitLineIntoSeperateOperations(nodes, segmentIndex);\n\n  operations.forEach(operation => {\n    performOperation(operation, pixelData, workingLabelMap, segmentIndex, evt);\n  });\n}\n\n/**\n * Snap the freehand points to the labelmap grid and attach a label for each node.\n *\n * @param  {Object[]} points An array of points drawn by the user.\n * @param  {UInt16Array|Float32Array} pixelData The 2D labelmap.\n * @param  {Object} evt The cornerstone event.\n * @returns {Object[]}\n */\nfunction snapPointsToGrid(evt, operationData) {\n  const { pixelData, points } = operationData;\n\n  const { image } = evt.detail;\n  const cols = image.width;\n  const rows = image.height;\n\n  const nodes = [];\n\n  for (let i = 0; i < points.length; i++) {\n    const point = points[i];\n\n    let x = Math.floor(point.x);\n    let y = Math.floor(point.y);\n\n    // Clamp within the confines of the image.\n    x = clip(x, 0, cols - 1);\n    y = clip(y, 0, rows - 1);\n\n    const lastNode = nodes[nodes.length - 1];\n\n    // Skip double counting of closely drawn freehand points.\n    if (lastNode && x === lastNode.x && y === lastNode.y) {\n      continue;\n    }\n\n    nodes.push({\n      x,\n      y,\n      segment: pixelData[y * cols + x],\n    });\n  }\n\n  return nodes;\n}\n/**\n * Check if the operation is a simple scissors add/remove.\n * @param  {Object[]} nodes - The nodes snapped to the grid.\n * @param  {number} segmentIndex\n * @returns {Object} Information about the operation.\n *                   `isScissorOperation` is true if the operation is a simple scissor.\n *                   If `isScissorOperation` is true, `operation` says which operation.\n */\nfunction checkIfSimpleScissorOperation(nodes, segmentIndex) {\n  let allInside = true;\n  let allOutside = true;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (node.segment === segmentIndex) {\n      allOutside = false;\n    } else {\n      allInside = false;\n    }\n\n    if (!allInside && !allOutside) {\n      break;\n    }\n  }\n\n  if (allOutside) {\n    return { isScissorOperation: true, operation: 'fillInsideFreehand' };\n  } else if (allInside) {\n    return { isScissorOperation: true, operation: 'eraseInsideFreehand' };\n  }\n\n  return { isScissorOperation: false };\n}\n\n/**\n * Performs the given add/subtract operation using a modification of the Tobias Heimann Correction Algorithm:\n * The algorithm is described in full length in Tobias Heimann's diploma thesis (MBI Technical Report 145, p. 37 - 40).\n *\n * @param  {Object} operation The operation.\n * @param  {UInt16Array|Float32Array} pixelData The 2D labelmap.\n * @param  {UInt16Array|Float32Array} workingLabelMap A copy of the labelmap for processing purposes.\n * @param  {number} segmentIndex The label of the tool being used.\n * @param  {Object} evt The cornerstone event.\n */\nfunction performOperation(\n  operation,\n  pixelData,\n  workingLabelMap,\n  segmentIndex,\n  evt\n) {\n  const { width: cols, height: rows } = evt.detail.image;\n\n  const { nodes, additive } = operation;\n  const shouldFillOver = additive ? 0 : 1;\n\n  // Local getters to swap from cornerstone vector notation and flattened array indicies.\n  const getPixelIndex = pixelCoord => pixelCoord.y * cols + pixelCoord.x;\n  const getPixelCoordinateFromPixelIndex = pixelIndex => ({\n    x: pixelIndex % cols,\n    y: Math.floor(pixelIndex / cols),\n  });\n\n  if (additive) {\n    logger.warn('additive operation...');\n  } else {\n    logger.warn('subtractive operation...');\n  }\n\n  const { pixelPath, leftPath, rightPath } = getPixelPaths(nodes);\n\n  // Find extent of region for floodfill (This segment + the drawn loop).\n  // This is to reduce the extent of the outwards floodfill, which constitutes 99% of the computation.\n  const firstPixelOnPath = pixelPath[0];\n\n  const boundingBox = {\n    xMin: firstPixelOnPath.x,\n    xMax: firstPixelOnPath.x,\n    yMin: firstPixelOnPath.y,\n    yMax: firstPixelOnPath.y,\n  };\n\n  // ...whilst also initializing the workingLabelmap\n  for (let i = 0; i < workingLabelMap.length; i++) {\n    if (pixelData[i] === segmentIndex) {\n      const pixel = getPixelCoordinateFromPixelIndex(i);\n\n      expandBoundingBox(boundingBox, pixel);\n      workingLabelMap[i] = 1;\n    } else {\n      workingLabelMap[i] = 0;\n    }\n  }\n\n  // Set workingLabelmap pixelPath to 2 to form a\n  // Boundary in the working labelmap to contain the flood fills.\n  for (let i = 0; i < pixelPath.length; i++) {\n    const pixel = pixelPath[i];\n\n    workingLabelMap[getPixelIndex(pixel)] = 2;\n    expandBoundingBox(boundingBox, pixel);\n  }\n\n  clipBoundingBox(boundingBox, rows, cols);\n\n  const { xMin, xMax, yMin, yMax } = boundingBox;\n\n  // Define a getter for the fill routine to access the working label map.\n  function getter(x, y) {\n    // Check if out of bounds, as the flood filler doesn't know about the dimensions of\n    // The data structure. E.g. if cols is 10, (0,1) and (10, 0) would point to the same\n    // position in this getter.\n\n    if (x >= xMax || x < xMin || y >= yMax || y < yMin) {\n      return;\n    }\n\n    return workingLabelMap[y * cols + x];\n  }\n\n  let leftArea = 0;\n  let rightArea = 0;\n\n  // Traverse the path whilst pouring paint off the left and right sides.\n  for (let i = 0; i < leftPath.length; i++) {\n    // Left fill\n    const leftPixel = leftPath[i];\n    const leftValue = workingLabelMap[getPixelIndex(leftPixel)];\n\n    if (leftValue === shouldFillOver && isPointInImage(leftPixel, rows, cols)) {\n      leftArea += fillFromPixel(leftPixel, 3, workingLabelMap, getter, cols);\n    }\n\n    // Right fill\n    const rightPixel = rightPath[i];\n    const rightValue = workingLabelMap[getPixelIndex(rightPixel)];\n\n    if (\n      rightValue === shouldFillOver &&\n      isPointInImage(rightPixel, rows, cols)\n    ) {\n      rightArea += fillFromPixel(rightPixel, 4, workingLabelMap, getter, cols);\n    }\n  }\n\n  if (leftArea === 0 || rightArea === 0) {\n    // The areas are connected, therefore the start and end\n    // Of the path go through unconnected regions, exit.\n    return;\n  }\n\n  const replaceValue = additive ? segmentIndex : 0;\n\n  // Fill in smallest area.\n  const fillValue = leftArea < rightArea ? 3 : 4;\n\n  for (let i = 0; i < workingLabelMap.length; i++) {\n    if (workingLabelMap[i] === fillValue) {\n      pixelData[i] = replaceValue;\n    }\n  }\n\n  if (replaceValue === segmentIndex) {\n    // Fill in the path.\n    for (let i = 0; i < pixelPath.length; i++) {\n      pixelData[getPixelIndex(pixelPath[i])] = segmentIndex;\n    }\n  } else {\n    // Only erase this segment.\n    for (let i = 0; i < pixelPath.length; i++) {\n      const pixelIndex = getPixelIndex(pixelPath[i]);\n\n      if (pixelData[pixelIndex] === segmentIndex) {\n        pixelData[pixelIndex] = 0;\n      }\n    }\n  }\n}\n\n/**\n * Expands the bounding box if the pixel falls outside it.\n *\n * @param  {Object} boundingBox The bounding box.\n * @param  {Object} pixel The pixel.\n * @returns {null}\n */\nfunction expandBoundingBox(boundingBox, pixel) {\n  const { x, y } = pixel;\n\n  if (x < boundingBox.xMin) {\n    boundingBox.xMin = x;\n  }\n  if (x > boundingBox.xMax) {\n    boundingBox.xMax = x;\n  }\n  if (y < boundingBox.yMin) {\n    boundingBox.yMin = y;\n  }\n  if (y > boundingBox.yMax) {\n    boundingBox.yMax = y;\n  }\n}\n\n/**\n * Expands the bounding box by 2 px and then clips it to the image size.\n * @param  {Object} boundingBox The bounding box.\n * @param  {number} rows The number of rows.\n * @param  {number} cols The number of columns.\n * @returns {null}\n */\nfunction clipBoundingBox(boundingBox, rows, cols) {\n  // Add a 2px border to stop the floodfill starting out of bounds and exploading.\n  const border = 2;\n\n  boundingBox.xMax = Math.min(boundingBox.xMax + border, cols);\n  boundingBox.xMin = Math.max(boundingBox.xMin - border, 0);\n  boundingBox.yMax = Math.min(boundingBox.yMax + border, rows);\n  boundingBox.yMin = Math.max(boundingBox.yMin - border, 0);\n}\n\n/**\n * Performs a floodfill from the given pixel to the workingLabelMap.\n * @param  {Object} pixel The pixel.\n * @param  {number} fillValue The fill value.\n * @param  {UInt8Array} workingLabelMap The working labelmap.\n * @param  {function} getter The getter function for pixels in the labelmap.\n * @param  {number} cols The number of columns.\n * @returns {number} The number of pixels flooded.\n */\nfunction fillFromPixel(pixel, fillValue, workingLabelMap, getter, cols) {\n  const result = floodFill(getter, [pixel.x, pixel.y]);\n\n  const flooded = result.flooded;\n\n  for (let p = 0; p < flooded.length; p++) {\n    const floodedI = flooded[p];\n\n    workingLabelMap[floodedI[1] * cols + floodedI[0]] = fillValue;\n  }\n\n  return flooded.length;\n}\n\n/**\n * Interpolates the pixelPath using an obstacleless path finding algorithm.\n * @param  {Object[]} nodes The nodes to interpolate between.\n * @returns {Object} The pixelPath, and the path to the left and right of it.\n */\nfunction getPixelPaths(nodes) {\n  const pixelPath = [];\n\n  for (let i = 0; i < nodes.length - 1; i++) {\n    // Push the node.\n    pixelPath.push(nodes[i]);\n    // Path towards next node.\n    pixelPath.push(...getPixelPathBetweenPixels(nodes[i], nodes[i + 1]));\n  }\n\n  // Push final node.\n  pixelPath.push[nodes[nodes.length - 1]];\n\n  // Get paths on either side.\n\n  const leftPath = [];\n  const rightPath = [];\n\n  for (let i = 0; i < pixelPath.length - 1; i++) {\n    const { left, right } = getNodesPerpendicularToPathPixel(\n      pixelPath[i],\n      pixelPath[i + 1]\n    );\n\n    leftPath.push(left);\n    rightPath.push(right);\n  }\n\n  return { pixelPath, leftPath, rightPath };\n}\n\n/**\n * Using the current and next pixel on the path, determine the adjacent pixels\n * which are perpendicular to the path direction. (i.e. to the left and to the right).\n *\n * @param  {Object} pathPixel The pixel being queried.\n * @param  {Object} nextPathPixel the pathPixel's successor.\n *\n * @returns {Object} The coordinates of the left and right perpendicular pixels.\n */\nfunction getNodesPerpendicularToPathPixel(pathPixel, nextPathPixel) {\n  const direction = {\n    x: nextPathPixel.x - pathPixel.x,\n    y: nextPathPixel.y - pathPixel.y,\n  };\n\n  // P = pathPixel, n = nextPathPixel, L = left, R = right\n  //\n  // |n| |R|  | |n| |  |L| |n|\n  // | |p| |  |L|p|R|  | |p| |\n  // |L| | |  | | | |  | | |R|\n  //\n  // | |R| |           | |L| |\n  // |n|p| |           | |p|n|\n  // | |L| |           | |R| |\n  //\n  // |R| | |  | | | |  | | |L|\n  // | |p| |  |R|p|L|  | |p| |\n  // |n| |L|  | |n| |  |R| |n|\n\n  if (direction.x === -1 && direction.y === 1) {\n    return {\n      left: { x: pathPixel.x - 1, y: pathPixel.y - 1 },\n      right: { x: pathPixel.x + 1, y: pathPixel.y + 1 },\n    };\n  } else if (direction.x === 0 && direction.y === 1) {\n    return {\n      left: { x: pathPixel.x - 1, y: pathPixel.y },\n      right: { x: pathPixel.x + 1, y: pathPixel.y },\n    };\n  } else if (direction.x === 1 && direction.y === 1) {\n    return {\n      left: { x: pathPixel.x - 1, y: pathPixel.y + 1 },\n      right: { x: pathPixel.x + 1, y: pathPixel.y - 1 },\n    };\n  } else if (direction.x === 1 && direction.y === 0) {\n    return {\n      left: { x: pathPixel.x, y: pathPixel.y + 1 },\n      right: { x: pathPixel.x, y: pathPixel.y - 1 },\n    };\n  } else if (direction.x === 1 && direction.y === -1) {\n    return {\n      left: { x: pathPixel.x + 1, y: pathPixel.y + 1 },\n      right: { x: pathPixel.x - 1, y: pathPixel.y - 1 },\n    };\n  } else if (direction.x === 0 && direction.y === -1) {\n    return {\n      left: { x: pathPixel.x + 1, y: pathPixel.y },\n      right: { x: pathPixel.x - 1, y: pathPixel.y },\n    };\n  } else if (direction.x === -1 && direction.y === -1) {\n    return {\n      left: { x: pathPixel.x + 1, y: pathPixel.y - 1 },\n      right: { x: pathPixel.x - 1, y: pathPixel.y + 1 },\n    };\n  } else if (direction.x === -1 && direction.y === 0) {\n    return {\n      left: { x: pathPixel.x, y: pathPixel.y - 1 },\n      right: { x: pathPixel.x, y: pathPixel.y + 1 },\n    };\n  }\n\n  logger.error(\n    `Unable to find left and right paths for flood fill `,\n    pathPixel,\n    nextPathPixel,\n    direction\n  );\n}\n\n/**\n * Splits the path of nodes into seperate add/remove operations.\n *\n * @param  {Object[]} nodes The array of nodes.\n * @param  {number} segmentIndex The label value to replace.\n * @returns {{additive: boolean, nodes: []}[]} An array of operations to perform,\n *                                             whether they are `additive` and the\n *                                             corresponding `nodes` of the operation.\n */\nfunction splitLineIntoSeperateOperations(nodes, segmentIndex) {\n  // Check whether the first node is inside a segment of the appropriate label or not.\n  let isLabel = nodes[0].segment === segmentIndex;\n\n  const operations = [];\n\n  operations.push({\n    additive: !isLabel,\n    nodes: [],\n  });\n\n  let operationIndex = 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (isLabel) {\n      operations[operationIndex].nodes.push(node);\n\n      if (node.segment !== segmentIndex) {\n        // Start a new operation and include the last two nodes.\n\n        operationIndex++;\n        isLabel = !isLabel;\n        operations.push({\n          additive: true,\n          nodes: [],\n        });\n        operations[operationIndex].nodes.push(nodes[i - 1]);\n        operations[operationIndex].nodes.push(node);\n      }\n    } else {\n      operations[operationIndex].nodes.push(node);\n\n      if (node.segment === segmentIndex) {\n        // Start a new operation and add include the last two nodes.\n        operationIndex++;\n        isLabel = !isLabel;\n        operations.push({\n          additive: false,\n          nodes: [],\n        });\n        operations[operationIndex].nodes.push(nodes[i - 1]);\n        operations[operationIndex].nodes.push(node);\n      }\n    }\n  }\n\n  // Trim the first and last entries, as they don't form full operations.\n\n  operations.pop();\n  operations.shift();\n\n  return operations;\n}\n","/**\n * Checks whether a point is inside a polygon\n *\n * {@link https://github.com/substack/point-in-polygon/blob/master/index.js}\n * ray-casting algorithm based on\n * {@link http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html}\n *\n * @param {Array} point The point [x1, y1]\n * @param {Array} vs The vertices [[x1, y1], [x2, y2], ...] of the Polygon\n * @returns {boolean}\n */\nexport default function isPointInPolygon(point, vs) {\n  const x = point[0];\n  const y = point[1];\n  let inside = false;\n\n  for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n    const xi = vs[i][0];\n    const yi = vs[i][1];\n\n    const xj = vs[j][0];\n    const yj = vs[j][1];\n\n    const intersect =\n      yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n    if (intersect) {\n      inside = !inside;\n    }\n  }\n\n  return inside;\n}\n","import {\n  getBoundingBoxAroundPolygon,\n  eraseInsideShape,\n  eraseOutsideShape,\n} from '../../../util/segmentation';\nimport isPointInPolygon from '../../../util/isPointInPolygon';\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('util:segmentation:operations:eraseInsideFreehand');\n\n/**\n * Erase all pixels labeled with the activeSegmentIndex,\n * in the region defined by evt.operationData.points.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nfunction eraseFreehand(evt, operationData, inside = true) {\n  const { points, segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `freehandSegmentationMixin`) {\n    logger.error(\n      `eraseInsideFreehand operation requires freehandSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  const { image } = evt.detail;\n  const vertices = points.map(a => [a.x, a.y]);\n  const [topLeft, bottomRight] = getBoundingBoxAroundPolygon(vertices, image);\n\n  inside\n    ? eraseInsideShape(\n        evt,\n        operationData,\n        point => isPointInPolygon([point.x, point.y], vertices),\n        topLeft,\n        bottomRight\n      )\n    : eraseOutsideShape(\n        evt,\n        operationData,\n        point => isPointInPolygon([point.x, point.y], vertices),\n        topLeft,\n        bottomRight\n      );\n}\n\n/**\n * Erase all pixels inside/outside the region defined by `operationData.points`.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function eraseInsideFreehand(evt, operationData) {\n  eraseFreehand(evt, operationData, true);\n}\n\n/**\n * Erase all pixels outside the region defined by `operationData.points`.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function eraseOutsideFreehand(evt, operationData) {\n  eraseFreehand(evt, operationData, false);\n}\n","import { getLogger } from '../../../util/logger';\nimport {\n  getBoundingBoxAroundPolygon,\n  eraseInsideShape,\n  eraseOutsideBoundingBox,\n} from '../../../util/segmentation';\n\nconst logger = getLogger('util:segmentation:operations:eraseInsideRectangle');\n\n/**\n * Erase all pixels inside the region defined by the rectangle.\n * @param  {Object} evt The Cornerstone event.\n * @param  {Object} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nfunction eraseRectangle(evt, operationData, inside = true) {\n  const { points, segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `rectangleSegmentationMixin`) {\n    logger.error(\n      `eraseInsideRectangle operation requires rectangleSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  const eventData = evt.detail;\n\n  // Loop through all pixels in the segmentation data mask\n\n  // Obtain the bounding box of the entire drawing so that\n  // we can subset our search.\n  const { image } = eventData;\n  const vertices = points.map(a => [a.x, a.y]);\n  const [topLeft, bottomRight] = getBoundingBoxAroundPolygon(vertices, image);\n\n  inside\n    ? eraseInsideShape(evt, operationData, () => true, topLeft, bottomRight)\n    : eraseOutsideBoundingBox(evt, operationData, topLeft, bottomRight);\n}\n\n/**\n * Erase all pixels inside/outside the region defined by the rectangle.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function eraseInsideRectangle(evt, operationData) {\n  eraseRectangle(evt, operationData, true);\n}\n\n/**\n * Erase all pixels outside the region defined by the rectangle.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function eraseOutsideRectangle(evt, operationData) {\n  eraseRectangle(evt, operationData, false);\n}\n","import {\n  getBoundingBoxAroundPolygon,\n  fillInsideShape,\n  fillOutsideShape,\n} from '../../../util/segmentation';\nimport isPointInPolygon from '../../../util/isPointInPolygon';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('util:segmentation:operations:fillInsideFreehand');\n\n/**\n * Fill all pixels inside/outside the region defined by\n * `operationData.points` with the `activeSegmentIndex` value.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nfunction fillFreehand(evt, operationData, inside = true) {\n  const { points, segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `freehandSegmentationMixin`) {\n    logger.error(\n      `eraseInsideFreehand operation requires freehandSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  // Obtain the bounding box of the entire drawing so that\n  // we can subset our search. Outside of the bounding box,\n  // everything is outside of the polygon.\n  const { image } = evt.detail;\n  const vertices = points.map(a => [a.x, a.y]);\n  const [topLeft, bottomRight] = getBoundingBoxAroundPolygon(vertices, image);\n\n  inside\n    ? fillInsideShape(\n        evt,\n        operationData,\n        point => isPointInPolygon([point.x, point.y], vertices),\n        topLeft,\n        bottomRight\n      )\n    : fillOutsideShape(\n        evt,\n        operationData,\n        point => isPointInPolygon([point.x, point.y], vertices),\n        topLeft,\n        bottomRight\n      );\n}\n\n/**\n * Fill all pixels inside/outside the region defined by `operationData.points`.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function fillInsideFreehand(evt, operationData) {\n  fillFreehand(evt, operationData, true);\n}\n\n/**\n * Fill all pixels outside the region defined by `operationData.points`.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function fillOutsideFreehand(evt, operationData) {\n  fillFreehand(evt, operationData, false);\n}\n","import {\n  fillInsideShape,\n  getBoundingBoxAroundPolygon,\n  fillOutsideBoundingBox,\n} from '../../../util/segmentation';\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('util:segmentation:operations:fillInsideRectangle');\n\n/**\n * FillInsideRectangle - Fill all pixels inside/outside the region defined\n * by the rectangle.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nfunction fillRectangle(evt, operationData, inside = true) {\n  const { points, segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `rectangleSegmentationMixin`) {\n    logger.error(\n      `eraseInsideRectangle operation requires rectangleSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  const { image } = evt.detail;\n  const vertices = points.map(a => [a.x, a.y]);\n  const [topLeft, bottomRight] = getBoundingBoxAroundPolygon(vertices, image);\n\n  inside\n    ? fillInsideShape(evt, operationData, () => true, topLeft, bottomRight)\n    : fillOutsideBoundingBox(evt, operationData, topLeft, bottomRight);\n}\n\n/**\n * Fill all pixels inside/outside the region defined by the rectangle.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function fillInsideRectangle(evt, operationData) {\n  fillRectangle(evt, operationData, true);\n}\n\n/**\n * Fill all pixels outside the region defined by the rectangle.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function fillOutsideRectangle(evt, operationData) {\n  fillRectangle(evt, operationData, false);\n}\n","import {\n  getBoundingBoxAroundCircle,\n  fillInsideShape,\n  fillOutsideShape,\n} from '../../../util/segmentation';\nimport { pointInEllipse } from '../../../util/ellipse';\nimport getCircleCoords from '../../../util/getCircleCoords';\n\nimport { getLogger } from '../../../util/logger';\n\nconst logger = getLogger('util:segmentation:operations:fillCircle');\n\n/**\n * Fill all pixels inside/outside the region defined by the circle.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nfunction fillCircle(evt, operationData, inside = true) {\n  const { segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `circleSegmentationMixin`) {\n    logger.error(\n      `fillInsideCircle operation requires circleSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  const eventData = evt.detail;\n  const [topLeft, bottomRight] = getBoundingBoxAroundCircle(evt);\n  const ellipse = getCircleCoords(\n    eventData.handles.start,\n    eventData.handles.end\n  );\n\n  inside\n    ? fillInsideShape(\n        evt,\n        operationData,\n        point => pointInEllipse(ellipse, point),\n        topLeft,\n        bottomRight\n      )\n    : fillOutsideShape(\n        evt,\n        operationData,\n        point => pointInEllipse(ellipse, point),\n        topLeft,\n        bottomRight\n      );\n}\n\n/**\n * Fill all pixels inside/outside the region defined by the circle.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function fillInsideCircle(evt, operationData) {\n  fillCircle(evt, operationData, true);\n}\n\n/**\n * Fill all pixels outside the region defined by the circle.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function fillOutsideCircle(evt, operationData) {\n  fillCircle(evt, operationData, false);\n}\n","import { pointInEllipse } from '../../../util/ellipse';\nimport { getLogger } from '../../../util/logger';\nimport {\n  eraseInsideShape,\n  eraseOutsideShape,\n  getBoundingBoxAroundCircle,\n} from '../../../util/segmentation';\nimport getCircleCoords from '../../../util/getCircleCoords.js';\n\nconst logger = getLogger('util:segmentation:operations:eraseInsideCircle');\n\n/**\n * EraseInsideCircle - Erase all pixels labeled with the activeSegmentIndex,\n * in the region defined by the circle.\n * @param  {Object} evt The Cornerstone event.\n * @param {Object}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nfunction eraseCircle(evt, operationData, inside = true) {\n  const { segmentationMixinType } = operationData;\n\n  if (segmentationMixinType !== `circleSegmentationMixin`) {\n    logger.error(\n      `eraseInsideCircle operation requires circleSegmentationMixin operationData, recieved ${segmentationMixinType}`\n    );\n\n    return;\n  }\n\n  const eventData = evt.detail;\n  const [topLeft, bottomRight] = getBoundingBoxAroundCircle(evt);\n  const ellipse = getCircleCoords(\n    eventData.handles.start,\n    eventData.handles.end\n  );\n\n  inside\n    ? eraseInsideShape(\n        evt,\n        operationData,\n        point => pointInEllipse(ellipse, point),\n        topLeft,\n        bottomRight\n      )\n    : eraseOutsideShape(\n        evt,\n        operationData,\n        point => pointInEllipse(ellipse, point),\n        topLeft,\n        bottomRight\n      );\n}\n\n/**\n * Erase all pixels inside/outside the region defined by the circle.\n * @param  {} evt The Cornerstone event.\n * @param {}  operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function eraseInsideCircle(evt, operationData) {\n  eraseCircle(evt, operationData, true);\n}\n\n/**\n * Erase all pixels outside the region defined by the circle.\n * @param  {} evt The Cornerstone event.\n * @param  {} operationData An object containing the `pixelData` to\n *                          modify, the `segmentIndex` and the `points` array.\n * @returns {null}\n */\nexport function eraseOutsideCircle(evt, operationData) {\n  eraseCircle(evt, operationData, false);\n}\n","import {\n  freehandFillInsideCursor,\n  freehandFillOutsideCursor,\n  freehandEraseOutsideCursor,\n  freehandEraseInsideCursor,\n} from '../cursors';\nimport {\n  fillInsideFreehand,\n  fillOutsideFreehand,\n  eraseOutsideFreehand,\n  eraseInsideFreehand,\n} from './strategies';\nimport { BaseTool } from '../base';\n\n/**\n * @public\n * @class FreehandScissorsTool\n * @memberof Tools\n * @classdesc Tool for manipulating labelmap data by drawing a freehand polygon.\n * @extends Tools.Base.BaseTool\n */\nexport default class FreehandScissorsTool extends BaseTool {\n  /** @inheritdoc */\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'FreehandScissors',\n      strategies: {\n        FILL_INSIDE: fillInsideFreehand,\n        FILL_OUTSIDE: fillOutsideFreehand,\n        ERASE_OUTSIDE: eraseOutsideFreehand,\n        ERASE_INSIDE: eraseInsideFreehand,\n      },\n      cursors: {\n        FILL_INSIDE: freehandFillInsideCursor,\n        FILL_OUTSIDE: freehandFillOutsideCursor,\n        ERASE_OUTSIDE: freehandEraseOutsideCursor,\n        ERASE_INSIDE: freehandEraseInsideCursor,\n      },\n      defaultStrategy: 'FILL_INSIDE',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: freehandFillInsideCursor,\n      mixins: ['freehandSegmentationMixin'],\n    };\n\n    super(props, defaultProps);\n  }\n}\n","import { BaseTool } from '../base';\nimport {\n  fillInsideRectangle,\n  fillOutsideRectangle,\n  eraseOutsideRectangle,\n  eraseInsideRectangle,\n} from './strategies';\nimport {\n  segRectangleFillInsideCursor,\n  segRectangleFillOutsideCursor,\n  segRectangleEraseInsideCursor,\n  segRectangleEraseOutsideCursor,\n} from '../cursors';\n\n/**\n * @public\n * @class RectangleScissorsTool\n * @memberof Tools\n * @classdesc Tool for manipulating labelmap data by drawing a rectangle.\n * @extends Tools.Base.BaseTool\n */\nexport default class RectangleScissorsTool extends BaseTool {\n  /** @inheritdoc */\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'RectangleScissors',\n      strategies: {\n        FILL_INSIDE: fillInsideRectangle,\n        FILL_OUTSIDE: fillOutsideRectangle,\n        ERASE_OUTSIDE: eraseOutsideRectangle,\n        ERASE_INSIDE: eraseInsideRectangle,\n      },\n      cursors: {\n        FILL_INSIDE: segRectangleFillInsideCursor,\n        FILL_OUTSIDE: segRectangleFillOutsideCursor,\n        ERASE_OUTSIDE: segRectangleEraseOutsideCursor,\n        ERASE_INSIDE: segRectangleEraseInsideCursor,\n      },\n      defaultStrategy: 'FILL_INSIDE',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      mixins: ['rectangleSegmentationMixin'],\n    };\n\n    super(props, defaultProps);\n  }\n}\n","import { BaseTool } from '../base';\nimport {\n  fillInsideCircle,\n  fillOutsideCircle,\n  eraseOutsideCircle,\n  eraseInsideCircle,\n} from './strategies';\nimport {\n  segCircleFillInsideCursor,\n  segCircleFillOutsideCursor,\n  segCircleEraseOutsideCursor,\n  segCircleEraseInsideCursor,\n} from '../cursors';\n\n/**\n * @public\n * @class CircleScissorsTool\n * @memberof Tools\n * @classdesc Tool for manipulating labelmap data by drawing a circle.\n * @extends Tools.Base.BaseTool\n */\nexport default class CircleScissorsTool extends BaseTool {\n  /** @inheritdoc */\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'CircleScissors',\n      strategies: {\n        FILL_INSIDE: fillInsideCircle,\n        FILL_OUTSIDE: fillOutsideCircle,\n        ERASE_OUTSIDE: eraseOutsideCircle,\n        ERASE_INSIDE: eraseInsideCircle,\n      },\n      cursors: {\n        FILL_INSIDE: segCircleFillInsideCursor,\n        FILL_OUTSIDE: segCircleFillOutsideCursor,\n        ERASE_OUTSIDE: segCircleEraseOutsideCursor,\n        ERASE_INSIDE: segCircleEraseInsideCursor,\n      },\n      defaultStrategy: 'FILL_INSIDE',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: segCircleFillInsideCursor,\n      mixins: ['circleSegmentationMixin'],\n    };\n\n    super(props, defaultProps);\n  }\n}\n","import { BaseTool } from '../base';\nimport { freehandFillInsideCursor } from '../cursors';\nimport { correction } from './strategies';\n\n/**\n * @public\n * @class CorrectionScissorsTool\n * @memberof Tools\n * @classdesc Tool for correcting segments on a labelmap.\n * @extends Tools.Base.BaseTool\n */\nexport default class CorrectionScissorsTool extends BaseTool {\n  /** @inheritdoc */\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'CorrectionScissors',\n      strategies: {\n        CORRECTION: correction,\n      },\n      cursors: {\n        CORRECTION: freehandFillInsideCursor,\n      },\n      defaultStrategy: 'CORRECTION',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: freehandFillInsideCursor,\n      mixins: ['polylineSegmentationMixin'],\n    };\n\n    super(props, defaultProps);\n  }\n}\n","import external from '../externalModules.js';\n\nconst _DEFAULT_LOAD_HANDLER = 'DEFAULT';\n\nconst defaultStartLoadHandler = {};\nconst defaultEndLoadHandler = {};\nconst defaultErrorLoadingHandler = {};\n\nfunction _getUUIDFromElement(element) {\n  if (!element) {\n    return _DEFAULT_LOAD_HANDLER;\n  }\n  const uuid = external.cornerstone.getEnabledElement(element).uuid;\n\n  if (!uuid) {\n    throw new Error('Something went wrong when getting uuid from element');\n  }\n\n  return uuid;\n}\n\nfunction setStartLoadHandler(handler, element = undefined) {\n  if (!handler) {\n    throw new Error('The Handler function must be defined');\n  }\n  const uuid = _getUUIDFromElement(element);\n\n  defaultStartLoadHandler[uuid] = handler;\n}\n\nfunction getStartLoadHandler(element) {\n  const uuid = _getUUIDFromElement(element);\n\n  return (\n    defaultStartLoadHandler[uuid] ||\n    defaultStartLoadHandler[_DEFAULT_LOAD_HANDLER]\n  );\n}\n\nfunction setEndLoadHandler(handler, element = undefined) {\n  if (!handler) {\n    throw new Error('The Handler function must be defined');\n  }\n  const uuid = _getUUIDFromElement(element);\n\n  defaultEndLoadHandler[uuid] = handler;\n}\n\nfunction getEndLoadHandler(element) {\n  const uuid = _getUUIDFromElement(element);\n\n  return (\n    defaultEndLoadHandler[uuid] || defaultEndLoadHandler[_DEFAULT_LOAD_HANDLER]\n  );\n}\n\nfunction setErrorLoadingHandler(handler, element = undefined) {\n  if (!handler) {\n    throw new Error('The Handler function must be defined');\n  }\n  const uuid = _getUUIDFromElement(element);\n\n  defaultErrorLoadingHandler[uuid] = handler;\n}\n\nfunction getErrorLoadingHandler(element) {\n  const uuid = _getUUIDFromElement(element);\n\n  return (\n    defaultErrorLoadingHandler[uuid] ||\n    defaultErrorLoadingHandler[_DEFAULT_LOAD_HANDLER]\n  );\n}\n\nfunction removeHandlers(element) {\n  const uuid = _getUUIDFromElement(element);\n\n  delete defaultStartLoadHandler[uuid];\n  delete defaultEndLoadHandler[uuid];\n  delete defaultErrorLoadingHandler[uuid];\n}\n\nconst loadHandlerManager = {\n  setStartLoadHandler,\n  getStartLoadHandler,\n  setEndLoadHandler,\n  getEndLoadHandler,\n  setErrorLoadingHandler,\n  getErrorLoadingHandler,\n  removeHandlers,\n};\n\nexport default loadHandlerManager;\n","import loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport convertToVector3 from '../util/convertToVector3.js';\nimport { imagePointToPatientPoint } from '../util/pointProjector.js';\nimport external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { crosshairsCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class CrosshairsTool\n * @memberof Tools\n *\n * @classdesc Tool for finding the slice in another element corresponding to the\n * image position in a synchronized image series.\n * @extends Tools.Base.BaseTool\n */\n\nexport default class CrosshairsTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Crosshairs',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: crosshairsCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.eventHandler = this._chooseLocation.bind(this);\n    this.mouseClickCallback = this.eventHandler; // Ok\n    this.mouseDragCallback = this.eventHandler; // Ok\n    this.touchDragCallback = this.eventHandler; // Ok\n    this.postTouchStartCallback = this.eventHandler;\n  }\n\n  _chooseLocation(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    // Prevent CornerstoneToolsTouchStartActive from killing any press events\n    evt.stopImmediatePropagation();\n\n    // If we have no synchronizationContext for this element, return immediately as there is nothing to do\n    const { synchronizationContext } = this.options;\n\n    if (!synchronizationContext) {\n      return;\n    }\n\n    // Get current element target information\n    const sourceElement = element;\n    const sourceEnabledElement = external.cornerstone.getEnabledElement(\n      sourceElement\n    );\n    const sourceImageId = sourceEnabledElement.image.imageId;\n    const sourceImagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      sourceImageId\n    );\n\n    if (!sourceImagePlane) {\n      return;\n    }\n\n    // Get currentPoints from mouse cursor on selected element\n    const sourceImagePoint = eventData.currentPoints.image;\n\n    // Transfer this to a patientPoint given imagePlane metadata\n    const patientPoint = imagePointToPatientPoint(\n      sourceImagePoint,\n      sourceImagePlane\n    );\n\n    // Get the enabled elements associated with this synchronization context\n    const enabledElements = synchronizationContext.getSourceElements();\n\n    // Iterate over each synchronized element\n    enabledElements.forEach(function(targetElement) {\n      // Don't do anything if the target is the same as the source\n      if (targetElement === sourceElement) {\n        return;\n      }\n\n      let minDistance = Number.MAX_VALUE;\n      let newImageIdIndex = -1;\n\n      const stackToolDataSource = getToolState(targetElement, 'stack');\n\n      if (stackToolDataSource === undefined) {\n        return;\n      }\n\n      const stackData = stackToolDataSource.data[0];\n\n      // Find within the element's stack the closest image plane to selected location\n      stackData.imageIds.forEach(function(imageId, index) {\n        const imagePlane = external.cornerstone.metaData.get(\n          'imagePlaneModule',\n          imageId\n        );\n\n        // Skip if the image plane is not ready\n        if (\n          !imagePlane ||\n          !imagePlane.imagePositionPatient ||\n          !imagePlane.rowCosines ||\n          !imagePlane.columnCosines\n        ) {\n          return;\n        }\n\n        const imagePosition = convertToVector3(imagePlane.imagePositionPatient);\n        const row = convertToVector3(imagePlane.rowCosines);\n        const column = convertToVector3(imagePlane.columnCosines);\n        const normal = column.clone().cross(row.clone());\n        const distance = Math.abs(\n          normal.clone().dot(imagePosition) - normal.clone().dot(patientPoint)\n        );\n\n        if (distance < minDistance) {\n          minDistance = distance;\n          newImageIdIndex = index;\n        }\n      });\n\n      if (newImageIdIndex === stackData.currentImageIdIndex) {\n        return;\n      }\n\n      // Switch the loaded image to the required image\n      if (\n        newImageIdIndex !== -1 &&\n        stackData.imageIds[newImageIdIndex] !== undefined\n      ) {\n        const startLoadingHandler = loadHandlerManager.getStartLoadHandler(\n          targetElement\n        );\n        const endLoadingHandler = loadHandlerManager.getEndLoadHandler(\n          targetElement\n        );\n        const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n          targetElement\n        );\n\n        if (startLoadingHandler) {\n          startLoadingHandler(targetElement);\n        }\n\n        let loader;\n\n        if (stackData.preventCache === true) {\n          loader = external.cornerstone.loadImage(\n            stackData.imageIds[newImageIdIndex]\n          );\n        } else {\n          loader = external.cornerstone.loadAndCacheImage(\n            stackData.imageIds[newImageIdIndex]\n          );\n        }\n\n        loader.then(\n          function(image) {\n            const viewport = external.cornerstone.getViewport(targetElement);\n\n            stackData.currentImageIdIndex = newImageIdIndex;\n            external.cornerstone.displayImage(targetElement, image, viewport);\n            if (endLoadingHandler) {\n              endLoadingHandler(targetElement, image);\n            }\n          },\n          function(error) {\n            const imageId = stackData.imageIds[newImageIdIndex];\n\n            if (errorLoadingHandler) {\n              errorLoadingHandler(targetElement, imageId, error);\n            }\n          }\n        );\n      }\n    });\n  }\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n\n/**\n * @public\n * @class DoubleTapFitToWindowTool\n * @memberof Tools\n *\n * @classdesc Tool which calls the external cornerstone.fitToWindow() function\n * on double tap.\n * @extends Tools.Base.BaseTool\n */\nexport default class DoubleTapFitToWindowTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'DoubleTapFitToWindow',\n      supportedInteractionTypes: ['DoubleTap'],\n    };\n\n    super(props, defaultProps);\n  }\n\n  doubleTapCallback(evt) {\n    const eventData = evt.detail;\n\n    external.cornerstone.fitToWindow(eventData.element);\n  }\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n\nimport textStyle from '../stateManagement/textStyle.js';\nimport toolColors from '../stateManagement/toolColors.js';\nimport getRGBPixels from '../util/getRGBPixels.js';\nimport calculateSUV from '../util/calculateSUV.js';\nimport {\n  getNewContext,\n  draw,\n  setShadow,\n  drawCircle,\n} from '../drawing/index.js';\nimport drawTextBox, { textBoxWidth } from '../drawing/drawTextBox.js';\nimport { probeCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class DragProbeTool\n * @memberof Tools\n *\n * @classdesc Tool which provides a probe of the image data at the\n * input position on drag.\n * @extends Tools.Base.BaseTool\n */\nexport default class DragProbeTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'DragProbe',\n      strategies: {\n        default: defaultStrategy,\n        minimal: minimalStrategy,\n      },\n      defaultStrategy: 'default',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: probeCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.touchDragCallback = this._movingEventCallback.bind(this);\n    this.touchEndCallback = this._endMovingEventCallback.bind(this);\n\n    this.mouseDragCallback = this._movingEventCallback.bind(this);\n    this.mouseUpCallback = this._endMovingEventCallback.bind(this);\n\n    this.dragEventData = {};\n  }\n\n  _movingEventCallback(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    this.dragEventData = eventData;\n    external.cornerstone.updateImage(element);\n  }\n\n  _endMovingEventCallback(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    this.dragEventData = {};\n    external.cornerstone.updateImage(element);\n  }\n\n  renderToolData(evt) {\n    if (!this.dragEventData.currentPoints) {\n      return;\n    }\n\n    if (\n      evt &&\n      evt.detail &&\n      Boolean(Object.keys(this.dragEventData.currentPoints).length)\n    ) {\n      evt.detail.currentPoints = this.dragEventData.currentPoints;\n      this.applyActiveStrategy(evt);\n    }\n  }\n}\n\n/**\n * Default strategy will pick the exactly point of mouse/touch interact and display the probe data.\n *\n * @param  {Object} evt Image rendered event\n * @returns {void}\n */\nfunction defaultStrategy(evt) {\n  const config = this.configuration;\n  const cornerstone = external.cornerstone;\n  const eventData = evt.detail;\n  const { element, image, currentPoints, canvasContext } = eventData;\n\n  const context = getNewContext(canvasContext.canvas);\n\n  const color = toolColors.getActiveColor();\n  const fontHeight = textStyle.getFontSize();\n\n  const x = Math.round(currentPoints.image.x);\n  const y = Math.round(currentPoints.image.y);\n\n  if (x < 0 || y < 0 || x >= image.columns || y >= image.rows) {\n    return;\n  }\n\n  draw(context, context => {\n    setShadow(context, config);\n\n    const text = `${x}, ${y}`;\n    let storedPixels;\n    let str;\n\n    if (image.color) {\n      storedPixels = getRGBPixels(element, x, y, 1, 1);\n      str = `R: ${storedPixels[0]} G: ${storedPixels[1]} B: ${\n        storedPixels[2]\n      } A: ${storedPixels[3]}`;\n    } else {\n      storedPixels = cornerstone.getStoredPixels(element, x, y, 1, 1);\n      const sp = storedPixels[0];\n      const mo = sp * image.slope + image.intercept;\n      const suv = calculateSUV(image, sp);\n\n      // Draw text\n      str = `SP: ${sp} MO: ${parseFloat(mo.toFixed(3))}`;\n      if (suv) {\n        str += ` SUV: ${parseFloat(suv.toFixed(3))}`;\n      }\n    }\n\n    // Draw text 5px away from cursor\n    const textCoords = {\n      x: currentPoints.canvas.x + 5,\n      y: currentPoints.canvas.y - 5,\n    };\n\n    drawTextBox(\n      context,\n      str,\n      textCoords.x,\n      textCoords.y + fontHeight + 5,\n      color\n    );\n    drawTextBox(context, text, textCoords.x, textCoords.y, color);\n  });\n}\n\n/**\n * Minimal strategy will position a circle and use the center of the circle to calculate and display probe data.\n *\n * @param  {Object} evt Image rendered event\n * @returns {void}\n */\nfunction minimalStrategy(evt) {\n  const config = this.configuration;\n  const cornerstone = external.cornerstone;\n  const eventData = evt.detail;\n  const {\n    element,\n    image,\n    currentPoints,\n    canvasContext,\n    isTouchEvent,\n  } = eventData;\n\n  const context = getNewContext(canvasContext.canvas);\n  const color = toolColors.getActiveColor();\n\n  let pageCoordY = currentPoints.page.y - textStyle.getFontSize() / 2;\n\n  if (isTouchEvent) {\n    pageCoordY = currentPoints.page.y - textStyle.getFontSize() * 4;\n  }\n  const toolCoords = cornerstone.pageToPixel(\n    element,\n    currentPoints.page.x,\n    pageCoordY\n  );\n\n  if (\n    toolCoords.x < 0 ||\n    toolCoords.y < 0 ||\n    toolCoords.x >= image.columns ||\n    toolCoords.y >= image.rows\n  ) {\n    return;\n  }\n\n  draw(context, context => {\n    setShadow(context, config);\n\n    const seriesModule = cornerstone.metaData.get(\n      'generalSeriesModule',\n      image.imageId\n    );\n    const modality = seriesModule && seriesModule.modality;\n\n    let storedPixels;\n    let text = '';\n\n    if (image.color) {\n      storedPixels = getRGBPixels(element, toolCoords.x, toolCoords.y, 1, 1);\n      text = `R: ${storedPixels[0]} G: ${storedPixels[1]} B: ${\n        storedPixels[2]\n      }`;\n    } else {\n      storedPixels = cornerstone.getStoredPixels(\n        element,\n        toolCoords.x,\n        toolCoords.y,\n        1,\n        1\n      );\n      const sp = storedPixels[0];\n      const mo = sp * image.slope + image.intercept;\n\n      const modalityPixelValueText = parseFloat(mo.toFixed(2));\n\n      if (modality === 'CT') {\n        text += `HU: ${modalityPixelValueText}`;\n      } else if (modality === 'PT') {\n        text += modalityPixelValueText;\n        const suv = calculateSUV(image, sp);\n\n        if (suv) {\n          text += ` SUV: ${parseFloat(suv.toFixed(2))}`;\n        }\n      } else {\n        text += modalityPixelValueText;\n      }\n    }\n\n    // Prepare text\n    const textCoords = cornerstone.pixelToCanvas(element, toolCoords);\n\n    // Translate the x/y away from the cursor\n    let translation = {\n      x: 12,\n      y: -(textStyle.getFontSize() + 10) / 2,\n    };\n\n    const handleRadius = 6;\n    const padding = 5;\n    const width = textBoxWidth(context, text, padding);\n\n    if (isTouchEvent) {\n      translation = {\n        x: -width / 2,\n        y: -textStyle.getFontSize() - 10 - 2 * handleRadius,\n      };\n    }\n\n    drawCircle(context, element, textCoords, handleRadius, { color }, 'canvas');\n    drawTextBox(\n      context,\n      text,\n      textCoords.x + translation.x,\n      textCoords.y + translation.y,\n      color\n    );\n  });\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { getToolState, removeToolState } from '../stateManagement/toolState.js';\nimport { state } from '../store/index.js';\nimport { eraserCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class EraserTool\n * @memberof Tools\n *\n * @classdesc Tool for deleting the data of other Annotation Tools.\n * @extends Tools.Base.BaseTool\n */\nexport default class EraserTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Eraser',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: eraserCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.preMouseDownCallback = this._deleteAllNearbyTools.bind(this);\n    this.preTouchStartCallback = this._deleteAllNearbyTools.bind(this);\n  }\n\n  _deleteAllNearbyTools(evt) {\n    const coords = evt.detail.currentPoints.canvas;\n    const element = evt.detail.element;\n\n    state.tools.forEach(function(tool) {\n      const toolState = getToolState(element, tool.name);\n\n      if (toolState) {\n        // Modifying in a foreach? Probably not ideal\n        toolState.data.forEach(function(data) {\n          if (\n            typeof tool.pointNearTool === 'function' &&\n            tool.pointNearTool(element, data, coords)\n          ) {\n            removeToolState(element, tool.name, data);\n            external.cornerstone.updateImage(element);\n          }\n        });\n      }\n    });\n\n    const consumeEvent = true;\n\n    return consumeEvent;\n  }\n}\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport toolColors from '../stateManagement/toolColors.js';\nimport drawHandles from '../drawing/drawHandles.js';\nimport { state } from '../store/index.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport { clipToBox } from '../util/clip.js';\nimport getToolForElement from '../store/getToolForElement.js';\nimport BaseTool from './base/BaseTool.js';\nimport { hideToolCursor, setToolCursor } from '../store/setToolCursor.js';\nimport { freehandRoiSculptorCursor } from './cursors/index.js';\n\nimport freehandUtils from '../util/freehand/index.js';\n\nconst { FreehandHandleData } = freehandUtils;\n\n/**\n * @public\n * @class FreehandRoiSculptorTool\n * @memberof Tools\n *\n * @classdesc Tool for easily sculpting annotations drawn with\n * the FreehandRoiTool.\n * @extends Tools.Base.BaseTool\n */\nexport default class FreehandRoiSculptorTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'FreehandRoiSculptor',\n      referencedToolName: 'FreehandRoi',\n      supportedInteractionTypes: ['Mouse', 'Touch', 'DoubleTap'],\n      mixins: ['activeOrDisabledBinaryTool'],\n      configuration: getDefaultFreehandRoiSculptorToolConfiguration(),\n      svgCursor: freehandRoiSculptorCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.updateOnMouseMove = true;\n    this.isMultiPartTool = true;\n    this.referencedToolName = this.initialConfiguration.referencedToolName;\n\n    this._active = false;\n\n    // Create bound functions for private event loop.\n    this.activeMouseUpCallback = this.activeMouseUpCallback.bind(this);\n    this.activeTouchEndCallback = this.activeTouchEndCallback.bind(this);\n    this.activeMouseDragCallback = this.activeMouseDragCallback.bind(this);\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n\n    if (this.configuration.currentTool === null) {\n      return false;\n    }\n\n    const element = eventData.element;\n    const config = this.configuration;\n\n    const toolState = getToolState(element, this.referencedToolName);\n    const data = toolState.data[config.currentTool];\n\n    if (!data) {\n      return false;\n    }\n\n    if (this._active) {\n      const context = eventData.canvasContext.canvas.getContext('2d');\n      const options = {\n        color: this.configuration.dragColor,\n        fill: null,\n        handleRadius: this._toolSizeCanvas,\n      };\n\n      drawHandles(\n        context,\n        eventData,\n        this.configuration.mouseLocation.handles,\n        options\n      );\n    } else if (this.configuration.showCursorOnHover && !this._recentTouchEnd) {\n      this._renderHoverCursor(evt);\n    }\n  }\n\n  doubleClickCallback(evt) {\n    const eventData = evt.detail;\n\n    this._selectFreehandTool(eventData);\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  doubleTapCallback(evt) {\n    const eventData = evt.detail;\n\n    this._selectFreehandTool(eventData);\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  preTouchStartCallback(evt) {\n    this._initialiseSculpting(evt);\n\n    return true;\n  }\n\n  /**\n   * Event handler for MOUSE_DOWN.\n   *\n   * @param {Object} evt - The event.\n   * @returns {boolean}\n   */\n  preMouseDownCallback(evt) {\n    if (!this.options.mouseButtonMask.includes(evt.detail.buttons)) {\n      return;\n    }\n\n    this._initialiseSculpting(evt);\n\n    return true;\n  }\n\n  /**\n   * Event handler for MOUSE_DRAG during the active loop.\n   *\n   * @event\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  activeMouseDragCallback(evt) {\n    const config = this.configuration;\n\n    if (!this._active) {\n      return;\n    }\n\n    const eventData = evt.detail;\n    const toolState = getToolState(eventData.element, this.referencedToolName);\n\n    if (!toolState) {\n      return;\n    }\n\n    const points = toolState.data[config.currentTool].handles.points;\n\n    // Set the mouseLocation handle\n    this._getMouseLocation(eventData);\n    this._sculpt(eventData, points);\n\n    // Update the image\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Event handler for MOUSE_UP during the active loop.\n   *\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  activeMouseUpCallback(evt) {\n    this._activeEnd(evt);\n  }\n\n  /**\n   * Event handler for TOUCH_END during the active loop.\n   *\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  activeTouchEndCallback(evt) {\n    this._activeEnd(evt);\n\n    this._deselectAllTools(evt);\n    this._recentTouchEnd = true;\n  }\n\n  _activeEnd(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const config = this.configuration;\n\n    this._active = false;\n\n    state.isMultiPartToolActive = false;\n\n    this._getMouseLocation(eventData);\n    this._invalidateToolData(eventData);\n\n    config.mouseUpRender = true;\n\n    this._deactivateSculpt(element);\n\n    // Update the image\n    external.cornerstone.updateImage(eventData.element);\n\n    preventPropagation(evt);\n  }\n\n  /**\n   * Renders the cursor\n   *\n   * @private\n   * @param  {type} evt description\n   * @returns {void}\n   */\n  _renderHoverCursor(evt) {\n    const eventData = evt.detail;\n    const element = eventData.element;\n    const context = eventData.canvasContext.canvas.getContext('2d');\n\n    const toolState = getToolState(element, this.referencedToolName);\n    const data = toolState.data[this.configuration.currentTool];\n\n    this._recentTouchEnd = false;\n\n    let coords;\n\n    if (this.configuration.mouseUpRender) {\n      coords = this.configuration.mouseLocation.handles.start;\n      this.configuration.mouseUpRender = false;\n    } else {\n      coords = state.mousePositionImage;\n    }\n\n    const freehandRoiTool = getToolForElement(element, this.referencedToolName);\n    let radiusCanvas = freehandRoiTool.distanceFromPointCanvas(\n      element,\n      data,\n      coords\n    );\n\n    this.configuration.mouseLocation.handles.start.x = coords.x;\n    this.configuration.mouseLocation.handles.start.y = coords.y;\n\n    if (this.configuration.limitRadiusOutsideRegion) {\n      const unlimitedRadius = radiusCanvas;\n\n      radiusCanvas = this._limitCursorRadiusCanvas(eventData, radiusCanvas);\n\n      // Fade if distant\n      if (\n        unlimitedRadius >\n        this.configuration.hoverCursorFadeDistance * radiusCanvas\n      ) {\n        context.globalAlpha = this.configuration.hoverCursorFadeAlpha;\n      }\n    }\n\n    const options = {\n      fill: null,\n      color: this.configuration.hoverColor,\n      handleRadius: radiusCanvas,\n    };\n\n    drawHandles(\n      context,\n      eventData,\n      this.configuration.mouseLocation.handles,\n      options\n    );\n\n    if (this.configuration.limitRadiusOutsideRegion) {\n      context.globalAlpha = 1.0; // Reset drawing alpha for other draw calls.\n    }\n  }\n\n  /**\n   * Event handler for NEW_IMAGE event.\n   *\n   * @public\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  newImageCallback(evt) {\n    this._deselectAllTools(evt);\n  }\n\n  /**\n   * Event handler for switching mode to enabled.\n   *\n   * @public\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  enabledCallback(evt) {\n    this._deselectAllTools(evt);\n  }\n\n  /**\n   * Event handler for switching mode to passive.\n   *\n   * @public\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  passiveCallback(evt) {\n    this._deselectAllTools(evt);\n  }\n\n  /**\n   * Event handler for switching mode to disabled.\n   *\n   * @public\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  disabledCallback(evt) {\n    this._deselectAllTools(evt);\n  }\n\n  /**\n   * Select the freehand tool to be edited.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with the event.\n   * @returns {void}\n   */\n  _selectFreehandTool(eventData) {\n    const config = this.configuration;\n    const element = eventData.element;\n    const closestToolIndex = this._getClosestFreehandToolOnElement(\n      element,\n      eventData\n    );\n\n    if (closestToolIndex === undefined) {\n      return;\n    }\n\n    config.currentTool = closestToolIndex;\n    hideToolCursor(element);\n  }\n\n  /**\n   * Activate the selected freehand tool and deactivate others.\n   *\n   * @private\n   * @param {Object} element - The parent element of the freehand tool.\n   * @param {Number} toolIndex - The ID of the freehand tool.\n   * @returns {void}\n   */\n  _activateFreehandTool(element, toolIndex) {\n    const toolState = getToolState(element, this.referencedToolName);\n    const data = toolState.data;\n    const config = this.configuration;\n\n    config.currentTool = toolIndex;\n\n    for (let i = 0; i < data.length; i++) {\n      if (i === toolIndex) {\n        data[i].active = true;\n      } else {\n        data[i].active = false;\n      }\n    }\n  }\n\n  /**\n   * Choose the tool radius from the mouse position relative to the active freehand\n   * tool, and begin sculpting.\n   *\n   * @private\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  _initialiseSculpting(evt) {\n    const eventData = evt.detail;\n    const config = this.configuration;\n    const element = eventData.element;\n\n    if (config.currentTool === null) {\n      this._selectFreehandTool(eventData);\n\n      if (config.currentTool === null) {\n        return;\n      }\n    }\n\n    this._active = true;\n\n    // Interupt event dispatcher\n    state.isMultiPartToolActive = true;\n\n    this._configureToolSize(eventData);\n    this._getMouseLocation(eventData);\n\n    this._activateFreehandTool(element, config.currentTool);\n    this._activateSculpt(element);\n\n    external.cornerstone.updateImage(eventData.element);\n  }\n\n  /**\n   * Sculpts the freehand ROI with the circular freehandSculpter tool, moving,\n   * adding and removing handles as necessary.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with the event.\n   * @param {Object} points - Array of points.\n   * @returns {void}\n   */\n  _sculpt(eventData, points) {\n    const config = this.configuration;\n\n    this._sculptData = {\n      element: eventData.element,\n      image: eventData.image,\n      mousePoint: eventData.currentPoints.image,\n      points,\n      toolSize: this._toolSizeImage,\n      minSpacing: config.minSpacing,\n      maxSpacing: Math.max(this._toolSizeImage, config.minSpacing * 2),\n    };\n\n    // Push existing handles radially away from tool.\n    const pushedHandles = this._pushHandles();\n    // Insert new handles in sparsely populated areas of the\n    // Pushed part of the contour.\n\n    if (pushedHandles.first !== undefined) {\n      this._insertNewHandles(pushedHandles);\n      // If any handles have been pushed very close together or even overlap,\n      // Combine these into a single handle.\n      this._consolidateHandles();\n    }\n  }\n\n  /**\n   * _pushHandles -Pushes the points radially away from the mouse if they are\n   * contained within the circle defined by the freehandSculpter's toolSize and\n   * the mouse position.\n   *\n   * @returns {Object}  The first and last pushedHandles.\n   */\n  _pushHandles() {\n    const { points, mousePoint, toolSize } = this._sculptData;\n    const pushedHandles = {};\n\n    for (let i = 0; i < points.length; i++) {\n      const distanceToHandle = external.cornerstoneMath.point.distance(\n        points[i],\n        mousePoint\n      );\n\n      if (distanceToHandle > toolSize) {\n        continue;\n      }\n\n      // Push point if inside circle, to edge of circle.\n      this._pushOneHandle(i, distanceToHandle);\n      if (pushedHandles.first === undefined) {\n        pushedHandles.first = i;\n        pushedHandles.last = i;\n      } else {\n        pushedHandles.last = i;\n      }\n    }\n\n    return pushedHandles;\n  }\n\n  /**\n   * Pushes one handle.\n   *\n   * @private\n   * @param {number} i - The index of the handle to push.\n   * @param {number} distanceToHandle - The distance between the mouse cursor and the handle.\n   * @returns {void}\n   */\n  _pushOneHandle(i, distanceToHandle) {\n    const { points, mousePoint, toolSize, image } = this._sculptData;\n    const handle = points[i];\n\n    const directionUnitVector = {\n      x: (handle.x - mousePoint.x) / distanceToHandle,\n      y: (handle.y - mousePoint.y) / distanceToHandle,\n    };\n\n    const position = {\n      x: mousePoint.x + toolSize * directionUnitVector.x,\n      y: mousePoint.y + toolSize * directionUnitVector.y,\n    };\n\n    clipToBox(position, image);\n\n    handle.x = position.x;\n    handle.y = position.y;\n\n    // Push lines\n    const lastHandleIndex = this.constructor._getPreviousHandleIndex(\n      i,\n      points.length\n    );\n\n    points[lastHandleIndex].lines.pop();\n    points[lastHandleIndex].lines.push(handle);\n  }\n\n  /**\n   * Inserts additional handles in sparsely sampled regions of the contour. The\n   * new handles are placed on the circle defined by the the freehandSculpter's\n   * toolSize and the mouse position.\n   * @private\n   * @param {Array} pushedHandles\n   * @returns {void}\n   */\n  _insertNewHandles(pushedHandles) {\n    const indiciesToInsertAfter = this._findNewHandleIndicies(pushedHandles);\n    let newIndexModifier = 0;\n\n    for (let i = 0; i < indiciesToInsertAfter.length; i++) {\n      const insertIndex = indiciesToInsertAfter[i] + 1 + newIndexModifier;\n\n      this._insertHandleRadially(insertIndex);\n      newIndexModifier++;\n    }\n  }\n\n  /**\n   * Returns an array of indicies that describe where new handles should be\n   * inserted (where the distance between subsequent handles is >\n   * config.maxSpacing).\n   *\n   * @private\n   * @param {Object} pushedHandles - The first and last handles that were pushed.\n   * @returns {Object} An array of indicies that describe where new handles should be inserted.\n   */\n  _findNewHandleIndicies(pushedHandles) {\n    const { points, maxSpacing } = this._sculptData;\n    const indiciesToInsertAfter = [];\n\n    for (let i = pushedHandles.first; i <= pushedHandles.last; i++) {\n      this._checkSpacing(i, points, indiciesToInsertAfter, maxSpacing);\n    }\n\n    const pointAfterLast = this.constructor._getNextHandleIndex(\n      pushedHandles.last,\n      points.length\n    );\n\n    // Check points before and after those pushed.\n    if (pointAfterLast !== pushedHandles.first) {\n      this._checkSpacing(\n        pointAfterLast,\n        points,\n        indiciesToInsertAfter,\n        maxSpacing\n      );\n\n      const pointBeforeFirst = this.constructor._getPreviousHandleIndex(\n        pushedHandles.first,\n        points.length\n      );\n\n      if (pointBeforeFirst !== pointAfterLast) {\n        this._checkSpacing(\n          pointBeforeFirst,\n          points,\n          indiciesToInsertAfter,\n          maxSpacing\n        );\n      }\n    }\n\n    return indiciesToInsertAfter;\n  }\n\n  /**\n   * _checkSpacing - description\n   *@modifies indiciesToInsertAfter\n   *\n   * @param {number} i - The index to check.\n   * @param {Object} points - The points.\n   * @param {Array} indiciesToInsertAfter - The working list of indicies to insert new points after.\n   * @param {number} maxSpacing\n   * @returns {void}\n   */\n  _checkSpacing(i, points, indiciesToInsertAfter, maxSpacing) {\n    const nextHandleIndex = this.constructor._getNextHandleIndex(\n      i,\n      points.length\n    );\n\n    const distanceToNextHandle = external.cornerstoneMath.point.distance(\n      points[i],\n      points[nextHandleIndex]\n    );\n\n    if (distanceToNextHandle > maxSpacing) {\n      indiciesToInsertAfter.push(i);\n    }\n  }\n\n  /**\n   * Inserts a handle on the surface of the circle defined by toolSize and the\n   * mousePoint.\n   *\n   * @private\n   * @param {number} insertIndex - The index to insert the new handle.\n   * @returns {void}\n   */\n  _insertHandleRadially(insertIndex) {\n    const { points } = this._sculptData;\n\n    const previousIndex = insertIndex - 1;\n    const nextIndex = this.constructor._getNextHandleIndexBeforeInsert(\n      insertIndex,\n      points.length\n    );\n    const insertPosition = this._getInsertPosition(\n      insertIndex,\n      previousIndex,\n      nextIndex\n    );\n    const handleData = new FreehandHandleData(insertPosition);\n\n    points.splice(insertIndex, 0, handleData);\n\n    // Add the line from the previous handle to the inserted handle (note the tool is now one increment longer)\n    points[previousIndex].lines.pop();\n    points[previousIndex].lines.push(points[insertIndex]);\n\n    freehandUtils.addLine(points, insertIndex);\n  }\n\n  /**\n   * Checks for any close points and consolidates these to a\n   * single point.\n   *\n   * @private\n   * @returns {void}\n   */\n  _consolidateHandles() {\n    const { points } = this._sculptData;\n\n    // Don't merge handles if it would destroy the polygon.\n    if (points.length <= 3) {\n      return;\n    }\n\n    const closePairs = this._findCloseHandlePairs();\n\n    this._mergeCloseHandles(closePairs);\n  }\n\n  /**\n   * Finds pairs of close handles with seperations < config.minSpacing. No handle\n   * is included in more than one pair, to avoid spurious deletion of densely\n   * populated regions of the contour (see mergeCloseHandles).\n   *\n   * @private\n   * @returns {Array} An array of close pairs in points.\n   */\n  _findCloseHandlePairs() {\n    const { points, minSpacing } = this._sculptData;\n    const closePairs = [];\n    let length = points.length;\n\n    for (let i = 0; i < length; i++) {\n      const nextHandleIndex = this.constructor._getNextHandleIndex(\n        i,\n        points.length\n      );\n\n      const distanceToNextHandle = external.cornerstoneMath.point.distance(\n        points[i],\n        points[nextHandleIndex]\n      );\n\n      if (distanceToNextHandle < minSpacing) {\n        const pair = [i, nextHandleIndex];\n\n        closePairs.push(pair);\n\n        // Don't check last node if first in pair to avoid double counting.\n        if (i === 0) {\n          length -= 1;\n        }\n\n        // Don't double count pairs in order to prevent your polygon collapsing to a singularity.\n        i++;\n      }\n    }\n\n    return closePairs;\n  }\n\n  /**\n   * Merges points given a list of close pairs. The points are merged in an\n   * iterative fashion to prevent generating a singularity in some edge cases.\n   *\n   * @private\n   * @param {Array} closePairs - An array of pairs of handle indicies.\n   * @returns {void}\n   */\n  _mergeCloseHandles(closePairs) {\n    let removedIndexModifier = 0;\n\n    for (let i = 0; i < closePairs.length; i++) {\n      const pair = this.constructor._getCorrectedPair(\n        closePairs[i],\n        removedIndexModifier\n      );\n\n      this._combineHandles(pair);\n      removedIndexModifier++;\n    }\n\n    // Recursively remove problem childs\n    const newClosePairs = this._findCloseHandlePairs();\n\n    if (newClosePairs.length) {\n      this._mergeCloseHandles(newClosePairs);\n    }\n  }\n\n  /**\n   * Combines two handles defined by the indicies in handlePairs.\n   *\n   * @private\n   * @param {Object} handlePair - A pair of handle indicies.\n   * @returns {void}\n   */\n  _combineHandles(handlePair) {\n    const { points, image } = this._sculptData;\n\n    // Calculate combine position: half way between the handles.\n    const midPoint = {\n      x: (points[handlePair[0]].x + points[handlePair[1]].x) / 2.0,\n      y: (points[handlePair[0]].y + points[handlePair[1]].y) / 2.0,\n    };\n\n    clipToBox(midPoint, image);\n\n    // Move first point to midpoint\n    points[handlePair[0]].x = midPoint.x;\n    points[handlePair[0]].y = midPoint.y;\n\n    // Link first point to handle that second point links to.\n    const handleAfterPairIndex = this.constructor._getNextHandleIndex(\n      handlePair[1],\n      points.length\n    );\n\n    points[handlePair[0]].lines.pop();\n    points[handlePair[0]].lines.push(points[handleAfterPairIndex]);\n\n    // Remove the latter handle\n    points.splice(handlePair[1], 1);\n  }\n\n  /**\n   * Calculates the distance to the closest handle in the tool, and stores the\n   * result in this._toolSizeImage and this._toolSizeCanvas.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with the event.\n   * @returns {void}\n   */\n  _configureToolSize(eventData) {\n    const element = eventData.element;\n    const config = this.configuration;\n    const toolIndex = config.currentTool;\n    const coords = eventData.currentPoints.image;\n\n    const toolState = getToolState(element, this.referencedToolName);\n    const data = toolState.data[toolIndex];\n\n    const freehandRoiTool = getToolForElement(element, this.referencedToolName);\n\n    let radiusImage = freehandRoiTool.distanceFromPoint(element, data, coords);\n    let radiusCanvas = freehandRoiTool.distanceFromPointCanvas(\n      element,\n      data,\n      coords\n    );\n\n    // Check if should limit maximum size.\n    if (config.limitRadiusOutsideRegion) {\n      radiusImage = this._limitCursorRadiusImage(eventData, radiusImage);\n      radiusCanvas = this._limitCursorRadiusCanvas(eventData, radiusCanvas);\n    }\n\n    this._toolSizeImage = radiusImage;\n    this._toolSizeCanvas = radiusCanvas;\n  }\n\n  /**\n   * Gets the current mouse location and stores it in the configuration object.\n   *\n   * @private\n   * @param {Object} eventData - The data assoicated with the event.\n   * @returns {void}\n   */\n  _getMouseLocation(eventData) {\n    const config = this.configuration;\n\n    config.mouseLocation.handles.start.x = eventData.currentPoints.image.x;\n    config.mouseLocation.handles.start.y = eventData.currentPoints.image.y;\n    clipToBox(config.mouseLocation.handles.start, eventData.image);\n  }\n\n  /**\n   * Attaches event listeners to the element such that is is visible, modifiable, and new data can be created.\n   *\n   * @private\n   * @param {Object} element - The viewport element to attach event listeners to.\n   * @modifies {element}\n   * @returns {void}\n   */\n  _activateSculpt(element) {\n    this._deactivateSculpt(element);\n\n    // Begin activeMouseDragCallback loop - call activeMouseUpCallback at end of drag or straight away if just a click.\n    element.addEventListener(EVENTS.MOUSE_UP, this.activeMouseUpCallback);\n    element.addEventListener(EVENTS.MOUSE_CLICK, this.activeMouseUpCallback);\n    element.addEventListener(EVENTS.MOUSE_DRAG, this.activeMouseDragCallback);\n\n    element.addEventListener(EVENTS.TOUCH_END, this.activeTouchEndCallback);\n    element.addEventListener(EVENTS.TOUCH_TAP, this.activeTouchEndCallback);\n    element.addEventListener(EVENTS.TOUCH_DRAG, this.activeMouseDragCallback);\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Removes event listeners from the element.\n   *\n   * @private\n   * @param {Object} element - The viewport element to remove event listeners from.\n   * @modifies {element}\n   * @returns {void}\n   */\n  _deactivateSculpt(element) {\n    element.removeEventListener(EVENTS.MOUSE_UP, this.activeMouseUpCallback);\n    element.removeEventListener(EVENTS.MOUSE_CLICK, this.activeMouseUpCallback);\n    element.removeEventListener(\n      EVENTS.MOUSE_DRAG,\n      this.activeMouseDragCallback\n    );\n\n    element.removeEventListener(EVENTS.TOUCH_END, this.activeTouchEndCallback);\n    element.removeEventListener(EVENTS.TOUCH_TAP, this.activeTouchEndCallback);\n    element.removeEventListener(\n      EVENTS.TOUCH_DRAG,\n      this.activeMouseDragCallback\n    );\n\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Invalidate the freehand tool data, tirggering re-calculation of statistics.\n   *\n   * @private\n   * @param {Object} eventData - Data object associated with the event.\n   * @returns {void}\n   */\n  _invalidateToolData(eventData) {\n    const config = this.configuration;\n    const element = eventData.element;\n    const toolData = getToolState(element, this.referencedToolName);\n    const data = toolData.data[config.currentTool];\n\n    data.invalidated = true;\n  }\n\n  /**\n   * Deactivates all freehand ROIs and change currentTool to null\n   *\n   * @private\n   * @param {Object} evt - The event.\n   * @returns {void}\n   */\n  // eslint-disable-next-line no-unused-vars\n  _deselectAllTools(evt) {\n    const config = this.configuration;\n    const toolData = getToolState(this.element, this.referencedToolName);\n\n    config.currentTool = null;\n\n    if (toolData) {\n      for (let i = 0; i < toolData.data.length; i++) {\n        toolData.data[i].active = false;\n      }\n    }\n\n    setToolCursor(this.element, this.svgCursor);\n\n    external.cornerstone.updateImage(this.element);\n  }\n\n  /**\n   * Given a pair of indicies, and the number of points already removed,\n   * convert to the correct live indicies.\n   *\n   * @private\n   * @static\n   * @param {Object} pair A pairs of handle indicies.\n   * @param {Number} removedIndexModifier The number of handles already removed.\n   * @returns {Object} The corrected pair of handle indicies.\n   */\n  static _getCorrectedPair(pair, removedIndexModifier) {\n    const correctedPair = [\n      pair[0] - removedIndexModifier,\n      pair[1] - removedIndexModifier,\n    ];\n\n    // Deal with edge case of last node + first node.\n    if (correctedPair[1] < 0) {\n      correctedPair[1] = 0;\n    }\n\n    return correctedPair;\n  }\n\n  /**\n   * Limits the cursor radius so that it its maximum area is the same as the\n   * ROI being sculpted (in canvas coordinates).\n   *\n   * @private\n   * @param  {Object}  eventData    Data object associated with the event.\n   * @param  {Number}  radiusCanvas The distance from the mouse to the ROI\n   *                                in canvas coordinates.\n   * @returns {Number}              The limited radius in canvas coordinates.\n   */\n  _limitCursorRadiusCanvas(eventData, radiusCanvas) {\n    return this._limitCursorRadius(eventData, radiusCanvas, true);\n  }\n\n  /**\n   * Limits the cursor radius so that it its maximum area is the same as the\n   * ROI being sculpted (in image coordinates).\n   *\n   * @private\n   * @param  {Object}  eventData    Data object associated with the event.\n   * @param  {Number}  radiusImage  The distance from the mouse to the ROI\n   *                                in image coordinates.\n   * @returns {Number}              The limited radius in image coordinates.\n   */\n  _limitCursorRadiusImage(eventData, radiusImage) {\n    return this._limitCursorRadius(eventData, radiusImage, false);\n  }\n\n  /**\n   * Limits the cursor radius so that it its maximum area is the same as the\n   * ROI being sculpted.\n   *\n   * @private\n   * @param  {Object}  eventData    Data object associated with the event.\n   * @param  {Number}  radius       The distance from the mouse to the ROI.\n   * @param  {Boolean} canvasCoords Whether the calculation should be performed\n   *                                In canvas coordinates.\n   * @returns {Number}              The limited radius.\n   */\n  _limitCursorRadius(eventData, radius, canvasCoords = false) {\n    const element = eventData.element;\n    const image = eventData.image;\n    const config = this.configuration;\n\n    const toolState = getToolState(element, this.referencedToolName);\n    const data = toolState.data[config.currentTool];\n\n    let areaModifier = 1.0;\n\n    if (canvasCoords) {\n      const topLeft = external.cornerstone.pixelToCanvas(element, {\n        x: 0,\n        y: 0,\n      });\n      const bottomRight = external.cornerstone.pixelToCanvas(element, {\n        x: image.width,\n        y: image.height,\n      });\n      const canvasArea =\n        (bottomRight.x - topLeft.x) * (bottomRight.y - topLeft.y);\n\n      areaModifier = canvasArea / (image.width * image.height);\n    }\n\n    const area = data.area * areaModifier;\n    const maxRadius = Math.pow(area / Math.PI, 0.5);\n\n    return Math.min(radius, maxRadius);\n  }\n\n  /**\n   * Finds the nearest handle to the mouse cursor for all freehand\n   * data on the element.\n   *\n   * @private\n   * @param {Object} element - The element.\n   * @param {Object} eventData - Data object associated with the event.\n   * @returns {Number} The tool index of the closest freehand tool.\n   */\n  _getClosestFreehandToolOnElement(element, eventData) {\n    const freehand = getToolForElement(element, this.referencedToolName);\n    const toolState = getToolState(element, this.referencedToolName);\n\n    if (!toolState) {\n      return;\n    }\n\n    const data = toolState.data;\n    const pixelCoords = eventData.currentPoints.image;\n\n    const closest = {\n      distance: Infinity,\n      toolIndex: null,\n    };\n\n    for (let i = 0; i < data.length; i++) {\n      const distanceFromToolI = freehand.distanceFromPoint(\n        element,\n        data[i],\n        pixelCoords\n      );\n\n      if (distanceFromToolI === -1) {\n        continue;\n      }\n\n      if (distanceFromToolI < closest.distance) {\n        closest.distance = distanceFromToolI;\n        closest.toolIndex = i;\n      }\n    }\n\n    return closest.toolIndex;\n  }\n\n  /**\n   * Returns the next handle index.\n   *\n   * @private\n   * @static\n   * @param {Number} i - The handle index.\n   * @param {Number} length - The length of the polygon.\n   * @returns {Number} The next handle index.\n   */\n  static _getNextHandleIndex(i, length) {\n    if (i === length - 1) {\n      return 0;\n    }\n\n    return i + 1;\n  }\n\n  /**\n   * Returns the previous handle index.\n   *\n   * @private\n   * @static\n   * @param {Number} i - The handle index.\n   * @param {Number} length - The length of the polygon.\n   * @returns {Number} The previous handle index.\n   */\n  static _getPreviousHandleIndex(i, length) {\n    if (i === 0) {\n      return length - 1;\n    }\n\n    return i - 1;\n  }\n\n  /**\n   * Returns the next handle index, with a correction considering a handle is\n   * about to be inserted.\n   *\n   * @private\n   * @static\n   * @param {Number} insertIndex - The index in which the handle is being inserted.\n   * @param {Number} length - The length of the polygon.\n   * @returns {Number} The next handle index.\n   */\n  static _getNextHandleIndexBeforeInsert(insertIndex, length) {\n    if (insertIndex === length) {\n      return 0;\n    }\n    // Index correction here: The line bellow is correct, as we haven't inserted our handle yet!\n\n    return insertIndex;\n  }\n\n  /**\n   * Calculates the position that a new handle should be inserted.\n   *\n   * @private\n   * @static\n   * @param {Number} insertIndex - The index to insert the new handle.\n   * @param {Number} previousIndex - The previous index.\n   * @param {Number} nextIndex - The next index.\n   * @returns {Object} The position the handle should be inserted.\n   */\n  _getInsertPosition(insertIndex, previousIndex, nextIndex) {\n    const { points, toolSize, mousePoint, image } = this._sculptData;\n\n    // Calculate insert position: half way between the handles, then pushed out\n    // Radially to the edge of the freehandSculpter.\n    const midPoint = {\n      x: (points[previousIndex].x + points[nextIndex].x) / 2.0,\n      y: (points[previousIndex].y + points[nextIndex].y) / 2.0,\n    };\n\n    const distanceToMidPoint = external.cornerstoneMath.point.distance(\n      mousePoint,\n      midPoint\n    );\n\n    let insertPosition;\n\n    if (distanceToMidPoint < toolSize) {\n      const directionUnitVector = {\n        x: (midPoint.x - mousePoint.x) / distanceToMidPoint,\n        y: (midPoint.y - mousePoint.y) / distanceToMidPoint,\n      };\n\n      insertPosition = {\n        x: mousePoint.x + toolSize * directionUnitVector.x,\n        y: mousePoint.y + toolSize * directionUnitVector.y,\n      };\n    } else {\n      insertPosition = midPoint;\n    }\n\n    clipToBox(insertPosition, image);\n\n    return insertPosition;\n  }\n\n  // ===================================================================\n  // Public Configuration API. .\n  // ===================================================================\n\n  get minSpacing() {\n    return this.configuration.minSpacing;\n  }\n\n  set minSpacing(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehandSculpter minSpacing to a value other than a number.'\n      );\n    }\n\n    this.configuration.minSpacing = value;\n  }\n\n  get maxSpacing() {\n    return this.configuration.maxSpacing;\n  }\n\n  set maxSpacing(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehandSculpter maxSpacing to a value other than a number.'\n      );\n    }\n\n    this.configuration.maxSpacing = value;\n  }\n\n  get showCursorOnHover() {\n    return this.configuration.showCursorOnHover;\n  }\n\n  set showCursorOnHover(value) {\n    if (typeof value !== 'boolean') {\n      throw new Error(\n        'Attempting to set freehandSculpter showCursorOnHover to a value other than a boolean.'\n      );\n    }\n\n    this.configuration.showCursorOnHover = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get limitRadiusOutsideRegion() {\n    return this.configuration.limitRadiusOutsideRegion;\n  }\n\n  set limitRadiusOutsideRegion(value) {\n    if (typeof value !== 'boolean') {\n      throw new Error(\n        'Attempting to set freehandSculpter limitRadiusOutsideRegion to a value other than a boolean.'\n      );\n    }\n\n    this.configuration.limitRadiusOutsideRegion = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get hoverCursorFadeAlpha() {\n    return this.configuration.hoverCursorFadeAlpha;\n  }\n\n  set hoverCursorFadeAlpha(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehandSculpter hoverCursorFadeAlpha to a value other than a number.'\n      );\n    }\n\n    // Clamp the value from 0 to 1.\n    value = Math.max(Math.min(value, 1.0), 0.0);\n\n    this.configuration.hoverCursorFadeAlpha = value;\n    external.cornerstone.updateImage(this.element);\n  }\n\n  get hoverCursorFadeDistance() {\n    return this.configuration.hoverCursorFadeDistance;\n  }\n\n  set hoverCursorFadeDistance(value) {\n    if (typeof value !== 'number') {\n      throw new Error(\n        'Attempting to set freehandSculpter hoverCursorFadeDistance to a value other than a number.'\n      );\n    }\n\n    // Don't allow to fade a distances smaller than the tool's radius.\n    value = Math.max(value, 1.0);\n\n    this.configuration.hoverCursorFadeDistance = value;\n    external.cornerstone.updateImage(this.element);\n  }\n}\n\n/**\n * Returns the default freehandRoiSculptorTool configuration.\n *\n * @returns {Object} The default configuration object.\n */\nfunction getDefaultFreehandRoiSculptorToolConfiguration() {\n  return {\n    mouseLocation: {\n      handles: {\n        start: {\n          highlight: true,\n          active: true,\n        },\n      },\n    },\n    minSpacing: 1,\n    currentTool: null,\n    dragColor: toolColors.getActiveColor(),\n    hoverColor: toolColors.getToolColor(),\n\n    /* --- Hover options ---\n    showCursorOnHover:        Shows a preview of the sculpting radius on hover.\n    limitRadiusOutsideRegion: Limit max toolsize outside the subject ROI based\n                              on subject ROI area.\n    hoverCursorFadeAlpha:     Alpha to fade to when tool very distant from\n                              subject ROI.\n    hoverCursorFadeDistance:  Distance from ROI in which to fade the hoverCursor\n                              (in units of radii).\n    */\n    showCursorOnHover: true,\n    limitRadiusOutsideRegion: true,\n    hoverCursorFadeAlpha: 0.5,\n    hoverCursorFadeDistance: 1.2,\n  };\n}\n\nfunction preventPropagation(evt) {\n  evt.stopImmediatePropagation();\n  evt.stopPropagation();\n  evt.preventDefault();\n}\n","import external from '../externalModules.js';\nimport { getNewContext } from '../drawing/index.js';\nimport BaseTool from './base/BaseTool.js';\nimport { hideToolCursor, setToolCursor } from '../store/setToolCursor.js';\nimport { magnifyCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class MagnifyTool\n * @memberof Tools\n *\n * @classdesc Tool for inspecting a region at increased magnification.\n * @extends Tools.Base.BaseTool\n */\nexport default class MagnifyTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Magnify',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        magnifySize: 300,\n        magnificationLevel: 2,\n      },\n      svgCursor: magnifyCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.zoomCanvas = undefined;\n    this.zoomElement = undefined;\n\n    // Mode Callbacks: (element, options)\n    this.activeCallback = this._createMagnificationCanvas.bind(this);\n    this.enabledCallback = this._createMagnificationCanvas.bind(this);\n    this.disabledCallback = this._destroyMagnificationCanvas.bind(this);\n\n    // Touch\n    this.postTouchStartCallback = this._addMagnifyingGlass.bind(this);\n    this.touchDragCallback = this._updateMagnifyingGlass.bind(this);\n    this.touchEndCallback = this._removeMagnifyingGlass.bind(this);\n    this.touchDragEndCallback = this._removeMagnifyingGlass.bind(this);\n    // Mouse\n    this.postMouseDownCallback = this._addMagnifyingGlass.bind(this);\n    this.mouseDragCallback = this._updateMagnifyingGlass.bind(this);\n    this.mouseUpCallback = this._removeMagnifyingGlass.bind(this);\n    // On quick clicks, mouseUp does not fire, but this does\n    this.mouseClickCallback = this._removeMagnifyingGlass.bind(this);\n    // Misc\n    this.newImageCallback = this._drawMagnificationTool.bind(this);\n  }\n\n  _addMagnifyingGlass(evt) {\n    // Ignore until next event\n    this._removeZoomElement();\n    this._drawZoomedElement(evt);\n    // On next frame\n    window.requestAnimationFrame(() => this._drawMagnificationTool(evt));\n\n    hideToolCursor(evt.detail.element);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  _updateMagnifyingGlass(evt) {\n    this._drawMagnificationTool(evt);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  _removeMagnifyingGlass(evt) {\n    const element = evt.detail.element;\n\n    // Re-enable the mouse cursor\n    setToolCursor(this.element, this.svgCursor);\n\n    element.querySelector('.magnifyTool').style.display = 'none';\n    this._removeZoomElement();\n  }\n\n  _drawMagnificationTool(evt) {\n    const element = evt.detail.element;\n    const magnifyCanvas = element.querySelector('.magnifyTool');\n\n    if (!magnifyCanvas) {\n      this._createMagnificationCanvas(element);\n    }\n\n    if (this.zoomCanvas === undefined) {\n      return;\n    }\n\n    // The 'not' magnifyTool class here is necessary because cornerstone places\n    // No classes of it's own on the canvas we want to select\n    const canvas = element.querySelector('canvas:not(.magnifyTool)');\n    const context = getNewContext(magnifyCanvas);\n\n    // Calculate the on-canvas location of the mouse pointer / touch\n    const canvasLocation = external.cornerstone.pixelToCanvas(\n      evt.detail.element,\n      evt.detail.currentPoints.image\n    );\n\n    // Shrink magnifier to smallest canvas dimension if smaller than desired magnifier size\n    const magnifySize = Math.min(\n      this.configuration.magnifySize,\n      canvas.width,\n      canvas.height\n    );\n    const magnificationLevel = this.configuration.magnificationLevel;\n\n    magnifyCanvas.width = magnifySize;\n    magnifyCanvas.height = magnifySize;\n\n    // Constrain drag movement to zoomed image boundaries\n    canvasLocation.x = Math.max(\n      canvasLocation.x,\n      (0.5 * magnifySize) / magnificationLevel\n    );\n    canvasLocation.x = Math.min(\n      canvasLocation.x,\n      canvas.width - (0.5 * magnifySize) / magnificationLevel\n    );\n    canvasLocation.y = Math.max(\n      canvasLocation.y,\n      (0.5 * magnifySize) / magnificationLevel\n    );\n    canvasLocation.y = Math.min(\n      canvasLocation.y,\n      canvas.height - (0.5 * magnifySize) / magnificationLevel\n    );\n\n    const copyFrom = {\n      x: canvasLocation.x * magnificationLevel - 0.5 * magnifySize,\n      y: canvasLocation.y * magnificationLevel - 0.5 * magnifySize,\n    };\n\n    copyFrom.x = Math.max(copyFrom.x, 0);\n    copyFrom.y = Math.max(copyFrom.y, 0);\n\n    context.drawImage(\n      this.zoomCanvas,\n      copyFrom.x,\n      copyFrom.y,\n      magnifySize,\n      magnifySize,\n      0,\n      0,\n      magnifySize,\n      magnifySize\n    );\n\n    // Place the magnification tool at the same location as the pointer\n    const touchOffset = evt.detail.isTouchEvent ? 120 : 0;\n    const magnifyPosition = {\n      top: Math.max(canvasLocation.y - 0.5 * magnifySize - touchOffset, 0),\n      left: Math.max(canvasLocation.x - 0.5 * magnifySize, 0),\n    };\n\n    // Get full magnifier dimensions with borders\n    const magnifierBox = magnifyCanvas.getBoundingClientRect();\n\n    // Constrain magnifier to canvas boundaries\n    magnifyPosition.top = Math.min(\n      magnifyPosition.top,\n      canvas.height - magnifierBox.height\n    );\n    magnifyPosition.left = Math.min(\n      magnifyPosition.left,\n      canvas.width - magnifierBox.width\n    );\n    magnifyCanvas.style.top = `${magnifyPosition.top}px`;\n    magnifyCanvas.style.left = `${magnifyPosition.left}px`;\n    magnifyCanvas.style.display = 'block';\n  }\n\n  /**\n   * Creates a cornerstone enabled element, and renders the target image at the\n   * desired magnification level using it.\n   *\n   * @private\n   * @param {*} evt\n   * @returns {void}\n   */\n  _drawZoomedElement(evt) {\n    const element = evt.detail.element;\n    let enabledElement = evt.detail.enabledElement;\n\n    if (enabledElement === undefined) {\n      enabledElement = external.cornerstone.getEnabledElement(element);\n    }\n\n    const magnificationLevel = this.configuration.magnificationLevel;\n    const origCanvas = enabledElement.canvas;\n    const image = enabledElement.image;\n\n    // Create a new cornerstone enabledElement\n    if (!this.zoomElement) {\n      this.zoomElement = document.createElement('div');\n      this.zoomElement.width = origCanvas.width * magnificationLevel;\n      this.zoomElement.height = origCanvas.height * magnificationLevel;\n      external.cornerstone.enable(this.zoomElement, enabledElement.options);\n    }\n\n    const zoomEnabledElement = external.cornerstone.getEnabledElement(\n      this.zoomElement\n    );\n    const viewport = external.cornerstone.getViewport(enabledElement.element);\n\n    this.zoomCanvas = zoomEnabledElement.canvas;\n    this.zoomCanvas.width = origCanvas.width * magnificationLevel;\n    this.zoomCanvas.height = origCanvas.height * magnificationLevel;\n\n    zoomEnabledElement.viewport = Object.assign({}, viewport);\n\n    // Update it's viewport to render at desired magnification level\n    viewport.scale *= magnificationLevel;\n    external.cornerstone.displayImage(this.zoomElement, image);\n    external.cornerstone.setViewport(this.zoomElement, viewport);\n    // To do enable annotation tools for zoomElement\n  }\n\n  /**\n   * Removes the canvas and associated enabled element that's\n   * used to render the zoomed image.\n   * @returns {void}\n   */\n  _removeZoomElement() {\n    if (this.zoomElement !== undefined) {\n      external.cornerstone.disable(this.zoomCanvas);\n      this.zoomElement = undefined;\n      this.zoomCanvas = undefined;\n    }\n  }\n\n  /**\n   * The canvas used to render the zoomed image.\n   * It will be displayed and clipped inside the magnifying glass frame/element.\n   *\n   * @private\n   *\n   * @param {*} element\n   * @returns {void}\n   */\n  _createMagnificationCanvas(element) {\n    // If the magnifying glass canvas doesn't already exist\n    if (element.querySelector('.magnifyTool') === null) {\n      // Create a canvas and append it as a child to the element\n      const magnifyCanvas = document.createElement('canvas');\n\n      // The magnifyTool class is used to find the canvas later on\n      // Make sure position is absolute so the canvas can follow the mouse / touch\n      magnifyCanvas.classList.add('magnifyTool');\n      magnifyCanvas.width = this.configuration.magnifySize;\n      magnifyCanvas.height = this.configuration.magnifySize;\n      magnifyCanvas.style.position = 'absolute';\n      magnifyCanvas.style.display = 'none';\n      element.appendChild(magnifyCanvas);\n    }\n  }\n\n  /**\n   *\n   *\n   * @param {*} element\n   * @returns {void}\n   */\n  _destroyMagnificationCanvas(element) {\n    const magnifyCanvas = element.querySelector('.magnifyTool');\n\n    if (magnifyCanvas) {\n      element.removeChild(magnifyCanvas);\n    }\n  }\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n\n/**\n *\n * http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.9.html\n *\n * @public\n * @class Overlay\n * @memberof Tools\n *\n * @classdesc Tool for displaying a scale overlay on the image.\n * @extends Tools.Base.BaseTool\n */\nexport default class OverlayTool extends BaseTool {\n  constructor(configuration = {}) {\n    const defaultConfig = {\n      name: 'Overlay',\n      configuration: {},\n      mixins: ['enabledOrDisabledBinaryTool'],\n    };\n    const initialConfiguration = Object.assign(defaultConfig, configuration);\n\n    super(initialConfiguration);\n\n    this.initialConfiguration = initialConfiguration;\n  }\n\n  enabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  disabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  forceImageUpdate(element) {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    if (enabledElement.image) {\n      external.cornerstone.updateImage(element);\n    }\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { enabledElement, image, viewport, canvasContext } = eventData;\n\n    if (!eventData || !enabledElement || !image) {\n      return;\n    }\n\n    const overlayPlaneMetadata = external.cornerstone.metaData.get(\n      'overlayPlaneModule',\n      image.imageId\n    );\n\n    if (\n      !overlayPlaneMetadata ||\n      !overlayPlaneMetadata.overlays ||\n      !overlayPlaneMetadata.overlays.length\n    ) {\n      return;\n    }\n\n    const viewportPixelSpacing = {\n      column: viewport.displayedArea.columnPixelSpacing || 1,\n      row: viewport.displayedArea.rowPixelSpacing || 1,\n    };\n    const imageWidth =\n      Math.abs(viewport.displayedArea.brhc.x - viewport.displayedArea.tlhc.x) *\n      viewportPixelSpacing.column;\n    const imageHeight =\n      Math.abs(viewport.displayedArea.brhc.y - viewport.displayedArea.tlhc.y) *\n      viewportPixelSpacing.row;\n\n    overlayPlaneMetadata.overlays.forEach(overlay => {\n      if (overlay.visible === false) {\n        return;\n      }\n\n      const layerCanvas = document.createElement('canvas');\n\n      layerCanvas.width = imageWidth;\n      layerCanvas.height = imageHeight;\n\n      const layerContext = layerCanvas.getContext('2d');\n\n      layerContext.fillStyle = overlay.fillStyle || 'white';\n\n      if (overlay.type === 'R') {\n        layerContext.fillRect(0, 0, layerCanvas.width, layerCanvas.height);\n        layerContext.globalCompositeOperation = 'xor';\n      }\n\n      let i = 0;\n\n      for (let y = 0; y < overlay.rows; y++) {\n        for (let x = 0; x < overlay.columns; x++) {\n          if (overlay.pixelData[i++] > 0) {\n            layerContext.fillRect(x, y, 1, 1);\n          }\n        }\n      }\n\n      // Guard against non-number values\n      const overlayX =\n        !isNaN(parseFloat(overlay.x)) && isFinite(overlay.x) ? overlay.x : 0;\n      const overlayY =\n        !isNaN(parseFloat(overlay.y)) && isFinite(overlay.y) ? overlay.y : 0;\n      // Draw the overlay layer onto the canvas\n\n      canvasContext.drawImage(layerCanvas, overlayX, overlayY);\n    });\n  }\n}\n","import getOrientationString from './getOrientationString.js';\nimport invertOrientationString from './invertOrientationString.js';\n\nconst orientation = {\n  getOrientationString,\n  invertOrientationString,\n};\n\nexport default orientation;\n","import external from '../externalModules.js';\nimport convertToVector3 from '../util/convertToVector3.js';\n\n/**\n * Returns the orientation of the vector in the patient coordinate system.\n * @public\n * @function getOrientationString\n *\n * @param  {Array|cornerstoneMath.Vector3} vector Input array or Vector3\n * @returns {string} The orientation in the patient coordinate system.\n */\nexport default function(vector) {\n  const vec3 = convertToVector3(vector);\n\n  // Thanks to David Clunie\n  // https://sites.google.com/site/dicomnotes/\n\n  let orientation = '';\n  const orientationX = vec3.x < 0 ? 'R' : 'L';\n  const orientationY = vec3.y < 0 ? 'A' : 'P';\n  const orientationZ = vec3.z < 0 ? 'F' : 'H';\n\n  // Should probably make this a function vector3.abs\n  const abs = new external.cornerstoneMath.Vector3(\n    Math.abs(vec3.x),\n    Math.abs(vec3.y),\n    Math.abs(vec3.z)\n  );\n\n  const MIN = 0.0001;\n\n  for (let i = 0; i < 3; i++) {\n    if (abs.x > MIN && abs.x > abs.y && abs.x > abs.z) {\n      orientation += orientationX;\n      abs.x = 0;\n    } else if (abs.y > MIN && abs.y > abs.x && abs.y > abs.z) {\n      orientation += orientationY;\n      abs.y = 0;\n    } else if (abs.z > MIN && abs.z > abs.x && abs.z > abs.y) {\n      orientation += orientationZ;\n      abs.z = 0;\n    } else if (abs.x > MIN && abs.y > MIN && abs.x === abs.y) {\n      orientation += orientationX + orientationY;\n      abs.x = 0;\n      abs.y = 0;\n    } else if (abs.x > MIN && abs.z > MIN && abs.x === abs.z) {\n      orientation += orientationX + orientationZ;\n      abs.x = 0;\n      abs.z = 0;\n    } else if (abs.y > MIN && abs.z > MIN && abs.y === abs.z) {\n      orientation += orientationY + orientationZ;\n      abs.y = 0;\n      abs.z = 0;\n    } else {\n      break;\n    }\n  }\n\n  return orientation;\n}\n","/**\n * Inverts an orientation string.\n * @public\n * @function invertOrientationString\n *\n * @param  {string} orientationString The orientation.\n * @returns {string}  The inverted orientationString.\n */\nexport default function(orientationString) {\n  let inverted = orientationString.replace('H', 'f');\n\n  inverted = inverted.replace('F', 'h');\n  inverted = inverted.replace('R', 'l');\n  inverted = inverted.replace('L', 'r');\n  inverted = inverted.replace('A', 'p');\n  inverted = inverted.replace('P', 'a');\n  inverted = inverted.toUpperCase();\n\n  return inverted;\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport orientation from '../orientation/index.js';\n\n// Drawing\nimport { getNewContext } from '../drawing/index.js';\nimport toolColors from '../stateManagement/toolColors.js';\nimport drawTextBox, { textBoxWidth } from '../drawing/drawTextBox.js';\n\n/**\n * @public\n * @class OrientationMarkersTool\n * @memberof Tools\n *\n * @classdesc Tool for displaying orientation markers on the image.\n * @extends Tools.Base.BaseTool\n */\nexport default class OrientationMarkersTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'OrientationMarkers',\n      configuration: {\n        drawAllMarkers: true,\n      },\n      mixins: ['enabledOrDisabledBinaryTool'],\n    };\n\n    super(props, defaultProps);\n  }\n\n  enabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  disabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  forceImageUpdate(element) {\n    const cornerstone = external.cornerstone;\n    const enabledElement = cornerstone.getEnabledElement(element);\n\n    if (enabledElement.image) {\n      cornerstone.updateImage(element);\n    }\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const element = eventData.element;\n    const markers = getOrientationMarkers(element);\n\n    if (!markers) {\n      return;\n    }\n    const coords = getOrientationMarkerPositions(element, markers);\n    const color = toolColors.getToolColor();\n\n    const textWidths = {\n      top: textBoxWidth(context, markers.top, 0),\n      left: textBoxWidth(context, markers.left, 0),\n      right: textBoxWidth(context, markers.right, 0),\n      bottom: textBoxWidth(context, markers.bottom, 0),\n      height: textBoxWidth(context, 'M', 0), // Trick to get an approximation of the height of the text\n    };\n\n    drawTopLeftText(context, markers, coords, textWidths, color);\n    if (this.configuration.drawAllMarkers) {\n      drawBottomRightText(context, markers, coords, textWidths, color);\n    }\n  }\n}\n\nconst drawTopLeftText = (context, markers, coords, textWidths, color) => {\n  drawTextBox(\n    context,\n    markers.top,\n    coords.top.x - textWidths.top / 2,\n    coords.top.y,\n    color\n  );\n  drawTextBox(\n    context,\n    markers.left,\n    coords.left.x - textWidths.left / 2,\n    coords.left.y,\n    color\n  );\n};\n\nconst drawBottomRightText = (context, markers, coords, textWidths, color) => {\n  drawTextBox(\n    context,\n    markers.right,\n    coords.right.x - textWidths.right,\n    coords.right.y,\n    color\n  );\n  drawTextBox(\n    context,\n    markers.bottom,\n    coords.bottom.x - textWidths.bottom / 2,\n    coords.bottom.y - textWidths.height,\n    color\n  );\n};\n\nconst getOrientationMarkers = element => {\n  const cornerstone = external.cornerstone;\n  const enabledElement = cornerstone.getEnabledElement(element);\n  const imagePlane = cornerstone.metaData.get(\n    'imagePlaneModule',\n    enabledElement.image.imageId\n  );\n\n  if (!imagePlane || !imagePlane.rowCosines || !imagePlane.columnCosines) {\n    return;\n  }\n\n  const row = orientation.getOrientationString(imagePlane.rowCosines);\n  const column = orientation.getOrientationString(imagePlane.columnCosines);\n  const oppositeRow = orientation.invertOrientationString(row);\n  const oppositeColumn = orientation.invertOrientationString(column);\n\n  return {\n    top: oppositeColumn,\n    bottom: column,\n    left: oppositeRow,\n    right: row,\n  };\n};\n\nconst getOrientationMarkerPositions = element => {\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n  const top = external.cornerstone.pixelToCanvas(element, {\n    x: enabledElement.image.width / 2,\n    y: 5,\n  });\n  const bottom = external.cornerstone.pixelToCanvas(element, {\n    x: enabledElement.image.width / 2,\n    y: enabledElement.image.height - 15,\n  });\n  const left = external.cornerstone.pixelToCanvas(element, {\n    x: 5,\n    y: enabledElement.image.height / 2,\n  });\n  const right = external.cornerstone.pixelToCanvas(element, {\n    x: enabledElement.image.width - 10,\n    y: enabledElement.image.height / 2,\n  });\n\n  return {\n    top,\n    bottom,\n    left,\n    right,\n  };\n};\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n\n/**\n * @public\n * @class PanMultiTouchTool\n * @memberof Tools\n *\n * @classdesc Tool for panning the image using multi-touch.\n * @extends Tools.Base.BaseTool\n */\nexport default class PanMultiTouchTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'PanMultiTouch',\n      supportedInteractionTypes: ['MultiTouch'],\n      configuration: {\n        touchPointers: 2,\n      },\n    };\n\n    super(props, defaultProps);\n\n    // Touch\n    this.multiTouchDragCallback = this._dragCallback.bind(this);\n  }\n\n  _dragCallback(evt) {\n    const eventData = evt.detail;\n    const { element, viewport } = eventData;\n\n    if (eventData.numPointers === this.configuration.touchPointers) {\n      const translation = this._getTranslation(eventData);\n\n      this._applyTranslation(viewport, translation);\n      external.cornerstone.setViewport(element, viewport);\n    }\n  }\n\n  _getTranslation(eventData) {\n    const { viewport, image, deltaPoints } = eventData;\n\n    let widthScale = viewport.scale;\n    let heightScale = viewport.scale;\n\n    if (image.rowPixelSpacing < image.columnPixelSpacing) {\n      widthScale *= image.columnPixelSpacing / image.rowPixelSpacing;\n    } else if (image.columnPixelSpacing < image.rowPixelSpacing) {\n      heightScale *= image.rowPixelSpacing / image.columnPixelSpacing;\n    }\n\n    return {\n      x: deltaPoints.page.x / widthScale,\n      y: deltaPoints.page.y / heightScale,\n    };\n  }\n\n  _applyTranslation(viewport, translation) {\n    viewport.translation.x += translation.x;\n    viewport.translation.y += translation.y;\n  }\n}\n","import external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { panCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class PanTool\n * @memberof Tools\n *\n * @classdesc Tool for panning the image.\n * @extends Tools.Base.BaseTool\n */\nexport default class PanTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Pan',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: panCursor,\n    };\n\n    super(props, defaultProps);\n\n    // Touch\n    this.touchDragCallback = this._dragCallback.bind(this);\n    // Mouse\n    this.mouseDragCallback = this._dragCallback.bind(this);\n  }\n\n  _dragCallback(evt) {\n    const eventData = evt.detail;\n    const { element, viewport } = eventData;\n\n    const translation = this._getTranslation(eventData);\n\n    this._applyTranslation(viewport, translation);\n    external.cornerstone.setViewport(element, viewport);\n  }\n\n  _getTranslation(eventData) {\n    const { viewport, image, deltaPoints } = eventData;\n\n    let widthScale = viewport.scale;\n    let heightScale = viewport.scale;\n\n    if (image.rowPixelSpacing < image.columnPixelSpacing) {\n      widthScale *= image.columnPixelSpacing / image.rowPixelSpacing;\n    } else if (image.columnPixelSpacing < image.rowPixelSpacing) {\n      heightScale *= image.rowPixelSpacing / image.columnPixelSpacing;\n    }\n\n    return {\n      x: deltaPoints.page.x / widthScale,\n      y: deltaPoints.page.y / heightScale,\n    };\n  }\n\n  _applyTranslation(viewport, translation) {\n    viewport.translation.x += translation.x;\n    viewport.translation.y += translation.y;\n  }\n}\n","import external from './../../externalModules.js';\nimport calculateReferenceLine from './calculateReferenceLine.js';\nimport toolColors from './../../stateManagement/toolColors.js';\nimport convertToVector3 from './../../util/convertToVector3.js';\nimport { draw, drawLine } from './../../drawing/index.js';\n\n/**\n * Renders the active reference line.\n *\n * @export @public @method\n * @name renderActiveReferenceLine\n * @param  {Object} context        The canvas context.\n * @param  {Object} eventData      The data associated with the event.\n * @param  {HTMLElement} targetElement    The element on which to render the reference line.\n * @param  {HTMLElement} referenceElement The element referenced by the line.\n * @returns {void}\n */\nexport default function(context, eventData, targetElement, referenceElement) {\n  const cornerstone = external.cornerstone;\n  const targetImage = cornerstone.getEnabledElement(targetElement).image;\n  const referenceImage = cornerstone.getEnabledElement(referenceElement).image;\n\n  // Make sure the images are actually loaded for the target and reference\n  if (!targetImage || !referenceImage) {\n    return;\n  }\n\n  const targetImagePlane = cornerstone.metaData.get(\n    'imagePlaneModule',\n    targetImage.imageId\n  );\n  const referenceImagePlane = cornerstone.metaData.get(\n    'imagePlaneModule',\n    referenceImage.imageId\n  );\n\n  // Make sure the target and reference actually have image plane metadata\n  if (\n    !targetImagePlane ||\n    !referenceImagePlane ||\n    !targetImagePlane.rowCosines ||\n    !targetImagePlane.columnCosines ||\n    !targetImagePlane.imagePositionPatient ||\n    !referenceImagePlane.rowCosines ||\n    !referenceImagePlane.columnCosines ||\n    !referenceImagePlane.imagePositionPatient\n  ) {\n    return;\n  }\n\n  // The image planes must be in the same frame of reference\n  if (\n    targetImagePlane.frameOfReferenceUID !==\n    referenceImagePlane.frameOfReferenceUID\n  ) {\n    return;\n  }\n\n  targetImagePlane.rowCosines = convertToVector3(targetImagePlane.rowCosines);\n  targetImagePlane.columnCosines = convertToVector3(\n    targetImagePlane.columnCosines\n  );\n  targetImagePlane.imagePositionPatient = convertToVector3(\n    targetImagePlane.imagePositionPatient\n  );\n  referenceImagePlane.rowCosines = convertToVector3(\n    referenceImagePlane.rowCosines\n  );\n  referenceImagePlane.columnCosines = convertToVector3(\n    referenceImagePlane.columnCosines\n  );\n  referenceImagePlane.imagePositionPatient = convertToVector3(\n    referenceImagePlane.imagePositionPatient\n  );\n\n  // The image plane normals must be > 30 degrees apart\n  const targetNormal = targetImagePlane.rowCosines\n    .clone()\n    .cross(targetImagePlane.columnCosines);\n  const referenceNormal = referenceImagePlane.rowCosines\n    .clone()\n    .cross(referenceImagePlane.columnCosines);\n  let angleInRadians = targetNormal.angleTo(referenceNormal);\n\n  angleInRadians = Math.abs(angleInRadians);\n  if (angleInRadians < 0.5) {\n    // 0.5 radians = ~30 degrees\n    return;\n  }\n\n  const referenceLine = calculateReferenceLine(\n    targetImagePlane,\n    referenceImagePlane\n  );\n\n  if (!referenceLine) {\n    return;\n  }\n\n  const color = toolColors.getActiveColor();\n\n  // Draw the referenceLines\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  draw(context, context => {\n    drawLine(\n      context,\n      eventData.element,\n      referenceLine.start,\n      referenceLine.end,\n      { color }\n    );\n  });\n}\n","import {\n  planePlaneIntersection,\n  projectPatientPointToImagePlane,\n} from './../../util/pointProjector.js';\n\n/**\n * Calculates a reference line between two planes by projecting the top left hand corner and bottom right hand corner\n * Of the reference image onto the target image.  Ideally we would calculate the intersection between the planes but\n * That requires a bit more math and this works fine for most cases.\n *\n * @export\n * @public\n * @method\n * @name calculateReferenceLine\n * @param  {Object} targetImagePlane    The imagePlane on which the reference line will be drawn.\n * @param  {Object} referenceImagePlane The imagePlane being referenced.\n * @returns {Object}  The start and end points of the line to be drawn.\n */\nexport default function(targetImagePlane, referenceImagePlane) {\n  const points = planePlaneIntersection(targetImagePlane, referenceImagePlane);\n\n  if (!points) {\n    return;\n  }\n\n  return {\n    start: projectPatientPointToImagePlane(points.start, targetImagePlane),\n    end: projectPatientPointToImagePlane(points.end, targetImagePlane),\n  };\n}\n","import external from './../externalModules.js';\n\n/**\n * Waits a set amount of time, then resolves. Can be chained off of to delay\n * next call in promise chain.\n * @public\n * @function wait\n * @param {number} ms - number in ms to wait\n * @returns {Promise} - A promise that resolves when setTimeout elapses\n */\nexport const wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * A promise that returns an EnabledElement who's image has loaded, or\n * null if the provided element ceases being an enabledElement before an\n * image has been loaded.\n * @public\n * @function waitForEnabledElementImageToLoad\n *\n * @param {HTMLElement} element - An element that is an EnabledElement\n * @returns {EnabledElement} - The enabled element that has loaded an image\n */\nexport function waitForEnabledElementImageToLoad(element) {\n  try {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    if (!enabledElement.image) {\n      return wait(250).then(() => waitForEnabledElementImageToLoad(element));\n    }\n\n    // EnabledElement's image is loaded.\n    return enabledElement;\n  } catch (ex) {\n    // Is no longer, or never was an enabled element, stop polling\n    return null;\n  }\n}\n\nexport default wait;\n","import external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n\nimport { getNewContext } from '../drawing/index.js';\nimport renderActiveReferenceLine from './referenceLines/renderActiveReferenceLine.js';\nimport { waitForEnabledElementImageToLoad } from '../util/wait.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('tools:ReferenceLinesTool');\n\n/**\n * When enabled, this tool will display references lines for each source\n * enabledElement in the provided synchronizer. This tool can also be configured\n * to use a custom renderer for alternative reference line rendering behavior\n *\n * TODO: Need to watch for configuration changes to update ToolState\n * TODO:\n *\n * @export @public @class\n * @name ReferenceLinesTool\n * @classdesc Tool for displaying reference lines of other enabledElements\n * @extends Tools.Base.BaseTool\n */\nexport default class ReferenceLinesTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'ReferenceLines',\n      mixins: ['enabledOrDisabledBinaryTool'],\n      configuration: {\n        renderer: renderActiveReferenceLine,\n      },\n    };\n\n    super(props, defaultProps);\n\n    this.renderer = null;\n    this.synchronizationContext = null;\n  }\n\n  async enabledCallback(element, { synchronizationContext } = {}) {\n    const renderer = this.configuration.renderer;\n    const enabledElement = await waitForEnabledElementImageToLoad(element);\n\n    if (!enabledElement || !renderer || !synchronizationContext) {\n      // TODO: Unable to add tool state, image never loaded.\n      // Should we `setToolDisabledForElement` here?\n      logger.warn(\n        `Unable to enable ${this.name}. Exiting enable callback. Tool will be enabled, but will not render.`\n      );\n\n      return;\n    }\n    this.renderer = renderer;\n    this.synchronizationContext = synchronizationContext;\n\n    this.forceImageUpdate(element);\n  }\n\n  disabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  forceImageUpdate(element) {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    if (enabledElement.image) {\n      external.cornerstone.updateImage(element);\n    }\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n\n    // No renderer or synch context? Adios\n    if (!this.renderer || !this.synchronizationContext) {\n      return;\n    }\n\n    // Get the enabled elements associated with this synchronization context and draw them\n    const enabledElements = this.synchronizationContext.getSourceElements();\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    external.cornerstone.setToPixelCoordinateSystem(\n      eventData.enabledElement,\n      context\n    );\n    enabledElements.forEach(referenceEnabledElement => {\n      // Don't draw ourselves\n      if (referenceEnabledElement === evt.currentTarget) {\n        return;\n      }\n\n      // Render it\n      this.renderer(\n        context,\n        eventData,\n        evt.currentTarget,\n        referenceEnabledElement\n      );\n    });\n  }\n}\n","/**\n * Calculates the (interior) angle in degrees from the initial mouse location\n * to the current mouse location in relation to the center point.\n * @public\n * @function angleBetweenPoints\n *\n * @param  {Object} p0  The center point.\n * @param  {Object} p1  The initial point.\n * @param  {Object} p2  The final point.\n * @returns {Object} { angle, direction }\n */\nexport default (p0, p1, p2) => {\n  const p12 = Math.sqrt(Math.pow(p0.x - p1.x, 2) + Math.pow(p0.y - p1.y, 2));\n  const p13 = Math.sqrt(Math.pow(p0.x - p2.x, 2) + Math.pow(p0.y - p2.y, 2));\n  const p23 = Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n\n  const angle =\n    (Math.acos(\n      (Math.pow(p12, 2) + Math.pow(p13, 2) - Math.pow(p23, 2)) / (2 * p12 * p13)\n    ) *\n      180) /\n    Math.PI;\n\n  // The direction of the angle (> 0 clockwise, < 0 anti-clockwise)\n  const direction =\n    (p1.x - p0.x) * (p2.y - p0.y) - (p1.y - p0.y) * (p2.x - p0.x);\n\n  return {\n    angle,\n    direction,\n  };\n};\n","import angleBetweenPoints from '../util/angleBetweenPoints.js';\nimport external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { rotateCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class RotateTool\n * @memberof Tools\n *\n * @classdesc Tool for rotating the image.\n * @extends Tools.Base.BaseTool\n */\nexport default class RotateTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Rotate',\n      strategies: {\n        default: defaultStrategy,\n        horizontal: horizontalStrategy,\n        vertical: verticalStrategy,\n      },\n      defaultStrategy: 'default',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      svgCursor: rotateCursor,\n    };\n\n    super(props, defaultProps);\n  }\n\n  postTouchStartCallback(evt) {\n    this.initialRotation = evt.detail.viewport.rotation;\n  }\n\n  touchDragCallback(evt) {\n    this.dragCallback(evt);\n  }\n\n  mouseDragCallback(evt) {\n    this.dragCallback(evt);\n  }\n\n  postMouseDownCallback(evt) {\n    this.initialRotation = evt.detail.viewport.rotation;\n  }\n\n  dragCallback(evt) {\n    evt.detail.viewport.initialRotation = this.initialRotation;\n    this.applyActiveStrategy(evt);\n    external.cornerstone.setViewport(evt.detail.element, evt.detail.viewport);\n  }\n}\n\nfunction defaultStrategy(evt) {\n  const eventData = evt.detail;\n  const { element, viewport } = eventData;\n  const initialRotation = viewport.initialRotation\n    ? viewport.initialRotation\n    : 0;\n\n  // Calculate the center of the image\n  const rect = element.getBoundingClientRect(element);\n  const { clientWidth: width, clientHeight: height } = element;\n\n  if (!eventData.startPoints) {\n    eventData.startPoints = eventData.currentPoints;\n  }\n  const initialPoints = {\n    x: eventData.startPoints.client.x,\n    y: eventData.startPoints.client.y,\n  };\n  const { scale, translation } = viewport;\n  const centerPoints = {\n    x: rect.left + width / 2 + translation.x * scale,\n    y: rect.top + height / 2 + translation.y * scale,\n  };\n\n  const currentPoints = {\n    x: eventData.currentPoints.client.x,\n    y: eventData.currentPoints.client.y,\n  };\n\n  const angleInfo = angleBetweenPoints(\n    centerPoints,\n    initialPoints,\n    currentPoints\n  );\n\n  if (angleInfo.direction < 0) {\n    angleInfo.angle = -angleInfo.angle;\n  }\n\n  viewport.rotation = initialRotation + angleInfo.angle;\n}\n\nconst horizontalStrategy = evt => {\n  const eventData = evt.detail;\n  const { viewport, deltaPoints } = eventData;\n\n  viewport.rotation += deltaPoints.page.x / viewport.scale;\n};\n\nconst verticalStrategy = evt => {\n  const eventData = evt.detail;\n  const { viewport, deltaPoints } = eventData;\n\n  viewport.rotation += deltaPoints.page.y / viewport.scale;\n};\n","let configMaxSimultaneousRequests;\n\n// Maximum concurrent connections to the same server\n// Information from http://sgdev-blog.blogspot.fr/2014/01/maximum-concurrent-connection-to-same.html\nconst maxSimultaneousRequests = {\n  default: 6,\n  IE: {\n    9: 6,\n    10: 8,\n    default: 8,\n  },\n  Firefox: {\n    default: 6,\n  },\n  Opera: {\n    10: 8,\n    11: 6,\n    12: 6,\n    default: 6,\n  },\n  Chrome: {\n    default: 6,\n  },\n  Safari: {\n    default: 6,\n  },\n};\n\n// Browser name / version detection\n//\n//\n\n/**\n * Browser name / version detection\n * http://stackoverflow.com/questions/2400935/browser-detection-in-javascript\n * @export @public @method\n * @name getBrowserInfo\n *\n * @returns {string} The name and version of the browser.\n */\nfunction getBrowserInfo() {\n  const ua = navigator.userAgent;\n  let M =\n    ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) ||\n    [];\n  let tem;\n\n  if (/trident/i.test(M[1])) {\n    tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\n    return `IE ${tem[1] || ''}`;\n  }\n\n  if (M[1] === 'Chrome') {\n    tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n    if (tem !== null) {\n      return tem\n        .slice(1)\n        .join(' ')\n        .replace('OPR', 'Opera');\n    }\n  }\n\n  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n  if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n    M.splice(1, 1, tem[1]);\n  }\n\n  return M.join(' ');\n}\n\n/**\n * Sets the maximum number of simultaneous requests.\n * @export @public @method\n * @name setMaxSimultaneousRequests\n *\n * @param  {number} newMaxSimultaneousRequests The value.\n * @returns {void}\n */\nfunction setMaxSimultaneousRequests(newMaxSimultaneousRequests) {\n  configMaxSimultaneousRequests = newMaxSimultaneousRequests;\n}\n\n/**\n * Returns the maximum number of simultaneous requests.\n * @export @public @method\n * @name getMaxSimultaneousRequests\n *\n * @returns {number} The maximum number of simultaneous requests\n */\nfunction getMaxSimultaneousRequests() {\n  if (configMaxSimultaneousRequests) {\n    return configMaxSimultaneousRequests;\n  }\n\n  return getDefaultSimultaneousRequests();\n}\n\n/**\n * Returns the default number of simultaneous requests.\n * @export @public @method\n * @name getDefaultSimultaneousRequests\n *\n * @returns {number} The default number of simultaneous requests.\n */\nfunction getDefaultSimultaneousRequests() {\n  const infoString = getBrowserInfo();\n  const info = infoString.split(' ');\n  const browserName = info[0];\n  const browserVersion = info[1];\n  const browserData = maxSimultaneousRequests[browserName];\n\n  if (!browserData) {\n    return maxSimultaneousRequests.default;\n  }\n\n  if (!browserData[browserVersion]) {\n    return browserData.default;\n  }\n\n  return browserData[browserVersion];\n}\n\n/**\n * Checks if cornerstoneTools is operating on a mobile device.\n * @export @public @method\n * @name isMobileDevice\n *\n * @returns {boolean} True if running on a mobile device.\n */\nfunction isMobileDevice() {\n  const pattern = new RegExp(\n    'Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini'\n  );\n\n  return pattern.test(navigator.userAgent);\n}\n\nexport {\n  getDefaultSimultaneousRequests,\n  getMaxSimultaneousRequests,\n  setMaxSimultaneousRequests,\n  getBrowserInfo,\n  isMobileDevice,\n};\n","import external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n\n/**\n * @public\n * @class RotateTouchTool\n * @memberof Tools\n *\n * @classdesc Tool for rotating the image using touch.\n * @extends Tools.Base.BaseTool\n */\nexport default class RotateTouchTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'RotateTouch',\n      supportedInteractionTypes: ['TouchRotate'],\n    };\n\n    super(props, defaultProps);\n  }\n\n  touchRotateCallback(evt) {\n    const eventData = evt.detail;\n    const { element, viewport, rotation } = eventData;\n\n    viewport.rotation += rotation;\n    external.cornerstone.setViewport(element, viewport);\n  }\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n// Drawing\nimport { getNewContext, draw, setShadow, drawLine } from '../drawing/index.js';\nimport toolStyle from '../stateManagement/toolStyle.js';\nimport toolColors from '../stateManagement/toolColors.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('tools:ScaleOverlayTool');\n\n/**\n * @public\n * @class ScaleOverlayTool\n * @memberof Tools\n *\n * @classdesc Tool for displaying a scale overlay on the image.\n * @extends Tools.Base.BaseTool\n */\nexport default class ScaleOverlayTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'ScaleOverlay',\n      configuration: {\n        minorTickLength: 12.5,\n        majorTickLength: 25,\n      },\n      mixins: ['enabledOrDisabledBinaryTool'],\n    };\n\n    super(props, defaultProps);\n  }\n\n  enabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  disabledCallback(element) {\n    this.forceImageUpdate(element);\n  }\n\n  forceImageUpdate(element) {\n    const enabledElement = external.cornerstone.getEnabledElement(element);\n\n    if (enabledElement.image) {\n      external.cornerstone.updateImage(element);\n    }\n  }\n\n  renderToolData(evt) {\n    const eventData = evt.detail;\n\n    const context = getNewContext(eventData.canvasContext.canvas);\n    const { image, viewport, element } = eventData;\n\n    let rowPixelSpacing = image.rowPixelSpacing;\n    let colPixelSpacing = image.columnPixelSpacing;\n    const imagePlane = external.cornerstone.metaData.get(\n      'imagePlaneModule',\n      image.imageId\n    );\n\n    if (imagePlane) {\n      rowPixelSpacing =\n        imagePlane.rowPixelSpacing || imagePlane.rowImagePixelSpacing;\n      colPixelSpacing =\n        imagePlane.columnPixelSpacing || imagePlane.colImagePixelSpacing;\n    }\n\n    // Check whether pixel spacing is defined\n    if (!rowPixelSpacing || !colPixelSpacing) {\n      logger.warn(\n        `unable to define rowPixelSpacing or colPixelSpacing from data on ${this.name}'s renderToolData`\n      );\n\n      return;\n    }\n\n    const canvasSize = {\n      width: context.canvas.width,\n      height: context.canvas.height,\n    };\n\n    // Distance between intervals is 10mm\n    const verticalIntervalScale = (10.0 / rowPixelSpacing) * viewport.scale;\n    const horizontalIntervalScale = (10.0 / colPixelSpacing) * viewport.scale;\n\n    // 0.1 and 0.05 gives margin to horizontal and vertical lines\n    const hscaleBounds = computeScaleBounds(canvasSize, 0.25, 0.05);\n    const vscaleBounds = computeScaleBounds(canvasSize, 0.05, 0.15);\n\n    if (\n      !canvasSize.width ||\n      !canvasSize.height ||\n      !hscaleBounds ||\n      !vscaleBounds\n    ) {\n      return;\n    }\n\n    const color = toolColors.getToolColor();\n    const lineWidth = toolStyle.getToolWidth();\n\n    const imageAttributes = Object.assign(\n      {},\n      {\n        hscaleBounds,\n        vscaleBounds,\n        verticalMinorTick: verticalIntervalScale,\n        horizontalMinorTick: horizontalIntervalScale,\n        verticalLine: {\n          start: {\n            x: vscaleBounds.bottomRight.x,\n            y: vscaleBounds.topLeft.y,\n          },\n          end: {\n            x: vscaleBounds.bottomRight.x,\n            y: vscaleBounds.bottomRight.y,\n          },\n        },\n        horizontalLine: {\n          start: {\n            x: hscaleBounds.topLeft.x,\n            y: hscaleBounds.bottomRight.y,\n          },\n          end: {\n            x: hscaleBounds.bottomRight.x,\n            y: hscaleBounds.bottomRight.y,\n          },\n        },\n        color,\n        lineWidth,\n      },\n      this.configuration\n    );\n\n    draw(context, context => {\n      setShadow(context, imageAttributes);\n\n      // Draw vertical line\n      drawLine(\n        context,\n        element,\n        imageAttributes.verticalLine.start,\n        imageAttributes.verticalLine.end,\n        {\n          color: imageAttributes.color,\n          lineWidth: imageAttributes.lineWidth,\n        },\n        'canvas'\n      );\n      drawVerticalScalebarIntervals(context, element, imageAttributes);\n\n      // Draw horizontal line\n      drawLine(\n        context,\n        element,\n        imageAttributes.horizontalLine.start,\n        imageAttributes.horizontalLine.end,\n        {\n          color: imageAttributes.color,\n          lineWidth: imageAttributes.lineWidth,\n        },\n        'canvas'\n      );\n      drawHorizontalScalebarIntervals(context, element, imageAttributes);\n    });\n  }\n}\n\n/**\n * Computes the max bound for scales on the image\n * @param  {{width: number, height: number}} canvasSize\n * @param  {number} horizontalReduction\n * @param  {number} verticalReduction\n * @returns {Object.<string, { x:number, y:number }>}\n */\nconst computeScaleBounds = (\n  canvasSize,\n  horizontalReduction,\n  verticalReduction\n) => {\n  const hReduction = horizontalReduction * Math.min(1000, canvasSize.width);\n  const vReduction = verticalReduction * Math.min(1000, canvasSize.height);\n  const canvasBounds = {\n    left: hReduction,\n    top: vReduction,\n    width: canvasSize.width - 2 * hReduction,\n    height: canvasSize.height - 2 * vReduction,\n  };\n\n  return {\n    topLeft: {\n      x: canvasBounds.left,\n      y: canvasBounds.top,\n    },\n    bottomRight: {\n      x: canvasBounds.left + canvasBounds.width,\n      y: canvasBounds.top + canvasBounds.height,\n    },\n  };\n};\n\n/**\n * @param {CanvasRenderingContext2D} context\n * @param {HTMLElement} element\n * @param {Object} imageAttributes\n * @returns {void}\n */\nconst drawVerticalScalebarIntervals = (context, element, imageAttributes) => {\n  let i = 0;\n\n  while (\n    imageAttributes.verticalLine.start.y +\n      i * imageAttributes.verticalMinorTick <=\n    imageAttributes.vscaleBounds.bottomRight.y\n  ) {\n    const { color, lineWidth } = imageAttributes;\n    const startPoint = {\n      x: imageAttributes.verticalLine.start.x,\n      y:\n        imageAttributes.verticalLine.start.y +\n        i * imageAttributes.verticalMinorTick,\n    };\n\n    const endPoint = {\n      x: 0,\n      y:\n        imageAttributes.verticalLine.start.y +\n        i * imageAttributes.verticalMinorTick,\n    };\n\n    if (i % 5 === 0) {\n      endPoint.x =\n        imageAttributes.verticalLine.start.x - imageAttributes.majorTickLength;\n    } else {\n      endPoint.x =\n        imageAttributes.verticalLine.start.x - imageAttributes.minorTickLength;\n    }\n\n    drawLine(\n      context,\n      element,\n      startPoint,\n      endPoint,\n      {\n        color,\n        lineWidth,\n      },\n      'canvas'\n    );\n\n    i++;\n  }\n};\n\n/**\n * @param {CanvasRenderingContext2D} context\n * @param {HTMLElement} element\n * @param {Object} imageAttributes\n * @returns {void}\n */\nconst drawHorizontalScalebarIntervals = (context, element, imageAttributes) => {\n  let i = 0;\n\n  while (\n    imageAttributes.horizontalLine.start.x +\n      i * imageAttributes.horizontalMinorTick <=\n    imageAttributes.hscaleBounds.bottomRight.x\n  ) {\n    const { color, lineWidth } = imageAttributes;\n    const startPoint = {\n      x:\n        imageAttributes.horizontalLine.start.x +\n        i * imageAttributes.horizontalMinorTick,\n      y: imageAttributes.horizontalLine.start.y,\n    };\n\n    const endPoint = {\n      x:\n        imageAttributes.horizontalLine.start.x +\n        i * imageAttributes.horizontalMinorTick,\n      y: 0,\n    };\n\n    if (i % 5 === 0) {\n      endPoint.y =\n        imageAttributes.horizontalLine.start.y -\n        imageAttributes.majorTickLength;\n    } else {\n      endPoint.y =\n        imageAttributes.horizontalLine.start.y -\n        imageAttributes.minorTickLength;\n    }\n\n    drawLine(\n      context,\n      element,\n      startPoint,\n      endPoint,\n      {\n        color,\n        lineWidth,\n      },\n      'canvas'\n    );\n\n    i++;\n  }\n};\n","import external from '../externalModules.js';\nimport { getMaxSimultaneousRequests } from '../util/getMaxSimultaneousRequests.js';\n\nconst requestPool = {\n  interaction: [],\n  thumbnail: [],\n  prefetch: [],\n};\n\nconst numRequests = {\n  interaction: 0,\n  thumbnail: 0,\n  prefetch: 0,\n};\n\nlet maxNumRequests = {\n  interaction: 6,\n  thumbnail: 6,\n  prefetch: 5,\n};\n\nlet awake = false;\nconst grabDelay = 20;\n\nfunction addRequest(\n  element,\n  imageId,\n  type,\n  preventCache,\n  doneCallback,\n  failCallback,\n  addToBeginning\n) {\n  if (!requestPool.hasOwnProperty(type)) {\n    throw new Error(\n      'Request type must be one of interaction, thumbnail, or prefetch'\n    );\n  }\n\n  if (!element || !imageId) {\n    return;\n  }\n\n  // Describe the request\n  const requestDetails = {\n    type,\n    imageId,\n    preventCache,\n    doneCallback,\n    failCallback,\n  };\n\n  // If this imageId is in the cache, resolve it immediately\n  const imageLoadObject = external.cornerstone.imageCache.getImageLoadObject(\n    imageId\n  );\n\n  if (imageLoadObject) {\n    imageLoadObject.promise.then(\n      function(image) {\n        doneCallback(image);\n      },\n      function(error) {\n        failCallback(error);\n      }\n    );\n\n    return;\n  }\n\n  if (addToBeginning) {\n    // Add it to the beginning of the stack\n    requestPool[type].unshift(requestDetails);\n  } else {\n    // Add it to the end of the stack\n    requestPool[type].push(requestDetails);\n  }\n\n  // Wake up\n  awake = true;\n}\n\nfunction clearRequestStack(type) {\n  // Console.log('clearRequestStack');\n  if (!requestPool.hasOwnProperty(type)) {\n    throw new Error(\n      'Request type must be one of interaction, thumbnail, or prefetch'\n    );\n  }\n\n  requestPool[type] = [];\n}\n\nfunction startAgain() {\n  if (!awake) {\n    return;\n  }\n\n  setTimeout(function() {\n    startGrabbing();\n  }, grabDelay);\n}\n\nfunction sendRequest(requestDetails) {\n  const cornerstone = external.cornerstone;\n  // Increment the number of current requests of this type\n  const type = requestDetails.type;\n\n  numRequests[type]++;\n\n  awake = true;\n  const imageId = requestDetails.imageId;\n  const doneCallback = requestDetails.doneCallback;\n  const failCallback = requestDetails.failCallback;\n\n  // Check if we already have this image promise in the cache\n  const imageLoadObject = cornerstone.imageCache.getImageLoadObject(imageId);\n\n  if (imageLoadObject) {\n    // If we do, remove from list (when resolved, as we could have\n    // Pending prefetch requests) and stop processing this iteration\n    imageLoadObject.promise.then(\n      function(image) {\n        numRequests[type]--;\n        // Console.log(numRequests);\n\n        doneCallback(image);\n        startAgain();\n      },\n      function(error) {\n        numRequests[type]--;\n        // Console.log(numRequests);\n        failCallback(error);\n        startAgain();\n      }\n    );\n\n    return;\n  }\n\n  function requestTypeToLoadPriority(requestDetails) {\n    if (requestDetails.type === 'prefetch') {\n      return -5;\n    } else if (requestDetails.type === 'interactive') {\n      return 0;\n    } else if (requestDetails.type === 'thumbnail') {\n      return 5;\n    }\n  }\n\n  const priority = requestTypeToLoadPriority(requestDetails);\n\n  let loader;\n\n  if (requestDetails.preventCache === true) {\n    loader = cornerstone.loadImage(imageId, {\n      priority,\n      type: requestDetails.type,\n    });\n  } else {\n    loader = cornerstone.loadAndCacheImage(imageId, {\n      priority,\n      type: requestDetails.type,\n    });\n  }\n\n  // Load and cache the image\n  loader.then(\n    function(image) {\n      numRequests[type]--;\n      // Console.log(numRequests);\n      doneCallback(image);\n      startAgain();\n    },\n    function(error) {\n      numRequests[type]--;\n      // Console.log(numRequests);\n      failCallback(error);\n      startAgain();\n    }\n  );\n}\n\nfunction startGrabbing() {\n  // Begin by grabbing X images\n  const maxSimultaneousRequests = getMaxSimultaneousRequests();\n\n  maxNumRequests = {\n    interaction: Math.max(maxSimultaneousRequests, 1),\n    thumbnail: Math.max(maxSimultaneousRequests - 2, 1),\n    prefetch: Math.max(maxSimultaneousRequests - 1, 1),\n  };\n\n  const currentRequests =\n    numRequests.interaction + numRequests.thumbnail + numRequests.prefetch;\n  const requestsToSend = maxSimultaneousRequests - currentRequests;\n\n  for (let i = 0; i < requestsToSend; i++) {\n    const requestDetails = getNextRequest();\n\n    if (requestDetails) {\n      sendRequest(requestDetails);\n    }\n  }\n}\n\nfunction getNextRequest() {\n  if (\n    requestPool.interaction.length &&\n    numRequests.interaction < maxNumRequests.interaction\n  ) {\n    return requestPool.interaction.shift();\n  }\n\n  if (\n    requestPool.thumbnail.length &&\n    numRequests.thumbnail < maxNumRequests.thumbnail\n  ) {\n    return requestPool.thumbnail.shift();\n  }\n\n  if (\n    requestPool.prefetch.length &&\n    numRequests.prefetch < maxNumRequests.prefetch\n  ) {\n    return requestPool.prefetch.shift();\n  }\n\n  if (\n    !requestPool.interaction.length &&\n    !requestPool.thumbnail.length &&\n    !requestPool.prefetch.length\n  ) {\n    awake = false;\n  }\n\n  return false;\n}\n\nfunction getRequestPool() {\n  return requestPool;\n}\n\nexport default {\n  addRequest,\n  clearRequestStack,\n  startGrabbing,\n  getRequestPool,\n};\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport requestPoolManager from '../requestPool/requestPoolManager.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport triggerEvent from '../util/triggerEvent.js';\n\n/**\n * Scrolls through the stack to the image index requested.\n * @export @public @method\n * @name scrollToIndex\n *\n * @param  {type} element         The element to scroll through.\n * @param  {type} newImageIdIndex The target image index.\n * @returns {void}\n */\nexport default function(element, newImageIdIndex) {\n  const toolData = getToolState(element, 'stack');\n\n  if (!toolData || !toolData.data || !toolData.data.length) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  // If we have more than one stack, check if we have a stack renderer defined\n  let stackRenderer;\n\n  if (toolData.data.length > 1) {\n    const stackRendererData = getToolState(element, 'stackRenderer');\n\n    if (\n      stackRendererData &&\n      stackRendererData.data &&\n      stackRendererData.data.length\n    ) {\n      stackRenderer = stackRendererData.data[0];\n    }\n  }\n\n  const stackData = toolData.data[0];\n\n  // Allow for negative indexing\n  if (newImageIdIndex < 0) {\n    newImageIdIndex += stackData.imageIds.length;\n  }\n\n  const startLoadingHandler = loadHandlerManager.getStartLoadHandler(element);\n  const endLoadingHandler = loadHandlerManager.getEndLoadHandler(element);\n  const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n    element\n  );\n\n  function doneCallback(image) {\n    if (stackData.currentImageIdIndex !== newImageIdIndex) {\n      return;\n    }\n\n    // Check if the element is still enabled in Cornerstone,\n    // If an error is thrown, stop here.\n    try {\n      // TODO: Add 'isElementEnabled' to Cornerstone?\n      cornerstone.getEnabledElement(element);\n    } catch (error) {\n      return;\n    }\n\n    if (stackRenderer) {\n      stackRenderer.currentImageIdIndex = newImageIdIndex;\n      stackRenderer.render(element, toolData.data);\n    } else {\n      cornerstone.displayImage(element, image);\n    }\n\n    if (endLoadingHandler) {\n      endLoadingHandler(element, image);\n    }\n  }\n\n  function failCallback(error) {\n    const imageId = stackData.imageIds[newImageIdIndex];\n\n    if (errorLoadingHandler) {\n      errorLoadingHandler(element, imageId, error);\n    }\n  }\n\n  if (newImageIdIndex === stackData.currentImageIdIndex) {\n    return;\n  }\n\n  if (startLoadingHandler) {\n    startLoadingHandler(element);\n  }\n\n  const eventData = {\n    newImageIdIndex,\n    direction: newImageIdIndex - stackData.currentImageIdIndex,\n  };\n\n  stackData.currentImageIdIndex = newImageIdIndex;\n  const newImageId = stackData.imageIds[newImageIdIndex];\n\n  // Retry image loading in cases where previous image promise\n  // Was rejected, if the option is set\n  /*\n\n    Const config = stackScroll.getConfiguration();\n\n    TODO: Revisit this. It appears that Core's imageCache is not\n    keeping rejected promises anywhere, so we have no way to know\n    if something was previously rejected.\n\n    if (config && config.retryLoadOnScroll === true) {\n    }\n  */\n\n  // Convert the preventCache value in stack data to a boolean\n  const preventCache = Boolean(stackData.preventCache);\n\n  let imagePromise;\n\n  if (preventCache) {\n    imagePromise = cornerstone.loadImage(newImageId);\n  } else {\n    imagePromise = cornerstone.loadAndCacheImage(newImageId);\n  }\n\n  imagePromise.then(doneCallback, failCallback);\n  // Make sure we kick off any changed download request pools\n  requestPoolManager.startGrabbing();\n\n  triggerEvent(element, EVENTS.STACK_SCROLL, eventData);\n}\n","import scrollToIndex from './scrollToIndex.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport clip from './clip.js';\nimport external from './../externalModules.js';\n\n/**\n * Scrolls through the stack.\n * @export @public @method\n * @name scroll\n *\n * @param  {HTMLElement} element          The element to scroll.\n * @param  {number} images                The number of images to scroll through.\n * @param  {type} [loop = false]          Whether to loop the scrolling.\n * @param  {type} [allowSkipping = true]  Whether frames can be skipped.\n * @returns {void}\n */\nexport default function(element, images, loop = false, allowSkipping = true) {\n  const toolData = getToolState(element, 'stack');\n\n  if (!toolData || !toolData.data || !toolData.data.length) {\n    return;\n  }\n\n  const stackData = toolData.data[0];\n\n  if (!stackData.pending) {\n    stackData.pending = [];\n  }\n\n  let newImageIdIndex = stackData.currentImageIdIndex + images;\n\n  if (loop) {\n    const nbImages = stackData.imageIds.length;\n\n    newImageIdIndex %= nbImages;\n  } else {\n    newImageIdIndex = clip(newImageIdIndex, 0, stackData.imageIds.length - 1);\n  }\n\n  if (allowSkipping) {\n    scrollToIndex(element, newImageIdIndex);\n  } else {\n    const pendingEvent = {\n      index: newImageIdIndex,\n    };\n\n    stackData.pending.push(pendingEvent);\n    scrollWithoutSkipping(stackData, pendingEvent, element);\n  }\n}\n\n/**\n * Recursively scrolls the stack until the desired image is reached.\n * @private\n * @method\n * @name scrollWithoutSkipping\n *\n * @param  {type} stackData    Data object containing information about the stack.\n * @param  {Object} pendingEvent The event to process next.\n * @param  {HTMLElement} element      The element being scrolled through.\n * @returns {void}\n */\nfunction scrollWithoutSkipping(stackData, pendingEvent, element) {\n  if (stackData.pending[0] === pendingEvent) {\n    if (stackData.currentImageIdIndex === pendingEvent.index) {\n      stackData.pending.splice(stackData.pending.indexOf(pendingEvent), 1);\n\n      if (stackData.pending.length > 0) {\n        scrollWithoutSkipping(stackData, stackData.pending[0], element);\n      }\n\n      return;\n    }\n\n    const newImageHandler = function(event) {\n      const index = stackData.imageIds.indexOf(event.detail.image.imageId);\n\n      if (index === pendingEvent.index) {\n        stackData.pending.splice(stackData.pending.indexOf(pendingEvent), 1);\n        element.removeEventListener(\n          external.cornerstone.EVENTS.NEW_IMAGE,\n          newImageHandler\n        );\n\n        if (stackData.pending.length > 0) {\n          scrollWithoutSkipping(stackData, stackData.pending[0], element);\n        }\n      }\n    };\n\n    element.addEventListener(\n      external.cornerstone.EVENTS.NEW_IMAGE,\n      newImageHandler\n    );\n\n    scrollToIndex(element, pendingEvent.index);\n  }\n}\n","import BaseTool from './base/BaseTool.js';\nimport scroll from '../util/scroll.js';\n\n/**\n * @public\n * @class StackScrollMouseWheelTool\n * @memberof Tools\n *\n * @classdesc Tool for scrolling through a series using the mouse wheel.\n * @extends Tools.Base.BaseTool\n */\nexport default class StackScrollMouseWheelTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'StackScrollMouseWheel',\n      supportedInteractionTypes: ['MouseWheel'],\n      configuration: {\n        loop: false,\n        allowSkipping: true,\n        invert: false,\n      },\n    };\n\n    super(props, defaultProps);\n  }\n\n  mouseWheelCallback(evt) {\n    const { direction: images, element } = evt.detail;\n    const { loop, allowSkipping, invert } = this.configuration;\n    const direction = invert ? -images : images;\n\n    scroll(element, direction, loop, allowSkipping);\n  }\n}\n","const elementToolOptions = {};\n\n/**\n * Retrieve the options object associated with a particular toolType and element\n * @export\n * @public\n * @method\n * @name getToolOptions\n *\n * @param {string} toolType Tool type identifier of the target options object\n * @param {HTMLElement} element Element of the target options object\n *\n * @returns {Object} Target options object (empty if not yet set)\n */\nfunction getToolOptions(toolType, element) {\n  if (!elementToolOptions[toolType]) {\n    return {};\n  }\n\n  const toolOptions = elementToolOptions[toolType];\n  const optionsObject = toolOptions.find(\n    toolOptionObject => toolOptionObject.element === element\n  );\n\n  if (!optionsObject) {\n    return {};\n  }\n\n  return optionsObject.options;\n}\n\n/**\n * Set the options object associated with a particular toolType and element.\n * @export\n * @public\n * @method\n * @name setToolOptions\n *\n * @param {string} toolType Tool type identifier of the target options object.\n * @param {HTMLElement} element Element of the target options object.\n * @param {Object} options Options object to store at target.\n * @returns {void}\n */\nfunction setToolOptions(toolType, element, options) {\n  if (!elementToolOptions[toolType]) {\n    elementToolOptions[toolType] = [\n      {\n        element,\n        options,\n      },\n    ];\n\n    return;\n  }\n\n  const toolOptions = elementToolOptions[toolType];\n  const index = toolOptions.findIndex(\n    toolOptionObject => toolOptionObject.element === element\n  );\n\n  if (index === -1) {\n    elementToolOptions[toolType].push({\n      element,\n      options,\n    });\n  } else {\n    const elementOptions = elementToolOptions[toolType][index].options || {};\n\n    elementToolOptions[toolType][index].options = Object.assign(\n      elementOptions,\n      options\n    );\n  }\n}\n\n/**\n * Clear the options object associated with a particular toolType and element.\n * @export\n * @public\n * @method\n * @name clearToolOptions\n *\n * @param {string} toolType Tool type identifier of the target options object.\n * @param {HTMLElement} element Element of the target options object.\n * @returns {void}\n */\nfunction clearToolOptions(toolType, element) {\n  const toolOptions = elementToolOptions[toolType];\n\n  if (toolOptions) {\n    elementToolOptions[toolType] = toolOptions.filter(\n      toolOptionObject => toolOptionObject.element !== element\n    );\n  }\n}\n\n/**\n * Clear the options objects associated with a particular toolType.\n * @export\n * @public\n * @method\n * @name clearToolOptionsByToolType\n *\n * @param {string} toolType Tool type identifier of the target options objects.\n * @returns {void}\n */\nfunction clearToolOptionsByToolType(toolType) {\n  delete elementToolOptions[toolType];\n}\n\n/**\n * Clear the options objects associated with a particular element.\n * @export\n * @public\n * @method\n * @name clearToolOptionsByElement\n *\n * @param {HTMLElement} element Element of the target options objects.\n * @returns {void}\n */\nfunction clearToolOptionsByElement(element) {\n  for (const toolType in elementToolOptions) {\n    elementToolOptions[toolType] = elementToolOptions[toolType].filter(\n      toolOptionObject => toolOptionObject.element !== element\n    );\n  }\n}\n\nexport {\n  getToolOptions,\n  setToolOptions,\n  clearToolOptions,\n  clearToolOptionsByToolType,\n  clearToolOptionsByElement,\n};\n","import BaseTool from './base/BaseTool.js';\nimport scroll from '../util/scroll.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport { setToolOptions, getToolOptions } from '../toolOptions.js';\n\n/**\n * @public\n * @class StackScrollMultiTouchTool\n * @memberof Tools\n *\n * @classdesc Tool for scrolling through a series using multi-touch.\n * @extends Tools.Base.BaseTool\n */\nexport default class StackScrollMultiTouchTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'StackScrollMultiTouch',\n      supportedInteractionTypes: ['MultiTouch'],\n      configuration: {\n        loop: false,\n        allowSkipping: true,\n        touchPointers: 3,\n      },\n    };\n\n    super(props, defaultProps);\n    this.multiTouchDragCallback = this._dragCallback.bind(this);\n  }\n\n  _dragCallback(evt) {\n    const eventData = evt.detail;\n\n    if (eventData.numPointers === this.configuration.touchPointers) {\n      const { element, deltaPoints } = eventData;\n      const { loop, allowSkipping } = this.configuration;\n      const options = getToolOptions(this.name, element);\n\n      const pixelsPerImage = this._getPixelPerImage(element);\n      const deltaY = this._getDeltaY(element, deltaPoints.page.y);\n\n      if (!pixelsPerImage) {\n        return;\n      }\n\n      if (Math.abs(deltaY) >= pixelsPerImage) {\n        const imageIdIndexOffset = Math.round(deltaY / pixelsPerImage);\n\n        scroll(element, imageIdIndexOffset, loop, allowSkipping);\n\n        options.deltaY = deltaY % pixelsPerImage;\n      } else {\n        options.deltaY = deltaY;\n      }\n\n      setToolOptions(this.name, element, options);\n    }\n  }\n\n  _getDeltaY(element, deltaPointsY) {\n    const options = getToolOptions(this.name, element);\n    const deltaY = options.deltaY || 0;\n\n    return deltaY + deltaPointsY;\n  }\n\n  _getPixelPerImage(element) {\n    const toolData = getToolState(element, 'stack');\n\n    if (!toolData || !toolData.data || !toolData.data.length) {\n      return;\n    }\n\n    const stackData = toolData.data[0];\n    const { stackScrollSpeed } = this.configuration;\n\n    // The Math.max here makes it easier to mouseDrag-scroll small or really large image stacks\n    return (\n      stackScrollSpeed ||\n      Math.max(2, element.offsetHeight / Math.max(stackData.imageIds.length, 8))\n    );\n  }\n}\n","import BaseTool from './base/BaseTool.js';\nimport scroll from '../util/scroll.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport { setToolOptions, getToolOptions } from '../toolOptions.js';\nimport { stackScrollCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class StackScrollTool\n * @memberof Tools\n *\n * @classdesc Tool for scrolling through a series.\n * @extends Tools.Base.BaseTool\n */\nexport default class StackScrollTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'StackScroll',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        loop: false,\n        allowSkipping: true,\n      },\n      svgCursor: stackScrollCursor,\n    };\n\n    super(props, defaultProps);\n\n    this.mouseDragCallback = this._dragCallback.bind(this);\n    this.touchDragCallback = this._dragCallback.bind(this);\n  }\n\n  _dragCallback(evt) {\n    const eventData = evt.detail;\n    const { element, deltaPoints } = eventData;\n    const { loop, allowSkipping } = this.configuration;\n    const options = getToolOptions(this.name, element);\n\n    const pixelsPerImage = this._getPixelPerImage(element);\n    const deltaY = this._getDeltaY(element, deltaPoints.page.y);\n\n    if (!pixelsPerImage) {\n      return;\n    }\n\n    if (Math.abs(deltaY) >= pixelsPerImage) {\n      const imageIdIndexOffset = Math.round(deltaY / pixelsPerImage);\n\n      scroll(element, imageIdIndexOffset, loop, allowSkipping);\n\n      options.deltaY = deltaY % pixelsPerImage;\n    } else {\n      options.deltaY = deltaY;\n    }\n\n    setToolOptions(this.name, element, options);\n  }\n\n  _getDeltaY(element, deltaPointsY) {\n    const options = getToolOptions(this.name, element);\n    const deltaY = options.deltaY || 0;\n\n    return deltaY + deltaPointsY;\n  }\n\n  _getPixelPerImage(element) {\n    const toolData = getToolState(element, 'stack');\n\n    if (!toolData || !toolData.data || !toolData.data.length) {\n      return;\n    }\n\n    const stackData = toolData.data[0];\n    const { stackScrollSpeed } = this.configuration;\n\n    // The Math.max here makes it easier to mouseDrag-scroll small or really large image stacks\n    return (\n      stackScrollSpeed ||\n      Math.max(2, element.offsetHeight / Math.max(stackData.imageIds.length, 8))\n    );\n  }\n}\n","import external from '../externalModules.js';\n\n/**\n * Returns the luminance of a region.\n * @public\n * @function getLuminance\n *\n * @param  {HTMLElement} element The element.\n * @param  {number} x       The x position of the top-left corner of the region.\n * @param  {number} y       The y position of the top-left corner of the region.\n * @param  {number} width   The width of the region.\n * @param  {number} height  The height of the region\n * @returns {number[]}         The luminance.\n */\nexport default function(element, x, y, width, height) {\n  if (!element) {\n    throw new Error('getLuminance: parameter element must not be undefined');\n  }\n\n  x = Math.round(x);\n  y = Math.round(y);\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n  const image = enabledElement.image;\n  const luminance = [];\n  let index = 0;\n  const pixelData = image.getPixelData();\n  let spIndex, row, column;\n\n  if (image.color) {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = ((row + y) * image.columns + (column + x)) * 4;\n        const red = pixelData[spIndex];\n        const green = pixelData[spIndex + 1];\n        const blue = pixelData[spIndex + 2];\n\n        luminance[index++] = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n      }\n    }\n  } else {\n    for (row = 0; row < height; row++) {\n      for (column = 0; column < width; column++) {\n        spIndex = (row + y) * image.columns + (column + x);\n        luminance[index++] = pixelData[spIndex] * image.slope + image.intercept;\n      }\n    }\n  }\n\n  return luminance;\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\n// Drawing\nimport { draw, drawRect, getNewContext } from '../drawing/index.js';\nimport clip from '../util/clip.js';\nimport getLuminance from '../util/getLuminance.js';\nimport toolColors from '../stateManagement/toolColors.js';\nimport { wwwcRegionCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class WwwcRegionTool\n * @memberof Tools\n *\n * @classdesc Tool for setting wwwc based on a rectangular region.\n * @extends Tools.Base.BaseTool\n */\nexport default class WwwcRegionTool extends BaseTool {\n  /** @inheritdoc */\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'WwwcRegion',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        minWindowWidth: 10,\n      },\n      svgCursor: wwwcRegionCursor,\n    };\n\n    super(props, defaultProps);\n    this._resetHandles();\n\n    //\n    // Touch\n    //\n\n    /** @inheritdoc */\n    this.postTouchStartCallback = this._startOutliningRegion.bind(this);\n\n    /** @inheritdoc */\n    this.touchDragCallback = this._setHandlesAndUpdate.bind(this);\n\n    /** @inheritdoc */\n    this.touchEndCallback = this._applyStrategy.bind(this);\n\n    //\n    // MOUSE\n    //\n\n    /** @inheritdoc */\n    this.postMouseDownCallback = this._startOutliningRegion.bind(this);\n\n    /** @inheritdoc */\n    this.mouseClickCallback = this._startOutliningRegion.bind(this);\n\n    /** @inheritdoc */\n    this.mouseDragCallback = this._setHandlesAndUpdate.bind(this);\n\n    /** @inheritdoc */\n    this.mouseMoveCallback = this._setHandlesAndUpdate.bind(this);\n\n    /** @inheritdoc */\n    this.mouseUpCallback = this._applyStrategy.bind(this);\n  }\n\n  /**\n   * Render hook: draws the WWWCRegion's \"box\" when selecting\n   *\n   * @param {Cornerstone.event#cornerstoneimagerendered} evt cornerstoneimagerendered event\n   * @memberof Tools.WwwcRegionTool\n   * @returns {void}\n   */\n  renderToolData(evt) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n    const color = toolColors.getColorIfActive({ active: true });\n    const context = getNewContext(eventData.canvasContext.canvas);\n\n    draw(context, context => {\n      drawRect(context, element, this.handles.start, this.handles.end, {\n        color,\n      });\n    });\n  }\n\n  /**\n   * Sets the start handle point and claims the eventDispatcher event\n   *\n   * @private\n   * @param {*} evt // mousedown, touchstart, click\n   * @returns {Boolean} True\n   */\n  _startOutliningRegion(evt) {\n    const consumeEvent = true;\n    const element = evt.detail.element;\n    const image = evt.detail.currentPoints.image;\n\n    if (_isEmptyObject(this.handles.start)) {\n      this.handles.start = image;\n    } else {\n      this.handles.end = image;\n      this._applyStrategy(evt);\n    }\n\n    external.cornerstone.updateImage(element);\n\n    return consumeEvent;\n  }\n\n  /**\n   * This function will update the handles and updateImage to force re-draw\n   *\n   * @private\n   * @method _setHandlesAndUpdate\n   * @param {(CornerstoneTools.event#TOUCH_DRAG|CornerstoneTools.event#MOUSE_DRAG|CornerstoneTools.event#MOUSE_MOVE)} evt  Interaction event emitted by an enabledElement\n   * @returns {void}\n   */\n  _setHandlesAndUpdate(evt) {\n    const element = evt.detail.element;\n    const image = evt.detail.currentPoints.image;\n\n    this.handles.end = image;\n    external.cornerstone.updateImage(element);\n  }\n\n  /**\n   * Event handler for MOUSE_UP/TOUCH_END during handle drag event loop.\n   *\n   * @private\n   * @method _applyStrategy\n   * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement\n   * @returns {void}\n   */\n  _applyStrategy(evt) {\n    if (\n      _isEmptyObject(this.handles.start) ||\n      _isEmptyObject(this.handles.end)\n    ) {\n      return;\n    }\n\n    evt.detail.handles = this.handles;\n    _applyWWWCRegion(evt, this.configuration);\n    this._resetHandles();\n  }\n\n  /**\n   * Sets the start and end handle points to empty objects\n   *\n   * @private\n   * @method _resetHandles\n   * @returns {undefined}\n   */\n  _resetHandles() {\n    this.handles = {\n      start: {},\n      end: {},\n    };\n  }\n}\n\n/**\n * Helper to determine if an object has no keys and is the correct type (is empty)\n *\n * @private\n * @function _isEmptyObject\n * @param {Object} obj The object to check\n * @returns {Boolean} true if the object is empty\n */\nconst _isEmptyObject = obj =>\n  Object.keys(obj).length === 0 && obj.constructor === Object;\n\n/**\n * Calculates the minimum and maximum value in the given pixel array\n * and updates the viewport of the element in the event.\n *\n * @private\n * @method _applyWWWCRegion\n * @param {(CornerstoneTools.event#MOUSE_UP|CornerstoneTools.event#TOUCH_END)} evt Interaction event emitted by an enabledElement\n * @param {Object} config The tool's configuration object\n * @returns {void}\n */\nconst _applyWWWCRegion = function(evt, config) {\n  const eventData = evt.detail;\n  const { image, element } = eventData;\n  const { start: startPoint, end: endPoint } = evt.detail.handles;\n\n  // Get the rectangular region defined by the handles\n  let left = Math.min(startPoint.x, endPoint.x);\n  let top = Math.min(startPoint.y, endPoint.y);\n  let width = Math.abs(startPoint.x - endPoint.x);\n  let height = Math.abs(startPoint.y - endPoint.y);\n\n  // Bound the rectangle so we don't get undefined pixels\n  left = clip(left, 0, image.width);\n  top = clip(top, 0, image.height);\n  width = Math.floor(Math.min(width, Math.abs(image.width - left)));\n  height = Math.floor(Math.min(height, Math.abs(image.height - top)));\n\n  // Get the pixel data in the rectangular region\n  const pixelLuminanceData = getLuminance(element, left, top, width, height);\n\n  // Calculate the minimum and maximum pixel values\n  const minMaxMean = _calculateMinMaxMean(\n    pixelLuminanceData,\n    image.minPixelValue,\n    image.maxPixelValue\n  );\n\n  // Adjust the viewport window width and center based on the calculated values\n  const viewport = eventData.viewport;\n\n  if (config.minWindowWidth === undefined) {\n    config.minWindowWidth = 10;\n  }\n\n  viewport.voi.windowWidth = Math.max(\n    Math.abs(minMaxMean.max - minMaxMean.min),\n    config.minWindowWidth\n  );\n  viewport.voi.windowCenter = minMaxMean.mean;\n\n  external.cornerstone.setViewport(element, viewport);\n  external.cornerstone.updateImage(element);\n};\n\n/**\n * Calculates the minimum, maximum, and mean value in the given pixel array\n *\n * @private\n * @method _calculateMinMaxMean\n * @param {number[]} pixelLuminance array of pixel luminance values\n * @param {number} globalMin starting \"min\" valie\n * @param {bumber} globalMax starting \"max\" value\n * @returns {Object} {min: number, max: number, mean: number }\n */\nconst _calculateMinMaxMean = function(pixelLuminance, globalMin, globalMax) {\n  const numPixels = pixelLuminance.length;\n  let min = globalMax;\n  let max = globalMin;\n  let sum = 0;\n\n  if (numPixels < 2) {\n    return {\n      min,\n      max,\n      mean: (globalMin + globalMax) / 2,\n    };\n  }\n\n  for (let index = 0; index < numPixels; index++) {\n    const spv = pixelLuminance[index];\n\n    min = Math.min(min, spv);\n    max = Math.max(max, spv);\n    sum += spv;\n  }\n\n  return {\n    min,\n    max,\n    mean: sum / numPixels,\n  };\n};\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { wwwcCursor } from './cursors/index.js';\n\n/**\n * @public\n * @class WwwcTool\n * @memberof Tools\n *\n * @classdesc Tool for setting wwwc by dragging with mouse/touch.\n * @extends Tools.Base.BaseTool\n */\nexport default class WwwcTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Wwwc',\n      strategies: { basicLevelingStrategy },\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        orientation: 0,\n      },\n      svgCursor: wwwcCursor,\n    };\n\n    super(props, defaultProps);\n  }\n\n  mouseDragCallback(evt) {\n    this.applyActiveStrategy(evt);\n    external.cornerstone.setViewport(evt.detail.element, evt.detail.viewport);\n  }\n\n  touchDragCallback(evt) {\n    // Prevent CornerstoneToolsTouchStartActive from killing any press events\n    evt.stopImmediatePropagation();\n    this.applyActiveStrategy(evt);\n    external.cornerstone.setViewport(evt.detail.element, evt.detail.viewport);\n  }\n}\n\n/**\n * Here we normalize the ww/wc adjustments so the same number of on screen pixels\n * adjusts the same percentage of the dynamic range of the image.  This is needed to\n * provide consistency for the ww/wc tool regardless of the dynamic range (e.g. an 8 bit\n * image will feel the same as a 16 bit image would)\n *\n * @param {Object} evt\n * @param {Object} { orienttion }\n * @returns {void}\n */\nfunction basicLevelingStrategy(evt) {\n  const { orientation } = this.configuration;\n  const eventData = evt.detail;\n\n  const maxVOI =\n    eventData.image.maxPixelValue * eventData.image.slope +\n    eventData.image.intercept;\n  const minVOI =\n    eventData.image.minPixelValue * eventData.image.slope +\n    eventData.image.intercept;\n  const imageDynamicRange = maxVOI - minVOI;\n  const multiplier = imageDynamicRange / 1024;\n\n  const deltaX = eventData.deltaPoints.page.x * multiplier;\n  const deltaY = eventData.deltaPoints.page.y * multiplier;\n\n  if (orientation === 0) {\n    eventData.viewport.voi.windowWidth += deltaX;\n    eventData.viewport.voi.windowCenter += deltaY;\n  } else {\n    eventData.viewport.voi.windowWidth += deltaY;\n    eventData.viewport.voi.windowCenter += deltaX;\n  }\n}\n","/**\n * Changes the scale of the viewport.\n *\n * @private\n * @function changeViewportScale\n *\n * @param {Object} viewport The viewport to scale.\n * @param {number} ticks The change in magnifcation factor.\n * @param {Object} scaleLimits The limits in scale.\n * @returns {Object} The scaled viewport.\n */\nexport default function(viewport, ticks, scaleLimits) {\n  const { maxScale, minScale } = scaleLimits;\n  const pow = 1.7;\n  const oldFactor = Math.log(viewport.scale) / Math.log(pow);\n  const factor = oldFactor + ticks;\n  const scale = Math.pow(pow, factor);\n\n  if (maxScale && scale > maxScale) {\n    viewport.scale = maxScale;\n  } else if (minScale && scale < minScale) {\n    viewport.scale = minScale;\n  } else {\n    viewport.scale = scale;\n  }\n\n  return viewport;\n}\n","import changeViewportScale from './changeViewportScale.js';\nimport correctShift from './correctShift.js';\n\n// Named\nexport { changeViewportScale, correctShift };\n\n// Default\nexport default {\n  changeViewportScale,\n  correctShift,\n};\n","/**\n * Corrects the shift by accountoing for viewport rotation and flips.\n * @export @public @method\n * @name correctShift\n *\n * @param  {Object} shift      The shift to correct.\n * @param  {Object} viewportOrientation  Object containing information on the viewport orientation.\n * @returns {Object}            The corrected shift.\n */\nexport default function(shift, viewportOrientation) {\n  const { hflip, vflip, rotation } = viewportOrientation;\n\n  // Apply Flips\n  shift.x *= hflip ? -1 : 1;\n  shift.y *= vflip ? -1 : 1;\n\n  // Apply rotations\n  if (rotation !== 0) {\n    const angle = (rotation * Math.PI) / 180;\n\n    const cosA = Math.cos(angle);\n    const sinA = Math.sin(angle);\n\n    const newX = shift.x * cosA - shift.y * sinA;\n    const newY = shift.x * sinA + shift.y * cosA;\n\n    shift.x = newX;\n    shift.y = newY;\n  }\n\n  return shift;\n}\n","import external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { changeViewportScale } from '../util/zoom/index.js';\n\n/**\n * @public\n * @class ZoomMouseWheelTool\n * @memberof Tools\n *\n * @classdesc Tool for changing magnification with the mouse wheel.\n * @extends Tools.Base.BaseTool\n */\nexport default class ZoomMouseWheelTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'ZoomMouseWheel',\n      supportedInteractionTypes: ['MouseWheel'],\n      configuration: {\n        minScale: 0.25,\n        maxScale: 20.0,\n        invert: false,\n      },\n    };\n\n    super(props, defaultProps);\n  }\n\n  mouseWheelCallback(evt) {\n    const { element, viewport, spinY } = evt.detail;\n    const { invert, maxScale, minScale } = this.configuration;\n    const ticks = invert ? spinY / 4 : -spinY / 4;\n\n    const updatedViewport = changeViewportScale(viewport, ticks, {\n      maxScale,\n      minScale,\n    });\n\n    external.cornerstone.setViewport(element, updatedViewport);\n  }\n}\n","import external from '../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport { clipToBox } from '../util/clip.js';\nimport zoomUtils from '../util/zoom/index.js';\nimport { zoomCursor } from './cursors/index.js';\n\nconst { correctShift, changeViewportScale } = zoomUtils;\n\n/**\n * @public\n * @class ZoomTool\n * @memberof Tools\n *\n * @classdesc Tool for changing magnification.\n * @extends Tools.Base.BaseTool\n */\nexport default class ZoomTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'Zoom',\n      strategies: {\n        default: defaultStrategy,\n        translate: translateStrategy,\n        zoomToCenter: zoomToCenterStrategy,\n      },\n      defaultStrategy: 'default',\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        invert: false,\n        preventZoomOutsideImage: false,\n        minScale: 0.25,\n        maxScale: 20.0,\n      },\n      svgCursor: zoomCursor,\n    };\n\n    super(props, defaultProps);\n  }\n\n  touchDragCallback(evt) {\n    dragCallback.call(this, evt);\n  }\n\n  mouseDragCallback(evt) {\n    dragCallback.call(this, evt);\n  }\n}\n\nconst dragCallback = function(evt) {\n  const deltaY = evt.detail.deltaPoints.page.y;\n\n  if (!deltaY) {\n    return false;\n  }\n\n  this.applyActiveStrategy(evt, this.configuration);\n  external.cornerstone.setViewport(evt.detail.element, evt.detail.viewport);\n};\n\n/**\n * The default strategy keeps the target location fixed on the page\n * as we zoom in/out.\n *\n * @param {*} evt\n * @param {*} { invert, maxScale, minScale }\n * @returns {void}\n */\nfunction defaultStrategy(evt) {\n  const { invert, maxScale, minScale } = this.configuration;\n  const deltaY = evt.detail.deltaPoints.page.y;\n  const ticks = invert ? -deltaY / 100 : deltaY / 100;\n  const { element, viewport } = evt.detail;\n  const [startX, startY, imageX, imageY] = [\n    evt.detail.startPoints.page.x,\n    evt.detail.startPoints.page.y,\n    evt.detail.startPoints.image.x,\n    evt.detail.startPoints.image.y,\n  ];\n\n  // Calculate the new scale factor based on how far the mouse has changed\n  const updatedViewport = changeViewportScale(viewport, ticks, {\n    maxScale,\n    minScale,\n  });\n\n  external.cornerstone.setViewport(element, updatedViewport);\n\n  // Now that the scale has been updated, determine the offset we need to apply to the center so we can\n  // Keep the original start location in the same position\n  const newCoords = external.cornerstone.pageToPixel(element, startX, startY);\n\n  // The shift we will use is the difference between the original image coordinates of the point we've selected\n  // And the image coordinates of the same point on the page after the viewport scaling above has been performed\n  // This shift is in image coordinates, and is designed to keep the target location fixed on the page.\n  let shift = {\n    x: imageX - newCoords.x,\n    y: imageY - newCoords.y,\n  };\n\n  // Correct the required shift using the viewport rotation and flip parameters\n  shift = correctShift(shift, updatedViewport);\n\n  // Apply the shift to the Viewport's translation setting\n  viewport.translation.x -= shift.x;\n  viewport.translation.y -= shift.y;\n}\n\nfunction translateStrategy(evt) {\n  const {\n    invert,\n    preventZoomOutsideImage,\n    maxScale,\n    minScale,\n  } = this.configuration;\n  const deltaY = evt.detail.deltaPoints.page.y;\n  const ticks = invert ? -deltaY / 100 : deltaY / 100;\n  const image = evt.detail.image;\n  const viewport = evt.detail.viewport;\n  const [startX, startY] = [\n    evt.detail.startPoints.image.x,\n    evt.detail.startPoints.image.y,\n  ];\n\n  // Calculate the new scale factor based on how far the mouse has changed\n  // Note that in this case we don't need to update the viewport after the initial\n  // Zoom step since we aren't don't intend to keep the target position static on\n  // The page\n  const updatedViewport = changeViewportScale(viewport, ticks, {\n    maxScale,\n    minScale,\n  });\n\n  // Define the default shift to take place during this zoom step\n  const shift = {\n    x: 0,\n    y: 0,\n  };\n\n  // Define the parameters for the translate strategy\n  const translateSpeed = 8;\n  const outwardsMinScaleToTranslate = 3;\n  const minTranslation = 0.01;\n\n  if (ticks < 0) {\n    // Zoom outwards from the image center\n    if (updatedViewport.scale < outwardsMinScaleToTranslate) {\n      // If the current translation is smaller than the minimum desired translation,\n      // Set the translation to zero\n      if (Math.abs(updatedViewport.translation.x) < minTranslation) {\n        updatedViewport.translation.x = 0;\n      } else {\n        shift.x = updatedViewport.translation.x / translateSpeed;\n      }\n\n      // If the current translation is smaller than the minimum desired translation,\n      // Set the translation to zero\n      if (Math.abs(updatedViewport.translation.y) < minTranslation) {\n        updatedViewport.translation.y = 0;\n      } else {\n        shift.y = updatedViewport.translation.y / translateSpeed;\n      }\n    }\n  } else {\n    // Zoom inwards to the current image point\n\n    // Identify the coordinates of the point the user is trying to zoom into\n    // If we are not allowed to zoom outside the image, bound the user-selected position to\n    // A point inside the image\n    if (preventZoomOutsideImage) {\n      clipToBox(evt.detail.startPoints.image, image);\n    }\n\n    // Calculate the translation value that would place the desired image point in the center\n    // Of the viewport\n    let desiredTranslation = {\n      x: image.width / 2 - startX,\n      y: image.height / 2 - startY,\n    };\n\n    // Correct the target location using the viewport rotation and flip parameters\n    desiredTranslation = correctShift(desiredTranslation, updatedViewport);\n\n    // Calculate the difference between the current viewport translation value and the\n    // Final desired translation values\n    const distanceToDesired = {\n      x: updatedViewport.translation.x - desiredTranslation.x,\n      y: updatedViewport.translation.y - desiredTranslation.y,\n    };\n\n    // If the current translation is smaller than the minimum desired translation,\n    // Stop translating in the x-direction\n    if (Math.abs(distanceToDesired.x) < minTranslation) {\n      updatedViewport.translation.x = desiredTranslation.x;\n    } else {\n      // Otherwise, shift the viewport by one step\n      shift.x = distanceToDesired.x / translateSpeed;\n    }\n\n    // If the current translation is smaller than the minimum desired translation,\n    // Stop translating in the y-direction\n    if (Math.abs(distanceToDesired.y) < minTranslation) {\n      updatedViewport.translation.y = desiredTranslation.y;\n    } else {\n      // Otherwise, shift the viewport by one step\n      shift.y = distanceToDesired.y / translateSpeed;\n    }\n  }\n\n  // Apply the shift to the Viewport's translation setting\n  updatedViewport.translation.x -= shift.x;\n  updatedViewport.translation.y -= shift.y;\n}\n\nfunction zoomToCenterStrategy(evt) {\n  const { invert, maxScale, minScale } = this.configuration;\n  const deltaY = evt.detail.deltaPoints.page.y;\n  const ticks = invert ? -deltaY / 100 : deltaY / 100;\n  const viewport = evt.detail.viewport;\n\n  // Calculate the new scale factor based on how far the mouse has changed\n  changeViewportScale(viewport, ticks, {\n    maxScale,\n    minScale,\n  });\n}\n","import external from './../externalModules.js';\nimport BaseTool from './base/BaseTool.js';\nimport zoomUtils from '../util/zoom/index.js';\n\nconst { correctShift } = zoomUtils;\n\n/**\n *\n *\n * @public\n * @class ZoomTouchPinchTool\n * @memberof Tools\n *\n * @extends {BaseTool}\n */\nexport default class ZoomTouchPinchTool extends BaseTool {\n  constructor(props = {}) {\n    const defaultProps = {\n      name: 'ZoomTouchPinch',\n      // TODO: Do we need a better way to specify touchPinch?\n      supportedInteractionTypes: ['TouchPinch'],\n      configuration: {\n        minScale: 0.25,\n        maxScale: 20.0,\n      },\n    };\n\n    super(props, defaultProps);\n  }\n\n  touchPinchCallback(evt) {\n    const { element, viewport, scaleChange } = evt.detail;\n    const [pageStartX, pageStartY, imageStartX, imageStartY] = [\n      evt.detail.startPoints.page.x,\n      evt.detail.startPoints.page.y,\n      evt.detail.startPoints.image.x,\n      evt.detail.startPoints.image.y,\n    ];\n    const { maxScale, minScale } = this.configuration;\n\n    // Change the scale based on the pinch gesture's scale change\n    viewport.scale += scaleChange * viewport.scale;\n    if (maxScale && viewport.scale > maxScale) {\n      viewport.scale = maxScale;\n    } else if (minScale && viewport.scale < minScale) {\n      viewport.scale = minScale;\n    }\n\n    external.cornerstone.setViewport(element, viewport);\n\n    // Now that the scale has been updated, determine the offset we need to apply to the center so we can\n    // Keep the original start location in the same position\n    const newCoords = external.cornerstone.pageToPixel(\n      element,\n      pageStartX,\n      pageStartY\n    );\n    let shift = {\n      x: imageStartX - newCoords.x,\n      y: imageStartY - newCoords.y,\n    };\n\n    shift = correctShift(shift, viewport);\n    viewport.translation.x -= shift.x;\n    viewport.translation.y -= shift.y;\n    external.cornerstone.setViewport(element, viewport);\n  }\n}\n","/**\n * Returns a copy of the points object.\n * @public\n * @function copyPoints\n *\n * @param  {Object} points - The object to copy.\n * @returns {Object} - The copy.\n */\nexport default function(points) {\n  const page = _copy(points.page);\n  const image = _copy(points.image);\n  const client = _copy(points.client);\n  const canvas = _copy(points.canvas);\n\n  return {\n    page,\n    image,\n    client,\n    canvas,\n  };\n}\n\n/**\n *\n * @private\n * @function _copy\n *\n * @param {Object} point - { x, y }\n * @returns {Object} { x, y }\n */\nfunction _copy({ x, y } = {}) {\n  return {\n    x,\n    y,\n  };\n}\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport copyPoints from '../util/copyPoints.js';\nimport triggerEvent from '../util/triggerEvent.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('eventListeners:mouseEventListeners');\n\nlet isClickEvent = true;\nlet preventClickTimeout;\nconst clickDelay = 200;\n\nfunction getEventButtons(event) {\n  if (typeof event.buttons === 'number') {\n    return event.buttons;\n  }\n\n  switch (event.which) {\n    // No button\n    case 0:\n      return 0;\n    // Left\n    case 1:\n      return 1;\n    // Middle\n    case 2:\n      return 4;\n    // Right\n    case 3:\n      return 2;\n  }\n\n  return 0;\n}\n\nfunction preventClickHandler() {\n  isClickEvent = false;\n}\n\nfunction mouseDoubleClick(e) {\n  const element = e.currentTarget;\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n\n  if (!enabledElement.image) {\n    return;\n  }\n\n  const eventType = EVENTS.MOUSE_DOUBLE_CLICK;\n\n  const startPoints = {\n    page: external.cornerstoneMath.point.pageToPoint(e),\n    image: external.cornerstone.pageToPixel(element, e.pageX, e.pageY),\n    client: {\n      x: e.clientX,\n      y: e.clientY,\n    },\n  };\n\n  startPoints.canvas = external.cornerstone.pixelToCanvas(\n    element,\n    startPoints.image\n  );\n\n  const lastPoints = copyPoints(startPoints);\n\n  logger.log('double-click: %o', getEventButtons(e));\n  const eventData = {\n    event: e,\n    buttons: getEventButtons(e),\n    viewport: external.cornerstone.getViewport(element),\n    image: enabledElement.image,\n    element,\n    startPoints,\n    lastPoints,\n    currentPoints: startPoints,\n    deltaPoints: {\n      x: 0,\n      y: 0,\n    },\n    type: eventType,\n  };\n\n  triggerEvent(element, eventType, eventData);\n}\n\nfunction mouseDown(e) {\n  const element = e.currentTarget;\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n\n  if (!enabledElement.image) {\n    return;\n  }\n\n  preventClickTimeout = setTimeout(preventClickHandler, clickDelay);\n\n  // Prevent CornerstoneToolsMouseMove while mouse is down\n  element.removeEventListener('mousemove', mouseMove);\n\n  const startPoints = {\n    page: external.cornerstoneMath.point.pageToPoint(e),\n    image: external.cornerstone.pageToPixel(element, e.pageX, e.pageY),\n    client: {\n      x: e.clientX,\n      y: e.clientY,\n    },\n  };\n\n  startPoints.canvas = external.cornerstone.pixelToCanvas(\n    element,\n    startPoints.image\n  );\n\n  let lastPoints = copyPoints(startPoints);\n\n  const eventData = {\n    event: e,\n    buttons: getEventButtons(e),\n    viewport: external.cornerstone.getViewport(element),\n    image: enabledElement.image,\n    element,\n    startPoints,\n    lastPoints,\n    currentPoints: startPoints,\n    deltaPoints: {\n      x: 0,\n      y: 0,\n    },\n    type: EVENTS.MOUSE_DOWN,\n  };\n\n  const eventPropagated = triggerEvent(\n    eventData.element,\n    EVENTS.MOUSE_DOWN,\n    eventData\n  );\n\n  if (eventPropagated) {\n    // No tools responded to this event, create a new tool\n    eventData.type = EVENTS.MOUSE_DOWN_ACTIVATE;\n    triggerEvent(eventData.element, EVENTS.MOUSE_DOWN_ACTIVATE, eventData);\n  }\n\n  function onMouseMove(e) {\n    // Calculate our current points in page and image coordinates\n    const eventType = EVENTS.MOUSE_DRAG;\n    const currentPoints = {\n      page: external.cornerstoneMath.point.pageToPoint(e),\n      image: external.cornerstone.pageToPixel(element, e.pageX, e.pageY),\n      client: {\n        x: e.clientX,\n        y: e.clientY,\n      },\n    };\n\n    currentPoints.canvas = external.cornerstone.pixelToCanvas(\n      element,\n      currentPoints.image\n    );\n\n    // Calculate delta values in page and image coordinates\n    const deltaPoints = {\n      page: external.cornerstoneMath.point.subtract(\n        currentPoints.page,\n        lastPoints.page\n      ),\n      image: external.cornerstoneMath.point.subtract(\n        currentPoints.image,\n        lastPoints.image\n      ),\n      client: external.cornerstoneMath.point.subtract(\n        currentPoints.client,\n        lastPoints.client\n      ),\n      canvas: external.cornerstoneMath.point.subtract(\n        currentPoints.canvas,\n        lastPoints.canvas\n      ),\n    };\n\n    logger.log('mousemove: %o', getEventButtons(e));\n    const eventData = {\n      buttons: getEventButtons(e),\n      viewport: external.cornerstone.getViewport(element),\n      image: enabledElement.image,\n      element,\n      startPoints,\n      lastPoints,\n      currentPoints,\n      deltaPoints,\n      type: eventType,\n      ctrlKey: e.ctrlKey,\n      metaKey: e.metaKey,\n      shiftKey: e.shiftKey,\n    };\n\n    triggerEvent(eventData.element, eventType, eventData);\n\n    // Update the last points\n    lastPoints = copyPoints(currentPoints);\n  }\n\n  // Hook mouseup so we can unbind our event listeners\n  // When they stop dragging\n  function onMouseUp(e) {\n    // Cancel the timeout preventing the click event from triggering\n    clearTimeout(preventClickTimeout);\n\n    let eventType = EVENTS.MOUSE_UP;\n\n    if (isClickEvent) {\n      eventType = EVENTS.MOUSE_CLICK;\n    }\n\n    // Calculate our current points in page and image coordinates\n    const currentPoints = {\n      page: external.cornerstoneMath.point.pageToPoint(e),\n      image: external.cornerstone.pageToPixel(element, e.pageX, e.pageY),\n      client: {\n        x: e.clientX,\n        y: e.clientY,\n      },\n    };\n\n    currentPoints.canvas = external.cornerstone.pixelToCanvas(\n      element,\n      currentPoints.image\n    );\n\n    // Calculate delta values in page and image coordinates\n    const deltaPoints = {\n      page: external.cornerstoneMath.point.subtract(\n        currentPoints.page,\n        lastPoints.page\n      ),\n      image: external.cornerstoneMath.point.subtract(\n        currentPoints.image,\n        lastPoints.image\n      ),\n      client: external.cornerstoneMath.point.subtract(\n        currentPoints.client,\n        lastPoints.client\n      ),\n      canvas: external.cornerstoneMath.point.subtract(\n        currentPoints.canvas,\n        lastPoints.canvas\n      ),\n    };\n\n    logger.log('mouseup: %o', getEventButtons(e));\n    const eventData = {\n      event: e,\n      buttons: getEventButtons(e),\n      viewport: external.cornerstone.getViewport(element),\n      image: enabledElement.image,\n      element,\n      startPoints,\n      lastPoints,\n      currentPoints,\n      deltaPoints,\n      type: eventType,\n    };\n\n    triggerEvent(eventData.element, eventType, eventData);\n\n    document.removeEventListener('mousemove', onMouseMove);\n    document.removeEventListener('mouseup', onMouseUp);\n\n    element.addEventListener('mousemove', mouseMove);\n\n    isClickEvent = true;\n  }\n\n  document.addEventListener('mousemove', onMouseMove);\n  document.addEventListener('mouseup', onMouseUp);\n}\n\nfunction mouseMove(e) {\n  const element = e.currentTarget;\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n\n  if (!enabledElement.image) {\n    return;\n  }\n\n  const eventType = EVENTS.MOUSE_MOVE;\n\n  const startPoints = {\n    page: external.cornerstoneMath.point.pageToPoint(e),\n    image: external.cornerstone.pageToPixel(element, e.pageX, e.pageY),\n    client: {\n      x: e.clientX,\n      y: e.clientY,\n    },\n  };\n\n  startPoints.canvas = external.cornerstone.pixelToCanvas(\n    element,\n    startPoints.image\n  );\n\n  let lastPoints = copyPoints(startPoints);\n\n  // Calculate our current points in page and image coordinates\n  const currentPoints = {\n    page: external.cornerstoneMath.point.pageToPoint(e),\n    image: external.cornerstone.pageToPixel(element, e.pageX, e.pageY),\n    client: {\n      x: e.clientX,\n      y: e.clientY,\n    },\n  };\n\n  currentPoints.canvas = external.cornerstone.pixelToCanvas(\n    element,\n    currentPoints.image\n  );\n\n  // Calculate delta values in page and image coordinates\n  const deltaPoints = {\n    page: external.cornerstoneMath.point.subtract(\n      currentPoints.page,\n      lastPoints.page\n    ),\n    image: external.cornerstoneMath.point.subtract(\n      currentPoints.image,\n      lastPoints.image\n    ),\n    client: external.cornerstoneMath.point.subtract(\n      currentPoints.client,\n      lastPoints.client\n    ),\n    canvas: external.cornerstoneMath.point.subtract(\n      currentPoints.canvas,\n      lastPoints.canvas\n    ),\n  };\n\n  const eventData = {\n    viewport: external.cornerstone.getViewport(element),\n    image: enabledElement.image,\n    element,\n    startPoints,\n    lastPoints,\n    currentPoints,\n    deltaPoints,\n    type: eventType,\n  };\n\n  triggerEvent(element, eventType, eventData);\n\n  // Update the last points\n  lastPoints = copyPoints(currentPoints);\n}\n\nfunction disable(element) {\n  element.removeEventListener('mousedown', mouseDown);\n  element.removeEventListener('mousemove', mouseMove);\n  element.removeEventListener('dblclick', mouseDoubleClick);\n}\n\nfunction enable(element) {\n  // Prevent handlers from being attached multiple times\n  disable(element);\n\n  element.addEventListener('mousedown', mouseDown);\n  element.addEventListener('mousemove', mouseMove);\n  element.addEventListener('dblclick', mouseDoubleClick);\n}\n\nexport default {\n  enable,\n  disable,\n};\n","// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\n/**\n * Normalizes wheel events and provides properties that are more\n * consistent and helpful across different browsers\n *\n * @private\n * @function normalizeWheel\n * @param {WheelEvent} event\n * @returns {Object} { spinX, spinY, pixlX, pixelY }\n */\nexport default function(event) {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = 0,\n    pixelY = 0;\n\n  // Legacy\n  if ('detail' in event) {\n    spinY = event.detail;\n  }\n  if ('wheelDelta' in event) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in event) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in event) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  pixelX = spinX * PIXEL_STEP;\n  pixelY = spinY * PIXEL_STEP;\n\n  if ('deltaY' in event) {\n    pixelY = event.deltaY;\n  }\n  if ('deltaX' in event) {\n    pixelX = event.deltaX;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // Delta in LINE units\n      pixelX *= LINE_HEIGHT;\n      pixelY *= LINE_HEIGHT;\n    } else {\n      // Delta in PAGE units\n      pixelX *= PAGE_HEIGHT;\n      pixelY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX,\n    spinY,\n    pixelX,\n    pixelY,\n  };\n}\n","/**\n * Internal module used to turn on listening, handling, and normalizing of the\n * native `wheel` event\n */\n\nimport EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport triggerEvent from '../util/triggerEvent.js';\nimport normalizeWheel from './internals/normalizeWheel.js';\n\n/**\n *\n * @private\n * @function wheelEventHandler\n * @param {WheelEvent} evt\n * @returns {undefined}\n */\nfunction wheelEventHandler(evt) {\n  const element = evt.currentTarget;\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n\n  if (!enabledElement.image) {\n    return;\n  }\n\n  // Prevent triggering MouseWheel events that are not real scroll events:\n  // E.g. when clicking the MiddleMouseWheelButton, a deltaY of 0 is emitted.\n  // See https://github.com/cornerstonejs/cornerstoneTools/issues/935\n  if (evt.deltaY > -1 && evt.deltaY < 1) {\n    return;\n  }\n\n  evt.preventDefault();\n\n  const { pageX, pageY } = evt;\n  const startingCoords = external.cornerstone.pageToPixel(\n    element,\n    pageX,\n    pageY\n  );\n  const { spinX, spinY, pixelX, pixelY } = normalizeWheel(evt);\n  const direction = spinY < 0 ? -1 : 1;\n\n  const mouseWheelData = {\n    element,\n    viewport: external.cornerstone.getViewport(element),\n    detail: evt,\n    image: enabledElement.image,\n    direction,\n    spinX,\n    spinY,\n    pixelX,\n    pixelY,\n    pageX,\n    pageY,\n    imageX: startingCoords.x,\n    imageY: startingCoords.y,\n  };\n\n  triggerEvent(element, EVENTS.MOUSE_WHEEL, mouseWheelData);\n}\n\n/**\n * Listens for the wheel event, and handles it. Handled event\n * will be \"normalized\" and re-emitted as `EVENTS.MOUSE_WHEEL`\n *\n * @private\n * @param {HTMLElement} element\n * @returns {undefined}\n */\nfunction enable(element) {\n  disable(element);\n  element.addEventListener('wheel', wheelEventHandler, { passive: false });\n}\n\n/**\n * Removes listener and handler for wheel event. `EVENTS.MOUSE_WHEEL`\n * will no longer be emitted.\n *\n * @private\n * @param {HTMLElement} element\n * @returns {undefined}\n */\nfunction disable(element) {\n  element.removeEventListener('wheel', wheelEventHandler, { passive: false });\n}\n\nexport default {\n  enable,\n  disable,\n};\n","// Functions to prevent ghost clicks following a touch\n// All credit to @kosich\n// https://gist.github.com/kosich/23188dd86633b6c2efb7\n\nconst antiGhostDelay = 2000,\n  pointerType = {\n    mouse: 0,\n    touch: 1,\n  };\n\nlet lastInteractionType, lastInteractionTime;\n\nfunction handleTap(type, e) {\n  const now = Date.now();\n\n  if (type !== lastInteractionType) {\n    if (now - lastInteractionTime <= antiGhostDelay) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n\n      return false;\n    }\n\n    lastInteractionType = type;\n  }\n\n  lastInteractionTime = now;\n}\n\n// Cacheing the function references\n// Necessary because a new function reference is created after .bind() is called\n// http://stackoverflow.com/questions/11565471/removing-event-listener-which-was-added-with-bind\nconst handleTapMouse = handleTap.bind(null, pointerType.mouse);\nconst handleTapTouch = handleTap.bind(null, pointerType.touch);\n\nfunction attachEvents(element, eventList, interactionType) {\n  const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n\n  eventList.forEach(function(eventName) {\n    element.addEventListener(eventName, tapHandler, { passive: false });\n  });\n}\n\nfunction removeEvents(element, eventList, interactionType) {\n  const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n\n  eventList.forEach(function(eventName) {\n    element.removeEventListener(eventName, tapHandler);\n  });\n}\n\nconst mouseEvents = ['mousedown', 'mouseup'];\nconst touchEvents = ['touchstart', 'touchend'];\n\nfunction disable(element) {\n  removeEvents(element, mouseEvents, pointerType.mouse);\n  removeEvents(element, touchEvents, pointerType.touch);\n}\n\nfunction enable(element) {\n  disable(element);\n  attachEvents(element, mouseEvents, pointerType.mouse);\n  attachEvents(element, touchEvents, pointerType.touch);\n}\n\nexport default {\n  enable,\n  disable,\n};\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport copyPoints from '../util/copyPoints.js';\nimport preventGhostClick from './preventGhostClick.js';\nimport triggerEvent from '../util/triggerEvent.js';\nimport { setToolOptions, getToolOptions } from '../toolOptions.js';\n\nlet startPoints,\n  currentPoints,\n  lastPoints,\n  deltaPoints,\n  eventData,\n  touchStartDelay,\n  pressTimeout,\n  pageDistanceMoved;\n\nlet lastScale = 1.0,\n  lastRotation = 0.0,\n  preventNextPinch = false,\n  isPress = false,\n  lastDelta;\n\nconst pressDelay = 700,\n  pressMaxDistance = 5;\n\nconst toolType = 'touchInput';\n\nfunction onTouch(e) {\n  const element = e.currentTarget || e.srcEvent.currentTarget;\n  const enabledElement = external.cornerstone.getEnabledElement(element);\n\n  if (!enabledElement.image) {\n    return;\n  }\n\n  let eventType, scaleChange, delta, remainingPointers, rotation;\n\n  // Prevent mouse events from occurring alongside touch events\n  e.preventDefault();\n\n  // If more than one finger is placed on the element, stop the press timeout\n  if (\n    (e.pointers && e.pointers.length > 1) ||\n    (e.touches && e.touches.length > 1)\n  ) {\n    isPress = false;\n    clearTimeout(pressTimeout);\n  }\n\n  switch (e.type) {\n    case 'tap':\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      // Calculate our current points in page and image coordinates\n      currentPoints = {\n        page: external.cornerstoneMath.point.pageToPoint(e.pointers[0]),\n        image: external.cornerstone.pageToPixel(\n          element,\n          e.pointers[0].pageX,\n          e.pointers[0].pageY\n        ),\n        client: {\n          x: e.pointers[0].clientX,\n          y: e.pointers[0].clientY,\n        },\n      };\n      currentPoints.canvas = external.cornerstone.pixelToCanvas(\n        element,\n        currentPoints.image\n      );\n\n      eventType = EVENTS.TAP;\n      eventData = {\n        event: e,\n        viewport: external.cornerstone.getViewport(element),\n        image: enabledElement.image,\n        element,\n        currentPoints,\n        type: eventType,\n        isTouchEvent: true,\n      };\n\n      triggerEvent(element, eventType, eventData);\n      break;\n\n    case 'doubletap':\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      // Calculate our current points in page and image coordinates\n      currentPoints = {\n        page: external.cornerstoneMath.point.pageToPoint(e.pointers[0]),\n        image: external.cornerstone.pageToPixel(\n          element,\n          e.pointers[0].pageX,\n          e.pointers[0].pageY\n        ),\n        client: {\n          x: e.pointers[0].clientX,\n          y: e.pointers[0].clientY,\n        },\n      };\n      currentPoints.canvas = external.cornerstone.pixelToCanvas(\n        element,\n        currentPoints.image\n      );\n\n      eventType = EVENTS.DOUBLE_TAP;\n      eventData = {\n        event: e,\n        viewport: external.cornerstone.getViewport(element),\n        image: enabledElement.image,\n        element,\n        currentPoints,\n        type: eventType,\n        isTouchEvent: true,\n      };\n\n      triggerEvent(element, eventType, eventData);\n      break;\n\n    case 'pinchstart':\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      lastScale = 1.0;\n      break;\n\n    case 'pinchmove':\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      if (preventNextPinch === true) {\n        lastScale = e.scale;\n        preventNextPinch = false;\n        break;\n      }\n\n      scaleChange = (e.scale - lastScale) / lastScale;\n\n      startPoints = {\n        page: e.center,\n        image: external.cornerstone.pageToPixel(\n          element,\n          e.center.x,\n          e.center.y\n        ),\n      };\n      startPoints.canvas = external.cornerstone.pixelToCanvas(\n        element,\n        startPoints.image\n      );\n\n      eventType = EVENTS.TOUCH_PINCH;\n      eventData = {\n        event: e,\n        startPoints,\n        viewport: external.cornerstone.getViewport(element),\n        image: enabledElement.image,\n        element,\n        direction: e.scale < 1 ? 1 : -1,\n        scaleChange,\n        type: eventType,\n        isTouchEvent: true,\n      };\n\n      triggerEvent(element, eventType, eventData);\n\n      lastScale = e.scale;\n      break;\n\n    case 'touchstart':\n      lastScale = 1.0;\n\n      clearTimeout(pressTimeout);\n\n      clearTimeout(touchStartDelay);\n      touchStartDelay = setTimeout(function() {\n        startPoints = {\n          page: external.cornerstoneMath.point.pageToPoint(e.touches[0]),\n          image: external.cornerstone.pageToPixel(\n            element,\n            e.touches[0].pageX,\n            e.touches[0].pageY\n          ),\n          client: {\n            x: e.touches[0].clientX,\n            y: e.touches[0].clientY,\n          },\n        };\n        startPoints.canvas = external.cornerstone.pixelToCanvas(\n          element,\n          startPoints.image\n        );\n\n        eventType = EVENTS.TOUCH_START;\n        if (e.touches.length > 1) {\n          eventType = EVENTS.MULTI_TOUCH_START;\n        }\n\n        eventData = {\n          event: e,\n          viewport: external.cornerstone.getViewport(element),\n          image: enabledElement.image,\n          element,\n          startPoints,\n          currentPoints: startPoints,\n          type: eventType,\n          isTouchEvent: true,\n        };\n\n        const eventPropagated = triggerEvent(element, eventType, eventData);\n\n        if (eventPropagated === true) {\n          // IsPress = false;\n          // ClearTimeout(pressTimeout);\n\n          // No current tools responded to the drag action.\n          // Create new tool measurement\n          eventType = EVENTS.TOUCH_START_ACTIVE;\n          if (e.touches.length > 1) {\n            eventType = EVENTS.MULTI_TOUCH_START_ACTIVE;\n          }\n\n          eventData.type = eventType;\n          triggerEvent(element, eventType, eventData);\n        }\n\n        // Console.log(eventType);\n        lastPoints = copyPoints(startPoints);\n      }, 50);\n\n      isPress = true;\n      pageDistanceMoved = 0;\n      pressTimeout = setTimeout(function() {\n        if (!isPress) {\n          return;\n        }\n\n        currentPoints = {\n          page: external.cornerstoneMath.point.pageToPoint(e.touches[0]),\n          image: external.cornerstone.pageToPixel(\n            element,\n            e.touches[0].pageX,\n            e.touches[0].pageY\n          ),\n          client: {\n            x: e.touches[0].clientX,\n            y: e.touches[0].clientY,\n          },\n        };\n        currentPoints.canvas = external.cornerstone.pixelToCanvas(\n          element,\n          startPoints.image\n        );\n\n        eventType = EVENTS.TOUCH_PRESS;\n        eventData = {\n          event: e,\n          viewport: external.cornerstone.getViewport(element),\n          image: enabledElement.image,\n          element,\n          currentPoints,\n          type: eventType,\n          isTouchEvent: true,\n        };\n\n        triggerEvent(element, eventType, eventData);\n\n        // Console.log(eventType);\n      }, pressDelay);\n      break;\n\n    case 'touchend':\n      lastScale = 1.0;\n\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      setTimeout(function() {\n        startPoints = {\n          page: external.cornerstoneMath.point.pageToPoint(e.changedTouches[0]),\n          image: external.cornerstone.pageToPixel(\n            element,\n            e.changedTouches[0].pageX,\n            e.changedTouches[0].pageY\n          ),\n          client: {\n            x: e.changedTouches[0].clientX,\n            y: e.changedTouches[0].clientY,\n          },\n        };\n        startPoints.canvas = external.cornerstone.pixelToCanvas(\n          element,\n          startPoints.image\n        );\n\n        eventType = EVENTS.TOUCH_END;\n\n        eventData = {\n          event: e,\n          viewport: external.cornerstone.getViewport(element),\n          image: enabledElement.image,\n          element,\n          startPoints,\n          currentPoints: startPoints,\n          type: eventType,\n          isTouchEvent: true,\n        };\n\n        triggerEvent(element, eventType, eventData);\n      }, 50);\n      break;\n\n    case 'panmove':\n      // Using the delta-value of HammerJS, because it takes all pointers into account\n      // This is very important when using panning in combination with pinch-zooming\n      // But HammerJS' delta is relative to the start of the pan event\n      // So it needs to be converted to a per-event-delta for CornerstoneTools\n      delta = {\n        x: e.deltaX - lastDelta.x,\n        y: e.deltaY - lastDelta.y,\n      };\n\n      lastDelta = {\n        x: e.deltaX,\n        y: e.deltaY,\n      };\n\n      // Calculate our current points in page and image coordinates\n      currentPoints = {\n        page: {\n          x: lastPoints.page.x + delta.x,\n          y: lastPoints.page.y + delta.y,\n        },\n        image: external.cornerstone.pageToPixel(\n          element,\n          lastPoints.page.x + delta.x,\n          lastPoints.page.y + delta.y\n        ),\n        client: {\n          x: lastPoints.client.x + delta.x,\n          y: lastPoints.client.y + delta.y,\n        },\n      };\n      currentPoints.canvas = external.cornerstone.pixelToCanvas(\n        element,\n        currentPoints.image\n      );\n\n      // Calculate delta values in page and image coordinates\n      deltaPoints = {\n        page: external.cornerstoneMath.point.subtract(\n          currentPoints.page,\n          lastPoints.page\n        ),\n        image: external.cornerstoneMath.point.subtract(\n          currentPoints.image,\n          lastPoints.image\n        ),\n        client: external.cornerstoneMath.point.subtract(\n          currentPoints.client,\n          lastPoints.client\n        ),\n        canvas: external.cornerstoneMath.point.subtract(\n          currentPoints.canvas,\n          lastPoints.canvas\n        ),\n      };\n\n      pageDistanceMoved += Math.sqrt(\n        deltaPoints.page.x * deltaPoints.page.x +\n          deltaPoints.page.y * deltaPoints.page.y\n      );\n      // Console.log(\"pageDistanceMoved: \" + pageDistanceMoved);\n      if (pageDistanceMoved > pressMaxDistance) {\n        // Console.log('Press event aborted due to movement');\n        isPress = false;\n        clearTimeout(pressTimeout);\n      }\n\n      eventType = EVENTS.TOUCH_DRAG;\n      if (e.pointers.length > 1) {\n        eventType = EVENTS.MULTI_TOUCH_DRAG;\n      }\n\n      eventData = {\n        viewport: external.cornerstone.getViewport(element),\n        image: enabledElement.image,\n        element,\n        startPoints,\n        lastPoints,\n        currentPoints,\n        deltaPoints,\n        numPointers: e.pointers.length,\n        type: eventType,\n        isTouchEvent: true,\n      };\n\n      triggerEvent(element, eventType, eventData);\n\n      lastPoints = copyPoints(currentPoints);\n      break;\n\n    case 'panstart':\n      lastDelta = {\n        x: e.deltaX,\n        y: e.deltaY,\n      };\n\n      currentPoints = {\n        page: external.cornerstoneMath.point.pageToPoint(e.pointers[0]),\n        image: external.cornerstone.pageToPixel(\n          element,\n          e.pointers[0].pageX,\n          e.pointers[0].pageY\n        ),\n        client: {\n          x: e.pointers[0].clientX,\n          y: e.pointers[0].clientY,\n        },\n      };\n      currentPoints.canvas = external.cornerstone.pixelToCanvas(\n        element,\n        currentPoints.image\n      );\n      lastPoints = copyPoints(currentPoints);\n      break;\n\n    case 'panend':\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      // If lastPoints is not yet set, it means panend fired without panstart or pan,\n      // So we can ignore this event\n      if (!lastPoints) {\n        return false;\n      }\n\n      currentPoints = {\n        page: external.cornerstoneMath.point.pageToPoint(e.pointers[0]),\n        image: external.cornerstone.pageToPixel(\n          element,\n          e.pointers[0].pageX,\n          e.pointers[0].pageY\n        ),\n        client: {\n          x: e.pointers[0].clientX,\n          y: e.pointers[0].clientY,\n        },\n      };\n      currentPoints.canvas = external.cornerstone.pixelToCanvas(\n        element,\n        currentPoints.image\n      );\n\n      // Calculate delta values in page and image coordinates\n      deltaPoints = {\n        page: external.cornerstoneMath.point.subtract(\n          currentPoints.page,\n          lastPoints.page\n        ),\n        image: external.cornerstoneMath.point.subtract(\n          currentPoints.image,\n          lastPoints.image\n        ),\n        client: external.cornerstoneMath.point.subtract(\n          currentPoints.client,\n          lastPoints.client\n        ),\n        canvas: external.cornerstoneMath.point.subtract(\n          currentPoints.canvas,\n          lastPoints.canvas\n        ),\n      };\n\n      eventType = EVENTS.TOUCH_DRAG_END;\n\n      eventData = {\n        event: e.srcEvent,\n        viewport: external.cornerstone.getViewport(element),\n        image: enabledElement.image,\n        element,\n        startPoints,\n        lastPoints,\n        currentPoints,\n        deltaPoints,\n        type: eventType,\n        isTouchEvent: true,\n      };\n\n      triggerEvent(element, eventType, eventData);\n\n      remainingPointers = e.pointers.length - e.changedPointers.length;\n\n      if (remainingPointers === 2) {\n        preventNextPinch = true;\n      }\n      break;\n\n    case 'rotatemove':\n      isPress = false;\n      clearTimeout(pressTimeout);\n\n      rotation = e.rotation - lastRotation;\n\n      lastRotation = e.rotation;\n\n      eventType = EVENTS.TOUCH_ROTATE;\n      eventData = {\n        event: e.srcEvent,\n        viewport: external.cornerstone.getViewport(element),\n        image: enabledElement.image,\n        element,\n        rotation,\n        type: eventType,\n      };\n      triggerEvent(element, eventType, eventData);\n      break;\n  }\n\n  return false;\n}\n\nfunction enable(element) {\n  disable(element);\n  const Hammer = external.Hammer;\n\n  const hammerOptions = {\n    inputClass: Hammer.SUPPORT_POINTER_EVENTS\n      ? Hammer.PointerEventInput\n      : Hammer.TouchInput,\n  };\n\n  const mc = new Hammer.Manager(element, hammerOptions);\n\n  const panOptions = {\n    pointers: 0,\n    direction: Hammer.DIRECTION_ALL,\n    threshold: 0,\n  };\n\n  const pan = new Hammer.Pan(panOptions);\n  const pinch = new Hammer.Pinch({\n    threshold: 0,\n  });\n  const rotate = new Hammer.Rotate({\n    threshold: 0,\n  });\n\n  pinch.recognizeWith(pan);\n  pinch.recognizeWith(rotate);\n  rotate.recognizeWith(pan);\n\n  const doubleTap = new Hammer.Tap({\n    event: 'doubletap',\n    taps: 2,\n    interval: 1500,\n    threshold: 50,\n    posThreshold: 50,\n  });\n\n  doubleTap.recognizeWith(pan);\n\n  // Add to the Manager\n  mc.add([doubleTap, pan, rotate, pinch]);\n  mc.on(\n    'tap doubletap panstart panmove panend pinchstart pinchmove rotatemove',\n    onTouch\n  );\n\n  preventGhostClick.enable(element);\n\n  const touchEvents = ['touchstart', 'touchend'];\n\n  touchEvents.forEach(eventType => {\n    element.addEventListener(eventType, onTouch, { passive: false });\n  });\n\n  const options = getToolOptions(toolType, element);\n\n  options.hammer = mc;\n\n  setToolOptions(toolType, element, options);\n}\n\nfunction disable(element) {\n  preventGhostClick.disable(element);\n\n  const touchEvents = ['touchstart', 'touchend'];\n\n  touchEvents.forEach(eventType => {\n    element.removeEventListener(eventType, onTouch);\n  });\n\n  const options = getToolOptions(toolType, element);\n  const mc = options.hammer;\n\n  if (mc) {\n    mc.off(\n      'tap doubletap panstart panmove panend pinchstart pinchmove rotatemove',\n      onTouch\n    );\n  }\n}\n\n// Module exports\nconst touchInput = {\n  enable,\n  disable,\n};\n\nexport default touchInput;\n","import { getModule } from '../../store/index.js';\nimport {\n  getNewContext,\n  resetCanvasContextTransform,\n  transformCanvasContext,\n} from '../../drawing/index.js';\nimport external from '../../externalModules';\n\nconst segmentationModule = getModule('segmentation');\n\nexport default function renderSegmentationFill(\n  evt,\n  labelmap3D,\n  labelmap2D,\n  labelmapIndex,\n  isActiveLabelMap\n) {\n  const labelmapCanvas = getLabelmapCanvas(evt, labelmap3D, labelmap2D);\n\n  renderFill(evt, labelmapCanvas, isActiveLabelMap);\n}\n\n/**\n * Generates a canvas of the `Labelmap2D` data with transparent background, to draw onto the\n * cornerstone canvas. Reduces the number of `putImageData` calls that need to be made by\n * scanning across the labelmap and painting to the canvas in chunks.\n *\n * @param {Object} evt The cornerstone event.\n * @param {Labelmap3D} labelmap3D The `Labelmap3D` object.\n * @param {Labelmap2D} labelmap2D The `Labelmap2D` object containing the pixelData to render.\n * @returns {HTMLCanvasElement}\n */\nexport function getLabelmapCanvas(evt, labelmap3D, labelmap2D) {\n  const { state } = segmentationModule;\n  const eventData = evt.detail;\n  const { image } = eventData;\n  const cols = image.width;\n  const rows = image.height;\n  const { segmentsHidden } = labelmap3D;\n  const pixelData = labelmap2D.pixelData;\n  const colorLutTable = state.colorLutTables[labelmap3D.colorLUTIndex];\n  const canvasElement = document.createElement('canvas');\n\n  canvasElement.width = cols;\n  canvasElement.height = rows;\n\n  const ctx = getNewContext(canvasElement);\n\n  // Image data initialized with all transparent black.\n  const imageData = new ImageData(cols, rows);\n  const data = imageData.data;\n\n  for (let i = 0; i < pixelData.length; i++) {\n    const segmentIndex = pixelData[i];\n\n    if (segmentIndex !== 0 && !segmentsHidden[segmentIndex]) {\n      const color = colorLutTable[pixelData[i]];\n\n      // Modify ImageData.\n      data[4 * i] = color[0]; // R value\n      data[4 * i + 1] = color[1]; // G value\n      data[4 * i + 2] = color[2]; // B value\n      data[4 * i + 3] = color[3]; // A value\n    }\n  }\n\n  // Put this image data onto the labelmapCanvas.\n  ctx.putImageData(imageData, 0, 0);\n\n  return canvasElement;\n}\n\n/**\n * Renders the filled region of each segment in the segmentation.\n * @param  {Object} evt   The cornerstone event.\n * @param  {HTMLCanvasElement} labelmapCanvas The canvas generated for the labelmap.\n * @param  {boolean} isActiveLabelMap Whether or not the labelmap is active.\n * @returns {null}\n */\nexport function renderFill(evt, labelmapCanvas, isActiveLabelMap) {\n  const { configuration } = segmentationModule;\n  const eventData = evt.detail;\n  const context = getNewContext(eventData.canvasContext.canvas);\n\n  const canvasTopLeft = external.cornerstone.pixelToCanvas(eventData.element, {\n    x: 0,\n    y: 0,\n  });\n\n  const canvasTopRight = external.cornerstone.pixelToCanvas(eventData.element, {\n    x: eventData.image.width,\n    y: 0,\n  });\n\n  const canvasBottomRight = external.cornerstone.pixelToCanvas(\n    eventData.element,\n    {\n      x: eventData.image.width,\n      y: eventData.image.height,\n    }\n  );\n\n  const cornerstoneCanvasWidth = external.cornerstoneMath.point.distance(\n    canvasTopLeft,\n    canvasTopRight\n  );\n  const cornerstoneCanvasHeight = external.cornerstoneMath.point.distance(\n    canvasTopRight,\n    canvasBottomRight\n  );\n\n  const canvas = eventData.canvasContext.canvas;\n  const viewport = eventData.viewport;\n\n  const previousImageSmoothingEnabled = context.imageSmoothingEnabled;\n  const previousGlobalAlpha = context.globalAlpha;\n\n  context.imageSmoothingEnabled = false;\n  context.globalAlpha = isActiveLabelMap\n    ? configuration.fillAlpha\n    : configuration.fillAlphaInactive;\n\n  transformCanvasContext(context, canvas, viewport);\n\n  const canvasViewportTranslation = getCanvasViewportTranslation(eventData);\n\n  context.drawImage(\n    labelmapCanvas,\n    canvas.width / 2 - cornerstoneCanvasWidth / 2 + canvasViewportTranslation.x,\n    canvas.height / 2 -\n      cornerstoneCanvasHeight / 2 +\n      canvasViewportTranslation.y,\n    cornerstoneCanvasWidth,\n    cornerstoneCanvasHeight\n  );\n\n  context.globalAlpha = previousGlobalAlpha;\n  context.imageSmoothingEnabled = previousImageSmoothingEnabled;\n\n  resetCanvasContextTransform(context);\n}\n\n/**\n * GetCanvasViewportTranslation - Returns translation coordinations for\n * canvas viewport with calculation of image row/column pixel spacing.\n *\n * @param  {Object} eventData The data associated with the event.\n * @returns  {Object} The coordinates of the translation.\n */\nfunction getCanvasViewportTranslation(eventData) {\n  const { viewport, image } = eventData;\n\n  let widthScale = viewport.scale;\n  let heightScale = viewport.scale;\n\n  if (image.rowPixelSpacing < image.columnPixelSpacing) {\n    widthScale *= image.columnPixelSpacing / image.rowPixelSpacing;\n  } else if (image.columnPixelSpacing < image.rowPixelSpacing) {\n    heightScale *= image.rowPixelSpacing / image.columnPixelSpacing;\n  }\n\n  return {\n    x: viewport.translation.x * widthScale,\n    y: viewport.translation.y * heightScale,\n  };\n}\n","import { getModule } from '../../store/index.js';\nimport external from '../../externalModules.js';\nimport { getNewContext, draw, drawLines } from '../../drawing/index.js';\nimport { disableLogger } from '../../index.js';\n\nconst segmentationModule = getModule('segmentation');\n\nexport default function renderSegmentationOutline(\n  evt,\n  labelmap3D,\n  labelmap2D,\n  labelmapIndex,\n  isActiveLabelMap\n) {\n  const { configuration } = segmentationModule;\n  const outline = getOutline(\n    evt,\n    labelmap3D,\n    labelmap2D,\n    configuration.outlineWidth\n  );\n\n  renderOutline(evt, outline, labelmap3D.colorLUTIndex, isActiveLabelMap);\n}\n\n/**\n * RenderOutline - Renders the outlines of segments to the canvas.\n *\n * @param  {Object} evt             The cornerstone event.\n * @param  {Object} outline         The outline to render.\n * @param  {number} colorLUTIndex   The index of the colorLUT.\n * @param  {number} isActiveLabelMap   Whether the labelmap is active.\n * @returns {null}\n */\nexport function renderOutline(\n  evt,\n  outline,\n  colorLUTIndex,\n  isActiveLabelMap = true\n) {\n  const { configuration, state } = segmentationModule;\n  const eventData = evt.detail;\n  const { element, canvasContext } = eventData;\n\n  const lineWidth = configuration.outlineWidth || 1;\n\n  const context = getNewContext(canvasContext.canvas);\n  const colorLutTable = state.colorLutTables[colorLUTIndex];\n\n  const previousAlpha = context.globalAlpha;\n\n  context.globalAlpha = isActiveLabelMap\n    ? configuration.outlineAlpha\n    : configuration.outlineAlphaInactive;\n\n  // Draw outlines.\n  draw(context, context => {\n    for (let i = 1; i < outline.length; i++) {\n      if (outline[i]) {\n        const color = colorLutTable[i];\n\n        drawLines(\n          context,\n          element,\n          outline[i],\n          {\n            color: `rgba(${color[0]}, ${color[1]}, ${color[2]}, 1.0 )`,\n            lineWidth,\n          },\n          'canvas'\n        );\n      }\n    }\n  });\n\n  context.globalAlpha = previousAlpha;\n}\n\n/**\n * GetOutline - Returns an object containing all the line segments to be\n * drawn the canvas.\n *\n * @param  {Object} evt The cornerstone event.\n * @param  {Labelmap3D} labelmap3D The 3D labelmap.\n * @param  {Labelmap2D} labelmap2D The 2D labelmap for this current image.\n * @param  {number} lineWidth The width of the outline in canvas pixels.\n *\n * @returns {Object[][]} An array of arrays of lines for each segment.\n */\nexport function getOutline(evt, labelmap3D, labelmap2D, lineWidth) {\n  const eventData = evt.detail;\n  const { element, image, viewport } = eventData;\n  const cols = image.width;\n  const rows = image.height;\n\n  lineWidth = lineWidth || 1;\n\n  const { segmentsHidden } = labelmap3D;\n\n  const pixelData = labelmap2D.pixelData;\n  const activeSegmentIndex = labelmap3D.activeSegmentIndex;\n  const lineSegments = [];\n\n  labelmap2D.segmentsOnLabelmap.forEach(segmentIndex => {\n    const visible = !segmentsHidden[segmentIndex];\n\n    if (visible) {\n      lineSegments[segmentIndex] = [];\n    }\n  });\n\n  if (!lineSegments[activeSegmentIndex]) {\n    lineSegments[activeSegmentIndex] = [];\n  }\n\n  const _getPixelCoordinateFromPixelIndex = pixelIndex => ({\n    x: pixelIndex % cols,\n    y: Math.floor(pixelIndex / cols),\n  });\n\n  const offset = getOutlineOffset(viewport, lineWidth);\n\n  for (let i = 0; i < pixelData.length; i++) {\n    const segmentIndex = pixelData[i];\n\n    if (segmentIndex === 0) {\n      continue;\n    }\n\n    const visible = !segmentsHidden[segmentIndex];\n\n    if (!visible) {\n      continue;\n    }\n\n    const coord = _getPixelCoordinateFromPixelIndex(i);\n    const pixels = _getPixelIndiciesAroundPixel(coord, rows, cols);\n\n    // Check pixel above\n    if (pixels.top === undefined || pixelData[pixels.top] !== segmentIndex) {\n      _addTopOutline(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Check pixel below\n    if (\n      pixels.bottom === undefined ||\n      pixelData[pixels.bottom] !== segmentIndex\n    ) {\n      _addBottomOutline(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Check pixel to the left\n    if (pixels.left === undefined || pixelData[pixels.left] !== segmentIndex) {\n      _addLeftOutline(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Check pixel to the right\n    if (\n      pixels.right === undefined ||\n      pixelData[pixels.right] !== segmentIndex\n    ) {\n      _addRightOutline(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Top left corner\n    if (\n      pixels.topLeft !== undefined &&\n      pixelData[pixels.topLeft] !== segmentIndex &&\n      pixelData[pixels.top] === segmentIndex &&\n      pixelData[pixels.left] === segmentIndex\n    ) {\n      _addTopLeftCorner(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Top right corner\n    if (\n      pixels.topRight !== undefined &&\n      pixelData[pixels.topRight] !== segmentIndex &&\n      pixelData[pixels.top] === segmentIndex &&\n      pixelData[pixels.right] === segmentIndex\n    ) {\n      _addTopRightCorner(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Bottom left corner\n    if (\n      pixels.bottomLeft !== undefined &&\n      pixelData[pixels.bottomLeft] !== segmentIndex &&\n      pixelData[pixels.bottom] === segmentIndex &&\n      pixelData[pixels.left] === segmentIndex\n    ) {\n      _addBottomLeftCorner(lineSegments[segmentIndex], element, coord, offset);\n    }\n\n    // Bottom right corner\n    if (\n      pixels.bottomRight !== undefined &&\n      pixelData[pixels.bottomRight] !== segmentIndex &&\n      pixelData[pixels.bottom] === segmentIndex &&\n      pixelData[pixels.right] === segmentIndex\n    ) {\n      _addBottomRightCorner(lineSegments[segmentIndex], element, coord, offset);\n    }\n  }\n\n  return lineSegments;\n}\n\n/**\n * GetOutlineOffset - Returns the outline offset (half line width) in the\n * i (column) and j (row) pixel directions in the viewport's rotated frame.\n * @param  {Object} viewport The cornerstone viewport.\n * @param  {number} lineWidth The width of the outline.\n * @returns {Object} Two vectors in the i and j pixel directions, with magnitude\n *                   lineWidth / 2\n */\nfunction getOutlineOffset(viewport, lineWidth) {\n  const halfLineWidth = lineWidth / 2;\n  let theta = viewport.rotation;\n\n  theta *= Math.PI / 180;\n\n  const cosTheta = Math.cos(theta);\n  const sinTheta = Math.sin(theta);\n\n  const unitVectorI = [cosTheta, sinTheta];\n  const unitVectorJ = [-sinTheta, cosTheta];\n\n  const i = {\n    x: halfLineWidth * unitVectorI[0],\n    y: halfLineWidth * unitVectorI[1],\n  };\n\n  const j = {\n    x: halfLineWidth * unitVectorJ[0],\n    y: halfLineWidth * unitVectorJ[1],\n  };\n\n  if (viewport.hflip) {\n    i.x *= -1;\n    i.y *= -1;\n  }\n\n  if (viewport.vflip) {\n    j.x *= -1;\n    j.y *= -1;\n  }\n\n  return {\n    i,\n    j,\n  };\n}\n\n/**\n * _getPixelIndiciesAroundPixel - Returnns the coordinates for up to 8 surrounding\n * pixels, if they within the bounds of the image.\n *\n * @param  {Object} coord The coordinate to check.\n * @param  {number} rows The number of rows in the image.\n * @param  {number} cols The number of cols in the image.\n *\n * @returns {Object} Object containing the position of adjacent pixels.\n */\nfunction _getPixelIndiciesAroundPixel(coord, rows, cols) {\n  const pixelIndex = coord.y * cols + coord.x;\n  const pixel = {};\n\n  const hasPixelToTop = coord.y - 1 >= 0;\n  const hasPixelToBotoom = coord.y + 1 < rows;\n  const hasPixelToLeft = coord.x - 1 >= 0;\n  const hasPixelToRight = coord.x + 1 < cols;\n\n  if (hasPixelToTop) {\n    pixel.top = pixelIndex - cols;\n\n    if (hasPixelToRight) {\n      pixel.topRight = pixel.top + 1;\n    }\n\n    if (hasPixelToLeft) {\n      pixel.topLeft = pixel.top - 1;\n    }\n  }\n\n  if (hasPixelToBotoom) {\n    pixel.bottom = pixelIndex + cols;\n\n    if (hasPixelToRight) {\n      pixel.bottomRight = pixel.bottom + 1;\n    }\n\n    if (hasPixelToLeft) {\n      pixel.bottomLeft = pixel.bottom - 1;\n    }\n  }\n\n  if (hasPixelToLeft) {\n    pixel.left = pixelIndex - 1;\n  }\n\n  if (hasPixelToRight) {\n    pixel.right = pixelIndex + 1;\n  }\n\n  return pixel;\n}\n\n/**\n * _addTopLeftCorner - Adds an outline to the top left corner of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addTopLeftCorner(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, coord);\n\n  start.x += offset.j.x;\n  start.y += offset.j.y;\n\n  const end = {\n    x: start.x,\n    y: start.y,\n  };\n\n  end.x += offset.i.x * 2;\n  end.y += offset.i.y * 2;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addTopRightCorner - Adds an outline to the top right corner of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nexport function _addTopRightCorner(\n  lineSegmentsForSegment,\n  element,\n  coord,\n  offset\n) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, { x: coord.x + 1, y: coord.y });\n\n  start.x += offset.j.x;\n  start.y += offset.j.y;\n\n  const end = {\n    x: start.x,\n    y: start.y,\n  };\n\n  end.x -= offset.i.x * 2;\n  end.y -= offset.i.y * 2;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addBottomLeftCorner - Adds an outline to the bottom left corner of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addBottomLeftCorner(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, { x: coord.x, y: coord.y + 1 });\n\n  start.x -= offset.j.x;\n  start.y -= offset.j.y;\n\n  const end = {\n    x: start.x,\n    y: start.y,\n  };\n\n  end.x += offset.i.x * 2;\n  end.y += offset.i.y * 2;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addBottomRightCorner - Adds an outline to the bottom right corner of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addBottomRightCorner(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, { x: coord.x + 1, y: coord.y + 1 });\n\n  start.x -= offset.j.x;\n  start.y -= offset.j.y;\n\n  const end = {\n    x: start.x,\n    y: start.y,\n  };\n\n  end.x -= offset.i.x * 2;\n  end.y -= offset.i.y * 2;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addTopOutline - adds an outline at the top of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {number} halfLineWidth - Half the line width, to place line within the pixel.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addTopOutline(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, coord);\n  const end = pixelToCanvas(element, { x: coord.x + 1, y: coord.y });\n\n  // Move the line in the y-direction.\n  start.x += offset.j.x;\n  start.y += offset.j.y;\n\n  end.x += offset.j.x;\n  end.y += offset.j.y;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addBottomOutline - adds an outline at the bottom of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addBottomOutline(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, { x: coord.x, y: coord.y + 1 });\n  const end = pixelToCanvas(element, { x: coord.x + 1, y: coord.y + 1 });\n\n  // Move the line in the negative y-direction.\n  start.x -= offset.j.x;\n  start.y -= offset.j.y;\n\n  end.x -= offset.j.x;\n  end.y -= offset.j.y;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addLeftOutline - adds an outline at the left side of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addLeftOutline(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, coord);\n  const end = pixelToCanvas(element, { x: coord.x, y: coord.y + 1 });\n\n  // Move the line in the x-direction.\n\n  start.x += offset.i.x;\n  start.y += offset.i.y;\n\n  end.x += offset.i.x;\n  end.y += offset.i.y;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n\n/**\n * _addRightOutline - adds an outline at the right side of the pixel.\n *\n * @param  {Object[]} lineSegmentsForSegment - The list to append.\n * @param  {Object} element - The Cornerstone enabled element.\n * @param  {Object} coord - The pixel to add a line to.\n * @param  {Object} offset - The x and y offset in the rotated frame.\n *\n * @returns {null}\n */\nfunction _addRightOutline(lineSegmentsForSegment, element, coord, offset) {\n  const { pixelToCanvas } = external.cornerstone;\n  const start = pixelToCanvas(element, { x: coord.x + 1, y: coord.y });\n  const end = pixelToCanvas(element, { x: coord.x + 1, y: coord.y + 1 });\n\n  // Move the line in the negative x-direction.\n\n  start.x -= offset.i.x;\n  start.y -= offset.i.y;\n\n  end.x -= offset.i.x;\n  end.y -= offset.i.y;\n\n  lineSegmentsForSegment.push({\n    start,\n    end,\n  });\n}\n","import { getModule } from '../../store/index.js';\nimport renderSegmentationFill from './renderSegmentationFill';\nimport renderSegmentationOutline from './renderSegmentationOutline';\n\nconst segmentationModule = getModule('segmentation');\n\n/**\n * Renders the segmentation based on the brush configuration and\n * the active status of the labelmap.\n * @param  {Object} evt                 The cornerstone event.\n * @param  {Labelmap3D} labelmap3D  The `Labelmap3D` object.\n * @param  {number} labelmapIndex The index of the active label map.\n * @param  {Labelmap2D} labelmap2D The `Labelmap2D` object to render.\n * @param  {boolean} isActiveLabelMap Whether or not the labelmap is active.\n * @returns {null}\n */\nexport default function renderSegmentation(\n  evt,\n  labelmap3D,\n  labelmapIndex,\n  labelmap2D,\n  isActiveLabelMap\n) {\n  if (shouldRenderFill(isActiveLabelMap)) {\n    renderSegmentationFill(\n      evt,\n      labelmap3D,\n      labelmap2D,\n      labelmapIndex,\n      isActiveLabelMap\n    );\n  }\n\n  if (shouldRenderOutline(isActiveLabelMap)) {\n    renderSegmentationOutline(\n      evt,\n      labelmap3D,\n      labelmap2D,\n      labelmapIndex,\n      isActiveLabelMap\n    );\n  }\n}\n\n/**\n * ShouldRenderFill - Returns true if `configuration.renderFill`\n * is true , and if the global alpha is not zero.\n *\n * @param  {boolean} isActiveLabelMap\n * @returns  {boolean} True if the segmentation should be filled.\n */\nfunction shouldRenderFill(isActiveLabelMap) {\n  const { configuration } = segmentationModule;\n\n  return (\n    configuration.renderFill &&\n    ((isActiveLabelMap && configuration.fillAlpha !== 0) ||\n      (!isActiveLabelMap && configuration.fillAlphaInactive !== 0))\n  );\n}\n\n/**\n * ShouldRenderOutline - Returns true if `configuration.renderOutline`\n * is true , and if the global alpha is not zero.\n *\n * @param  {boolean} isActiveLabelMap\n * @returns  {boolean} True if the segmentation should be outlined.\n */\nfunction shouldRenderOutline(isActiveLabelMap) {\n  const { configuration } = segmentationModule;\n\n  return (\n    configuration.renderOutline &&\n    ((isActiveLabelMap && configuration.outlineAlpha !== 0) ||\n      (!isActiveLabelMap && configuration.outlineAlphaInactive !== 0))\n  );\n}\n","import { getModule } from '../store/index.js';\nimport renderSegmentation from './internals/renderSegmentation.js';\n\nconst segmentationModule = getModule('segmentation');\n\n/**\n * Finds which segmentations need to be rendered based on the configuration and\n * presence of `Labelmap2D` data on these frames.\n *\n * @param {Object} evt - The cornerstone event.\n * @returns {null}\n */\nexport default function(evt) {\n  const eventData = evt.detail;\n  const element = eventData.element;\n  const { configuration, getters } = segmentationModule;\n\n  const {\n    activeLabelmapIndex,\n    labelmaps3D,\n    currentImageIdIndex,\n  } = getters.labelmaps3D(element);\n\n  if (!labelmaps3D) {\n    return;\n  }\n\n  if (configuration.shouldRenderInactiveLabelmaps) {\n    renderInactiveLabelMaps(\n      evt,\n      labelmaps3D,\n      activeLabelmapIndex,\n      currentImageIdIndex\n    );\n  }\n\n  renderActiveLabelMap(\n    evt,\n    labelmaps3D,\n    activeLabelmapIndex,\n    currentImageIdIndex\n  );\n}\n\n/**\n * RenderActiveLabelMap - Renders the `Labelmap3D` for this element if a `Labelmap2D`\n *                        view of the `currentImageIdIndex` exists.\n *\n * @param  {Object} evt                 The cornerstone event.\n * @param  {Labelmap3D[]} labelmaps3D       An array of `Labelmap3D` objects.\n * @param  {number} activeLabelmapIndex The index of the active label map.\n * @param  {number} currentImageIdIndex The in-stack image position.\n * @returns {null}\n */\nfunction renderActiveLabelMap(\n  evt,\n  labelmaps3D,\n  activeLabelmapIndex,\n  currentImageIdIndex\n) {\n  const labelmap3D = labelmaps3D[activeLabelmapIndex];\n\n  if (!labelmap3D) {\n    return;\n  }\n\n  const labelmap2D = labelmap3D.labelmaps2D[currentImageIdIndex];\n\n  if (labelmap2D) {\n    renderSegmentation(evt, labelmap3D, activeLabelmapIndex, labelmap2D, true);\n  }\n}\n\n/**\n * RenderInactiveLabelMaps - Renders all the inactive `Labelmap3D`s for this element.\n *\n * @param  {Object} evt                 The cornerstone event.\n * @param  {Labelmap3D[]} labelmaps3D       An array of labelmaps.\n * @param  {number} activeLabelmapIndex The index of the active label map.\n * @param  {number} currentImageIdIndex The in-stack image position.\n * @returns {null}\n */\nfunction renderInactiveLabelMaps(\n  evt,\n  labelmaps3D,\n  activeLabelmapIndex,\n  currentImageIdIndex\n) {\n  for (let i = 0; i < labelmaps3D.length; i++) {\n    const labelmap3D = labelmaps3D[i];\n\n    if (i === activeLabelmapIndex || !labelmap3D) {\n      continue;\n    }\n\n    const labelmap2D = labelmap3D.labelmaps2D[currentImageIdIndex];\n\n    if (labelmap2D) {\n      renderSegmentation(evt, labelmap3D, i, labelmap2D, false);\n    }\n  }\n}\n","import { state, getModule } from './../store/index.js';\nimport { getToolState } from '../stateManagement/toolState';\nimport onImageRenderedBrushEventHandler from '../eventListeners/onImageRenderedBrushEventHandler.js';\nimport external from './../externalModules.js';\n\nconst segmentationModule = getModule('segmentation');\n\nconst onImageRendered = function(evt) {\n  const eventData = evt.detail;\n  const element = eventData.element;\n\n  // Render Annotation Tools\n  const toolsToRender = state.tools.filter(\n    tool =>\n      tool.element === element &&\n      (tool.mode === 'active' ||\n        tool.mode === 'passive' ||\n        tool.mode === 'enabled')\n  );\n\n  // Must be using stacks in order to use segmentation tools.\n  const stackToolState = getToolState(element, 'stack');\n\n  const segmentationConfiguration = segmentationModule.configuration;\n\n  if (\n    stackToolState &&\n    (segmentationConfiguration.renderFill ||\n      segmentationConfiguration.renderOutline)\n  ) {\n    onImageRenderedBrushEventHandler(evt);\n  }\n\n  toolsToRender.forEach(tool => {\n    if (tool.renderToolData) {\n      tool.renderToolData(evt);\n    }\n  });\n};\n\nconst enable = function(element) {\n  element.addEventListener(\n    external.cornerstone.EVENTS.IMAGE_RENDERED,\n    onImageRendered\n  );\n};\n\nconst disable = function(element) {\n  element.removeEventListener(\n    external.cornerstone.EVENTS.IMAGE_RENDERED,\n    onImageRendered\n  );\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import { state } from './../../store/index.js';\nimport getActiveToolsForElement from './../../store/getActiveToolsForElement.js';\nimport filterToolsUseableWithMultiPartTools from './../../store/filterToolsUsableWithMultiPartTools.js';\n\nexport default function(handlerType, customFunction, evt) {\n  if (state.isToolLocked) {\n    return false;\n  }\n\n  // TODO: We sometimes see a null detail for TOUCH_PRESS\n  const element = evt.detail.element;\n  let tools = state.tools.filter(tool =>\n    tool.supportedInteractionTypes.includes(handlerType)\n  );\n\n  // Tool is active, and specific callback is active\n  tools = getActiveToolsForElement(element, tools, handlerType);\n\n  // Tool has expected callback custom function\n  tools = tools.filter(tool => typeof tool[customFunction] === 'function');\n\n  if (state.isMultiPartToolActive) {\n    tools = filterToolsUseableWithMultiPartTools(tools);\n  }\n\n  if (tools.length === 0) {\n    return false;\n  }\n\n  tools[0][customFunction](evt);\n}\n","import { state } from './index.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport getHandleNearImagePoint from '../manipulators/getHandleNearImagePoint.js';\n\n/**\n * Filters an array of tools, returning only tools with moveable handles at the\n * mouse location.\n *\n * @public\n * @function getToolsWithMoveableHandles\n *\n * @param  {HTMLElement} element The element\n * @param  {Object[]}    tools   The input tool array.\n * @param  {Object}      coords  The coordinates of the mouse position.\n * @param  {string}      [interactionType=mouse]\n * @returns {Object[]}            The filtered array.\n */\nexport default function(element, tools, coords, interactionType = 'mouse') {\n  const proximity =\n    interactionType === 'mouse' ? state.clickProximity : state.touchProximity;\n\n  return tools.filter(tool => {\n    const toolState = getToolState(element, tool.name);\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      if (\n        getHandleNearImagePoint(\n          element,\n          toolState.data[i].handles,\n          coords,\n          proximity\n        ) !== undefined\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n}\n","/**\n * Filters an array of tools, returning only tools which are active or passive.\n * @export\n * @public\n * @method\n * @name getInteractiveToolsForElement\n *\n * @param  {HTMLElement} element The element.\n * @param  {Object[]} tools      The input tool array.\n * @returns {Object[]}            The filtered array.\n */\nexport default function(element, tools) {\n  return tools.filter(\n    tool =>\n      tool.element === element &&\n      (tool.mode === 'active' || tool.mode === 'passive')\n  );\n}\n","import { getToolState } from './../stateManagement/toolState.js';\n\n/**\n * Filters an array of tools, returning only tools which have annotation data.\n * @export\n * @public\n * @method\n * @name getToolsWithDataForElement\n *\n * @param  {HTMLElement} element The element.\n * @param  {Object[]} tools      The input tool array.\n * @returns {Object[]}            The filtered array.\n */\nexport default function(element, tools) {\n  return tools.filter(tool => {\n    const toolState = getToolState(element, tool.name);\n\n    return toolState && toolState.data.length > 0;\n  });\n}\n","// State\nimport { getters, state } from './../../store/index.js';\nimport { getToolState } from './../../stateManagement/toolState.js';\n// Util\nimport getToolsWithMoveableHandles from '../../store/getToolsWithMoveableHandles.js';\nimport { findHandleDataNearImagePoint } from '../../util/findAndMoveHelpers.js';\nimport getInteractiveToolsForElement from './../../store/getInteractiveToolsForElement.js';\nimport getToolsWithDataForElement from './../../store/getToolsWithDataForElement.js';\nimport filterToolsUseableWithMultiPartTools from './../../store/filterToolsUsableWithMultiPartTools.js';\n\n/**\n * MouseDown is called before MouseDownActivate. If MouseDown\n * finds an existing tool to interact with, it can prevent the\n * event from bubbling to MouseDownActivate.\n *\n * @private\n * @param {mousedown} evt\n * @listens {CornerstoneTools.event:cornerstonetoolsmousedown}\n * @returns {undefined}\n */\nexport default function(evt) {\n  if (state.isToolLocked) {\n    return;\n  }\n\n  const eventData = evt.detail;\n  const element = evt.detail.element;\n  const coords = evt.detail.currentPoints.canvas;\n\n  // High level filtering\n  const activeAndPassiveTools = getInteractiveToolsForElement(\n    element,\n    getters.mouseTools()\n  );\n\n  // ACTIVE TOOL W/ PRE CALLBACK?\n  // Note: In theory, this should only ever be a single tool.\n  let activeTools = activeAndPassiveTools.filter(\n    tool =>\n      tool.mode === 'active' &&\n      Array.isArray(tool.options.mouseButtonMask) &&\n      tool.options.mouseButtonMask.includes(eventData.buttons) &&\n      tool.options.isMouseActive\n  );\n\n  if (state.isMultiPartToolActive) {\n    activeTools = filterToolsUseableWithMultiPartTools(activeTools);\n  }\n\n  // If any tools are active, check if they have a special reason for dealing with the event.\n  if (activeTools.length > 0) {\n    // TODO: If length > 1, you could assess fitness and select the ideal tool\n    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue\n    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?\n    const firstActiveToolWithCallback = activeTools.find(\n      tool => typeof tool.preMouseDownCallback === 'function'\n    );\n\n    if (firstActiveToolWithCallback) {\n      const consumedEvent = firstActiveToolWithCallback.preMouseDownCallback(\n        evt\n      );\n\n      if (consumedEvent) {\n        return;\n      }\n    }\n  }\n\n  if (state.isMultiPartToolActive) {\n    // Don't fire events to Annotation Tools during a multi part loop.\n    return;\n  }\n\n  // Annotation tool specific\n  const annotationTools = getToolsWithDataForElement(\n    element,\n    activeAndPassiveTools\n  );\n\n  // NEAR HANDLES?\n  const annotationToolsWithMoveableHandles = getToolsWithMoveableHandles(\n    element,\n    annotationTools,\n    coords,\n    'mouse'\n  );\n\n  if (annotationToolsWithMoveableHandles.length > 0) {\n    const firstToolWithMoveableHandles = annotationToolsWithMoveableHandles[0];\n    const toolState = getToolState(element, firstToolWithMoveableHandles.name);\n\n    const { handle, data } = findHandleDataNearImagePoint(\n      element,\n      toolState,\n      firstToolWithMoveableHandles.name,\n      coords\n    );\n\n    firstToolWithMoveableHandles.handleSelectedCallback(\n      evt,\n      data,\n      handle,\n      'mouse'\n    );\n\n    return;\n  }\n\n  // NEAR TOOL?\n  const annotationToolsWithPointNearClick = activeAndPassiveTools.filter(\n    tool => {\n      const toolState = getToolState(element, tool.name);\n      const isNearPoint =\n        toolState &&\n        toolState.data &&\n        tool.pointNearTool &&\n        toolState.data.some(data =>\n          tool.pointNearTool(element, data, coords, 'mouse')\n        );\n\n      return isNearPoint;\n    }\n  );\n\n  if (annotationToolsWithPointNearClick.length > 0) {\n    const firstToolNearPoint = annotationToolsWithPointNearClick[0];\n    const toolState = getToolState(element, firstToolNearPoint.name);\n    const firstAnnotationNearPoint = toolState.data.find(data =>\n      firstToolNearPoint.pointNearTool(element, data, coords)\n    );\n\n    firstToolNearPoint.toolSelectedCallback(\n      evt,\n      firstAnnotationNearPoint,\n      'mouse'\n    );\n\n    return;\n  }\n\n  // ACTIVE TOOL W/ POST CALLBACK?\n  // If any tools are active, check if they have a special reason for dealing with the event.\n  if (activeTools.length > 0) {\n    // TODO: If length > 1, you could assess fitness and select the ideal tool\n    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue\n    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?\n    const firstActiveToolWithCallback = activeTools.find(\n      tool => typeof tool.postMouseDownCallback === 'function'\n    );\n\n    if (firstActiveToolWithCallback) {\n      const consumedEvent = firstActiveToolWithCallback.postMouseDownCallback(\n        evt\n      );\n\n      if (consumedEvent) {\n        return;\n      }\n    }\n  }\n}\n","import EVENTS from '../../events.js';\nimport external from '../../externalModules.js';\nimport { addToolState } from '../../stateManagement/toolState.js';\nimport { moveHandle, moveNewHandle } from '../../manipulators/index.js';\nimport { getLogger } from '../../util/logger.js';\nimport triggerEvent from '../../util/triggerEvent.js';\n\nconst logger = getLogger('eventDispatchers:mouseEventHandlers');\n\nexport default function(evt, tool) {\n  logger.log('addNewMeasurement');\n\n  evt.preventDefault();\n  evt.stopPropagation();\n  const eventData = evt.detail;\n  const element = eventData.element;\n  const measurementData = tool.createNewMeasurement(eventData);\n\n  if (!measurementData) {\n    return;\n  }\n\n  // Associate this data with this imageId so we can render it and manipulate it\n  addToolState(element, tool.name, measurementData);\n\n  external.cornerstone.updateImage(element);\n\n  const handleMover =\n    Object.keys(measurementData.handles).length === 1\n      ? moveHandle\n      : moveNewHandle;\n\n  handleMover(\n    eventData,\n    tool.name,\n    measurementData,\n    measurementData.handles.end,\n    tool.options,\n    'mouse',\n    () => {\n      const eventType = EVENTS.MEASUREMENT_COMPLETED;\n      const eventData = {\n        toolName: tool.name,\n        element,\n        measurementData,\n      };\n\n      triggerEvent(element, eventType, eventData);\n    }\n  );\n}\n","import addNewMeasurement from './addNewMeasurement.js';\nimport { state } from './../../store/index.js';\nimport BaseAnnotationTool from './../../tools/base/BaseAnnotationTool.js';\nimport getActiveTool from '../../util/getActiveTool';\n\nexport default function(evt) {\n  if (state.isToolLocked) {\n    return;\n  }\n\n  const { element, buttons } = evt.detail;\n  const activeTool = getActiveTool(element, buttons, 'mouse');\n\n  if (!activeTool) {\n    return;\n  }\n\n  if (typeof activeTool.preMouseDownActivateCallback === 'function') {\n    const consumedEvent = activeTool.preMouseDownActivateCallback(evt);\n\n    if (consumedEvent) {\n      return;\n    }\n  }\n\n  if (state.isMultiPartToolActive) {\n    return;\n  }\n\n  // Note: custom `addNewMeasurement` will need to prevent event bubbling\n  if (activeTool.addNewMeasurement) {\n    activeTool.addNewMeasurement(evt, 'mouse');\n  } else if (activeTool instanceof BaseAnnotationTool) {\n    addNewMeasurement(evt, activeTool);\n  }\n}\n","import { getters, state } from './../../store/index.js';\nimport getActiveToolsForElement from './../../store/getActiveToolsForElement.js';\nimport filterToolsUseableWithMultiPartTools from './../../store/filterToolsUsableWithMultiPartTools.js';\n\n// Tools like wwwc. Non-annotation tools w/ specific\n// Down + mouse behavior\n// TODO: I don't like filtering in drag because it's such\n// A high frequency event. Anything we can do to reduce\n// Repeat math here would be a big help\nexport default function(evt) {\n  if (state.isToolLocked) {\n    return;\n  }\n\n  let tools;\n  const eventData = evt.detail;\n  const element = eventData.element;\n\n  // Filter out disabled, enabled, and passive\n  tools = getActiveToolsForElement(element, getters.mouseTools());\n  tools = tools.filter(\n    tool =>\n      Array.isArray(tool.options.mouseButtonMask) &&\n      tool.options.mouseButtonMask.includes(eventData.buttons) &&\n      tool.options.isMouseActive\n  );\n  tools = tools.filter(tool => typeof tool.mouseDragCallback === 'function');\n\n  if (state.isMultiPartToolActive) {\n    tools = filterToolsUseableWithMultiPartTools(tools);\n  }\n\n  if (tools.length === 0) {\n    return;\n  }\n\n  const activeTool = tools[0];\n\n  activeTool.mouseDragCallback(evt);\n}\n","import external from './../../externalModules.js';\n// State\nimport { getters, state } from './../../store/index.js';\nimport getInteractiveToolsForElement from './../../store/getInteractiveToolsForElement.js';\nimport getToolsWithDataForElement from './../../store/getToolsWithDataForElement.js';\n\n/**\n * This is mostly used to update the [un]hover state\n * of a tool.\n *\n * @private\n * @param {*} evt\n * @returns {void}\n */\nexport default function(evt) {\n  if (state.isToolLocked || state.isMultiPartToolActive) {\n    return;\n  }\n\n  let tools;\n  const { element, currentPoints } = evt.detail;\n\n  // Set the mouse position incase any tool needs it.\n  state.mousePositionImage = currentPoints.image;\n\n  // TODO: instead of filtering these for every interaction, we can change our\n  // TODO: State's structure to always know these values.\n  // Filter out disabled and enabled\n  tools = getInteractiveToolsForElement(element, getters.mouseTools());\n\n  const activeTools = tools.filter(\n    tool => tool.mode === 'active' && tool.options.isMouseActive\n  );\n\n  let imageNeedsUpdate = false;\n\n  // If any tools are active, check if they have a canvas cursor, and if so update image.\n  if (activeTools.length > 0) {\n    imageNeedsUpdate = activeTools.some(tool => tool.updateOnMouseMove);\n  }\n\n  tools = getToolsWithDataForElement(element, tools);\n\n  // Iterate over each tool, and each tool's data\n  // Activate any handles we're hovering over, or whole tools if we're near the tool\n  // If we've changed the state of anything, redrawn the image\n\n  for (let t = 0; t < tools.length; t++) {\n    const tool = tools[t];\n\n    if (typeof tool.mouseMoveCallback === 'function') {\n      imageNeedsUpdate = tool.mouseMoveCallback(evt) || imageNeedsUpdate;\n    }\n  }\n\n  // Tool data activation status changed, redraw the image\n  if (imageNeedsUpdate === true) {\n    external.cornerstone.updateImage(element);\n  }\n}\n","import customCallbackHandler from './../shared/customCallbackHandler.js';\nimport mouseDown from './mouseDown.js';\nimport mouseDownActivate from './mouseDownActivate.js';\nimport mouseDrag from './mouseDrag.js';\nimport mouseMove from './mouseMove.js';\n\nconst mouseClick = customCallbackHandler.bind(\n  null,\n  'Mouse',\n  'mouseClickCallback'\n);\n\nconst mouseDoubleClick = customCallbackHandler.bind(\n  null,\n  'Mouse',\n  'doubleClickCallback'\n);\n\nconst mouseUp = customCallbackHandler.bind(null, 'Mouse', 'mouseUpCallback');\n\nconst mouseWheel = customCallbackHandler.bind(\n  null,\n  'MouseWheel',\n  'mouseWheelCallback'\n);\n\nexport {\n  mouseClick,\n  mouseDown,\n  mouseDownActivate,\n  mouseDoubleClick,\n  mouseDrag,\n  mouseMove,\n  mouseUp,\n  mouseWheel,\n};\n","import EVENTS from './../events.js';\nimport {\n  mouseClick,\n  mouseDown,\n  mouseDownActivate,\n  mouseDoubleClick,\n  mouseDrag,\n  mouseMove,\n  mouseUp,\n  mouseWheel,\n} from './mouseEventHandlers/index.js';\n\n/**\n * These listeners are emitted in order, and can be cancelled/prevented from bubbling\n * by any previous event.\n * - mouseMove: used to update the [un]hover state of a tool (highlighting)\n * - mouseDown: check to see if we are close to an existing annotation, grab it\n * - mouseDownActivate: createNewMeasurement (usually)\n * - mouseDrag: update measurement or apply strategy (wwwc)\n * - mouseDoubleClick: usually a one-time apply specialty action\n * - onImageRendered: redraw visible tool data\n * @private\n * @param {*} element\n * @returns {undefined}\n */\nconst enable = function(element) {\n  element.addEventListener(EVENTS.MOUSE_CLICK, mouseClick);\n  element.addEventListener(EVENTS.MOUSE_DOWN, mouseDown);\n  element.addEventListener(EVENTS.MOUSE_DOWN_ACTIVATE, mouseDownActivate);\n  element.addEventListener(EVENTS.MOUSE_DOUBLE_CLICK, mouseDoubleClick);\n  element.addEventListener(EVENTS.MOUSE_DRAG, mouseDrag);\n  element.addEventListener(EVENTS.MOUSE_MOVE, mouseMove);\n  element.addEventListener(EVENTS.MOUSE_UP, mouseUp);\n  element.addEventListener(EVENTS.MOUSE_WHEEL, mouseWheel);\n};\n\nconst disable = function(element) {\n  element.removeEventListener(EVENTS.MOUSE_CLICK, mouseClick);\n  element.removeEventListener(EVENTS.MOUSE_DOWN, mouseDown);\n  element.removeEventListener(EVENTS.MOUSE_DOWN_ACTIVATE, mouseDownActivate);\n  element.removeEventListener(EVENTS.MOUSE_DOUBLE_CLICK, mouseDoubleClick);\n  element.removeEventListener(EVENTS.MOUSE_DRAG, mouseDrag);\n  element.removeEventListener(EVENTS.MOUSE_MOVE, mouseMove);\n  element.removeEventListener(EVENTS.MOUSE_UP, mouseUp);\n  element.removeEventListener(EVENTS.MOUSE_WHEEL, mouseWheel);\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import { state } from './../store/index.js';\nimport external from './../externalModules.js';\n\nconst onNewImage = function(evt) {\n  if (state.isToolLocked) {\n    return false;\n  }\n\n  const element = evt.detail.element;\n\n  const tools = state.tools.filter(\n    tool =>\n      tool.element === element &&\n      (tool.mode === 'active' ||\n        tool.mode === 'passive' ||\n        tool.mode === 'enabled')\n  );\n\n  if (tools.length === 0) {\n    return false;\n  }\n\n  tools.forEach(tool => {\n    if (tool.newImageCallback) {\n      tool.newImageCallback(evt);\n    }\n  });\n};\n\nconst enable = function(element) {\n  element.addEventListener(external.cornerstone.EVENTS.NEW_IMAGE, onNewImage);\n};\n\nconst disable = function(element) {\n  element.removeEventListener(\n    external.cornerstone.EVENTS.NEW_IMAGE,\n    onNewImage\n  );\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import { state } from '../../store/index.js';\nimport getActiveToolsForElement from '../../store/getActiveToolsForElement.js';\nimport filterToolsUseableWithMultiPartTools from './../../store/filterToolsUsableWithMultiPartTools.js';\n\nexport default function(evt) {\n  if (state.isToolLocked) {\n    return false;\n  }\n\n  // TODO: We sometimes see a null detail for TOUCH_PRESS\n  const { element, numPointers } = evt.detail;\n  let tools = state.tools.filter(tool =>\n    tool.supportedInteractionTypes.includes('MultiTouch')\n  );\n\n  // Tool is active, and specific callback is active\n  tools = getActiveToolsForElement(element, tools, 'MultiTouch');\n  // Tool has expected callback custom function\n  tools = tools.filter(\n    tool =>\n      typeof tool.multiTouchDragCallback === 'function' &&\n      numPointers === tool.configuration.touchPointers\n  );\n\n  if (state.isMultiPartToolActive) {\n    tools = filterToolsUseableWithMultiPartTools(tools);\n  }\n\n  if (tools.length === 0) {\n    return false;\n  }\n\n  const activeTool = tools[0];\n\n  activeTool.multiTouchDragCallback(evt);\n}\n","import EVENTS from '../../events.js';\nimport external from '../../externalModules.js';\nimport { state } from '../../store/index.js';\nimport anyHandlesOutsideImage from './../../manipulators/anyHandlesOutsideImage.js';\nimport { moveNewHandle } from '../../manipulators/index.js';\nimport {\n  addToolState,\n  removeToolState,\n} from '../../stateManagement/toolState.js';\nimport triggerEvent from '../../util/triggerEvent.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('eventDispatchers:touchEventHandlers');\n\nexport default function(evt, tool) {\n  logger.log('addNewMeasurement');\n\n  evt.preventDefault();\n  evt.stopPropagation();\n\n  const touchEventData = evt.detail;\n  const element = touchEventData.element;\n  const measurementData = tool.createNewMeasurement(touchEventData);\n\n  if (!measurementData) {\n    return;\n  }\n\n  addToolState(element, tool.name, measurementData);\n\n  // Todo: Looks like we're handling the \"up\" of the tap?\n  if (\n    Object.keys(measurementData.handles).length === 1 &&\n    touchEventData.type === EVENTS.TAP\n  ) {\n    // Todo: bold assumptions about measurement data for all tools?\n    measurementData.active = false;\n    measurementData.handles.end.active = false;\n    measurementData.handles.end.highlight = false;\n    measurementData.invalidated = true;\n\n    const deleteIfHandleOutsideImage =\n      state.deleteIfHandleOutsideImage ||\n      tool.options.deleteIfHandleOutsideImage;\n\n    if (\n      deleteIfHandleOutsideImage &&\n      anyHandlesOutsideImage(touchEventData, measurementData.handles)\n    ) {\n      // Delete the measurement\n      removeToolState(element, tool.name, measurementData);\n    }\n\n    external.cornerstone.updateImage(element);\n\n    return;\n  }\n\n  external.cornerstone.updateImage(element);\n\n  moveNewHandle(\n    touchEventData,\n    tool.name,\n    measurementData,\n    measurementData.handles.end,\n    tool.options,\n    'touch',\n    () => {\n      const eventType = EVENTS.MEASUREMENT_COMPLETED;\n      const eventData = {\n        toolName: tool.name,\n        element,\n        measurementData,\n      };\n\n      triggerEvent(element, eventType, eventData);\n    }\n  );\n}\n","// State\nimport { state } from './../../store/index.js';\nimport addNewMeasurement from './addNewMeasurement.js';\nimport BaseAnnotationTool from './../../tools/base/BaseAnnotationTool.js';\nimport getActiveTool from '../../util/getActiveTool';\n\nexport default function(evt) {\n  if (state.isToolLocked || state.isMultiPartToolActive) {\n    return;\n  }\n\n  const element = evt.detail.element;\n  const activeTool = getActiveTool(element, null, 'touch');\n\n  // Note: custom `addNewMeasurement` will need to prevent event bubbling\n  if (activeTool && activeTool.addNewMeasurement) {\n    activeTool.addNewMeasurement(evt, 'touch');\n  } else if (activeTool instanceof BaseAnnotationTool) {\n    addNewMeasurement(evt, activeTool);\n  }\n}\n","export default function(toolData) {\n  if (!toolData) {\n    return;\n  }\n\n  for (let i = 0; i < toolData.data.length; i++) {\n    const data = toolData.data[i];\n\n    data.active = false;\n    if (!data.handles) {\n      continue;\n    }\n\n    deactivateAllHandles(data.handles);\n  }\n}\n\nfunction deactivateAllHandles(handles) {\n  Object.keys(handles).forEach(function(name) {\n    const handle = handles[name];\n\n    handle.active = false;\n  });\n}\n","import external from '../../externalModules.js';\nimport touchStartActive from './touchStartActive.js';\n// State\nimport { getters, state } from '../../store/index.js';\nimport getActiveToolsForElement from '../../store/getActiveToolsForElement.js';\nimport getToolsWithDataForElement from '../../store/getToolsWithDataForElement.js';\nimport { getToolState } from '../../stateManagement/toolState.js';\n//\nimport getHandleNearImagePoint from '../../manipulators/getHandleNearImagePoint.js';\nimport { moveHandle, moveAllHandles } from '../../manipulators/index.js';\n//\nimport deactivateAllToolInstances from './shared/deactivateAllToolInstances.js';\n\nexport default function(evt) {\n  if (state.isToolLocked || state.isMultiPartToolActive) {\n    return;\n  }\n\n  let tools;\n  const distanceFromHandle = 28;\n  const element = evt.detail.element;\n  const coords = evt.detail.currentPoints.canvas;\n\n  tools = getActiveToolsForElement(element, getters.touchTools());\n  tools = getToolsWithDataForElement(element, tools);\n\n  // Deactivate everything\n  // DeactivateAllToolInstances(toolData);\n\n  // Find all tools w/ handles that we are near\n  const toolsWithMoveableHandles = tools.filter(tool => {\n    const toolState = getToolState(element, tool.name);\n\n    for (let i = 0; i < toolState.data.length; i++) {\n      if (\n        getHandleNearImagePoint(\n          element,\n          toolState.data[i].handles,\n          coords,\n          distanceFromHandle\n        ) !== undefined\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n\n  // TODO: More than one? Which one was moved most recently?\n  // We'll just grab the first one we encounter for now\n  if (toolsWithMoveableHandles.length > 0) {\n    // Todo: ignore: touch_start, tap\n\n    const firstToolWithMoveableHandles = toolsWithMoveableHandles[0];\n    const toolState = getToolState(element, firstToolWithMoveableHandles.name);\n    const moveableHandle = toolState.data.find(\n      d =>\n        getHandleNearImagePoint(\n          element,\n          d.handles,\n          coords,\n          distanceFromHandle\n        ) !== undefined\n    );\n\n    toolState.data.active = true;\n    moveableHandle.active = true; // Why here, but not touchStart?\n    external.cornerstone.updateImage(element);\n\n    moveHandle(\n      evt.detail,\n      firstToolWithMoveableHandles.name,\n      toolState.data,\n      moveableHandle,\n      firstToolWithMoveableHandles.options,\n      'touch',\n      () => deactivateAllToolInstances(toolState)\n    );\n    evt.stopImmediatePropagation();\n    evt.preventDefault();\n    // Why no stopPropagation?\n\n    return;\n  }\n\n  // Find all tools near our point\n  const toolsNearPoint = tools.filter(tool => {\n    const toolState = getToolState(element, tool.name);\n    const isNearPoint =\n      toolState &&\n      toolState.data &&\n      tool.pointNearTool &&\n      toolState.data.some(data => tool.pointNearTool(element, data, coords));\n\n    return isNearPoint;\n  });\n\n  // TODO: More than one? Which one was moved most recently?\n  // We'll just grab the first one we encounter for now\n  if (toolsNearPoint.length > 0) {\n    // Todo: Ignore: TAP, START, PRESS\n    const firstToolNearPoint = toolsNearPoint[0];\n    const toolState = getToolState(element, firstToolNearPoint.name);\n    const firstAnnotationNearPoint = toolState.data.find(data =>\n      firstToolNearPoint.pointNearTool(element, data, coords)\n    );\n\n    // Todo: ignore: touch_start, tap\n    firstAnnotationNearPoint.active = true;\n    external.cornerstone.updateImage(element);\n\n    moveAllHandles(\n      evt.detail,\n      firstToolNearPoint.name,\n      firstAnnotationNearPoint,\n      null,\n      firstToolNearPoint.options,\n      'touch',\n      () => deactivateAllToolInstances(toolState)\n    );\n\n    evt.stopImmediatePropagation();\n    evt.preventDefault();\n    // TODO: Why no stop propagation?\n\n    return;\n  }\n\n  // If there is nothing to move, add a new instance of the tool\n  // Need to check here to see if activation is allowed!\n  // TODO: What would this be? First active tool?\n  // Or should _always_ pass through to our larger event handler that checks\n  // All tools anyway?\n  const allActiveTools = getActiveToolsForElement(\n    element,\n    getters.touchTools()\n  );\n\n  if (allActiveTools.length > 0 && allActiveTools[0].touchStartActiveCallback) {\n    allActiveTools[0].touchStartActiveCallback(evt);\n  } else {\n    touchStartActive(evt);\n  }\n\n  return false;\n}\n","// State\nimport { getters, state } from '../../store/index.js';\nimport { findHandleDataNearImagePoint } from '../../util/findAndMoveHelpers.js';\nimport getToolsWithMoveableHandles from '../../store/getToolsWithMoveableHandles.js';\nimport { getToolState } from './../../stateManagement/toolState.js';\nimport getInteractiveToolsForElement from './../../store/getInteractiveToolsForElement.js';\nimport getToolsWithDataForElement from './../../store/getToolsWithDataForElement.js';\nimport filterToolsUseableWithMultiPartTools from './../../store/filterToolsUsableWithMultiPartTools.js';\n\nexport default function(evt) {\n  if (state.isToolLocked) {\n    return;\n  }\n\n  const eventData = evt.detail;\n  const element = eventData.element;\n  const coords = eventData.startPoints.canvas;\n\n  const activeAndPassiveTools = getInteractiveToolsForElement(\n    element,\n    getters.touchTools()\n  );\n\n  let activeTools = activeAndPassiveTools.filter(\n    tool => tool.mode === 'active' && tool.options.isTouchActive\n  );\n\n  if (state.isMultiPartToolActive) {\n    activeTools = filterToolsUseableWithMultiPartTools(activeTools);\n  }\n\n  // If any tools are active, check if they have a special reason for dealing with the event.\n  if (activeTools.length > 0) {\n    // TODO: If length > 1, you could assess fitness and select the ideal tool\n    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue\n    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?\n    const firstActiveToolWithCallback = activeTools.find(\n      tool => typeof tool.preTouchStartCallback === 'function'\n    );\n\n    if (firstActiveToolWithCallback) {\n      const consumedEvent = firstActiveToolWithCallback.preTouchStartCallback(\n        evt\n      );\n\n      if (consumedEvent) {\n        return;\n      }\n    }\n  }\n\n  if (state.isMultiPartToolActive) {\n    return;\n  }\n\n  const annotationTools = getToolsWithDataForElement(\n    element,\n    activeAndPassiveTools\n  );\n\n  // NEAR HANDLES?\n  const annotationToolsWithMoveableHandles = getToolsWithMoveableHandles(\n    element,\n    annotationTools,\n    coords,\n    'touch'\n  );\n\n  // TODO: More than one? Which one was moved most recently?\n  // We'll just grab the first one we encounter for now\n  if (annotationToolsWithMoveableHandles.length > 0) {\n    // Todo: Ignore TAP, START, PRESS\n\n    const firstToolWithMoveableHandles = annotationToolsWithMoveableHandles[0];\n    const toolState = getToolState(element, firstToolWithMoveableHandles.name);\n\n    const { handle, data } = findHandleDataNearImagePoint(\n      element,\n      toolState,\n      firstToolWithMoveableHandles.name,\n      coords,\n      'touch'\n    );\n\n    firstToolWithMoveableHandles.handleSelectedCallback(\n      evt,\n      data,\n      handle,\n      'touch'\n    );\n\n    return;\n  }\n\n  // NEAR POINT?\n  const annotationToolsWithPointNearTouch = annotationTools.filter(tool => {\n    const toolState = getToolState(element, tool.name);\n    const isNearPoint =\n      toolState &&\n      toolState.data &&\n      tool.pointNearTool &&\n      toolState.data.some(data =>\n        tool.pointNearTool(element, data, coords, 'touch')\n      );\n\n    return isNearPoint;\n  });\n\n  // TODO: More than one? Which one was moved most recently?\n  // We'll just grab the first one we encounter for now\n  if (annotationToolsWithPointNearTouch.length > 0) {\n    // Todo: Ignore: TAP, START, PRESS\n    const firstToolNearPoint = annotationToolsWithPointNearTouch[0];\n    const toolState = getToolState(element, firstToolNearPoint.name);\n    const firstAnnotationNearPoint = toolState.data.find(data =>\n      firstToolNearPoint.pointNearTool(element, data, coords)\n    );\n\n    firstToolNearPoint.toolSelectedCallback(\n      evt,\n      firstAnnotationNearPoint,\n      'touch'\n    );\n\n    return;\n  }\n\n  // If any tools are active, check if they have a special reason for dealing with the event.\n  if (activeTools.length > 0) {\n    // TODO: If length > 1, you could assess fitness and select the ideal tool\n    // TODO: But because we're locking this to 'active' tools, that should rarely be an issue\n    // Super-Meta-TODO: ^ I think we should just take the approach of one active tool per mouse button?\n    const firstActiveToolWithCallback = activeTools.find(\n      tool => typeof tool.postTouchStartCallback === 'function'\n    );\n\n    if (firstActiveToolWithCallback) {\n      const consumedEvent = firstActiveToolWithCallback.postTouchStartCallback(\n        evt\n      );\n\n      if (consumedEvent) {\n        return;\n      }\n    }\n  }\n}\n","import customCallbackHandler from './../shared/customCallbackHandler.js';\nimport multiTouchDrag from './multiTouchDrag.js';\nimport tap from './tap.js';\nimport touchStart from './touchStart.js';\nimport touchStartActive from './touchStartActive.js';\n\nconst doubleTap = customCallbackHandler.bind(\n  null,\n  'DoubleTap',\n  'doubleTapCallback'\n);\n// TODO: some touchDrag tools don't want to fire on touchStart\n// TODO: Drag tools have an option `fireOnTouchStart` used to filter\n// TODO: Them out of TOUCH_START handler\nconst touchDrag = customCallbackHandler.bind(\n  null,\n  'Touch',\n  'touchDragCallback'\n);\nconst touchEnd = customCallbackHandler.bind(null, 'Touch', 'touchEndCallback');\nconst touchPinch = customCallbackHandler.bind(\n  null,\n  'TouchPinch',\n  'touchPinchCallback'\n);\nconst touchPress = customCallbackHandler.bind(\n  null,\n  'Touch',\n  'touchPressCallback'\n);\nconst touchRotate = customCallbackHandler.bind(\n  null,\n  'TouchRotate',\n  'touchRotateCallback'\n);\n\nexport {\n  doubleTap,\n  multiTouchDrag,\n  tap,\n  touchDrag,\n  touchEnd,\n  touchPinch,\n  touchPress,\n  touchRotate,\n  touchStart,\n  touchStartActive,\n};\n","import EVENTS from '../events.js';\nimport {\n  tap,\n  doubleTap,\n  multiTouchDrag,\n  touchStart,\n  touchStartActive,\n  touchRotate,\n  touchDrag,\n  touchEnd,\n  touchPress,\n  touchPinch,\n} from './touchEventHandlers/index.js';\n\n/**\n * These listeners are emitted in order, and can be cancelled/prevented from bubbling\n * by any previous event.\n * - tap:\n * - touchStart: check to see if we are close to an existing annotation, grab it\n * - touchDrag:\n * - touchStartActive: createNewMeasurement (usually)\n * - touchPress:\n * - touchRotate:\n * - doubleTap: usually a one-time apply specialty action\n * - touchPinch:\n * - onImageRendered: redraw visible tool data\n * @private\n * @param {*} element\n * @returns {void}\n */\nconst enable = function(element) {\n  element.addEventListener(EVENTS.TAP, tap);\n  element.addEventListener(EVENTS.TOUCH_START, touchStart, { passive: false });\n  element.addEventListener(EVENTS.TOUCH_DRAG, touchDrag, { passive: false });\n  element.addEventListener(EVENTS.TOUCH_END, touchEnd);\n  // Mouse equivelant is `mouse_down_activate`\n  // Should the naming pattern here match?\n  element.addEventListener(EVENTS.TOUCH_START_ACTIVE, touchStartActive);\n  element.addEventListener(EVENTS.TOUCH_PRESS, touchPress);\n  element.addEventListener(EVENTS.DOUBLE_TAP, doubleTap);\n  element.addEventListener(EVENTS.TOUCH_PINCH, touchPinch);\n  element.addEventListener(EVENTS.TOUCH_ROTATE, touchRotate);\n  element.addEventListener(EVENTS.MULTI_TOUCH_DRAG, multiTouchDrag);\n};\n\nconst disable = function(element) {\n  element.removeEventListener(EVENTS.TAP, tap);\n  element.removeEventListener(EVENTS.TOUCH_START, touchStart);\n  element.removeEventListener(EVENTS.TOUCH_DRAG, touchDrag);\n  element.removeEventListener(EVENTS.TOUCH_END, touchEnd);\n  // Mouse equivelant is `mouse_down_activate`\n  // Should the naming pattern here match?\n  element.removeEventListener(EVENTS.TOUCH_START_ACTIVE, touchStartActive);\n  element.removeEventListener(EVENTS.TOUCH_PRESS, touchPress);\n  element.removeEventListener(EVENTS.DOUBLE_TAP, doubleTap);\n  element.removeEventListener(EVENTS.TOUCH_PINCH, touchPinch);\n  element.removeEventListener(EVENTS.TOUCH_ROTATE, touchRotate);\n  element.removeEventListener(EVENTS.MULTI_TOUCH_DRAG, multiTouchDrag);\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import store, { getModule } from './index.js';\nimport getToolForElement from './getToolForElement.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('addTool');\n\n/**\n * Adds a tool to an enabled element.\n *\n * @public\n * @function addToolForElement\n * @memberof CornerstoneTools\n *\n * @param {HTMLElement} element The element to add the tool to.\n * @param {BaseTool} ApiTool The tool to add to the element.\n * @param {Object} [props] Override the default tool props\n * @returns {undefined}\n */\nconst addToolForElement = function(element, ApiTool, props) {\n  // Instantiating the tool here makes it harder to accidentally add\n  // The same tool (by reference) for multiple elements (which would reassign the tool\n  // To a new element).\n  const tool = new ApiTool(props);\n  const toolAlreadyAddedToElement = getToolForElement(element, tool.name);\n\n  if (toolAlreadyAddedToElement) {\n    logger.warn('%s has already been added to the target element', tool.name);\n\n    return;\n  }\n\n  tool.element = element;\n  store.state.tools.push(tool);\n};\n\n/**\n * Adds a tool to all enabled element.\n *\n * @public\n * @function addTool\n * @memberof CornerstoneTools\n *\n * @param {BaseTool} ApiTool The tool to add to each element.\n * @param {Object} [props] Override the default tool configuration\n * @returns {undefined}\n */\nconst addTool = function(ApiTool, props) {\n  _addToolGlobally(ApiTool, props);\n  store.state.enabledElements.forEach(element => {\n    addToolForElement(element, ApiTool, props);\n  });\n};\n\n/**\n * Adds tool with matching name from globally registered tools.\n * Requires `globalToolSyncEnabled` to be set to true\n *\n * @private\n * @function addToolGlobally\n *\n * @param {BaseTool} ApiTool\n * @param {Object} [props] Override the default tool configuration\n * @returns {undefined}\n */\nconst _addToolGlobally = function(ApiTool, props) {\n  const { configuration } = getModule('globalConfiguration');\n\n  if (!configuration.globalToolSyncEnabled) {\n    return;\n  }\n\n  const tool = new ApiTool(props);\n  const toolAlreadyAddedGlobally =\n    store.state.globalTools[tool.name] !== undefined;\n\n  if (toolAlreadyAddedGlobally) {\n    logger.warn('%s has already been added globally', tool.name);\n\n    return;\n  }\n\n  store.state.globalTools[tool.name] = {\n    tool: ApiTool,\n    props,\n    activeBindings: [],\n  };\n};\n\nexport { addTool, addToolForElement };\n","import {\n  mouseEventListeners,\n  wheelEventListener,\n  touchEventListeners,\n} from '../../eventListeners/index.js';\nimport {\n  imageRenderedEventDispatcher,\n  mouseToolEventDispatcher,\n  newImageEventDispatcher,\n  touchToolEventDispatcher,\n} from '../../eventDispatchers/index.js';\nimport { addToolForElement } from './../addTool.js';\nimport {\n  setToolActiveForElement,\n  setToolPassiveForElement,\n  setToolEnabledForElement,\n  setToolDisabledForElement,\n} from './../setToolMode.js';\nimport store, { getModule } from '../index.js';\nimport { getLogger } from '../../util/logger.js';\n\nconst logger = getLogger('internals:addEnabledElement');\n\n/**\n * Element Enabled event.\n *\n * @event Cornerstone#ElementEnabled\n * @type {Object}\n * @property {string} type\n * @property {Object} detail\n * @property {HTMLElement} detail.element - The element being enabled.\n */\n\n/* TODO: It would be nice if this automatically added \"all tools\"\n * To the enabledElement that already exist on all other tools.\n * A half-measure might be a new method to \"duplicate\" the tool\n * Configuration for an existing enabled element\n * We may need to also save/store the original class/constructor per tool\n * To accomplish this\n */\n/**\n * Adds an enabledElement to our store.\n * @export\n * @private\n * @method\n * @name addEnabledElement\n * @param {Cornerstone#ElementEnabled} elementEnabledEvt\n * @listens Cornerstone#ElementEnabled\n * @returns {void}\n */\nexport default function(elementEnabledEvt) {\n  logger.log('EVENT:ELEMENT_ENABLED');\n  const enabledElement = elementEnabledEvt.detail.element;\n\n  // Dispatchers\n  imageRenderedEventDispatcher.enable(enabledElement);\n  newImageEventDispatcher.enable(enabledElement);\n\n  const { configuration } = getModule('globalConfiguration');\n\n  // Mouse\n  if (configuration.mouseEnabled) {\n    mouseEventListeners.enable(enabledElement);\n    wheelEventListener.enable(enabledElement);\n    mouseToolEventDispatcher.enable(enabledElement);\n  }\n\n  // Touch\n  if (configuration.touchEnabled) {\n    touchEventListeners.enable(enabledElement);\n    touchToolEventDispatcher.enable(enabledElement);\n  }\n\n  // State\n  _addEnabledElement(enabledElement);\n}\n\n/**\n * Adds the enabled element to the store.\n * @private\n * @method\n * @param {HTMLElement} enabledElement\n * @returns {void}\n */\nconst _addEnabledElement = function(enabledElement) {\n  store.state.enabledElements.push(enabledElement);\n  if (store.modules) {\n    _initModulesOnElement(enabledElement);\n  }\n  _addGlobalToolsToElement(enabledElement);\n  _repeatGlobalToolHistory(enabledElement);\n};\n\n/**\n * Iterate over our store's modules. If the module has an `enabledElementCallback`\n * call it and pass it a reference to our enabled element.\n * @private\n * @method\n * @param  {Object} enabledElement\n * @returns {void}\n */\nfunction _initModulesOnElement(enabledElement) {\n  const modules = store.modules;\n\n  Object.keys(modules).forEach(function(key) {\n    if (typeof modules[key].enabledElementCallback === 'function') {\n      modules[key].enabledElementCallback(enabledElement);\n    }\n  });\n}\n\n/**\n * Iterate over our stores globalTools adding each one to `enabledElement`\n * @private\n * @method\n * @param {HTMLElement} enabledElement\n * @returns {void}\n */\nfunction _addGlobalToolsToElement(enabledElement) {\n  const { configuration } = getModule('globalConfiguration');\n\n  if (!configuration.globalToolSyncEnabled) {\n    return;\n  }\n\n  Object.keys(store.state.globalTools).forEach(function(key) {\n    const { tool, props } = store.state.globalTools[key];\n\n    addToolForElement(enabledElement, tool, props);\n  });\n}\n\n/**\n * Iterate over the globalToolChangeHistory and apply each `historyEvent`\n * to the supplied `enabledElement`.\n * @private\n * @method\n * @param {HTMLElement} enabledElement\n * @returns {void}\n */\nfunction _repeatGlobalToolHistory(enabledElement) {\n  const { configuration } = getModule('globalConfiguration');\n\n  if (!configuration.globalToolSyncEnabled) {\n    return;\n  }\n\n  const setToolModeFns = {\n    active: setToolActiveForElement,\n    passive: setToolPassiveForElement,\n    enabled: setToolEnabledForElement,\n    disabled: setToolDisabledForElement,\n  };\n\n  store.state.globalToolChangeHistory.forEach(historyEvent => {\n    const args = historyEvent.args.slice(0);\n\n    args.unshift(enabledElement);\n    setToolModeFns[historyEvent.mode].apply(null, args);\n  });\n}\n","import {\n  mouseEventListeners,\n  wheelEventListener,\n  touchEventListeners,\n} from '../../eventListeners/index.js';\nimport {\n  imageRenderedEventDispatcher,\n  mouseToolEventDispatcher,\n  newImageEventDispatcher,\n  touchToolEventDispatcher,\n} from '../../eventDispatchers/index.js';\nimport store, { getModule } from '../index.js';\nimport { getLogger } from '../../util/logger.js';\nimport loadHandlerManager from '../../stateManagement/loadHandlerManager.js';\n\nconst logger = getLogger('internals:removeEnabledElement');\n\n/**\n * Element Disabled event.\n *\n * @event Cornerstone#ElementDisabled\n * @type {Object}\n * @property {string} type\n * @property {Object} detail\n * @property {HTMLElement} detail.element - The element being disabled.\n */\n\n/**\n * Removes an enabledElement from our store, and all associated tools that were added to it.\n * @export\n * @private\n * @method\n * @name removeEnabledElement\n * @param {Cornerstone#ElementDisabled} elementDisabledEvt\n * @listens Cornerstone#ElementDisabled\n * @returns {void}\n */\nexport default function(elementDisabledEvt) {\n  logger.log('EVENT:ELEMENT_DISABLED');\n  const enabledElement = elementDisabledEvt.detail.element;\n  const { configuration } = getModule('globalConfiguration');\n\n  // Dispatchers\n  imageRenderedEventDispatcher.disable(enabledElement);\n  newImageEventDispatcher.disable(enabledElement);\n\n  // Mouse\n  if (configuration.mouseEnabled) {\n    mouseEventListeners.disable(enabledElement);\n    wheelEventListener.disable(enabledElement);\n    mouseToolEventDispatcher.disable(enabledElement);\n  }\n\n  // Touch\n  if (configuration.touchEnabled) {\n    touchEventListeners.disable(enabledElement);\n    touchToolEventDispatcher.disable(enabledElement);\n  }\n\n  // State\n  _removeAllToolsForElement(enabledElement);\n  _removeEnabledElement(enabledElement);\n  _removeLoadHandlers(enabledElement);\n}\n\n/**\n * Remove all tools associated with enabled element.\n * @private\n * @method\n * @param {HTMLElement} enabledElement\n * @returns  {void}\n */\nconst _removeAllToolsForElement = function(enabledElement) {\n  // Note: We may want to `setToolDisabled` before removing from store\n  // Or take other action to remove any lingering eventListeners/state\n  store.state.tools = store.state.tools.filter(\n    tool => tool.element !== enabledElement\n  );\n};\n\n/**\n * Remove the enabled element from the store if it exists.\n * @private\n * @method\n * @param {HTMLElement} enabledElement\n * @returns {void}\n */\nconst _removeEnabledElement = function(enabledElement) {\n  if (store.modules) {\n    _cleanModulesOnElement(enabledElement);\n  }\n\n  const foundElementIndex = store.state.enabledElements.findIndex(\n    element => element === enabledElement\n  );\n\n  if (foundElementIndex > -1) {\n    store.state.enabledElements.splice(foundElementIndex, 1);\n  } else {\n    logger.warn('unable to remove element');\n  }\n};\n\n/**\n * Remove load handler for the element\n * @private\n * @method\n * @param {HTMLElement} element\n * @returns {void}\n */\nconst _removeLoadHandlers = function(element) {\n  loadHandlerManager.removeHandlers(element);\n};\n\n/**\n * Iterate over our store's modules. If the module has a\n * `removeEnabledElementCallback` call it and clean up unneeded metadata.\n * @private\n * @method\n * @param  {Object} enabledElement\n * @returns {void}\n */\nfunction _cleanModulesOnElement(enabledElement) {\n  const modules = store.modules;\n\n  Object.keys(modules).forEach(function(key) {\n    if (typeof modules[key].removeEnabledElementCallback === 'function') {\n      modules[key].removeEnabledElementCallback(enabledElement);\n    }\n  });\n}\n","import { state } from './../store/index.js';\nimport external from './../externalModules.js';\n\nconst enable = function() {\n  disable(); // Clean up any lingering listeners\n  window.addEventListener('resize', resizeThrottler, false);\n};\n\nconst disable = function() {\n  window.removeEventListener('resize', resizeThrottler, false);\n};\n\nlet resizeTimeout;\n\nfunction resizeThrottler() {\n  // Ignore resize events as long as an actualResizeHandler execution is in the queue\n  if (!resizeTimeout) {\n    resizeTimeout = setTimeout(function() {\n      resizeTimeout = null;\n      forceEnabledElementResize();\n\n      // The actualResizeHandler will execute at a rate of 15fps\n    }, 66);\n  }\n}\n\nexport const forceEnabledElementResize = function() {\n  state.enabledElements.forEach(element => {\n    external.cornerstone.resize(element);\n  });\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import external from './externalModules.js';\nimport store, { getModule } from './store/index.js';\nimport addEnabledElement from './store/internals/addEnabledElement.js';\nimport removeEnabledElement from './store/internals/removeEnabledElement.js';\nimport windowResizeHandler from './eventListeners/windowResizeHandler.js';\n\n/**\n * Merges the provided configuration with default values and returns a\n * configured CornerstoneTools instance.\n * @export\n * @public\n * @method\n * @name init\n *\n * @param {Object|Object[]} [defaultConfiguration = {}] The configuration to apply. Assumed globalConfiguration\n * only one value, otherwise moduleName, configuration entires in an array.\n * @returns {Object} A configured CornerstoneTools instance with top level API members.\n */\nexport default function(defaultConfiguration = {}) {\n  _addCornerstoneEventListeners();\n  _initModules();\n\n  const globalConfigurationModule = getModule('globalConfiguration');\n\n  if (Array.isArray(defaultConfiguration)) {\n    defaultConfiguration.forEach(configurationEntry => {\n      const { moduleName, configuration } = configurationEntry;\n\n      const module = getModule(moduleName);\n\n      if (module) {\n        module.configuration = Object.assign(\n          {},\n          module.configuration,\n          configuration\n        );\n      }\n    });\n  } else {\n    // defaultConfiguration is an object, default to assigning it to globalConfiguration.\n    globalConfigurationModule.configuration = Object.assign(\n      {},\n      globalConfigurationModule.configuration,\n      defaultConfiguration\n    );\n  }\n\n  if (globalConfigurationModule.configuration.autoResizeViewports) {\n    windowResizeHandler.enable();\n  }\n}\n\n/**\n * Wires up event listeners for the Cornerstone#ElementDisabled and\n * Cornerstone#ElementEnabled events.\n * @private\n * @method\n * @returns {void}\n */\nfunction _addCornerstoneEventListeners() {\n  // Clear any listeners that may already be set\n  _removeCornerstoneEventListeners();\n\n  const cornerstone = external.cornerstone;\n  const elementEnabledEvent = cornerstone.EVENTS.ELEMENT_ENABLED;\n  const elementDisabledEvent = cornerstone.EVENTS.ELEMENT_DISABLED;\n\n  cornerstone.events.addEventListener(elementEnabledEvent, addEnabledElement);\n  cornerstone.events.addEventListener(\n    elementDisabledEvent,\n    removeEnabledElement\n  );\n}\n\n/**\n * Removes event listeners for the Cornerstone#ElementDisabled and\n * Cornerstone#ElementEnabled events.\n * @private\n * @method\n * @returns {void}\n */\nfunction _removeCornerstoneEventListeners() {\n  const cornerstone = external.cornerstone;\n  const elementEnabledEvent = cornerstone.EVENTS.ELEMENT_ENABLED;\n  const elementDisabledEvent = cornerstone.EVENTS.ELEMENT_DISABLED;\n\n  cornerstone.events.removeEventListener(\n    elementEnabledEvent,\n    addEnabledElement\n  );\n  cornerstone.events.removeEventListener(\n    elementDisabledEvent,\n    removeEnabledElement\n  );\n}\n\n/*\n * TODO: This could cause issues if the module was already initialized for\n * the store. As there's nothing stopping implementers from calling `init`\n * multiple times. Modules should self-check if they have already been\n * registered to prevent issues.\n */\n\n/**\n * Iterate over our store's modules. If the module has an `onRegisterCallback`\n * call it. This hook can be used to setup any global store requirements per\n * module.\n * @private\n * @method\n * @returns {void}\n */\nfunction _initModules() {\n  const modules = store.modules;\n\n  Object.keys(modules).forEach(function(key) {\n    if (typeof modules[key].onRegisterCallback === 'function') {\n      modules[key].onRegisterCallback();\n    }\n  });\n}\n","import external from './../externalModules.js';\nimport requestPoolManager from '../requestPool/requestPoolManager.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport { addToolState, getToolState } from '../stateManagement/toolState.js';\nimport { setMaxSimultaneousRequests } from '../util/getMaxSimultaneousRequests.js';\nimport { getLogger } from '../util/logger.js';\nimport triggerEvent from '../util/triggerEvent';\nimport EVENTS from '../events.js';\n\nconst logger = getLogger('stackTools:stackPrefetch');\n\nconst toolType = 'stackPrefetch';\nconst requestType = 'prefetch';\n\nlet configuration = {\n  maxImagesToPrefetch: Infinity,\n  preserveExistingPool: false,\n};\n\nlet resetPrefetchTimeout;\nconst resetPrefetchDelay = 10;\n\nfunction range(lowEnd, highEnd) {\n  // Javascript version of Python's range function\n  // http://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-an-array-based-on-suppl\n  lowEnd = Math.round(lowEnd) || 0;\n  highEnd = Math.round(highEnd) || 0;\n\n  const arr = [];\n  let c = highEnd - lowEnd + 1;\n\n  if (c <= 0) {\n    return arr;\n  }\n\n  while (c--) {\n    arr[c] = highEnd--;\n  }\n\n  return arr;\n}\n\nconst max = function(arr) {\n  return Math.max.apply(null, arr);\n};\n\nconst min = function(arr) {\n  return Math.min.apply(null, arr);\n};\n\nfunction nearestIndex(arr, x) {\n  // Return index of nearest values in array\n  // http://stackoverflow.com/questions/25854212/return-index-of-nearest-values-in-an-array\n  const l = [];\n  const h = [];\n\n  arr.forEach(function(v) {\n    if (v < x) {\n      l.push(v);\n    } else if (v > x) {\n      h.push(v);\n    }\n  });\n\n  return {\n    low: arr.indexOf(max(l)),\n    high: arr.indexOf(min(h)),\n  };\n}\n\nfunction prefetch(element) {\n  // Check to make sure stack data exists\n  const stackData = getToolState(element, 'stack');\n\n  if (!stackData || !stackData.data || !stackData.data.length) {\n    return;\n  }\n\n  const stack = stackData.data[0];\n\n  // Get the stackPrefetch tool data\n  const stackPrefetchData = getToolState(element, toolType);\n\n  if (!stackPrefetchData) {\n    return;\n  }\n\n  const stackPrefetch = stackPrefetchData.data[0] || {};\n\n  // If all the requests are complete, disable the stackPrefetch tool\n  if (\n    !stackPrefetch.indicesToRequest ||\n    !stackPrefetch.indicesToRequest.length\n  ) {\n    stackPrefetch.enabled = false;\n  }\n\n  // Make sure the tool is still enabled\n  if (stackPrefetch.enabled === false) {\n    return;\n  }\n\n  // Remove an imageIdIndex from the list of indices to request\n  // This fires when the individual image loading deferred is resolved\n  function removeFromList(imageIdIndex) {\n    const index = stackPrefetch.indicesToRequest.indexOf(imageIdIndex);\n\n    if (index > -1) {\n      // Don't remove last element if imageIdIndex not found\n      stackPrefetch.indicesToRequest.splice(index, 1);\n    }\n  }\n\n  // Remove all already cached images from the\n  // IndicesToRequest array\n  stackPrefetchData.data[0].indicesToRequest.sort((a, b) => a - b);\n  const indicesToRequestCopy = stackPrefetch.indicesToRequest.slice();\n\n  indicesToRequestCopy.forEach(function(imageIdIndex) {\n    const imageId = stack.imageIds[imageIdIndex];\n\n    if (!imageId) {\n      return;\n    }\n\n    const imageLoadObject = external.cornerstone.imageCache.getImageLoadObject(\n      imageId\n    );\n\n    if (imageLoadObject) {\n      removeFromList(imageIdIndex);\n    }\n  });\n\n  // Stop here if there are no images left to request\n  // After those in the cache have been removed\n  if (!stackPrefetch.indicesToRequest.length) {\n    return;\n  }\n\n  // Clear the requestPool of prefetch requests, if needed.\n  if (!configuration.preserveExistingPool) {\n    requestPoolManager.clearRequestStack(requestType);\n  }\n\n  // Identify the nearest imageIdIndex to the currentImageIdIndex\n  const nearest = nearestIndex(\n    stackPrefetch.indicesToRequest,\n    stack.currentImageIdIndex\n  );\n\n  let imageId;\n  let nextImageIdIndex;\n  const preventCache = false;\n\n  function doneCallback(image) {\n    logger.log('prefetch done: %s', image.imageId);\n    const imageIdIndex = stack.imageIds.indexOf(image.imageId);\n\n    removeFromList(imageIdIndex);\n\n    triggerEvent(element, EVENTS.STACK_PREFETCH_IMAGE_LOADED, {\n      element,\n      imageId: image.imageId,\n      imageIndex: imageIdIndex,\n      stackPrefetch,\n      stack,\n    });\n\n    // If there are no more images to fetch\n    if (\n      !(\n        stackPrefetch.indicesToRequest &&\n        stackPrefetch.indicesToRequest.length > 0\n      )\n    ) {\n      triggerEvent(element, EVENTS.STACK_PREFETCH_DONE, {\n        element,\n        stackPrefetch,\n        stack,\n      });\n    }\n  }\n\n  // Retrieve the errorLoadingHandler if one exists\n  const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n    element\n  );\n\n  function failCallback(error) {\n    logger.log('prefetch errored: %o', error);\n    if (errorLoadingHandler) {\n      errorLoadingHandler(element, imageId, error, 'stackPrefetch');\n    }\n  }\n\n  // Prefetch images around the current image (before and after)\n  let lowerIndex = nearest.low;\n  let higherIndex = nearest.high;\n  const imageIdsToPrefetch = [];\n\n  while (\n    lowerIndex >= 0 ||\n    higherIndex < stackPrefetch.indicesToRequest.length\n  ) {\n    const currentIndex = stack.currentImageIdIndex;\n    const shouldSkipLower =\n      currentIndex - stackPrefetch.indicesToRequest[lowerIndex] >\n      configuration.maxImagesToPrefetch;\n    const shouldSkipHigher =\n      stackPrefetch.indicesToRequest[higherIndex] - currentIndex >\n      configuration.maxImagesToPrefetch;\n\n    const shouldLoadLower = !shouldSkipLower && lowerIndex >= 0;\n    const shouldLoadHigher =\n      !shouldSkipHigher && higherIndex < stackPrefetch.indicesToRequest.length;\n\n    if (!shouldLoadHigher && !shouldLoadLower) {\n      break;\n    }\n\n    if (shouldLoadLower) {\n      nextImageIdIndex = stackPrefetch.indicesToRequest[lowerIndex--];\n      imageId = stack.imageIds[nextImageIdIndex];\n      imageIdsToPrefetch.push(imageId);\n    }\n\n    if (shouldLoadHigher) {\n      nextImageIdIndex = stackPrefetch.indicesToRequest[higherIndex++];\n      imageId = stack.imageIds[nextImageIdIndex];\n      imageIdsToPrefetch.push(imageId);\n    }\n  }\n  // Load images in reverse order, by adding them at the beginning of the pool.\n  for (const imageToLoad of imageIdsToPrefetch.reverse()) {\n    requestPoolManager.addRequest(\n      element,\n      imageToLoad,\n      requestType,\n      preventCache,\n      doneCallback,\n      failCallback,\n      true\n    );\n  }\n\n  // Try to start the requestPool's grabbing procedure\n  // In case it isn't already running\n  requestPoolManager.startGrabbing();\n}\n\nfunction getPromiseRemovedHandler(element) {\n  return function(e) {\n    const eventData = e.detail;\n\n    // When an imagePromise has been pushed out of the cache, re-add its index\n    // It to the indicesToRequest list so that it will be retrieved later if the\n    // CurrentImageIdIndex is changed to an image nearby\n    let stackData;\n\n    try {\n      // It will throw an exception in some cases (eg: thumbnails)\n      stackData = getToolState(element, 'stack');\n    } catch (error) {\n      return;\n    }\n\n    if (!stackData || !stackData.data || !stackData.data.length) {\n      return;\n    }\n\n    const stack = stackData.data[0];\n    const imageIdIndex = stack.imageIds.indexOf(eventData.imageId);\n\n    // Make sure the image that was removed is actually in this stack\n    // Before adding it to the indicesToRequest array\n    if (imageIdIndex < 0) {\n      return;\n    }\n\n    const stackPrefetchData = getToolState(element, toolType);\n\n    if (\n      !stackPrefetchData ||\n      !stackPrefetchData.data ||\n      !stackPrefetchData.data.length\n    ) {\n      return;\n    }\n\n    stackPrefetchData.data[0].indicesToRequest.push(imageIdIndex);\n  };\n}\n\nfunction onImageUpdated(e) {\n  // Start prefetching again (after a delay)\n  // When the user has scrolled to a new image\n  clearTimeout(resetPrefetchTimeout);\n  resetPrefetchTimeout = setTimeout(function() {\n    const element = e.target;\n\n    // If playClip is enabled and the user loads a different series in the viewport\n    // An exception will be thrown because the element will not be enabled anymore\n    try {\n      prefetch(element);\n    } catch (error) {\n      return;\n    }\n  }, resetPrefetchDelay);\n}\n\nfunction enable(element) {\n  // Clear old prefetch data. Skipping this can cause problems when changing the series inside an element\n  const stackPrefetchDataArray = getToolState(element, toolType);\n\n  stackPrefetchDataArray.data = [];\n\n  // First check that there is stack data available\n  const stackData = getToolState(element, 'stack');\n\n  if (!stackData || !stackData.data || !stackData.data.length) {\n    return;\n  }\n\n  const stack = stackData.data[0];\n\n  // Check if we are allowed to cache images in this stack\n  if (stack.preventCache === true) {\n    logger.warn(\n      'A stack that should not be cached was given the stackPrefetch'\n    );\n\n    return;\n  }\n\n  // Use the currentImageIdIndex from the stack as the initalImageIdIndex\n  const stackPrefetchData = {\n    indicesToRequest: range(0, stack.imageIds.length - 1),\n    enabled: true,\n    direction: 1,\n  };\n\n  // Remove the currentImageIdIndex from the list to request\n  const indexOfCurrentImage = stackPrefetchData.indicesToRequest.indexOf(\n    stack.currentImageIdIndex\n  );\n\n  stackPrefetchData.indicesToRequest.splice(indexOfCurrentImage, 1);\n\n  addToolState(element, toolType, stackPrefetchData);\n\n  prefetch(element);\n\n  element.removeEventListener(\n    external.cornerstone.EVENTS.NEW_IMAGE,\n    onImageUpdated\n  );\n  element.addEventListener(\n    external.cornerstone.EVENTS.NEW_IMAGE,\n    onImageUpdated\n  );\n\n  const promiseRemovedHandler = getPromiseRemovedHandler(element);\n\n  external.cornerstone.events.removeEventListener(\n    external.cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED,\n    promiseRemovedHandler\n  );\n  external.cornerstone.events.addEventListener(\n    external.cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED,\n    promiseRemovedHandler\n  );\n}\n\nfunction disable(element) {\n  clearTimeout(resetPrefetchTimeout);\n  element.removeEventListener(\n    external.cornerstone.EVENTS.NEW_IMAGE,\n    onImageUpdated\n  );\n\n  const promiseRemovedHandler = getPromiseRemovedHandler(element);\n\n  external.cornerstone.events.removeEventListener(\n    external.cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED,\n    promiseRemovedHandler\n  );\n\n  const stackPrefetchData = getToolState(element, toolType);\n  // If there is actually something to disable, disable it\n\n  if (stackPrefetchData && stackPrefetchData.data.length) {\n    stackPrefetchData.data[0].enabled = false;\n\n    // Clear current prefetch requests from the requestPool\n    requestPoolManager.clearRequestStack(requestType);\n  }\n}\n\nfunction getConfiguration() {\n  return configuration;\n}\n\nfunction setConfiguration(config) {\n  configuration = config;\n\n  if (config.maxSimultaneousRequests) {\n    setMaxSimultaneousRequests(config.maxSimultaneousRequests);\n  }\n}\n\n// Module/private exports\nconst stackPrefetch = {\n  enable,\n  disable,\n  getConfiguration,\n  setConfiguration,\n};\n\nexport default stackPrefetch;\n","import external from '../externalModules.js';\nimport { getToolState } from '../stateManagement/toolState.js';\n\nexport default class FusionRenderer {\n  constructor() {\n    this.currentImageIdIndex = 0;\n    this.layerIds = [];\n    this.findImageFn = undefined;\n  }\n\n  render(element, imageStacks) {\n    // Move this to base Renderer class\n    if (!Number.isInteger(this.currentImageIdIndex)) {\n      throw new Error(\n        'FusionRenderer: render - Image ID Index is not an integer'\n      );\n    }\n\n    if (!this.findImageFn) {\n      throw new Error('No findImage function has been defined');\n    }\n\n    if (!imageStacks) {\n      const toolData = getToolState(element, 'stack');\n\n      imageStacks = toolData.data;\n    }\n    // TODO: Figure out what to do with LoadHandlers in this scenario...\n\n    const cornerstone = external.cornerstone;\n\n    // For the base layer, go to the currentImageIdIndex\n    const baseImageObject = imageStacks[0];\n    const currentImageId = baseImageObject.imageIds[this.currentImageIdIndex];\n    const overlayImageStacks = imageStacks.slice(1, imageStacks.length);\n\n    cornerstone.loadAndCacheImage(currentImageId).then(baseImage => {\n      let baseLayerId = this.layerIds[0];\n\n      // Get the base layer if one exists\n      if (baseLayerId) {\n        cornerstone.setLayerImage(element, baseImage, baseLayerId);\n      } else {\n        // Otherwise, create a new layer with the base layer's image\n        baseLayerId = cornerstone.addLayer(\n          element,\n          baseImage,\n          baseImageObject.options\n        );\n        this.layerIds.push(baseLayerId);\n      }\n\n      // Display the image immediately while the overlay images are identified\n      cornerstone.displayImage(element, baseImage);\n\n      // Loop through the remaining 'overlay' image stacks\n      overlayImageStacks.forEach((imgObj, overlayLayerIndex) => {\n        const imageId = this.findImageFn(imgObj.imageIds, currentImageId);\n        const layerIndex = overlayLayerIndex + 1;\n        let currentLayerId = this.layerIds[layerIndex];\n\n        // If no layer exists yet for this overlaid stack, create\n        // One and add it to the layerIds property for this instance\n        // Of the fusion renderer.\n        if (!currentLayerId) {\n          currentLayerId = cornerstone.addLayer(\n            element,\n            undefined,\n            imgObj.options\n          );\n          this.layerIds.push(currentLayerId);\n        }\n\n        if (imageId) {\n          // If an imageId was returned from the findImage function,\n          // Load it, make sure it's visible and update the layer\n          // With the new image object.\n          cornerstone.loadAndCacheImage(imageId).then(image => {\n            cornerstone.setLayerImage(element, image, currentLayerId);\n            cornerstone.updateImage(element);\n          });\n        } else {\n          // If no imageId was returned from the findImage function.\n          // This means that there is no relevant image to display.\n          cornerstone.setLayerImage(element, undefined, currentLayerId);\n          cornerstone.setActiveLayer(element, baseLayerId);\n          cornerstone.updateImage(element);\n        }\n      });\n    });\n  }\n}\n","import FusionRenderer from './fusionRenderer.js';\n\nconst stackRenderers = {};\n\nstackRenderers.FusionRenderer = FusionRenderer;\n\nexport default stackRenderers;\n","import EVENTS from '../events.js';\nimport external from '../externalModules.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport { addToolState, getToolState } from '../stateManagement/toolState.js';\nimport triggerEvent from '../util/triggerEvent.js';\n\nconst toolType = 'playClip';\n\n/**\n * [private] Turns a Frame Time Vector (0018,1065) array into a normalized array of timeouts. Each element\n * ... of the resulting array represents the amount of time each frame will remain on the screen.\n * @param {Array} vector A Frame Time Vector (0018,1065) as specified in section C.7.6.5.1.2 of DICOM standard.\n * @param {Number} speed A speed factor which will be applied to each element of the resulting array.\n * @returns {Array} An array with timeouts for each animation frame.\n */\nfunction getPlayClipTimeouts(vector, speed) {\n  let i;\n  let sample;\n  let delay;\n  let sum = 0;\n  const limit = vector.length;\n  const timeouts = [];\n\n  // Initialize time varying to false\n  timeouts.isTimeVarying = false;\n\n  if (typeof speed !== 'number' || speed <= 0) {\n    speed = 1;\n  }\n\n  // First element of a frame time vector must be discarded\n  for (i = 1; i < limit; i++) {\n    // eslint-disable-next-line no-bitwise\n    delay = (Number(vector[i]) / speed) | 0; // Integral part only\n    timeouts.push(delay);\n    if (i === 1) {\n      // Use first item as a sample for comparison\n      sample = delay;\n    } else if (delay !== sample) {\n      timeouts.isTimeVarying = true;\n    }\n\n    sum += delay;\n  }\n\n  if (timeouts.length > 0) {\n    if (timeouts.isTimeVarying) {\n      // If it's a time varying vector, make the last item an average...\n      // eslint-disable-next-line no-bitwise\n      delay = (sum / timeouts.length) | 0;\n    } else {\n      delay = timeouts[0];\n    }\n\n    timeouts.push(delay);\n  }\n\n  return timeouts;\n}\n\n/**\n * [private] Performs the heavy lifting of stopping an ongoing animation.\n * @param {Object} playClipData The data from playClip that needs to be stopped.\n * @returns {void}\n */\nfunction stopClipWithData(playClipData) {\n  const id = playClipData.intervalId;\n\n  if (typeof id !== 'undefined') {\n    playClipData.intervalId = undefined;\n    if (playClipData.usingFrameTimeVector) {\n      clearTimeout(id);\n    } else {\n      clearInterval(id);\n    }\n  }\n}\n\n/**\n * [private] Trigger playClip tool stop event.\n * @param {HTMLElement} element\n * @returns {void}\n */\nfunction triggerStopEvent(element) {\n  const eventDetail = {\n    element,\n  };\n\n  triggerEvent(element, EVENTS.CLIP_STOPPED, eventDetail);\n}\n\n/**\n * Starts playing a clip or adjusts the frame rate of an already playing clip.  framesPerSecond is\n * optional and defaults to 30 if not specified.  A negative framesPerSecond will play the clip in reverse.\n * The element must be a stack of images\n * @param {HTMLElement} element\n * @param {number} framesPerSecond\n * @returns {void}\n */\nfunction playClip(element, framesPerSecond) {\n  let playClipData;\n  let playClipTimeouts;\n\n  if (element === undefined) {\n    throw new Error('playClip: element must not be undefined');\n  }\n\n  const stackToolData = getToolState(element, 'stack');\n\n  if (!stackToolData || !stackToolData.data || !stackToolData.data.length) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  // If we have more than one stack, check if we have a stack renderer defined\n  let stackRenderer;\n\n  if (stackToolData.data.length > 1) {\n    const stackRendererData = getToolState(element, 'stackRenderer');\n\n    if (\n      stackRendererData &&\n      stackRendererData.data &&\n      stackRendererData.data.length\n    ) {\n      stackRenderer = stackRendererData.data[0];\n    }\n  }\n\n  const stackData = stackToolData.data[0];\n\n  const playClipToolData = getToolState(element, toolType);\n\n  if (\n    !playClipToolData ||\n    !playClipToolData.data ||\n    !playClipToolData.data.length\n  ) {\n    playClipData = {\n      intervalId: undefined,\n      framesPerSecond: 30,\n      lastFrameTimeStamp: undefined,\n      frameRate: 0,\n      frameTimeVector: undefined,\n      ignoreFrameTimeVector: false,\n      usingFrameTimeVector: false,\n      speed: 1,\n      reverse: false,\n      loop: true,\n    };\n    addToolState(element, toolType, playClipData);\n  } else {\n    playClipData = playClipToolData.data[0];\n    // Make sure the specified clip is not running before any property update\n    stopClipWithData(playClipData);\n  }\n\n  // If a framesPerSecond is specified and is valid, update the playClipData now\n  if (framesPerSecond < 0 || framesPerSecond > 0) {\n    playClipData.framesPerSecond = Number(framesPerSecond);\n    playClipData.reverse = playClipData.framesPerSecond < 0;\n    // If framesPerSecond is given, frameTimeVector will be ignored...\n    playClipData.ignoreFrameTimeVector = true;\n  }\n\n  // Determine if frame time vector should be used instead of a fixed frame rate...\n  if (\n    playClipData.ignoreFrameTimeVector !== true &&\n    playClipData.frameTimeVector &&\n    playClipData.frameTimeVector.length === stackData.imageIds.length\n  ) {\n    playClipTimeouts = getPlayClipTimeouts(\n      playClipData.frameTimeVector,\n      playClipData.speed\n    );\n  }\n\n  // This function encapsulates the frame rendering logic...\n  const playClipAction = () => {\n    // Hoisting of context variables\n    let loader,\n      startLoadingHandler,\n      endLoadingHandler,\n      errorLoadingHandler,\n      newImageIdIndex = stackData.currentImageIdIndex;\n\n    const imageCount = stackData.imageIds.length;\n\n    if (playClipData.reverse) {\n      newImageIdIndex--;\n    } else {\n      newImageIdIndex++;\n    }\n\n    if (\n      !playClipData.loop &&\n      (newImageIdIndex < 0 || newImageIdIndex >= imageCount)\n    ) {\n      stopClipWithData(playClipData);\n      triggerStopEvent(element);\n\n      return;\n    }\n\n    // Loop around if we go outside the stack\n    if (newImageIdIndex >= imageCount) {\n      newImageIdIndex = 0;\n    }\n\n    if (newImageIdIndex < 0) {\n      newImageIdIndex = imageCount - 1;\n    }\n\n    if (newImageIdIndex !== stackData.currentImageIdIndex) {\n      startLoadingHandler = loadHandlerManager.getStartLoadHandler(element);\n      endLoadingHandler = loadHandlerManager.getEndLoadHandler(element);\n      errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(element);\n\n      if (startLoadingHandler) {\n        startLoadingHandler(element);\n      }\n\n      if (stackData.preventCache === true) {\n        loader = cornerstone.loadImage(stackData.imageIds[newImageIdIndex]);\n      } else {\n        loader = cornerstone.loadAndCacheImage(\n          stackData.imageIds[newImageIdIndex]\n        );\n      }\n\n      loader.then(\n        function(image) {\n          try {\n            stackData.currentImageIdIndex = newImageIdIndex;\n            if (stackRenderer) {\n              stackRenderer.currentImageIdIndex = newImageIdIndex;\n              stackRenderer.render(element, stackToolData.data);\n            } else {\n              cornerstone.displayImage(element, image);\n            }\n            if (endLoadingHandler) {\n              endLoadingHandler(element, image);\n            }\n          } catch (error) {\n            return;\n          }\n        },\n        function(error) {\n          const imageId = stackData.imageIds[newImageIdIndex];\n\n          if (errorLoadingHandler) {\n            errorLoadingHandler(element, imageId, error);\n          }\n        }\n      );\n    }\n  };\n\n  // If playClipTimeouts array is available, not empty and its elements are NOT uniform ...\n  // ... (at least one timeout is different from the others), use alternate setTimeout implementation\n  if (\n    playClipTimeouts &&\n    playClipTimeouts.length > 0 &&\n    playClipTimeouts.isTimeVarying\n  ) {\n    playClipData.usingFrameTimeVector = true;\n    playClipData.intervalId = setTimeout(function playClipTimeoutHandler() {\n      playClipData.intervalId = setTimeout(\n        playClipTimeoutHandler,\n        playClipTimeouts[stackData.currentImageIdIndex]\n      );\n      playClipAction();\n    }, 0);\n  } else {\n    // ... otherwise user setInterval implementation which is much more efficient.\n    playClipData.usingFrameTimeVector = false;\n    playClipData.intervalId = setInterval(\n      playClipAction,\n      1000 / Math.abs(playClipData.framesPerSecond)\n    );\n  }\n}\n\n/**\n * Stops an already playing clip.\n * @param {HTMLElement} element\n * @returns {void}\n */\nfunction stopClip(element) {\n  const playClipToolData = getToolState(element, toolType);\n\n  if (\n    !playClipToolData ||\n    !playClipToolData.data ||\n    !playClipToolData.data.length\n  ) {\n    return;\n  }\n\n  stopClipWithData(playClipToolData.data[0]);\n}\n\nexport { playClip, stopClip };\n","import store, { getModule } from './index.js';\n\n/**\n * Deactivates and removes the tool from the target element with the provided name\n *\n * @export\n * @public\n * @method\n * @name removeToolForElement\n * @param {HTMLElement} element The element.\n * @param {string} toolName The name of the tool.\n * @returns {void}\n */\nconst removeToolForElement = function(element, toolName) {\n  const toolIndex = store.state.tools.findIndex(\n    tool => tool.element === element && tool.name === toolName\n  );\n\n  if (toolIndex >= 0) {\n    store.state.tools.splice(toolIndex, 1);\n  }\n};\n\n/**\n * Removes all tools from all enabled elements with the provided name.\n *\n * @export\n * @public\n * @method\n * @name removeTool\n * @param {string} toolName The name of the tool.\n * @returns {void}\n */\nconst removeTool = function(toolName) {\n  _removeToolGlobally(toolName);\n  store.state.enabledElements.forEach(element => {\n    removeToolForElement(element, toolName);\n  });\n};\n\n/**\n * Removes tool with matching name from globally registered tools.\n * Requires `globalToolSyncEnabled` to be set to true\n *\n * @private\n * @method\n * @name removeToolGlobally\n * @param {string} toolName The name of the tool to remove.\n * @returns {void}\n */\nconst _removeToolGlobally = function(toolName) {\n  const { configuration } = getModule('globalConfiguration');\n\n  if (!configuration.globalToolSyncEnabled) {\n    return;\n  }\n\n  if (store.state.globalTools[toolName]) {\n    delete store.state.globalTools[toolName];\n  }\n};\n\nexport { removeTool, removeToolForElement };\n","import getToolForElement from './getToolForElement.js';\nimport { state } from './index.js';\n\n/**\n * Sets the options of a tool on a specific element.\n * @export\n * @public\n * @method\n * @name setToolOptionsForElement\n *\n * @param {HTMLElement} element The element.\n * @param {string} toolName The name of the tool.\n * @param {Object} options The options to set.\n * @returns {void}\n */\nconst setToolOptionsForElement = function(element, toolName, options) {\n  const tool = getToolForElement(element, toolName);\n\n  if (tool) {\n    tool.mergeOptions(options);\n  }\n};\n\n/**\n * Sets the options of a tool for all elements.\n * @export\n * @public\n * @method\n * @name setToolOptions\n *\n * @param {string} toolName\n * @param {Object} options\n * @returns {void}\n */\nconst setToolOptions = function(toolName, options) {\n  state.enabledElements.forEach(element => {\n    setToolOptionsForElement(element, toolName, options);\n  });\n};\n\nexport { setToolOptions, setToolOptionsForElement };\n","import { globalImageIdSpecificToolStateManager } from './imageIdSpecificStateManager.js';\nimport {\n  getElementToolStateManager,\n  setElementToolStateManager,\n} from './toolState.js';\n\n/**\n * Implements an Stack specific tool state management strategy. This means\n * That tool data is shared between all imageIds in a given stack.\n * @public\n * @constructor newStackSpecificToolStateManager\n * @memberof StateManagement\n *\n * @param  {string[]} toolTypes       The tool types to apply to the stack.\n * @param  {Object} oldStateManager The imageIdSpecificStateManager.\n * @returns {Object} A stackSpecificToolStateManager instance.\n */\nfunction newStackSpecificToolStateManager(toolTypes, oldStateManager) {\n  let toolState = {};\n\n  function saveToolState() {\n    return toolState;\n  }\n\n  function restoreToolState(stackToolState) {\n    toolState = stackToolState;\n  }\n\n  // Here we add tool state, this is done by tools as well\n  // As modules that restore saved state\n  function addStackSpecificToolState(element, toolType, data) {\n    // If this is a tool type to apply to the stack, do so\n    if (toolTypes.indexOf(toolType) >= 0) {\n      // If we don't have tool state for this type of tool, add an empty object\n      if (toolState.hasOwnProperty(toolType) === false) {\n        toolState[toolType] = {\n          data: [],\n        };\n      }\n\n      const toolData = toolState[toolType];\n\n      // Finally, add this new tool to the state\n      toolData.data.push(data);\n    } else {\n      // Call the imageId specific tool state manager\n      return oldStateManager.add(element, toolType, data);\n    }\n  }\n\n  // Here you can get state - used by tools as well as modules\n  // That save state persistently\n  function getStackSpecificToolState(element, toolType) {\n    // If this is a tool type to apply to the stack, do so\n    if (toolTypes.indexOf(toolType) >= 0) {\n      // If we don't have tool state for this type of tool, add an empty object\n      if (toolState.hasOwnProperty(toolType) === false) {\n        toolState[toolType] = {\n          data: [],\n        };\n      }\n\n      return toolState[toolType];\n    }\n\n    // Call the imageId specific tool state manager\n    return oldStateManager.get(element, toolType);\n  }\n\n  const stackSpecificToolStateManager = {\n    get: getStackSpecificToolState,\n    add: addStackSpecificToolState,\n    saveToolState,\n    restoreToolState,\n    toolState,\n  };\n\n  return stackSpecificToolStateManager;\n}\n\nconst stackStateManagers = [];\n\nfunction addStackStateManager(element, otherTools) {\n  let oldStateManager = getElementToolStateManager(element);\n\n  if (!oldStateManager) {\n    oldStateManager = globalImageIdSpecificToolStateManager;\n  }\n\n  let stackTools = [\n    'stack',\n    'stackPrefetch',\n    'playClip',\n    'volume',\n    'slab',\n    'referenceLines',\n    'crosshairs',\n    'stackRenderer',\n  ];\n\n  if (otherTools) {\n    stackTools = stackTools.concat(otherTools);\n  }\n\n  const stackSpecificStateManager = newStackSpecificToolStateManager(\n    stackTools,\n    oldStateManager\n  );\n\n  stackStateManagers.push(stackSpecificStateManager);\n  setElementToolStateManager(element, stackSpecificStateManager);\n}\n\nconst stackSpecificStateManager = {\n  newStackSpecificToolStateManager,\n  addStackStateManager,\n};\n\nexport {\n  stackSpecificStateManager,\n  newStackSpecificToolStateManager,\n  addStackStateManager,\n};\n","/**\n * Implements a frame-of-reference specific tool state management strategy.  This means that\n * Measurement data are tied to a specific frame of reference UID and only visible to objects using\n * That frame-of-reference UID.\n * @public\n * @constructor newFrameOfReferenceSpecificToolStateManager\n * @memberof StateManagement\n *\n * @returns {Object} A frameOfReferenceSpecificToolStateManager instance.\n */\nfunction newFrameOfReferenceSpecificToolStateManager() {\n  const toolState = {};\n\n  // Here we add tool state, this is done by tools as well\n  // As modules that restore saved state\n  function addFrameOfReferenceSpecificToolState(\n    frameOfReference,\n    toolType,\n    data\n  ) {\n    // If we don't have any tool state for this frameOfReference, add an empty object\n    if (toolState.hasOwnProperty(frameOfReference) === false) {\n      toolState[frameOfReference] = {};\n    }\n\n    const frameOfReferenceToolState = toolState[frameOfReference];\n\n    // If we don't have tool state for this type of tool, add an empty object\n    if (frameOfReferenceToolState.hasOwnProperty(toolType) === false) {\n      frameOfReferenceToolState[toolType] = {\n        data: [],\n      };\n    }\n\n    const toolData = frameOfReferenceToolState[toolType];\n\n    // Finally, add this new tool to the state\n    toolData.data.push(data);\n  }\n\n  // Here you can get state - used by tools as well as modules\n  // That save state persistently\n  function getFrameOfReferenceSpecificToolState(frameOfReference, toolType) {\n    // If we don't have any tool state for this frame of reference, return undefined\n    if (toolState.hasOwnProperty(frameOfReference) === false) {\n      return;\n    }\n\n    const frameOfReferenceToolState = toolState[frameOfReference];\n\n    // If we don't have tool state for this type of tool, return undefined\n    if (frameOfReferenceToolState.hasOwnProperty(toolType) === false) {\n      return;\n    }\n\n    const toolData = frameOfReferenceToolState[toolType];\n\n    return toolData;\n  }\n\n  function removeFrameOfReferenceSpecificToolState(\n    frameOfReference,\n    toolType,\n    data\n  ) {\n    // If we don't have any tool state for this frame of reference, return undefined\n    if (toolState.hasOwnProperty(frameOfReference) === false) {\n      return;\n    }\n\n    const frameOfReferenceToolState = toolState[frameOfReference];\n\n    // If we don't have tool state for this type of tool, return undefined\n    if (frameOfReferenceToolState.hasOwnProperty(toolType) === false) {\n      return;\n    }\n\n    const toolData = frameOfReferenceToolState[toolType];\n    // Find this tool data\n    let indexOfData = -1;\n\n    for (let i = 0; i < toolData.data.length; i++) {\n      if (toolData.data[i] === data) {\n        indexOfData = i;\n      }\n    }\n\n    if (indexOfData !== -1) {\n      toolData.data.splice(indexOfData, 1);\n    }\n  }\n\n  return {\n    get: getFrameOfReferenceSpecificToolState,\n    add: addFrameOfReferenceSpecificToolState,\n    remove: removeFrameOfReferenceSpecificToolState,\n  };\n}\n\n// A global frameOfReferenceSpecificToolStateManager - the most common case is to share 3d information\n// Between stacks of images\nconst globalFrameOfReferenceSpecificToolStateManager = newFrameOfReferenceSpecificToolStateManager();\n\nexport {\n  newFrameOfReferenceSpecificToolStateManager,\n  globalFrameOfReferenceSpecificToolStateManager,\n};\n","/**\n * Exports an image of the canvas.\n * @export @public @method\n * @name saveAs\n *\n * @param {HTMLElement} element The element to export.\n * @param {string} filename The name of the exported image.\n * @param {string} [mimetype = 'image/png'] The mimetype of the exported image.\n * @returns {void}\n */\nexport default (element, filename, mimetype = 'image/png') => {\n  const canvas = element.querySelector('canvas');\n\n  // If we are using IE, use canvas.msToBlob\n  if (canvas.msToBlob) {\n    const blob = canvas.msToBlob();\n\n    return window.navigator.msSaveBlob(blob, filename);\n  }\n\n  // Thanks to Ken Fyrstenber\n  // http://stackoverflow.com/questions/18480474/how-to-save-an-image-from-canvas\n  const lnk = document.createElement('a');\n\n  // The key here is to set the download attribute of the a tag\n  lnk.download = filename;\n\n  // Convert canvas content to data-uri for link. When download\n  // Attribute is set the content pointed to by link will be\n  // Pushed as 'download' in HTML5 capable browsers\n  lnk.href = canvas.toDataURL(mimetype, 1);\n\n  // Create a 'fake' click-event to trigger the download\n  if (document.createEvent) {\n    const e = document.createEvent('MouseEvents');\n\n    e.initMouseEvent(\n      'click',\n      true,\n      true,\n      window,\n      0,\n      0,\n      0,\n      0,\n      0,\n      false,\n      false,\n      false,\n      false,\n      0,\n      null\n    );\n\n    lnk.dispatchEvent(e);\n  } else if (lnk.fireEvent) {\n    lnk.fireEvent('onclick');\n  }\n};\n","import { modules } from '../store/index.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('thirdParty:registerModule');\n\n/**\n * Register a module.\n * @export\n * @private\n * @method\n * @name registerModule\n *\n * @param {string} name The name of the module.\n * @param {Object} newModule The module to register.\n * @param {boolean} [overwrite] Whether a module should be overwritten,\n *                              should it have the same name.\n * @returns {void}\n */\nexport default function(name, newModule, overwrite = false) {\n  const alreadyRegistered = isModuleNameRegistered(name);\n\n  if (alreadyRegistered && !overwrite) {\n    logger.warn('A module with the name %s is already registered', name);\n\n    return;\n  }\n\n  if (alreadyRegistered) {\n    logger.warn('Overwriting module %s', name);\n  }\n\n  modules[name] = newModule;\n\n  if (typeof modules[name].onRegisterCallback === 'function') {\n    modules[name].onRegisterCallback();\n  }\n}\n\nfunction isModuleNameRegistered(name) {\n  return modules[name] !== undefined;\n}\n","import external from '../externalModules.js';\n\n/**\n * Sets the canvas context transformation matrix so it is scaled to show text\n * more cleanly even if the image is scaled up.  See\n * https://github.com/cornerstonejs/cornerstoneTools/wiki/DrawingText\n * for more information\n * @export @public @function\n * @name setContextToDisplayFontSize\n *\n * @param {HTMLElement} enabledElement The cornerstone enabled element.\n * @param {CanvasRenderingContext2D} context The canvas context.\n * @param {number} fontSize The font size.\n * @returns {Object} {fontSize: number, lineHeight: number, fontScale: number}\n */\nexport default function(enabledElement, context, fontSize) {\n  const fontScale = 0.1;\n\n  external.cornerstone.setToPixelCoordinateSystem(\n    enabledElement,\n    context,\n    fontScale\n  );\n  // Return the font size to use\n  const scaledFontSize = fontSize / enabledElement.viewport.scale / fontScale;\n  // TODO: actually calculate this?\n  const lineHeight = fontSize / enabledElement.viewport.scale / fontScale;\n\n  return {\n    fontSize: scaledFontSize,\n    lineHeight,\n    fontScale,\n  };\n}\n","import BaseTool from './tools/base/BaseTool.js';\nimport BaseAnnotationTool from './tools/base/BaseAnnotationTool.js';\nimport BaseBrushTool from './tools/base/BaseBrushTool.js';\n\nimport {\n  anyHandlesOutsideImage,\n  getHandleNearImagePoint,\n  handleActivator,\n  moveHandle,\n  moveAllHandles,\n  moveNewHandle,\n} from './manipulators/index.js';\n\nimport {\n  moveHandleNearImagePoint,\n  findHandleDataNearImagePoint,\n  moveAnnotation,\n} from './util/findAndMoveHelpers.js';\n\nimport mixins from './mixins/index.js';\nimport * as cursors from './tools/cursors/index.js';\n\nimport {\n  getNewContext,\n  draw,\n  path,\n  setShadow,\n  drawLine,\n  drawLines,\n  drawJoinedLines,\n  drawCircle,\n  drawEllipse,\n  drawRect,\n  fillOutsideRect,\n  fillBox,\n  fillTextLines,\n} from './drawing/index.js';\nimport { clip, clipToBox } from './util/clip.js';\nimport debounce from './util/debounce';\nimport deepmerge from './util/deepmerge';\nimport getDefault from './util/getDefault';\nimport getPixelSpacing from './util/getPixelSpacing';\nimport isEmptyObject from './util/isEmptyObject';\nimport isObject from './util/isObject';\nimport isPointInImage from './util/isPointInImage';\nimport isPointInPolygon from './util/isPointInPolygon';\nimport throttle from './util/throttle';\nimport { wait, waitForEnabledElementImageToLoad } from './util/wait';\nimport getKeyPressData from './util/getKeyPressData';\n\nimport drawTextBox, { textBoxWidth } from './drawing/drawTextBox.js';\nimport drawArrow from './drawing/drawArrow.js';\nimport drawLink from './drawing/drawLink.js';\nimport drawLinkedTextBox from './drawing/drawLinkedTextBox.js';\nimport drawHandles from './drawing/drawHandles.js';\n\nimport getLuminance from './util/getLuminance.js';\nimport getROITextBoxCoords from './util/getROITextBoxCoords';\nimport copyPoints from './util/copyPoints.js';\nimport calculateSUV from './util/calculateSUV.js';\nimport setContextToDisplayFontSize from './util/setContextToDisplayFontSize.js';\nimport scrollToIndex from './util/scrollToIndex.js';\nimport scroll from './util/scroll.js';\nimport roundToDecimal from './util/roundToDecimal.js';\nimport {\n  projectPatientPointToImagePlane,\n  imagePointToPatientPoint,\n  planePlaneIntersection,\n} from './util/pointProjector.js';\nimport lineSegDistance from './util/lineSegDistance.js';\nimport { getLogger } from './util/logger';\n\nimport pointInsideBoundingBox from './util/pointInsideBoundingBox.js';\nimport makeUnselectable from './util/makeUnselectable.js';\nimport getRGBPixels from './util/getRGBPixels.js';\nimport {\n  getDefaultSimultaneousRequests,\n  getMaxSimultaneousRequests,\n  getBrowserInfo,\n  isMobileDevice,\n} from './util/getMaxSimultaneousRequests.js';\nimport angleBetweenPoints from './util/angleBetweenPoints.js';\nimport numbersWithCommas from './util/numbersWithCommas.js';\nimport MouseCursor from './tools/cursors/MouseCursor.js';\n\nimport ellipseUtils from './util/ellipse/index.js';\nimport freehandUtils from './util/freehand/index.js';\nimport * as segmentationUtils from './util/segmentation';\nimport zoomUtils from './util/zoom/index.js';\nimport triggerEvent from './util/triggerEvent.js';\nimport convertToVector3 from './util/convertToVector3.js';\n\nexport const lib = {\n  'base/BaseTool': BaseTool,\n  'base/BaseAnnotationTool': BaseAnnotationTool,\n  'base/BaseBrushTool': BaseBrushTool,\n\n  'tools/cursors/MouseCursor': MouseCursor,\n  'tools/cursors': cursors,\n\n  'manipulators/anyHandlesOutsideImage': anyHandlesOutsideImage,\n  'manipulators/getHandleNearImagePoint': getHandleNearImagePoint,\n  'manipulators/handleActivator': handleActivator,\n  'manipulators/moveAllHandles': moveAllHandles,\n  'manipulators/moveHandle': moveHandle,\n  'manipulators/moveNewHandle': moveNewHandle,\n  'manipulators/moveHandleNearImagePoint': moveHandleNearImagePoint,\n  'manipulators/findHandleDataNearImagePoint': findHandleDataNearImagePoint,\n  'manipulators/moveAnnotation': moveAnnotation,\n\n  'mixins/activeOrDisabledBinaryTool': mixins.activeOrDisabledBinaryTool,\n  'mixins/enabledOrDisabledBinaryTool': mixins.enabledOrDisabledBinaryTool,\n\n  'drawing/getNewContext': getNewContext,\n  'drawing/draw': draw,\n  'drawing/path': path,\n  'drawing/setShadow': setShadow,\n  'drawing/drawLine': drawLine,\n  'drawing/drawLines': drawLines,\n  'drawing/drawJoinedLines': drawJoinedLines,\n  'drawing/drawCircle': drawCircle,\n  'drawing/drawEllipse': drawEllipse,\n  'drawing/drawRect': drawRect,\n  'drawing/fillOutsideRect': fillOutsideRect,\n  'drawing/drawTextBox': drawTextBox,\n  'drawing/drawArrow': drawArrow,\n  'drawing/fillBox': fillBox,\n  'drawing/fillTextLines': fillTextLines,\n  'drawing/drawLink': drawLink,\n  'drawing/drawLinkedTextBox': drawLinkedTextBox,\n  'drawing/drawHandles': drawHandles,\n  'drawing/textBoxWidth': textBoxWidth,\n\n  'util/getLuminance': getLuminance,\n  'util/getROITextBoxCoords': getROITextBoxCoords,\n  'util/copyPoints': copyPoints,\n  'util/calculateSUV': calculateSUV,\n  'util/setContextToDisplayFontSize': setContextToDisplayFontSize,\n  'util/scrollToIndex': scrollToIndex,\n  'util/scroll': scroll,\n  'util/roundToDecimal': roundToDecimal,\n  'util/projectPatientPointToImagePlane': projectPatientPointToImagePlane,\n  'util/imagePointToPatientPoint': imagePointToPatientPoint,\n  'util/planePlaneIntersection': planePlaneIntersection,\n  'util/pointInsideBoundingBox': pointInsideBoundingBox,\n  'util/makeUnselectable': makeUnselectable,\n  'util/getRGBPixels': getRGBPixels,\n  'util/getDefaultSimultaneousRequests': getDefaultSimultaneousRequests,\n  'util/getMaxSimultaneousRequests': getMaxSimultaneousRequests,\n  'util/getBrowserInfo': getBrowserInfo,\n  'util/isMobileDevice': isMobileDevice,\n  'util/angleBetweenPoints': angleBetweenPoints,\n  'util/numbersWithCommas': numbersWithCommas,\n  'util/lineSegDistance': lineSegDistance,\n  'util/triggerEvent': triggerEvent,\n  'util/convertToVector3': convertToVector3,\n  'util/clip': clip,\n  'util/clipToBox': clipToBox,\n  'util/debounce': debounce,\n  'util/deepmerge': deepmerge,\n  'util/getDefault': getDefault,\n  'util/getPixelSpacing': getPixelSpacing,\n  'util/isEmptyObject': isEmptyObject,\n  'util/isObject': isObject,\n  'util/isPointInImage': isPointInImage,\n  'util/isPointInPolygon': isPointInPolygon,\n  'util/getLogger': getLogger,\n  'util/throttle': throttle,\n  'util/wait': wait,\n  'util/waitForEnabledElementImageToLoad': waitForEnabledElementImageToLoad,\n  'util/getKeyPressData': getKeyPressData,\n\n  // Whole tool specific util packages\n  'util/ellipseUtils': ellipseUtils,\n  'util/freehandUtils': freehandUtils,\n  'util/segmentationUtils': segmentationUtils,\n  'util/zoomUtils': zoomUtils,\n};\n","import external from './../externalModules.js';\nimport path from './path.js';\n\n/**\n * Fill the region outside a rectangle defined by `corner1` and `corner2`.\n * @public\n * @method fillOutsideRect\n * @memberof Drawing\n *\n * @param {CanvasRenderingContext2D} context - Target context\n * @param {HTMLElement} element - The DOM Element to draw on\n * @param {Object} corner1 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} corner2 - `{ x, y }` in either pixel or canvas coordinates.\n * @param {Object} options - See {@link path}\n * @param {String} [coordSystem='pixel'] - Can be \"pixel\" (default) or \"canvas\". The coordinate\n *     system of the points passed in to the function. If \"pixel\" then cornerstone.pixelToCanvas\n *     is used to transform the points from pixel to canvas coordinates.\n * @returns {undefined}\n */\nexport default function(\n  context,\n  element,\n  corner1,\n  corner2,\n  options,\n  coordSystem = 'pixel'\n) {\n  if (coordSystem === 'pixel') {\n    const cornerstone = external.cornerstone;\n\n    corner1 = cornerstone.pixelToCanvas(element, corner1);\n    corner2 = cornerstone.pixelToCanvas(element, corner2);\n  }\n\n  const left = Math.min(corner1.x, corner2.x);\n  const top = Math.min(corner1.y, corner2.y);\n  const width = Math.abs(corner1.x - corner2.x);\n  const height = Math.abs(corner1.y - corner2.y);\n\n  path(context, options, context => {\n    context.rect(0, 0, context.canvas.clientWidth, context.canvas.clientHeight);\n    context.rect(left + width, top, -width, height);\n  });\n}\n","/**\n * A helper function to make an element (and its content) being non selectable.\n * @export @public @method\n * @name makeUnselectable\n *\n * @param {HTMLElement} element The element to make unselectable\n * @param {Boolean} ignorePointerEvents  true to make this element also\n * ignore events (e.g. mouse click), false otherwise.\n * @returns {void}\n */\nexport default function(element, ignorePointerEvents) {\n  element.style.webkitUserSelect = 'none';\n  element.style.webkitTouchCallout = 'none';\n  element.style.mozUserSelect = 'none';\n  element.style.msUserSelect = 'none';\n  element.style.oUserSelect = 'none';\n  element.style.khtmlUserSelect = 'none';\n  element.style.userSelect = 'none';\n\n  element.unselectable = 'on';\n  element.oncontextmenu = () => false;\n\n  if (ignorePointerEvents === true) {\n    element.style.pointerEvents = 'none';\n  }\n}\n","import store from '../store/';\nimport external from '../externalModules';\n\nexport default function getKeyPressData(e) {\n  const cornerstone = external.cornerstone;\n  const element = e.currentTarget;\n  const enabledElement = cornerstone.getEnabledElement(element);\n\n  if (!enabledElement || !enabledElement.image) {\n    return;\n  }\n\n  const currentPointsImage = store.state.mousePositionImage;\n\n  return {\n    event: window.event || e, // Old IE support\n    element,\n    viewport: cornerstone.getViewport(element),\n    image: enabledElement.image,\n    currentPoints: {\n      image: currentPointsImage,\n      canvas: cornerstone.pixelToCanvas(element, currentPointsImage),\n    },\n    keyCode: e.keyCode,\n    which: e.which,\n  };\n}\n","import { lib } from '../lib.js';\nimport mixins from '../mixins/index.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('thirdParty:registerMixin');\n/**\n * Register an mixin to cornerstoneTools.\n * @export\n * @private\n * @method\n * @name registerMixin\n *\n * @param {string} name The name of the mixin.\n * @param {Object} mixin The mixin itself.\n * @param {boolean} [overwrite=false] Whether an mixin should be overwritten,\n *                                    should it have the same name.\n * @returns {void}\n */\n\nexport default function(name, mixin, overwrite = false) {\n  const alreadyRegistered = isMixinRegistered(name);\n\n  if (alreadyRegistered && !overwrite) {\n    logger.warn('mixins/%s is already registered', name);\n\n    return;\n  }\n\n  if (alreadyRegistered) {\n    logger.warn('Overwriting mixins/%s', name);\n  }\n\n  // Register to the mixins object\n  mixins[name] = mixin;\n\n  // Reference the mixin from the library so it can be exported externally.\n  lib[`mixins/${name}`] = mixins[name];\n}\n\nfunction isMixinRegistered(name) {\n  return mixins[name] !== undefined;\n}\n","import { lib } from '../lib.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('thirdParty:registerType');\n\n/**\n * Register an item to cornerstoneTools.\n * @export\n * @private\n * @method\n * @name registerItem\n *\n * @param {string} type The type of the item.\n * @param {string} name The name of the item.\n * @param {Object|function} item The item itself.\n * @param {boolean} [overwrite=false] Whether an item should be overwritten,\n *                                    should it have the same name.\n * @returns {void}\n */\nexport default function(type, name, item, overwrite = false) {\n  const itemKey = `${type}/${name}`;\n  const alreadyRegistered = isItemNameRegistered(itemKey);\n\n  if (alreadyRegistered && !overwrite) {\n    logger.warn('%s is already registered', itemKey);\n\n    return;\n  }\n\n  if (alreadyRegistered) {\n    logger.warn('Overwriting %s', itemKey);\n  }\n\n  lib[itemKey] = item;\n}\n\nfunction isItemNameRegistered(itemKey) {\n  return lib[itemKey] !== undefined;\n}\n","import registerModule from './registerModule.js';\nimport registerMixin from './registerMixin.js';\nimport registerItem from './registerItem.js';\nimport { getLogger } from '../util/logger.js';\n\nconst logger = getLogger('thirdParty:register');\n\n/**\n * Register an item or module to cornerstoneTools.\n * @export\n * @public\n * @method\n * @name register\n *\n * @param {string} type The type of the item/module.\n * @param {string} name The name of the item/module.\n * @param {Object|function} item The item/module itself.\n * @param {boolean} [overwrite=false] Whether an item/module should be\n *                                    overwritten, should it have the same name.\n * @returns {void}\n */\nexport default function(type, name, item, overwrite = false) {\n  if (!isValidInput(type, name, item)) {\n    return;\n  }\n\n  switch (type) {\n    case 'module':\n      registerModule(name, item, overwrite);\n      break;\n    case 'mixin':\n      registerMixin(name, item, overwrite);\n      break;\n    default:\n      registerItem(type, name, item, overwrite);\n  }\n}\n\n/**\n * Returns true if the item is valid, this avoids\n * clogging up the library with invalid data.\n * @private\n * @method\n * @name isValidInput\n *\n * @param {string} type The type of the item/module.\n * @param {string} name The name of the item/module.\n * @param {Object|function} item The item/module itself.\n * @returns {boolean}    Whether the input is valid.\n */\nfunction isValidInput(type, name, item) {\n  if (!type) {\n    logger.warn('The type must be given in order to register.');\n\n    return false;\n  }\n\n  if (!name) {\n    logger.warn(`The %s must have a name in order to register.`, type);\n\n    return false;\n  }\n\n  if (typeof item !== 'object' && typeof item !== 'function') {\n    logger.warn(\n      `The %s is a %s, it should be an Object or a function.`,\n      item,\n      typeof item\n    );\n\n    return false;\n  }\n\n  return true;\n}\n","import register from './register.js';\n\n/**\n * Register an array of items and/or modules to cornerstoneTools.\n * @export\n * @public\n * @method\n * @name registerSome\n *\n * @param {Object[]} items An array of items/modules to register.\n * @param {boolean} [overwrite=false] Whether an item/module should be\n *                                    overwritten, should it have the same name.\n * @returns {void}\n */\nexport default function(items, overwrite = false) {\n  items.forEach(({ type, name, item }) => {\n    register(type, name, item, overwrite);\n  });\n}\n","import external from '../externalModules.js';\n\n/**\n * Synchronize the target viewport ww/wc to match the source element.\n * @export\n * @public\n * @method\n * @name wwwcSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element for the ww/wc values\n * @param {HTMLElement} targetElement - The target element\n * @returns {void}\n */\nexport default function(synchronizer, sourceElement, targetElement) {\n  // Ignore the case where the source and target are the same enabled element\n  if (targetElement === sourceElement) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  // Get the source and target viewports\n  const sourceViewport = cornerstone.getViewport(sourceElement);\n  const targetViewport = cornerstone.getViewport(targetElement);\n\n  // Do nothing if the ww/wc already match\n  if (\n    targetViewport.voi.windowWidth === sourceViewport.voi.windowWidth &&\n    targetViewport.voi.windowCenter === sourceViewport.voi.windowCenter &&\n    targetViewport.invert === sourceViewport.invert\n  ) {\n    return;\n  }\n\n  // Www/wc are different, sync them\n  targetViewport.voi.windowWidth = sourceViewport.voi.windowWidth;\n  targetViewport.voi.windowCenter = sourceViewport.voi.windowCenter;\n  targetViewport.invert = sourceViewport.invert;\n  synchronizer.setViewport(targetElement, targetViewport);\n}\n","import external from '../externalModules.js';\n\n/**\n * Redraw target image immediately any time handler is called from source element.\n * @export\n * @public\n * @method\n * @name updateImageSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element\n * @param {HTMLElement} targetElement - The target element\n * @returns {void}\n */\nexport default function(synchronizer, sourceElement, targetElement) {\n  // Ignore the case where the source and target are the same enabled element\n  if (targetElement === sourceElement) {\n    return;\n  }\n\n  external.cornerstone.updateImage(targetElement);\n}\n","import external from '../externalModules.js';\nimport convertToVector3 from '../util/convertToVector3.js';\nimport { clearToolOptionsByElement } from '../toolOptions.js';\n\n/**\n * Return an array filtered to only its unique members\n *\n * @private\n * @param {Array} array - The array to filter\n * @returns {Array}\n */\nfunction unique(array) {\n  return array.filter(function(value, index, self) {\n    return self.indexOf(value) === index;\n  });\n}\n\n/**\n * Synchronize target and source elements when an event fires on the source element\n * @export @public constructor\n * @name Synchronizer\n *\n * @param {String} event - The event(s) that will trigger synchronization. Separate multiple events by a space\n * @param {Function} handler - The function that will make the necessary changes to the target element in order to synchronize it with the source element\n * @returns {void}\n */\nfunction Synchronizer(event, handler) {\n  const cornerstone = external.cornerstone;\n  const that = this;\n  const sourceElements = []; // Source elements fire the events we want to synchronize to\n  const targetElements = []; // Target elements we want to synchronize to source elements\n\n  let ignoreFiredEvents = false;\n  const initialData = {};\n  let eventHandler = handler;\n\n  this.enabled = true;\n\n  /**\n   * Update the event handler to perform synchronization\n   * @param {Function} handler - The event handler function\n   * @returns {void}\n   */\n  this.setHandler = function(handler) {\n    eventHandler = handler;\n  };\n\n  /**\n   * Return a reference to the event handler function\n   * @returns {Function}\n   */\n  this.getHandler = function() {\n    return eventHandler;\n  };\n\n  /**\n   * Calculate the initial distances between the source image and each\n   * of the target images\n   * @returns {void}\n   */\n  this.getDistances = function() {\n    if (!sourceElements.length || !targetElements.length) {\n      return;\n    }\n\n    initialData.distances = {};\n    initialData.imageIds = {\n      sourceElements: [],\n      targetElements: [],\n    };\n\n    sourceElements.forEach(function(sourceElement) {\n      const sourceEnabledElement = cornerstone.getEnabledElement(sourceElement);\n\n      if (!sourceEnabledElement || !sourceEnabledElement.image) {\n        return;\n      }\n\n      const sourceImageId = sourceEnabledElement.image.imageId;\n      const sourceImagePlane = cornerstone.metaData.get(\n        'imagePlaneModule',\n        sourceImageId\n      );\n\n      if (!sourceImagePlane || !sourceImagePlane.imagePositionPatient) {\n        return;\n      }\n\n      const sourceImagePosition = convertToVector3(\n        sourceImagePlane.imagePositionPatient\n      );\n\n      if (initialData.hasOwnProperty(sourceEnabledElement)) {\n        return;\n      }\n      initialData.distances[sourceImageId] = {};\n\n      initialData.imageIds.sourceElements.push(sourceImageId);\n\n      targetElements.forEach(function(targetElement) {\n        const targetEnabledElement = cornerstone.getEnabledElement(\n          targetElement\n        );\n\n        if (!targetEnabledElement || !targetEnabledElement.image) {\n          return;\n        }\n\n        const targetImageId = targetEnabledElement.image.imageId;\n\n        initialData.imageIds.targetElements.push(targetImageId);\n\n        if (sourceElement === targetElement) {\n          return;\n        }\n\n        if (sourceImageId === targetImageId) {\n          return;\n        }\n\n        if (\n          initialData.distances[sourceImageId].hasOwnProperty(targetImageId)\n        ) {\n          return;\n        }\n\n        const targetImagePlane = cornerstone.metaData.get(\n          'imagePlaneModule',\n          targetImageId\n        );\n\n        if (!targetImagePlane || !targetImagePlane.imagePositionPatient) {\n          return;\n        }\n\n        const targetImagePosition = convertToVector3(\n          targetImagePlane.imagePositionPatient\n        );\n\n        initialData.distances[sourceImageId][\n          targetImageId\n        ] = targetImagePosition.clone().sub(sourceImagePosition);\n      });\n\n      if (!Object.keys(initialData.distances[sourceImageId]).length) {\n        delete initialData.distances[sourceImageId];\n      }\n    });\n  };\n\n  /**\n   * Gather necessary event data and call synchronization handler\n   *\n   * @private\n   * @param {HTMLElement} sourceElement - The source element for the event\n   * @param {Object} eventData - The data object for the source event\n   * @returns {void}\n   */\n  function fireEvent(sourceElement, eventData) {\n    const isDisabled = !that.enabled;\n    const noElements = !sourceElements.length || !targetElements.length;\n\n    if (isDisabled || noElements) {\n      return;\n    }\n\n    ignoreFiredEvents = true;\n    targetElements.forEach(function(targetElement) {\n      const targetIndex = targetElements.indexOf(targetElement);\n\n      if (targetIndex === -1) {\n        return;\n      }\n\n      const targetImageId = initialData.imageIds.targetElements[targetIndex];\n      const sourceIndex = sourceElements.indexOf(sourceElement);\n\n      if (sourceIndex === -1) {\n        return;\n      }\n\n      const sourceImageId = initialData.imageIds.sourceElements[sourceIndex];\n\n      let positionDifference;\n\n      if (sourceImageId === targetImageId) {\n        positionDifference = 0;\n      } else if (initialData.distances[sourceImageId] !== undefined) {\n        positionDifference =\n          initialData.distances[sourceImageId][targetImageId];\n      }\n\n      eventHandler(\n        that,\n        sourceElement,\n        targetElement,\n        eventData,\n        positionDifference\n      );\n    });\n    ignoreFiredEvents = false;\n  }\n\n  /**\n   * Call fireEvent if not ignoring events, and pass along event data\n   *\n   * @private\n   * @param {Event} e - The source event object\n   * @returns {void}\n   */\n  function onEvent(e) {\n    const eventData = e.detail;\n\n    if (ignoreFiredEvents === true) {\n      return;\n    }\n\n    fireEvent(e.currentTarget, eventData);\n  }\n\n  /**\n   * Add a source element to this synchronizer\n   *\n   * @param {HTMLElement} element - The new source element\n   * @returns {void}\n   */\n  this.addSource = function(element) {\n    // Return if this element was previously added\n    const index = sourceElements.indexOf(element);\n\n    if (index !== -1) {\n      return;\n    }\n\n    // Add to our list of enabled elements\n    sourceElements.push(element);\n\n    // Subscribe to the event\n    event.split(' ').forEach(oneEvent => {\n      element.addEventListener(oneEvent, onEvent);\n    });\n\n    // Update the initial distances between elements\n    that.getDistances();\n\n    that.updateDisableHandlers();\n  };\n\n  /**\n   * Add a target element to this synchronizer\n   *\n   * @param {HTMLElement} element - The new target element to be synchronized\n   * @returns {void}\n   */\n  this.addTarget = function(element) {\n    // Return if this element was previously added\n    const index = targetElements.indexOf(element);\n\n    if (index !== -1) {\n      return;\n    }\n\n    // Add to our list of enabled elements\n    targetElements.push(element);\n\n    // Update the initial distances between elements\n    that.getDistances();\n\n    // Invoke the handler for this new target element\n    eventHandler(that, element, element, 0);\n\n    that.updateDisableHandlers();\n  };\n\n  /**\n   * Add an element to this synchronizer as both a source and a target\n   *\n   * @param {HTMLElement} element - The new element\n   * @returns {void}\n   */\n  this.add = function(element) {\n    that.addSource(element);\n    that.addTarget(element);\n  };\n\n  /**\n   * Remove a source element from this synchronizer\n   *\n   * @param {HTMLElement} element - The element to be removed\n   * @returns {void}\n   */\n  this.removeSource = function(element) {\n    // Find the index of this element\n    const index = sourceElements.indexOf(element);\n\n    if (index === -1) {\n      return;\n    }\n\n    // Remove this element from the array\n    sourceElements.splice(index, 1);\n\n    // Stop listening for the event\n    event.split(' ').forEach(oneEvent => {\n      element.removeEventListener(oneEvent, onEvent);\n    });\n\n    // Update the initial distances between elements\n    that.getDistances();\n\n    // Update everyone listening for events\n    fireEvent(element);\n    that.updateDisableHandlers();\n  };\n\n  /**\n   * Remove a target element from this synchronizer\n   *\n   * @param {HTMLElement} element - The element to be removed\n   * @returns {void}\n   */\n  this.removeTarget = function(element) {\n    // Find the index of this element\n    const index = targetElements.indexOf(element);\n\n    if (index === -1) {\n      return;\n    }\n\n    // Remove this element from the array\n    targetElements.splice(index, 1);\n\n    // Update the initial distances between elements\n    that.getDistances();\n\n    // Invoke the handler for the removed target\n    eventHandler(that, element, element, 0);\n    that.updateDisableHandlers();\n  };\n\n  /**\n   * Remove an element from this synchronizer as both a target and source\n   *\n   * @param {HTMLElement} element - The element to be removed\n   * @returns {void}\n   */\n  this.remove = function(element) {\n    that.removeTarget(element);\n    that.removeSource(element);\n  };\n\n  /**\n   * Get the array of source elements\n   *\n   * @returns {HTMLElement[]}\n   */\n  this.getSourceElements = function() {\n    return sourceElements;\n  };\n\n  /**\n   * Get the array of target elements\n   *\n   * @returns {HTMLElement[]}\n   */\n  this.getTargetElements = function() {\n    return targetElements;\n  };\n\n  /**\n   * Display an image while halting synchronization\n   *\n   * @param {HTMLElement} element - The element containing the image\n   * @param {Object} image - The cornerstone image object\n   * @param {Object} viewport - The cornerstone viewport object\n   * @returns {void}\n   */\n  this.displayImage = function(element, image, viewport) {\n    ignoreFiredEvents = true;\n    cornerstone.displayImage(element, image, viewport);\n    ignoreFiredEvents = false;\n  };\n\n  /**\n   * Update a viewport while halting synchronization\n   *\n   * @param {HTMLElement} element - The target element\n   * @param {Object} viewport - The new cornerstone viewport object\n   * @returns {void}\n   */\n  this.setViewport = function(element, viewport) {\n    ignoreFiredEvents = true;\n    cornerstone.setViewport(element, viewport);\n    ignoreFiredEvents = false;\n  };\n\n  /**\n   * Remove an element from the synchronizer based on an event from that element\n   *\n   * @private\n   * @param {Event} e - The event whose element will be removed\n   * @returns {void}\n   */\n  function disableHandler(e) {\n    const element = e.detail.element;\n\n    that.remove(element);\n    clearToolOptionsByElement(element);\n  }\n\n  /**\n   * Add an event listener to each element that can remove it from the synchronizer\n   * @returns {void}\n   */\n  this.updateDisableHandlers = function() {\n    const elements = unique(sourceElements.concat(targetElements));\n\n    elements.forEach(function(element) {\n      element.removeEventListener(\n        external.cornerstone.EVENTS.ELEMENT_DISABLED,\n        disableHandler\n      );\n      element.addEventListener(\n        external.cornerstone.EVENTS.ELEMENT_DISABLED,\n        disableHandler\n      );\n    });\n  };\n\n  /**\n   * Remove all elements from this synchronizer\n   *  @returns {void}\n   */\n  this.destroy = function() {\n    const elements = unique(sourceElements.concat(targetElements));\n\n    elements.forEach(function(element) {\n      that.remove(element);\n    });\n  };\n}\n\nexport default Synchronizer;\n","import external from '../externalModules.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport clip from '../util/clip.js';\n\n/**\n * Propogate scrolling actions from the source element to the target element.\n * @export\n * @public\n * @method\n * @name stackScrollSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element for the scroll event\n * @param {HTMLElement} targetElement - The target element\n * @param {Object} eventData - The data object from the triggering event\n * @returns {void}\n */\nexport default function(synchronizer, sourceElement, targetElement, eventData) {\n  // If the target and source are the same, stop\n  if (sourceElement === targetElement) {\n    return;\n  }\n\n  // If there is no event, or direction is 0, stop\n  if (!eventData || !eventData.direction) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  // Get the stack of the target viewport\n  const stackToolDataSource = getToolState(targetElement, 'stack');\n  const stackData = stackToolDataSource.data[0];\n\n  // Get the new index for the stack\n  let newImageIdIndex = stackData.currentImageIdIndex + eventData.direction;\n\n  // Ensure the index does not exceed the bounds of the stack\n  newImageIdIndex = clip(newImageIdIndex, 0, stackData.imageIds.length - 1);\n\n  // If the index has not changed, stop here\n  if (stackData.currentImageIdIndex === newImageIdIndex) {\n    return;\n  }\n\n  const startLoadingHandler = loadHandlerManager.getStartLoadHandler(\n    targetElement\n  );\n  const endLoadingHandler = loadHandlerManager.getEndLoadHandler(targetElement);\n  const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n    targetElement\n  );\n\n  stackData.currentImageIdIndex = newImageIdIndex;\n  const newImageId = stackData.imageIds[newImageIdIndex];\n\n  if (startLoadingHandler) {\n    startLoadingHandler(targetElement);\n  }\n\n  let loader;\n\n  if (stackData.preventCache === true) {\n    loader = cornerstone.loadImage(newImageId);\n  } else {\n    loader = cornerstone.loadAndCacheImage(newImageId);\n  }\n\n  loader.then(\n    function(image) {\n      const viewport = cornerstone.getViewport(targetElement);\n\n      if (stackData.currentImageIdIndex !== newImageIdIndex) {\n        return;\n      }\n\n      synchronizer.displayImage(targetElement, image, viewport);\n      if (endLoadingHandler) {\n        endLoadingHandler(targetElement, image);\n      }\n    },\n    function(error) {\n      const imageId = stackData.imageIds[newImageIdIndex];\n\n      if (errorLoadingHandler) {\n        errorLoadingHandler(targetElement, imageId, error);\n      }\n    }\n  );\n}\n","import external from '../externalModules.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport convertToVector3 from '../util/convertToVector3.js';\n\n/**\n * Synchronize the target stack to the image closest to the source image's position\n * @export\n * @public\n * @method\n * @name stackImagePositionSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element for the image position\n * @param {HTMLElement} targetElement - The target element\n * @returns {void}\n */\nexport default function(synchronizer, sourceElement, targetElement) {\n  // Ignore the case where the source and target are the same enabled element\n  if (targetElement === sourceElement) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  const sourceStackData = getToolState(sourceElement, 'stack').data[0];\n  const sourceImageId =\n    sourceStackData.imageIds[sourceStackData.currentImageIdIndex];\n  const sourceImagePlane = cornerstone.metaData.get(\n    'imagePlaneModule',\n    sourceImageId\n  );\n\n  if (\n    sourceImagePlane === undefined ||\n    sourceImagePlane.imagePositionPatient === undefined\n  ) {\n    // Console.log('No position found for image ' + sourceImage.imageId);\n\n    return;\n  }\n\n  const sourceImagePosition = convertToVector3(\n    sourceImagePlane.imagePositionPatient\n  );\n  const stackToolDataSource = getToolState(targetElement, 'stack');\n  const stackData = stackToolDataSource.data[0];\n\n  let minDistance = Number.MAX_VALUE;\n  let newImageIdIndex = -1;\n\n  stackData.imageIds.forEach((imageId, index) => {\n    const imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);\n\n    if (\n      imagePlane === undefined ||\n      imagePlane.imagePositionPatient === undefined\n    ) {\n      // Console.log('No position found for image ' + imageId);\n\n      return;\n    }\n\n    const imagePosition = convertToVector3(imagePlane.imagePositionPatient);\n    const distance = imagePosition.distanceToSquared(sourceImagePosition);\n    // Console.log(index + '=' + distance);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      newImageIdIndex = index;\n    }\n  });\n\n  if (newImageIdIndex === stackData.currentImageIdIndex) {\n    return;\n  }\n\n  const startLoadingHandler = loadHandlerManager.getStartLoadHandler(\n    targetElement\n  );\n  const endLoadingHandler = loadHandlerManager.getEndLoadHandler(targetElement);\n  const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n    targetElement\n  );\n\n  stackData.currentImageIdIndex = newImageIdIndex;\n  const newImageId = stackData.imageIds[newImageIdIndex];\n\n  if (startLoadingHandler) {\n    startLoadingHandler(targetElement);\n  }\n\n  if (newImageIdIndex !== -1) {\n    let loader;\n\n    if (stackData.preventCache === true) {\n      loader = cornerstone.loadImage(newImageId);\n    } else {\n      loader = cornerstone.loadAndCacheImage(newImageId);\n    }\n\n    loader.then(\n      function(image) {\n        const viewport = cornerstone.getViewport(targetElement);\n\n        if (stackData.currentImageIdIndex !== newImageIdIndex) {\n          return;\n        }\n\n        synchronizer.displayImage(targetElement, image, viewport);\n        if (endLoadingHandler) {\n          endLoadingHandler(targetElement, image);\n        }\n      },\n      function(error) {\n        const imageId = stackData.imageIds[newImageIdIndex];\n\n        if (errorLoadingHandler) {\n          errorLoadingHandler(targetElement, imageId, error);\n        }\n      }\n    );\n  }\n}\n","import external from '../externalModules.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport convertToVector3 from '../util/convertToVector3.js';\n\n// In the future we will want to have a way to manually register links sets of the same orientation (e.g. an axial link set from a prior with an axial link set of a current).  The user could do this by scrolling the two stacks to a similar location and then doing a user action (e.g. right click link) at which point the system will capture the delta between the image position (patient) of both stacks and use that to sync them.  This offset will need to be adjustable.\n\n/**\n * Calculate a position in space that is offset from the source image's position,\n * and synchronize the target stack to the image that is closest to that position.\n * @export\n * @public\n * @method\n * @name stackImagePositionOffsetSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element\n * @param {HTMLElement} targetElement - The target element\n * @param {Object} eventData - The data object from the triggering event\n * @param {Object} positionDifference - An object with { x, y, z } values that will be\n * added to the source image's coordinates\n * @returns {void}\n */\nexport default function(\n  synchronizer,\n  sourceElement,\n  targetElement,\n  eventData,\n  positionDifference\n) {\n  // Ignore the case where the source and target are the same enabled element\n  if (targetElement === sourceElement) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  const sourceStackData = getToolState(sourceElement, 'stack').data[0];\n  const sourceImageId =\n    sourceStackData.imageIds[sourceStackData.currentImageIdIndex];\n  const sourceImagePlane = cornerstone.metaData.get(\n    'imagePlaneModule',\n    sourceImageId\n  );\n\n  if (\n    sourceImagePlane === undefined ||\n    sourceImagePlane.imagePositionPatient === undefined\n  ) {\n    return;\n  }\n\n  const sourceImagePosition = convertToVector3(\n    sourceImagePlane.imagePositionPatient\n  );\n\n  const stackToolDataSource = getToolState(targetElement, 'stack');\n  const stackData = stackToolDataSource.data[0];\n\n  let minDistance = Number.MAX_VALUE;\n  let newImageIdIndex = -1;\n\n  if (!positionDifference) {\n    return;\n  }\n\n  const finalPosition = sourceImagePosition.clone().add(positionDifference);\n\n  stackData.imageIds.forEach(function(imageId, index) {\n    const imagePlane = cornerstone.metaData.get('imagePlaneModule', imageId);\n\n    if (\n      imagePlane === undefined ||\n      imagePlane.imagePositionPatient === undefined\n    ) {\n      return;\n    }\n\n    const imagePosition = convertToVector3(imagePlane.imagePositionPatient);\n    const distance = finalPosition.distanceToSquared(imagePosition);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      newImageIdIndex = index;\n    }\n  });\n\n  if (\n    newImageIdIndex === stackData.currentImageIdIndex ||\n    newImageIdIndex === -1\n  ) {\n    return;\n  }\n\n  const startLoadingHandler = loadHandlerManager.getStartLoadHandler(\n    targetElement\n  );\n  const endLoadingHandler = loadHandlerManager.getEndLoadHandler(targetElement);\n  const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n    targetElement\n  );\n\n  stackData.currentImageIdIndex = newImageIdIndex;\n  const newImageId = stackData.imageIds[newImageIdIndex];\n\n  if (startLoadingHandler) {\n    startLoadingHandler(targetElement);\n  }\n\n  let loader;\n\n  if (stackData.preventCache === true) {\n    loader = cornerstone.loadImage(newImageId);\n  } else {\n    loader = cornerstone.loadAndCacheImage(newImageId);\n  }\n\n  loader.then(\n    function(image) {\n      const viewport = cornerstone.getViewport(targetElement);\n\n      if (stackData.currentImageIdIndex !== newImageIdIndex) {\n        return;\n      }\n\n      synchronizer.displayImage(targetElement, image, viewport);\n      if (endLoadingHandler) {\n        endLoadingHandler(targetElement, image);\n      }\n    },\n    function(error) {\n      const imageId = stackData.imageIds[newImageIdIndex];\n\n      if (errorLoadingHandler) {\n        errorLoadingHandler(targetElement, imageId, error);\n      }\n    }\n  );\n}\n","import external from '../externalModules.js';\nimport { getToolState } from '../stateManagement/toolState.js';\nimport loadHandlerManager from '../stateManagement/loadHandlerManager.js';\nimport clip from '../util/clip.js';\n\n/**\n * Synchronize the target stack to the index closest to the source stack's index\n * @export\n * @public\n * @method\n * @name stackImageIndexSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element for the index value\n * @param {HTMLElement} targetElement - The target element\n * @returns {void}\n */\nexport default function(synchronizer, sourceElement, targetElement) {\n  // Ignore the case where the source and target are the same enabled element\n  if (targetElement === sourceElement) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  const sourceStackToolDataSource = getToolState(sourceElement, 'stack');\n  const sourceStackData = sourceStackToolDataSource.data[0];\n  const targetStackToolDataSource = getToolState(targetElement, 'stack');\n  const targetStackData = targetStackToolDataSource.data[0];\n\n  let newImageIdIndex = sourceStackData.currentImageIdIndex;\n\n  // Clamp the index\n  newImageIdIndex = clip(\n    newImageIdIndex,\n    0,\n    targetStackData.imageIds.length - 1\n  );\n\n  // Do nothing if the index has not changed\n  if (newImageIdIndex === targetStackData.currentImageIdIndex) {\n    return;\n  }\n\n  const startLoadingHandler = loadHandlerManager.getStartLoadHandler(\n    targetElement\n  );\n  const endLoadingHandler = loadHandlerManager.getEndLoadHandler(targetElement);\n  const errorLoadingHandler = loadHandlerManager.getErrorLoadingHandler(\n    targetElement\n  );\n\n  if (startLoadingHandler) {\n    startLoadingHandler(targetElement);\n  }\n\n  let loader;\n\n  if (targetStackData.preventCache === true) {\n    loader = cornerstone.loadImage(targetStackData.imageIds[newImageIdIndex]);\n  } else {\n    loader = cornerstone.loadAndCacheImage(\n      targetStackData.imageIds[newImageIdIndex]\n    );\n  }\n\n  loader.then(\n    function(image) {\n      const viewport = cornerstone.getViewport(targetElement);\n\n      targetStackData.currentImageIdIndex = newImageIdIndex;\n      synchronizer.displayImage(targetElement, image, viewport);\n      if (endLoadingHandler) {\n        endLoadingHandler(targetElement, image);\n      }\n    },\n    function(error) {\n      const imageId = targetStackData.imageIds[newImageIdIndex];\n\n      if (errorLoadingHandler) {\n        errorLoadingHandler(targetElement, imageId, error);\n      }\n    }\n  );\n}\n","import external from '../externalModules.js';\n\n/**\n * Synchronize the target zoom and pan to match the source\n * @export\n * @public\n * @method\n * @name panZoomSynchronizer\n *\n * @param {Object} synchronizer - The Synchronizer instance that attaches this\n * handler to an event\n * @param {HTMLElement} sourceElement - The source element for the zoom and pan values\n * @param {HTMLElement} targetElement - The target element\n * @returns {void}\n */\nexport default function(synchronizer, sourceElement, targetElement) {\n  // Ignore the case where the source and target are the same enabled element\n  if (targetElement === sourceElement) {\n    return;\n  }\n\n  const cornerstone = external.cornerstone;\n  // Get the source and target viewports\n  const sourceViewport = cornerstone.getViewport(sourceElement);\n  const targetViewport = cornerstone.getViewport(targetElement);\n\n  // Do nothing if the scale and translation are the same\n  if (\n    targetViewport.scale === sourceViewport.scale &&\n    targetViewport.translation.x === sourceViewport.translation.x &&\n    targetViewport.translation.y === sourceViewport.translation.y\n  ) {\n    return;\n  }\n\n  // Scale and/or translation are different, sync them\n  targetViewport.scale = sourceViewport.scale;\n  targetViewport.translation.x = sourceViewport.translation.x;\n  targetViewport.translation.y = sourceViewport.translation.y;\n  synchronizer.setViewport(targetElement, targetViewport);\n}\n","import { lib } from './lib.js';\n\n/**\n * Imports functionality from cornerstoneTools for use in external packages/plugins.\n * @param  {string} uri the import path for the entity to import.\n * @returns {Class|Object|Function} The entity requested.\n */\nexport default function(uri) {\n  return lib[uri];\n}\n","/**\n * Root\n * @namespace CornerstoneTools\n */\n\n/**\n * Drawing API to assist in consistent annotation creation\n * @namespace Drawing\n */\n\n/**\n * Event dispatchers listen for events from `cornerstone` and `enabledElements`. Dispatchers\n * choose which tool(s) get to handle the event by looking at callbacks, priority, and other factors.\n * @private\n * @namespace EventDispatchers\n */\n\n/**\n * Event listeners normalize events emitted by `cornerstone` and `enabledElements`. The listeners\n * then re-emit events prefixed with `cornerstonetools`. For example, `mousemove` becomes `cornerstonetoolsmousemove`.\n * Most of these events are caught by an `eventDispatcher`, and used to shape tool behavior.\n * @private\n * @namespace EventListeners\n */\n\n/**\n * Manipulators describe a tool's `handle` behavior. Leveraging a small set of manipulators\n * allows us to create a consistent experience when interacting with tools via their handles.\n * @namespace Manipulators\n */\n\n/**\n * Mixins are \"tool beahviors\" that can be added to a tool via its mixin\n * array configuration property\n * @namespace Mixins\n */\n\n/**\n * StateManagement\n * @namespace StateManagement\n */\n\n/**\n * Sync\n * @namespace Synchronization\n */\n\n/**\n * Third party\n * @namespace ThirdParty\n */\n\n/**\n * Tools\n * @namespace Tools\n */\n\n/**\n * Tools that extend the {@link #Tools.Base.BaseAnnotationTool|`BaseAnnotationTool`}\n * @namespace Tools.Annotation\n */\n\n/**\n * The parent (abstract) classes that all tools derive from.\n * @namespace Tools.Base\n */\n\n/**\n * Tools that extend the {@link #Tools.Base.BaseBrushTool|`BaseBrushTool`}\n * @namespace Tools.Brush\n */\n\n/**\n * Util\n * @namespace Util\n */\n\nimport {\n  AngleTool,\n  ArrowAnnotateTool,\n  BidirectionalTool,\n  CircleRoiTool,\n  CobbAngleTool,\n  EllipticalRoiTool,\n  FreehandRoiTool,\n  LengthTool,\n  ProbeTool,\n  RectangleRoiTool,\n  TextMarkerTool,\n} from './tools/annotation/index.js';\nimport {\n  BrushTool,\n  SphericalBrushTool,\n  FreehandScissorsTool,\n  RectangleScissorsTool,\n  CircleScissorsTool,\n  CorrectionScissorsTool,\n} from './tools/segmentation/index.js';\nimport {\n  CrosshairsTool,\n  DoubleTapFitToWindowTool,\n  DragProbeTool,\n  EraserTool,\n  FreehandRoiSculptorTool,\n  MagnifyTool,\n  OverlayTool,\n  OrientationMarkersTool,\n  PanMultiTouchTool,\n  PanTool,\n  ReferenceLinesTool,\n  RotateTool,\n  RotateTouchTool,\n  ScaleOverlayTool,\n  StackScrollMouseWheelTool,\n  StackScrollMultiTouchTool,\n  StackScrollTool,\n  WwwcRegionTool,\n  WwwcTool,\n  ZoomMouseWheelTool,\n  ZoomTool,\n  ZoomTouchPinchTool,\n} from './tools/index.js';\n\nimport { default as init } from './init.js';\n\n// ~~~~~~ STACK TOOLS ~~~~~ //\nimport { default as stackPrefetch } from './stackTools/stackPrefetch.js';\nimport { default as stackRenderers } from './stackTools/stackRenderers.js';\nimport { playClip, stopClip } from './stackTools/playClip.js';\n\n// ~~~~~~ STATE MANAGEMENT ~~~~~ //\nimport { default as store } from './store/index.js';\nimport { getModule } from './store/index.js';\n\nimport { default as getToolForElement } from './store/getToolForElement.js';\nimport { addTool, addToolForElement } from './store/addTool.js';\nimport { removeTool, removeToolForElement } from './store/removeTool.js';\nimport {\n  setToolOptions,\n  setToolOptionsForElement,\n} from './store/setToolOptions.js';\nimport {\n  setToolActive,\n  setToolActiveForElement,\n  setToolEnabled,\n  setToolEnabledForElement,\n  setToolDisabled,\n  setToolDisabledForElement,\n  setToolPassive,\n  setToolPassiveForElement,\n} from './store/setToolMode.js';\nimport isToolActiveForElement from './store/isToolActiveForElement';\nimport {\n  addToolState,\n  getToolState,\n  removeToolState,\n  clearToolState,\n  setElementToolStateManager,\n  getElementToolStateManager,\n} from './stateManagement/toolState.js';\nimport { default as textStyle } from './stateManagement/textStyle.js';\nimport { default as toolStyle } from './stateManagement/toolStyle.js';\nimport { default as toolColors } from './stateManagement/toolColors.js';\nimport { default as toolCoordinates } from './stateManagement/toolCoordinates.js';\nimport {\n  stackSpecificStateManager,\n  newStackSpecificToolStateManager,\n  addStackStateManager,\n} from './stateManagement/stackSpecificStateManager.js';\nimport { default as loadHandlerManager } from './stateManagement/loadHandlerManager.js';\nimport {\n  newImageIdSpecificToolStateManager,\n  globalImageIdSpecificToolStateManager,\n} from './stateManagement/imageIdSpecificStateManager.js';\nimport {\n  newFrameOfReferenceSpecificToolStateManager,\n  globalFrameOfReferenceSpecificToolStateManager,\n} from './stateManagement/frameOfReferenceStateManager.js';\nimport { forceEnabledElementResize } from './eventListeners/windowResizeHandler.js';\n\n// ~~~~~~ ORIENTATION  ~~~~~ //\nimport { default as orientation } from './orientation/index.js';\n\n// ~~~~~~ CANVAS EXPORT  ~~~~~ //\nimport { default as SaveAs } from './util/SaveAs.js';\nimport {\n  enable as enableLogger,\n  disable as disableLogger,\n} from './util/logger.js';\n\n// ~~~~~~ THIRD PARTY SUPPORT  ~~~~~ //\nimport { default as register } from './thirdParty/register.js';\nimport { default as registerSome } from './thirdParty/registerSome.js';\n\n// ~~~~~~ SYNCHRONIZERS ~~~~~ //\nimport { default as wwwcSynchronizer } from './synchronization/wwwcSynchronizer.js';\nimport { default as updateImageSynchronizer } from './synchronization/updateImageSynchronizer.js';\nimport { default as Synchronizer } from './synchronization/Synchronizer.js';\nimport { default as stackScrollSynchronizer } from './synchronization/stackScrollSynchronizer.js';\nimport { default as stackImagePositionSynchronizer } from './synchronization/stackImagePositionSynchronizer.js';\nimport { default as stackImagePositionOffsetSynchronizer } from './synchronization/stackImagePositionOffsetSynchronizer.js';\nimport { default as stackImageIndexSynchronizer } from './synchronization/stackImageIndexSynchronizer.js';\nimport { default as panZoomSynchronizer } from './synchronization/panZoomSynchronizer.js';\n\n// ~~~~~~ REQUEST POOL MANAGER  ~~~~~ //\nimport { default as requestPoolManager } from './requestPool/requestPoolManager.js';\n\nimport { default as external } from './externalModules.js';\nimport { default as EVENTS } from './events.js';\nimport { default as version } from './version.js';\n\nimport importInternal from './importInternal.js';\n\nconst cornerstoneTools = {\n  // ~~~ TOOLS\n  // ~ Annotation Tools\n  AngleTool,\n  ArrowAnnotateTool,\n  BidirectionalTool,\n  CircleRoiTool,\n  CobbAngleTool,\n  EllipticalRoiTool,\n  FreehandRoiTool,\n  LengthTool,\n  ProbeTool,\n  RectangleRoiTool,\n  TextMarkerTool,\n  // ~ Segmentation Tools\n  BrushTool,\n  SphericalBrushTool,\n  RectangleScissorsTool,\n  FreehandScissorsTool,\n  CircleScissorsTool,\n  CorrectionScissorsTool,\n  // ~ Tools\n  CrosshairsTool,\n  DoubleTapFitToWindowTool,\n  DragProbeTool,\n  EraserTool,\n  FreehandRoiSculptorTool,\n  MagnifyTool,\n  OverlayTool,\n  OrientationMarkersTool,\n  PanMultiTouchTool,\n  PanTool,\n  ReferenceLinesTool,\n  RotateTool,\n  RotateTouchTool,\n  ScaleOverlayTool,\n  StackScrollMouseWheelTool,\n  StackScrollMultiTouchTool,\n  StackScrollTool,\n  WwwcRegionTool,\n  WwwcTool,\n  ZoomMouseWheelTool,\n  ZoomTool,\n  ZoomTouchPinchTool,\n  init,\n  stackPrefetch,\n  stackRenderers,\n  playClip,\n  stopClip,\n  store,\n  getModule,\n  getToolForElement,\n  addTool,\n  addToolForElement,\n  removeTool,\n  removeToolForElement,\n  setToolOptions,\n  setToolOptionsForElement,\n  isToolActiveForElement,\n  setToolActive,\n  setToolActiveForElement,\n  setToolEnabled,\n  setToolEnabledForElement,\n  setToolDisabled,\n  setToolDisabledForElement,\n  setToolPassive,\n  setToolPassiveForElement,\n  addToolState,\n  getToolState,\n  removeToolState,\n  clearToolState,\n  setElementToolStateManager,\n  getElementToolStateManager,\n  textStyle,\n  toolStyle,\n  toolColors,\n  toolCoordinates,\n  stackSpecificStateManager,\n  newStackSpecificToolStateManager,\n  addStackStateManager,\n  loadHandlerManager,\n  newImageIdSpecificToolStateManager,\n  globalImageIdSpecificToolStateManager,\n  newFrameOfReferenceSpecificToolStateManager,\n  globalFrameOfReferenceSpecificToolStateManager,\n  forceEnabledElementResize,\n  orientation,\n  SaveAs,\n  enableLogger,\n  disableLogger,\n  importInternal,\n  import: importInternal,\n  register,\n  registerSome,\n  wwwcSynchronizer,\n  updateImageSynchronizer,\n  Synchronizer,\n  stackScrollSynchronizer,\n  stackImagePositionSynchronizer,\n  stackImagePositionOffsetSynchronizer,\n  stackImageIndexSynchronizer,\n  panZoomSynchronizer,\n  requestPoolManager,\n  external,\n  EVENTS,\n  version,\n};\n\n// Named Exports\nexport {\n  // ~~~ TOOLS\n  // ~ Annotation Tools\n  AngleTool,\n  ArrowAnnotateTool,\n  BidirectionalTool,\n  CircleRoiTool,\n  CobbAngleTool,\n  EllipticalRoiTool,\n  FreehandRoiTool,\n  LengthTool,\n  ProbeTool,\n  RectangleRoiTool,\n  TextMarkerTool,\n  // ~ Segmentation Tools\n  BrushTool,\n  SphericalBrushTool,\n  RectangleScissorsTool,\n  FreehandScissorsTool,\n  CircleScissorsTool,\n  CorrectionScissorsTool,\n  // ~ Tools\n  CrosshairsTool,\n  DoubleTapFitToWindowTool,\n  DragProbeTool,\n  EraserTool,\n  FreehandRoiSculptorTool,\n  MagnifyTool,\n  OverlayTool,\n  OrientationMarkersTool,\n  PanMultiTouchTool,\n  PanTool,\n  ReferenceLinesTool,\n  RotateTool,\n  RotateTouchTool,\n  ScaleOverlayTool,\n  StackScrollMouseWheelTool,\n  StackScrollMultiTouchTool,\n  StackScrollTool,\n  WwwcRegionTool,\n  WwwcTool,\n  ZoomMouseWheelTool,\n  ZoomTool,\n  ZoomTouchPinchTool,\n  init,\n  stackPrefetch,\n  stackRenderers,\n  playClip,\n  stopClip,\n  store,\n  getModule,\n  getToolForElement,\n  addTool,\n  addToolForElement,\n  removeTool,\n  removeToolForElement,\n  setToolOptions,\n  setToolOptionsForElement,\n  isToolActiveForElement,\n  setToolActive,\n  setToolActiveForElement,\n  setToolEnabled,\n  setToolEnabledForElement,\n  setToolDisabled,\n  setToolDisabledForElement,\n  setToolPassive,\n  setToolPassiveForElement,\n  addToolState,\n  getToolState,\n  removeToolState,\n  clearToolState,\n  setElementToolStateManager,\n  getElementToolStateManager,\n  textStyle,\n  toolStyle,\n  toolColors,\n  toolCoordinates,\n  stackSpecificStateManager,\n  newStackSpecificToolStateManager,\n  addStackStateManager,\n  loadHandlerManager,\n  newImageIdSpecificToolStateManager,\n  globalImageIdSpecificToolStateManager,\n  newFrameOfReferenceSpecificToolStateManager,\n  globalFrameOfReferenceSpecificToolStateManager,\n  forceEnabledElementResize,\n  orientation,\n  SaveAs,\n  enableLogger,\n  disableLogger,\n  register,\n  registerSome,\n  wwwcSynchronizer,\n  updateImageSynchronizer,\n  Synchronizer,\n  stackScrollSynchronizer,\n  stackImagePositionSynchronizer,\n  stackImagePositionOffsetSynchronizer,\n  stackImageIndexSynchronizer,\n  panZoomSynchronizer,\n  requestPoolManager,\n  importInternal,\n  external,\n  EVENTS,\n  version,\n};\n\nexport { default as import } from './importInternal.js';\n\nexport default cornerstoneTools;\n","export default '4.0.1';\n"],"sourceRoot":""}